"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Alias:
    """
    Alias is the Schema for the Aliases API

    Attributes
    ----------
    apiVersion : str, default is "kms.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Alias", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmsServicesK8sAwsV1alpha1AliasSpec, default is Undefined, optional
        spec
    status : KmsServicesK8sAwsV1alpha1AliasStatus, default is Undefined, optional
        status
    """


    apiVersion: "kms.services.k8s.aws/v1alpha1" = "kms.services.k8s.aws/v1alpha1"

    kind: "Alias" = "Alias"

    metadata?: v1.ObjectMeta

    spec?: KmsServicesK8sAwsV1alpha1AliasSpec

    status?: KmsServicesK8sAwsV1alpha1AliasStatus


schema KmsServicesK8sAwsV1alpha1AliasSpec:
    """
    AliasSpec defines the desired state of Alias.

    Attributes
    ----------
    name : str, default is Undefined, required
        Specifies the alias name. This value must begin with alias/ followed by a name, such as alias/ExampleAlias. 
         The AliasName value must be string of 1-256 characters. It can contain only alphanumeric characters, forward slashes (/), underscores (_), and dashes (-). The alias name cannot begin with alias/aws/. The alias/aws/ prefix is reserved for Amazon Web Services managed keys (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk).
    targetKeyID : str, default is Undefined, optional
        Associates the alias with the specified customer managed key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk). The KMS key must be in the same Amazon Web Services Region. 
         A valid key ID is required. If you supply a null or empty string value, this operation returns an error. 
         For help finding the key ID and ARN, see Finding the Key ID and ARN (https://docs.aws.amazon.com/kms/latest/developerguide/viewing-keys.html#find-cmk-id-arn) in the Key Management Service Developer Guide . 
         Specify the key ID or key ARN of the KMS key. 
         For example: 
         - Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab 
         - Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab 
         To get the key ID and key ARN for a KMS key, use ListKeys or DescribeKey.
    targetKeyRef : KmsServicesK8sAwsV1alpha1AliasSpecTargetKeyRef, default is Undefined, optional
        target key ref
    """


    name: str

    targetKeyID?: str

    targetKeyRef?: KmsServicesK8sAwsV1alpha1AliasSpecTargetKeyRef


schema KmsServicesK8sAwsV1alpha1AliasSpecTargetKeyRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : KmsServicesK8sAwsV1alpha1AliasSpecTargetKeyRefFrom, default is Undefined, optional
        from
    """


    from?: KmsServicesK8sAwsV1alpha1AliasSpecTargetKeyRefFrom


schema KmsServicesK8sAwsV1alpha1AliasSpecTargetKeyRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema KmsServicesK8sAwsV1alpha1AliasStatus:
    """
    AliasStatus defines the observed state of Alias

    Attributes
    ----------
    ackResourceMetadata : KmsServicesK8sAwsV1alpha1AliasStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [KmsServicesK8sAwsV1alpha1AliasStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    """


    ackResourceMetadata?: KmsServicesK8sAwsV1alpha1AliasStatusAckResourceMetadata

    conditions?: [KmsServicesK8sAwsV1alpha1AliasStatusConditionsItems0]


schema KmsServicesK8sAwsV1alpha1AliasStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema KmsServicesK8sAwsV1alpha1AliasStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


