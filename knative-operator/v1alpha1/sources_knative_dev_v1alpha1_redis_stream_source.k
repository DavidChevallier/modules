"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RedisStreamSource:
    """
    sources knative dev v1alpha1 redis stream source

    Attributes
    ----------
    apiVersion : str, default is "sources.knative.dev/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RedisStreamSource", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SourcesKnativeDevV1alpha1RedisStreamSourceSpec, default is Undefined, optional
        spec
    status : SourcesKnativeDevV1alpha1RedisStreamSourceStatus, default is Undefined, optional
        status
    """


    apiVersion: "sources.knative.dev/v1alpha1" = "sources.knative.dev/v1alpha1"

    kind: "RedisStreamSource" = "RedisStreamSource"

    metadata?: v1.ObjectMeta

    spec?: SourcesKnativeDevV1alpha1RedisStreamSourceSpec

    status?: SourcesKnativeDevV1alpha1RedisStreamSourceStatus


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpec:
    """
    sources knative dev v1alpha1 redis stream source spec

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address is the Redis TCP address
    ceOverrides : SourcesKnativeDevV1alpha1RedisStreamSourceSpecCeOverrides, default is Undefined, optional
        ce overrides
    consumers : int, default is Undefined, optional
        Consumers is a pointer to the number of desired consumers running in the consumer group.
    dialOptions : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptions, default is Undefined, optional
        dial options
    group : str, default is Undefined, optional
        Group is the name of the consumer group associated to this source. When left empty, a group is automatically created for this source and deleted when this source is deleted.
    sink : SourcesKnativeDevV1alpha1RedisStreamSourceSpecSink, default is Undefined, optional
        sink
    stream : str, default is Undefined, optional
        Stream is the name of the stream.
    """


    address?: str

    ceOverrides?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecCeOverrides

    consumers?: int

    dialOptions?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptions

    group?: str

    sink?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecSink

    stream?: str


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecCeOverrides:
    """
    CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.

    Attributes
    ----------
    extensions : any, default is Undefined, optional
        Extensions specify what attribute are added or overridden on the outbound event. Each `Extensions` key-value pair are set on the event as an attribute extension independently.
    """


    extensions?: any


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptions:
    """
    Options are the connection options

    Attributes
    ----------
    caCert : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCaCert, default is Undefined, optional
        ca cert
    cert : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCert, default is Undefined, optional
        cert
    key : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsKey, default is Undefined, optional
        key
    password : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsPassword, default is Undefined, optional
        password
    skipVerify : bool, default is Undefined, optional
        SkipVerify indicates whether to skip TLS verification or not
    useTLS : bool, default is Undefined, optional
        UseTLS indicates whether to use TLS or not
    """


    caCert?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCaCert

    cert?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCert

    key?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsKey

    password?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsPassword

    skipVerify?: bool

    useTLS?: bool


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCaCert:
    """
    CACert is the Kubernetes secret containing the server CA cert.

    Attributes
    ----------
    secretKeyRef : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCaCertSecretKeyRef, default is Undefined, required
        secret key ref
    """


    secretKeyRef: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCaCertSecretKeyRef


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCaCertSecretKeyRef:
    """
    The Secret key to select from.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key?: str

    name?: str

    optional?: bool


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCert:
    """
    Cert is the Kubernetes secret containing the client certificate.

    Attributes
    ----------
    secretKeyRef : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCertSecretKeyRef, default is Undefined, required
        secret key ref
    """


    secretKeyRef: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCertSecretKeyRef


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsCertSecretKeyRef:
    """
    The Secret key to select from.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key?: str

    name?: str

    optional?: bool


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsKey:
    """
    Key is the Kubernetes secret containing the client key.

    Attributes
    ----------
    secretKeyRef : SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsKeySecretKeyRef, default is Undefined, required
        secret key ref
    """


    secretKeyRef: SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsKeySecretKeyRef


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsKeySecretKeyRef:
    """
    The Secret key to select from.

    Attributes
    ----------
    key : str, default is Undefined, optional
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key?: str

    name?: str

    optional?: bool


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecDialOptionsPassword:
    """
    Password to use for connecting to Redis

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecSink:
    """
    Sink is a reference to an object that will resolve to a uri to use as the sink.

    Attributes
    ----------
    ref : SourcesKnativeDevV1alpha1RedisStreamSourceSpecSinkRef, default is Undefined, optional
        ref
    uri : str, default is Undefined, optional
        URI can be an absolute URL(non-empty scheme and non-empty host) pointing to the target or a relative URI. Relative URIs will be resolved using the base URI retrieved from Ref.
    """


    ref?: SourcesKnativeDevV1alpha1RedisStreamSourceSpecSinkRef

    uri?: str


schema SourcesKnativeDevV1alpha1RedisStreamSourceSpecSinkRef:
    """
    Ref points to an Addressable.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ This is optional field, it gets defaulted to the object holding it if left out.
    """


    apiVersion?: str

    kind?: str

    name?: str

    namespace?: str


schema SourcesKnativeDevV1alpha1RedisStreamSourceStatus:
    """
    sources knative dev v1alpha1 redis stream source status

    Attributes
    ----------
    annotations : any, default is Undefined, optional
        Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
    ceAttributes : [SourcesKnativeDevV1alpha1RedisStreamSourceStatusCeAttributesItems0], default is Undefined, optional
        CloudEventAttributes are the specific attributes that the Source uses as part of its CloudEvents.
    conditions : [SourcesKnativeDevV1alpha1RedisStreamSourceStatusConditionsItems0], default is Undefined, optional
        Conditions the latest available observations of a resource's current state.
    consumers : int, default is Undefined, optional
        Consumers is the number of desired consumers running in the consumer group.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
    sinkUri : str, default is Undefined, optional
        SinkURI is the current active sink URI that has been configured for the Source.
    """


    annotations?: any

    ceAttributes?: [SourcesKnativeDevV1alpha1RedisStreamSourceStatusCeAttributesItems0]

    conditions?: [SourcesKnativeDevV1alpha1RedisStreamSourceStatusConditionsItems0]

    consumers?: int

    observedGeneration?: int

    sinkUri?: str


schema SourcesKnativeDevV1alpha1RedisStreamSourceStatusCeAttributesItems0:
    """
    sources knative dev v1alpha1 redis stream source status ce attributes items0

    Attributes
    ----------
    source : str, default is Undefined, optional
        Source is the CloudEvents source attribute.
    $type : str, default is Undefined, optional
        Type refers to the CloudEvent type attribute.
    """


    source?: str

    $type?: str


schema SourcesKnativeDevV1alpha1RedisStreamSourceStatusConditionsItems0:
    """
    sources knative dev v1alpha1 redis stream source status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


