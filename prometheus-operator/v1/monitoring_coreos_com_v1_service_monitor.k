"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema ServiceMonitor:
    """
    ServiceMonitor defines monitoring for a set of services.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServiceMonitor", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1ServiceMonitorSpec, default is Undefined, required
        spec
    """


    apiVersion: "monitoring.coreos.com/v1" = "monitoring.coreos.com/v1"

    kind: "ServiceMonitor" = "ServiceMonitor"

    metadata?: v1.ObjectMeta

    spec: MonitoringCoreosComV1ServiceMonitorSpec


schema MonitoringCoreosComV1ServiceMonitorSpec:
    """
    Specification of desired Service selection for target discovery by Prometheus.

    Attributes
    ----------
    attachMetadata : MonitoringCoreosComV1ServiceMonitorSpecAttachMetadata, default is Undefined, optional
        attach metadata
    endpoints : [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0], default is Undefined, optional
        List of endpoints part of this ServiceMonitor.
    jobLabel : str, default is Undefined, optional
        `jobLabel` selects the label from the associated Kubernetes `Service` object which will be used as the `job` label for all metrics. 
         For example if `jobLabel` is set to `foo` and the Kubernetes `Service` object is labeled with `foo: bar`, then Prometheus adds the `job="bar"` label to all ingested metrics. 
         If the value of this field is empty or if the label doesn't exist for the given Service, the `job` label of the metrics defaults to the name of the associated Kubernetes `Service`.
    keepDroppedTargets : int, default is Undefined, optional
        Per-scrape limit on the number of targets dropped by relabeling that will be kept in memory. 0 means no limit. 
         It requires Prometheus >= v2.47.0.
    labelLimit : int, default is Undefined, optional
        Per-scrape limit on number of labels that will be accepted for a sample. 
         It requires Prometheus >= v2.27.0.
    labelNameLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels name that will be accepted for a sample. 
         It requires Prometheus >= v2.27.0.
    labelValueLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels value that will be accepted for a sample. 
         It requires Prometheus >= v2.27.0.
    namespaceSelector : MonitoringCoreosComV1ServiceMonitorSpecNamespaceSelector, default is Undefined, optional
        namespace selector
    podTargetLabels : [str], default is Undefined, optional
        `podTargetLabels` defines the labels which are transferred from the associated Kubernetes `Pod` object onto the ingested metrics.
    sampleLimit : int, default is Undefined, optional
        `sampleLimit` defines a per-scrape limit on the number of scraped samples that will be accepted.
    selector : MonitoringCoreosComV1ServiceMonitorSpecSelector, default is Undefined, required
        selector
    targetLabels : [str], default is Undefined, optional
        `targetLabels` defines the labels which are transferred from the associated Kubernetes `Service` object onto the ingested metrics.
    targetLimit : int, default is Undefined, optional
        `targetLimit` defines a limit on the number of scraped targets that will be accepted.
    """


    attachMetadata?: MonitoringCoreosComV1ServiceMonitorSpecAttachMetadata

    endpoints?: [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0]

    jobLabel?: str

    keepDroppedTargets?: int

    labelLimit?: int

    labelNameLengthLimit?: int

    labelValueLengthLimit?: int

    namespaceSelector?: MonitoringCoreosComV1ServiceMonitorSpecNamespaceSelector

    podTargetLabels?: [str]

    sampleLimit?: int

    selector: MonitoringCoreosComV1ServiceMonitorSpecSelector

    targetLabels?: [str]

    targetLimit?: int


schema MonitoringCoreosComV1ServiceMonitorSpecAttachMetadata:
    """
    `attachMetadata` defines additional metadata which is added to the discovered targets. 
     It requires Prometheus >= v2.37.0.

    Attributes
    ----------
    node : bool, default is Undefined, optional
        When set to true, Prometheus must have the `get` permission on the `Nodes` objects.
    """


    node?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0:
    """
    Endpoint defines an endpoint serving Prometheus metrics to be scraped by Prometheus.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        File to read bearer token for scraping the target. 
         Deprecated: use `authorization` instead.
    bearerTokenSecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BearerTokenSecret, default is Undefined, optional
        bearer token secret
    enableHttp2 : bool, default is Undefined, optional
        `enableHttp2` can be used to disable HTTP2 when scraping the target.
    filterRunning : bool, default is Undefined, optional
        When true, the pods which are not running (e.g. either in Failed or Succeeded state) are dropped during the target discovery. 
         If unset, the filtering is enabled. 
         More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase
    followRedirects : bool, default is Undefined, optional
        `followRedirects` defines whether the scrape requests should follow HTTP 3xx redirects.
    honorLabels : bool, default is Undefined, optional
        When true, `honorLabels` preserves the metric's labels when they collide with the target's labels.
    honorTimestamps : bool, default is Undefined, optional
        `honorTimestamps` controls whether Prometheus preserves the timestamps when exposed by the target.
    interval : str, default is Undefined, optional
        Interval at which Prometheus scrapes the metrics from the target. 
         If empty, Prometheus uses the global scrape interval.
    metricRelabelings : [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0MetricRelabelingsItems0], default is Undefined, optional
        `metricRelabelings` configures the relabeling rules to apply to the samples before ingestion.
    oauth2 : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2, default is Undefined, optional
        oauth2
    params : {str:[str]}, default is Undefined, optional
        params define optional HTTP URL parameters.
    path : str, default is Undefined, optional
        HTTP path from which to scrape for metrics. 
         If empty, Prometheus uses the default value (e.g. `/metrics`).
    port : str, default is Undefined, optional
        Name of the Service port which this endpoint refers to. 
         It takes precedence over `targetPort`.
    proxyUrl : str, default is Undefined, optional
        `proxyURL` configures the HTTP Proxy URL (e.g. "http://proxyserver:2195") to go through when scraping the target.
    relabelings : [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0RelabelingsItems0], default is Undefined, optional
        `relabelings` configures the relabeling rules to apply the target's metadata labels. 
         The Operator automatically adds relabelings for a few standard Kubernetes fields. 
         The original scrape job's name is available via the `__tmp_prometheus_job_name` label. 
         More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    scheme : str, default is Undefined, optional
        HTTP scheme to use for scraping. 
         `http` and `https` are the expected values unless you rewrite the `__scheme__` label via relabeling. 
         If empty, Prometheus uses the default value `http`.
    scrapeTimeout : str, default is Undefined, optional
        Timeout after which Prometheus considers the scrape to be failed. 
         If empty, Prometheus uses the global scrape timeout unless it is less than the target's scrape interval value in which the latter is used.
    targetPort : int | str, default is Undefined, optional
        Name or number of the target port of the `Pod` object behind the Service, the port must be specified with container port property. 
         Deprecated: use `port` instead.
    tlsConfig : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfig, default is Undefined, optional
        tls config
    trackTimestampsStaleness : bool, default is Undefined, optional
        `trackTimestampsStaleness` defines whether Prometheus tracks staleness of the metrics that have an explicit timestamp present in scraped data. Has no effect if `honorTimestamps` is false. 
         It requires Prometheus >= v2.48.0.
    """


    authorization?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Authorization

    basicAuth?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BearerTokenSecret

    enableHttp2?: bool

    filterRunning?: bool

    followRedirects?: bool

    honorLabels?: bool

    honorTimestamps?: bool

    interval?: str

    metricRelabelings?: [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0MetricRelabelingsItems0]

    oauth2?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2

    params?: {str:[str]}

    path?: str

    port?: str

    proxyUrl?: str

    relabelings?: [MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0RelabelingsItems0]

    scheme?: "http" | "https"

    scrapeTimeout?: str

    targetPort?: int | str

    tlsConfig?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfig

    trackTimestampsStaleness?: bool


    check:
        regex_match(str(interval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if interval
        regex_match(str(scrapeTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Authorization:
    """
    `authorization` configures the Authorization header credentials to use when scraping the target. 
     Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0AuthorizationCredentials

    $type?: str


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0AuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuth:
    """
    `basicAuth` configures the Basic Authentication credentials to use when scraping the target. 
     Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthPassword

    username?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthUsername


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0BearerTokenSecret:
    """
    `bearerTokenSecret` specifies a key of a Secret containing the bearer token for scraping targets. The secret needs to be in the same namespace as the ServiceMonitor object and readable by the Prometheus Operator. 
     Deprecated: use `authorization` instead.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0MetricRelabelingsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. 
     More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching. 
         `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. 
         Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values. 
         Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the regular expression matches. 
         Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement. 
         It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. 
         Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex_match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2:
    """
    `oauth2` configures the OAuth2 settings to use when scraping the target. 
     It requires Prometheus >= 2.27.0. 
     Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token URL.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """


    clientId: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientID:
    """
    `clientId` specifies a key of a Secret or ConfigMap containing the OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDConfigMap

    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDSecret


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0Oauth2ClientSecret:
    """
    `clientSecret` specifies a key of a Secret containing the OAuth2 client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0RelabelingsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. 
     More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching. 
         `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. 
         Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values. 
         Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the regular expression matches. 
         Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement. 
         It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. 
         Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex_match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfig:
    """
    TLS configuration to use when scraping the target.

    Attributes
    ----------
    ca : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaSecret


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertSecret


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecEndpointsItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ServiceMonitorSpecNamespaceSelector:
    """
    Selector to select which namespaces the Kubernetes `Endpoints` objects are discovered from.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names to select from.
    """


    any?: bool

    matchNames?: [str]


schema MonitoringCoreosComV1ServiceMonitorSpecSelector:
    """
    Label selector to select the Kubernetes `Endpoints` objects.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1ServiceMonitorSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1ServiceMonitorSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1ServiceMonitorSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


