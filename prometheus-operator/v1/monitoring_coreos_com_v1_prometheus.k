"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Prometheus:
    """
    Prometheus defines a Prometheus deployment.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Prometheus", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1PrometheusSpec, default is Undefined, required
        spec
    status : MonitoringCoreosComV1PrometheusStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.coreos.com/v1" = "monitoring.coreos.com/v1"

    kind: "Prometheus" = "Prometheus"

    metadata?: v1.ObjectMeta

    spec: MonitoringCoreosComV1PrometheusSpec

    status?: MonitoringCoreosComV1PrometheusStatus


schema MonitoringCoreosComV1PrometheusSpec:
    """
    Specification of the desired behavior of the Prometheus cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    additionalAlertManagerConfigs : MonitoringCoreosComV1PrometheusSpecAdditionalAlertManagerConfigs, default is Undefined, optional
        additional alert manager configs
    additionalAlertRelabelConfigs : MonitoringCoreosComV1PrometheusSpecAdditionalAlertRelabelConfigs, default is Undefined, optional
        additional alert relabel configs
    additionalArgs : [MonitoringCoreosComV1PrometheusSpecAdditionalArgsItems0], default is Undefined, optional
        AdditionalArgs allows setting additional arguments for the 'prometheus' container. 
         It is intended for e.g. activating hidden flags which are not supported by the dedicated configuration options yet. The arguments are passed as-is to the Prometheus container which may cause issues if they are invalid or not supported by the given Prometheus version. 
         In case of an argument conflict (e.g. an argument which is already set by the operator itself) or when providing an invalid argument, the reconciliation will fail and an error will be logged.
    additionalScrapeConfigs : MonitoringCoreosComV1PrometheusSpecAdditionalScrapeConfigs, default is Undefined, optional
        additional scrape configs
    affinity : MonitoringCoreosComV1PrometheusSpecAffinity, default is Undefined, optional
        affinity
    alerting : MonitoringCoreosComV1PrometheusSpecAlerting, default is Undefined, optional
        alerting
    allowOverlappingBlocks : bool, default is Undefined, optional
        AllowOverlappingBlocks enables vertical compaction and vertical query merge in Prometheus. 
         *Deprecated: this flag has no effect for Prometheus >= 2.39.0 where overlapping blocks are enabled by default.*
    apiserverConfig : MonitoringCoreosComV1PrometheusSpecApiserverConfig, default is Undefined, optional
        apiserver config
    arbitraryFSAccessThroughSMs : MonitoringCoreosComV1PrometheusSpecArbitraryFSAccessThroughSMs, default is Undefined, optional
        arbitrary f s access through s ms
    baseImage : str, default is Undefined, optional
        *Deprecated: use 'spec.image' instead.*
    bodySizeLimit : str, default is Undefined, optional
        BodySizeLimit defines per-scrape on response body size. Only valid in Prometheus versions 2.45.0 and newer.
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. Each ConfigMap is added to the StatefulSet definition as a volume named `configmap-<configmap-name>`. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name> in the 'prometheus' container.
    containers : [MonitoringCoreosComV1PrometheusSpecContainersItems0], default is Undefined, optional
        Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to the Pods or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. 
         The names of containers managed by the operator are: * `prometheus` * `config-reloader` * `thanos-sidecar` 
         Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    disableCompaction : bool, default is Undefined, optional
        When true, the Prometheus compaction is disabled.
    enableAdminAPI : bool, default is Undefined, optional
        Enables access to the Prometheus web admin API. 
         WARNING: Enabling the admin APIs enables mutating endpoints, to delete data, shutdown Prometheus, and more. Enabling this should be done with care and the user is advised to add additional authentication authorization via a proxy to ensure only clients authorized to perform these actions can do so. 
         For more information: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis
    enableFeatures : [str], default is Undefined, optional
        Enable access to Prometheus feature flags. By default, no features are enabled. 
         Enabling features which are disabled by default is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice. 
         For more information see https://prometheus.io/docs/prometheus/latest/feature_flags/
    enableRemoteWriteReceiver : bool, default is Undefined, optional
        Enable Prometheus to be used as a receiver for the Prometheus remote write protocol. 
         WARNING: This is not considered an efficient way of ingesting samples. Use it with caution for specific low-volume use cases. It is not suitable for replacing the ingestion via scraping and turning Prometheus into a push-based metrics collection system. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#remote-write-receiver 
         It requires Prometheus >= v2.33.0.
    enforcedBodySizeLimit : str, default is Undefined, optional
        When defined, enforcedBodySizeLimit specifies a global limit on the size of uncompressed response body that will be accepted by Prometheus. Targets responding with a body larger than this many bytes will cause the scrape to fail. 
         It requires Prometheus >= v2.28.0.
    enforcedKeepDroppedTargets : int, default is Undefined, optional
        When defined, enforcedKeepDroppedTargets specifies a global limit on the number of targets dropped by relabeling that will be kept in memory. The value overrides any `spec.keepDroppedTargets` set by ServiceMonitor, PodMonitor, Probe objects unless `spec.keepDroppedTargets` is greater than zero and less than `spec.enforcedKeepDroppedTargets`. 
         It requires Prometheus >= v2.47.0.
    enforcedLabelLimit : int, default is Undefined, optional
        When defined, enforcedLabelLimit specifies a global limit on the number of labels per sample. The value overrides any `spec.labelLimit` set by ServiceMonitor, PodMonitor, Probe objects unless `spec.labelLimit` is greater than zero and less than `spec.enforcedLabelLimit`. 
         It requires Prometheus >= v2.27.0.
    enforcedLabelNameLengthLimit : int, default is Undefined, optional
        When defined, enforcedLabelNameLengthLimit specifies a global limit on the length of labels name per sample. The value overrides any `spec.labelNameLengthLimit` set by ServiceMonitor, PodMonitor, Probe objects unless `spec.labelNameLengthLimit` is greater than zero and less than `spec.enforcedLabelNameLengthLimit`. 
         It requires Prometheus >= v2.27.0.
    enforcedLabelValueLengthLimit : int, default is Undefined, optional
        When not null, enforcedLabelValueLengthLimit defines a global limit on the length of labels value per sample. The value overrides any `spec.labelValueLengthLimit` set by ServiceMonitor, PodMonitor, Probe objects unless `spec.labelValueLengthLimit` is greater than zero and less than `spec.enforcedLabelValueLengthLimit`. 
         It requires Prometheus >= v2.27.0.
    enforcedNamespaceLabel : str, default is Undefined, optional
        When not empty, a label will be added to 
         1. All metrics scraped from `ServiceMonitor`, `PodMonitor`, `Probe` and `ScrapeConfig` objects. 2. All metrics generated from recording rules defined in `PrometheusRule` objects. 3. All alerts generated from alerting rules defined in `PrometheusRule` objects. 4. All vector selectors of PromQL expressions defined in `PrometheusRule` objects. 
         The label will not added for objects referenced in `spec.excludedFromEnforcement`. 
         The label's name is this field's value. The label's value is the namespace of the `ServiceMonitor`, `PodMonitor`, `Probe` or `PrometheusRule` object.
    enforcedSampleLimit : int, default is Undefined, optional
        When defined, enforcedSampleLimit specifies a global limit on the number of scraped samples that will be accepted. This overrides any `spec.sampleLimit` set by ServiceMonitor, PodMonitor, Probe objects unless `spec.sampleLimit` is greater than zero and less than than `spec.enforcedSampleLimit`. 
         It is meant to be used by admins to keep the overall number of samples/series under a desired limit.
    enforcedTargetLimit : int, default is Undefined, optional
        When defined, enforcedTargetLimit specifies a global limit on the number of scraped targets. The value overrides any `spec.targetLimit` set by ServiceMonitor, PodMonitor, Probe objects unless `spec.targetLimit` is greater than zero and less than `spec.enforcedTargetLimit`. 
         It is meant to be used by admins to to keep the overall number of targets under a desired limit.
    evaluationInterval : str, default is "30s", optional
        Interval between rule evaluations. Default: "30s"
    excludedFromEnforcement : [MonitoringCoreosComV1PrometheusSpecExcludedFromEnforcementItems0], default is Undefined, optional
        List of references to PodMonitor, ServiceMonitor, Probe and PrometheusRule objects to be excluded from enforcing a namespace label of origin. 
         It is only applicable if `spec.enforcedNamespaceLabel` set to true.
    exemplars : MonitoringCoreosComV1PrometheusSpecExemplars, default is Undefined, optional
        exemplars
    externalLabels : {str:str}, default is Undefined, optional
        The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager). Labels defined by `spec.replicaExternalLabelName` and `spec.prometheusExternalLabelName` take precedence over this list.
    externalUrl : str, default is Undefined, optional
        The external URL under which the Prometheus service is externally available. This is necessary to generate correct URLs (for instance if Prometheus is accessible behind an Ingress resource).
    hostAliases : [MonitoringCoreosComV1PrometheusSpecHostAliasesItems0], default is Undefined, optional
        Optional list of hosts and IPs that will be injected into the Pod's hosts file if specified.
    hostNetwork : bool, default is Undefined, optional
        Use the host's network namespace if true. 
         Make sure to understand the security implications if you want to enable it (https://kubernetes.io/docs/concepts/configuration/overview/). 
         When hostNetwork is enabled, this will set the DNS policy to `ClusterFirstWithHostNet` automatically.
    ignoreNamespaceSelectors : bool, default is Undefined, optional
        When true, `spec.namespaceSelector` from all PodMonitor, ServiceMonitor and Probe objects will be ignored. They will only discover targets within the namespace of the PodMonitor, ServiceMonitor and Probe object.
    image : str, default is Undefined, optional
        Container image name for Prometheus. If specified, it takes precedence over the `spec.baseImage`, `spec.tag` and `spec.sha` fields. 
         Specifying `spec.version` is still necessary to ensure the Prometheus Operator knows which version of Prometheus is being configured. 
         If neither `spec.image` nor `spec.baseImage` are defined, the operator will use the latest upstream version of Prometheus available at the time when the operator was released.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy for the 'prometheus', 'init-config-reloader' and 'config-reloader' containers. See https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy for more details.
    imagePullSecrets : [MonitoringCoreosComV1PrometheusSpecImagePullSecretsItems0], default is Undefined, optional
        An optional list of references to Secrets in the same namespace to use for pulling images from registries. See http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
    initContainers : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0], default is Undefined, optional
        InitContainers allows injecting initContainers to the Pod definition. Those can be used to e.g.  fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ InitContainers described here modify an operator generated init containers if they share the same name and modifications are done via a strategic merge patch. 
         The names of init container name managed by the operator are: * `init-config-reloader`. 
         Overriding init containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    keepDroppedTargets : int, default is Undefined, optional
        Per-scrape limit on the number of targets dropped by relabeling that will be kept in memory. 0 means no limit. 
         It requires Prometheus >= v2.47.0.
    labelLimit : int, default is Undefined, optional
        Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.45.0 and newer.
    labelNameLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.45.0 and newer.
    labelValueLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.45.0 and newer.
    listenLocal : bool, default is Undefined, optional
        When true, the Prometheus server listens on the loopback address instead of the Pod IP's address.
    logFormat : str, default is Undefined, optional
        Log format for Log level for Prometheus and the config-reloader sidecar.
    logLevel : str, default is Undefined, optional
        Log level for Prometheus and the config-reloader sidecar.
    minReadySeconds : int, default is Undefined, optional
        Minimum number of seconds for which a newly created Pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) 
         This is an alpha field from kubernetes 1.22 until 1.24 which requires enabling the StatefulSetMinReadySeconds feature gate.
    nodeSelector : {str:str}, default is Undefined, optional
        Defines on which Nodes the Pods are scheduled.
    overrideHonorLabels : bool, default is Undefined, optional
        When true, Prometheus resolves label conflicts by renaming the labels in the scraped data to "exported_<label value>" for all targets created from service and pod monitors. Otherwise the HonorLabels field of the service or pod monitor applies.
    overrideHonorTimestamps : bool, default is Undefined, optional
        When true, Prometheus ignores the timestamps for all the targets created from service and pod monitors. Otherwise the HonorTimestamps field of the service or pod monitor applies.
    paused : bool, default is Undefined, optional
        When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.
    persistentVolumeClaimRetentionPolicy : MonitoringCoreosComV1PrometheusSpecPersistentVolumeClaimRetentionPolicy, default is Undefined, optional
        persistent volume claim retention policy
    podMetadata : MonitoringCoreosComV1PrometheusSpecPodMetadata, default is Undefined, optional
        pod metadata
    podMonitorNamespaceSelector : MonitoringCoreosComV1PrometheusSpecPodMonitorNamespaceSelector, default is Undefined, optional
        pod monitor namespace selector
    podMonitorSelector : MonitoringCoreosComV1PrometheusSpecPodMonitorSelector, default is Undefined, optional
        pod monitor selector
    podTargetLabels : [str], default is Undefined, optional
        PodTargetLabels are appended to the `spec.podTargetLabels` field of all PodMonitor and ServiceMonitor objects.
    portName : str, default is "web", optional
        Port name used for the pods and governing service. Default: "web"
    priorityClassName : str, default is Undefined, optional
        Priority class assigned to the Pods.
    probeNamespaceSelector : MonitoringCoreosComV1PrometheusSpecProbeNamespaceSelector, default is Undefined, optional
        probe namespace selector
    probeSelector : MonitoringCoreosComV1PrometheusSpecProbeSelector, default is Undefined, optional
        probe selector
    prometheusExternalLabelName : str, default is Undefined, optional
        Name of Prometheus external label used to denote the Prometheus instance name. The external label will _not_ be added when the field is set to the empty string (`""`). 
         Default: "prometheus"
    prometheusRulesExcludedFromEnforce : [MonitoringCoreosComV1PrometheusSpecPrometheusRulesExcludedFromEnforceItems0], default is Undefined, optional
        Defines the list of PrometheusRule objects to which the namespace label enforcement doesn't apply. This is only relevant when `spec.enforcedNamespaceLabel` is set to true. *Deprecated: use `spec.excludedFromEnforcement` instead.*
    query : MonitoringCoreosComV1PrometheusSpecQuery, default is Undefined, optional
        query
    queryLogFile : str, default is Undefined, optional
        queryLogFile specifies where the file to which PromQL queries are logged. 
         If the filename has an empty path, e.g. 'query.log', The Prometheus Pods will mount the file into an emptyDir volume at `/var/log/prometheus`. If a full path is provided, e.g. '/var/log/prometheus/query.log', you must mount a volume in the specified directory and it must be writable. This is because the prometheus container runs with a read-only root filesystem for security reasons. Alternatively, the location can be set to a standard I/O stream, e.g. `/dev/stdout`, to log query information to the default Prometheus log stream.
    reloadStrategy : str, default is Undefined, optional
        Defines the strategy used to reload the Prometheus configuration. If not specified, the configuration is reloaded using the /-/reload HTTP endpoint.
    remoteRead : [MonitoringCoreosComV1PrometheusSpecRemoteReadItems0], default is Undefined, optional
        Defines the list of remote read configurations.
    remoteWrite : [MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0], default is Undefined, optional
        Defines the list of remote write configurations.
    replicaExternalLabelName : str, default is Undefined, optional
        Name of Prometheus external label used to denote the replica name. The external label will _not_ be added when the field is set to the empty string (`""`). 
         Default: "prometheus_replica"
    replicas : int, default is Undefined, optional
        Number of replicas of each shard to deploy for a Prometheus deployment. `spec.replicas` multiplied by `spec.shards` is the total number of Pods created. 
         Default: 1
    resources : MonitoringCoreosComV1PrometheusSpecResources, default is Undefined, optional
        resources
    retention : str, default is Undefined, optional
        How long to retain the Prometheus data. 
         Default: "24h" if `spec.retention` and `spec.retentionSize` are empty.
    retentionSize : str, default is Undefined, optional
        Maximum number of bytes used by the Prometheus data.
    routePrefix : str, default is Undefined, optional
        The route prefix Prometheus registers HTTP handlers for. 
         This is useful when using `spec.externalURL`, and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.
    ruleNamespaceSelector : MonitoringCoreosComV1PrometheusSpecRuleNamespaceSelector, default is Undefined, optional
        rule namespace selector
    ruleSelector : MonitoringCoreosComV1PrometheusSpecRuleSelector, default is Undefined, optional
        rule selector
    rules : MonitoringCoreosComV1PrometheusSpecRules, default is Undefined, optional
        rules
    sampleLimit : int, default is Undefined, optional
        SampleLimit defines per-scrape limit on number of scraped samples that will be accepted. Only valid in Prometheus versions 2.45.0 and newer.
    scrapeConfigNamespaceSelector : MonitoringCoreosComV1PrometheusSpecScrapeConfigNamespaceSelector, default is Undefined, optional
        scrape config namespace selector
    scrapeConfigSelector : MonitoringCoreosComV1PrometheusSpecScrapeConfigSelector, default is Undefined, optional
        scrape config selector
    scrapeInterval : str, default is "30s", optional
        Interval between consecutive scrapes. 
         Default: "30s"
    scrapeTimeout : str, default is Undefined, optional
        Number of seconds to wait until a scrape request times out.
    secrets : [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. Each Secret is added to the StatefulSet definition as a volume named `secret-<secret-name>`. The Secrets are mounted into /etc/prometheus/secrets/<secret-name> in the 'prometheus' container.
    securityContext : MonitoringCoreosComV1PrometheusSpecSecurityContext, default is Undefined, optional
        security context
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
    serviceMonitorNamespaceSelector : MonitoringCoreosComV1PrometheusSpecServiceMonitorNamespaceSelector, default is Undefined, optional
        service monitor namespace selector
    serviceMonitorSelector : MonitoringCoreosComV1PrometheusSpecServiceMonitorSelector, default is Undefined, optional
        service monitor selector
    sha : str, default is Undefined, optional
        *Deprecated: use 'spec.image' instead. The image's digest can be specified as part of the image name.*
    shards : int, default is Undefined, optional
        EXPERIMENTAL: Number of shards to distribute targets onto. `spec.replicas` multiplied by `spec.shards` is the total number of Pods created. 
         Note that scaling down shards will not reshard data onto remaining instances, it must be manually moved. Increasing shards will not reshard data either but it will continue to be available from the same instances. To query globally, use Thanos sidecar and Thanos querier or remote write data to a central location. 
         Sharding is performed on the content of the `__address__` target meta-label for PodMonitors and ServiceMonitors and `__param_target__` for Probes. 
         Default: 1
    storage : MonitoringCoreosComV1PrometheusSpecStorage, default is Undefined, optional
        storage
    tag : str, default is Undefined, optional
        *Deprecated: use 'spec.image' instead. The image's tag can be specified as part of the image name.*
    targetLimit : int, default is Undefined, optional
        TargetLimit defines a limit on the number of scraped targets that will be accepted. Only valid in Prometheus versions 2.45.0 and newer.
    thanos : MonitoringCoreosComV1PrometheusSpecThanos, default is Undefined, optional
        thanos
    tolerations : [MonitoringCoreosComV1PrometheusSpecTolerationsItems0], default is Undefined, optional
        Defines the Pods' tolerations if specified.
    topologySpreadConstraints : [MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        Defines the pod's topology spread constraints if specified.
    tracingConfig : MonitoringCoreosComV1PrometheusSpecTracingConfig, default is Undefined, optional
        tracing config
    tsdb : MonitoringCoreosComV1PrometheusSpecTsdb, default is Undefined, optional
        tsdb
    version : str, default is Undefined, optional
        Version of Prometheus being deployed. The operator uses this information to generate the Prometheus StatefulSet + configuration files. 
         If not specified, the operator assumes the latest upstream version of Prometheus available at the time when the version of the operator was released.
    volumeMounts : [MonitoringCoreosComV1PrometheusSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows the configuration of additional VolumeMounts. 
         VolumeMounts will be appended to other VolumeMounts in the 'prometheus' container, that are generated as a result of StorageSpec objects.
    volumes : [MonitoringCoreosComV1PrometheusSpecVolumesItems0], default is Undefined, optional
        Volumes allows the configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    walCompression : bool, default is Undefined, optional
        Configures compression of the write-ahead log (WAL) using Snappy. 
         WAL compression is enabled by default for Prometheus >= 2.20.0 
         Requires Prometheus v2.11.0 and above.
    web : MonitoringCoreosComV1PrometheusSpecWeb, default is Undefined, optional
        web
    """


    additionalAlertManagerConfigs?: MonitoringCoreosComV1PrometheusSpecAdditionalAlertManagerConfigs

    additionalAlertRelabelConfigs?: MonitoringCoreosComV1PrometheusSpecAdditionalAlertRelabelConfigs

    additionalArgs?: [MonitoringCoreosComV1PrometheusSpecAdditionalArgsItems0]

    additionalScrapeConfigs?: MonitoringCoreosComV1PrometheusSpecAdditionalScrapeConfigs

    affinity?: MonitoringCoreosComV1PrometheusSpecAffinity

    alerting?: MonitoringCoreosComV1PrometheusSpecAlerting

    allowOverlappingBlocks?: bool

    apiserverConfig?: MonitoringCoreosComV1PrometheusSpecApiserverConfig

    arbitraryFSAccessThroughSMs?: MonitoringCoreosComV1PrometheusSpecArbitraryFSAccessThroughSMs

    baseImage?: str

    bodySizeLimit?: str

    configMaps?: [str]

    containers?: [MonitoringCoreosComV1PrometheusSpecContainersItems0]

    disableCompaction?: bool

    enableAdminAPI?: bool

    enableFeatures?: [str]

    enableRemoteWriteReceiver?: bool

    enforcedBodySizeLimit?: str

    enforcedKeepDroppedTargets?: int

    enforcedLabelLimit?: int

    enforcedLabelNameLengthLimit?: int

    enforcedLabelValueLengthLimit?: int

    enforcedNamespaceLabel?: str

    enforcedSampleLimit?: int

    enforcedTargetLimit?: int

    evaluationInterval?: str = "30s"

    excludedFromEnforcement?: [MonitoringCoreosComV1PrometheusSpecExcludedFromEnforcementItems0]

    exemplars?: MonitoringCoreosComV1PrometheusSpecExemplars

    externalLabels?: {str:str}

    externalUrl?: str

    hostAliases?: [MonitoringCoreosComV1PrometheusSpecHostAliasesItems0]

    hostNetwork?: bool

    ignoreNamespaceSelectors?: bool

    image?: str

    imagePullPolicy?: "" | "Always" | "Never" | "IfNotPresent"

    imagePullSecrets?: [MonitoringCoreosComV1PrometheusSpecImagePullSecretsItems0]

    initContainers?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0]

    keepDroppedTargets?: int

    labelLimit?: int

    labelNameLengthLimit?: int

    labelValueLengthLimit?: int

    listenLocal?: bool

    logFormat?: "" | "logfmt" | "json"

    logLevel?: "" | "debug" | "info" | "warn" | "error"

    minReadySeconds?: int

    nodeSelector?: {str:str}

    overrideHonorLabels?: bool

    overrideHonorTimestamps?: bool

    paused?: bool

    persistentVolumeClaimRetentionPolicy?: MonitoringCoreosComV1PrometheusSpecPersistentVolumeClaimRetentionPolicy

    podMetadata?: MonitoringCoreosComV1PrometheusSpecPodMetadata

    podMonitorNamespaceSelector?: MonitoringCoreosComV1PrometheusSpecPodMonitorNamespaceSelector

    podMonitorSelector?: MonitoringCoreosComV1PrometheusSpecPodMonitorSelector

    podTargetLabels?: [str]

    portName?: str = "web"

    priorityClassName?: str

    probeNamespaceSelector?: MonitoringCoreosComV1PrometheusSpecProbeNamespaceSelector

    probeSelector?: MonitoringCoreosComV1PrometheusSpecProbeSelector

    prometheusExternalLabelName?: str

    prometheusRulesExcludedFromEnforce?: [MonitoringCoreosComV1PrometheusSpecPrometheusRulesExcludedFromEnforceItems0]

    query?: MonitoringCoreosComV1PrometheusSpecQuery

    queryLogFile?: str

    reloadStrategy?: "HTTP" | "ProcessSignal"

    remoteRead?: [MonitoringCoreosComV1PrometheusSpecRemoteReadItems0]

    remoteWrite?: [MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0]

    replicaExternalLabelName?: str

    replicas?: int

    resources?: MonitoringCoreosComV1PrometheusSpecResources

    retention?: str

    retentionSize?: str

    routePrefix?: str

    ruleNamespaceSelector?: MonitoringCoreosComV1PrometheusSpecRuleNamespaceSelector

    ruleSelector?: MonitoringCoreosComV1PrometheusSpecRuleSelector

    rules?: MonitoringCoreosComV1PrometheusSpecRules

    sampleLimit?: int

    scrapeConfigNamespaceSelector?: MonitoringCoreosComV1PrometheusSpecScrapeConfigNamespaceSelector

    scrapeConfigSelector?: MonitoringCoreosComV1PrometheusSpecScrapeConfigSelector

    scrapeInterval?: str = "30s"

    scrapeTimeout?: str

    secrets?: [str]

    securityContext?: MonitoringCoreosComV1PrometheusSpecSecurityContext

    serviceAccountName?: str

    serviceMonitorNamespaceSelector?: MonitoringCoreosComV1PrometheusSpecServiceMonitorNamespaceSelector

    serviceMonitorSelector?: MonitoringCoreosComV1PrometheusSpecServiceMonitorSelector

    sha?: str

    shards?: int

    storage?: MonitoringCoreosComV1PrometheusSpecStorage

    tag?: str

    targetLimit?: int

    thanos?: MonitoringCoreosComV1PrometheusSpecThanos

    tolerations?: [MonitoringCoreosComV1PrometheusSpecTolerationsItems0]

    topologySpreadConstraints?: [MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0]

    tracingConfig?: MonitoringCoreosComV1PrometheusSpecTracingConfig

    tsdb?: MonitoringCoreosComV1PrometheusSpecTsdb

    version?: str

    volumeMounts?: [MonitoringCoreosComV1PrometheusSpecVolumeMountsItems0]

    volumes?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0]

    walCompression?: bool

    web?: MonitoringCoreosComV1PrometheusSpecWeb


    check:
        regex_match(str(bodySizeLimit), r"(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$") if bodySizeLimit
        regex_match(str(enforcedBodySizeLimit), r"(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$") if enforcedBodySizeLimit
        regex_match(str(evaluationInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if evaluationInterval
        regex_match(str(retention), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if retention
        regex_match(str(retentionSize), r"(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$") if retentionSize
        regex_match(str(scrapeInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeInterval
        regex_match(str(scrapeTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout


schema MonitoringCoreosComV1PrometheusSpecAdditionalAlertManagerConfigs:
    """
    AdditionalAlertManagerConfigs specifies a key of a Secret containing additional Prometheus Alertmanager configurations. The Alertmanager configurations are appended to the configuration generated by the Prometheus Operator. They must be formatted according to the official Prometheus documentation: 
     https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alertmanager_config 
     The user is responsible for making sure that the configurations are valid 
     Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible AlertManager configs are going to break Prometheus after the upgrade.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAdditionalAlertRelabelConfigs:
    """
    AdditionalAlertRelabelConfigs specifies a key of a Secret containing additional Prometheus alert relabel configurations. The alert relabel configurations are appended to the configuration generated by the Prometheus Operator. They must be formatted according to the official Prometheus documentation: 
     https://prometheus.io/docs/prometheus/latest/configuration/configuration/#alert_relabel_configs 
     The user is responsible for making sure that the configurations are valid 
     Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible alert relabel configs are going to break Prometheus after the upgrade.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAdditionalArgsItems0:
    """
    Argument as part of the AdditionalArgs list.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the argument, e.g. "scrape.discovery-reload-interval".
    value : str, default is Undefined, optional
        Argument value, e.g. 30s. Can be empty for name-only arguments (e.g. --storage.tsdb.no-lockfile)
    """


    name: str

    value?: str


    check:
        len(name) >= 1


schema MonitoringCoreosComV1PrometheusSpecAdditionalScrapeConfigs:
    """
    AdditionalScrapeConfigs allows specifying a key of a Secret containing additional Prometheus scrape configurations. Scrape configurations specified are appended to the configurations generated by the Prometheus Operator. Job configurations specified must have the form as specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are appended, the user is responsible to make sure it is valid. Note that using this feature may expose the possibility to break upgrades of Prometheus. It is advised to review Prometheus release notes to ensure that no incompatible scrape configs are going to break Prometheus after the upgrade.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAffinity:
    """
    Defines the Pods' affinity scheduling rules if specified.

    Attributes
    ----------
    nodeAffinity : MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : MonitoringCoreosComV1PrometheusSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinity

    podAffinity?: MonitoringCoreosComV1PrometheusSpecAffinityPodAffinity

    podAntiAffinity?: MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinity


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinity:
    """
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinity:
    """
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinity:
    """
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecAlerting:
    """
    Defines the settings related to Alertmanager.

    Attributes
    ----------
    alertmanagers : [MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0], default is Undefined, required
        AlertmanagerEndpoints Prometheus should fire alerts against.
    """


    alertmanagers: [MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0]


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0:
    """
    AlertmanagerEndpoints defines a selection of a single Endpoints object containing Alertmanager IPs to fire alerts against.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the Alertmanager API that Prometheus uses to send alerts. It can be "v1" or "v2".
    authorization : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        File to read bearer token for Alertmanager. 
         Cannot be set at the same time as `basicAuth`, `authorization`, or `sigv4`. 
         *Deprecated: this will be removed in a future release. Prefer using `authorization`.*
    enableHttp2 : bool, default is Undefined, optional
        Whether to enable HTTP2.
    name : str, default is Undefined, required
        Name of the Endpoints object in the namespace.
    namespace : str, default is Undefined, required
        Namespace of the Endpoints object.
    pathPrefix : str, default is Undefined, optional
        Prefix for the HTTP path alerts are pushed to.
    port : int | str, default is Undefined, required
        Port on which the Alertmanager API is exposed.
    scheme : str, default is Undefined, optional
        Scheme to use when firing alerts.
    sigv4 : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4, default is Undefined, optional
        sigv4
    timeout : str, default is Undefined, optional
        Timeout is a per-target Alertmanager timeout when pushing alerts.
    tlsConfig : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfig, default is Undefined, optional
        tls config
    """


    apiVersion?: str

    authorization?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Authorization

    basicAuth?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuth

    bearerTokenFile?: str

    enableHttp2?: bool

    name: str

    namespace: str

    pathPrefix?: str

    port: int | str

    scheme?: str

    sigv4?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4

    timeout?: str

    tlsConfig?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfig


    check:
        regex_match(str(timeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if timeout


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Authorization:
    """
    Authorization section for Alertmanager. 
     Cannot be set at the same time as `basicAuth`, `bearerTokenFile` or `sigv4`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0AuthorizationCredentials

    $type?: str


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0AuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuth:
    """
    BasicAuth configuration for Alertmanager. 
     Cannot be set at the same time as `bearerTokenFile`, `authorization` or `sigv4`.

    Attributes
    ----------
    password : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuthPassword

    username?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuthUsername


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0BasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4:
    """
    Sigv4 allows to configures AWS's Signature Verification 4 for the URL. 
     It requires Prometheus >= v2.48.0. 
     Cannot be set at the same time as `basicAuth`, `bearerTokenFile` or `authorization`.

    Attributes
    ----------
    accessKey : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4AccessKey, default is Undefined, optional
        access key
    profile : str, default is Undefined, optional
        Profile is the named AWS profile used to authenticate.
    region : str, default is Undefined, optional
        Region is the AWS region. If blank, the region from the default credentials chain used.
    roleArn : str, default is Undefined, optional
        RoleArn is the named AWS profile used to authenticate.
    secretKey : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4SecretKey, default is Undefined, optional
        secret key
    """


    accessKey?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4AccessKey

    profile?: str

    region?: str

    roleArn?: str

    secretKey?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4SecretKey


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4AccessKey:
    """
    AccessKey is the AWS API key. If not specified, the environment variable `AWS_ACCESS_KEY_ID` is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0Sigv4SecretKey:
    """
    SecretKey is the AWS API secret. If not specified, the environment variable `AWS_SECRET_ACCESS_KEY` is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfig:
    """
    TLS Config to use for Alertmanager.

    Attributes
    ----------
    ca : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCaSecret


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecAlertingAlertmanagersItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfig:
    """
    APIServerConfig allows specifying a host and auth methods to access the Kuberntees API server. If null, Prometheus is assumed to run inside of the cluster: it will discover the API servers automatically and use the Pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1PrometheusSpecApiserverConfigAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuth, default is Undefined, optional
        basic auth
    bearerToken : str, default is Undefined, optional
        *Warning: this field shouldn't be used because the token value appears in clear-text. Prefer using `authorization`.* 
         *Deprecated: this will be removed in a future release.*
    bearerTokenFile : str, default is Undefined, optional
        File to read bearer token for accessing apiserver. 
         Cannot be set at the same time as `basicAuth`, `authorization`, or `bearerToken`. 
         *Deprecated: this will be removed in a future release. Prefer using `authorization`.*
    host : str, default is Undefined, required
        Kubernetes API address consisting of a hostname or IP address followed by an optional port number.
    tlsConfig : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfig, default is Undefined, optional
        tls config
    """


    authorization?: MonitoringCoreosComV1PrometheusSpecApiserverConfigAuthorization

    basicAuth?: MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuth

    bearerToken?: str

    bearerTokenFile?: str

    host: str

    tlsConfig?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfig


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigAuthorization:
    """
    Authorization section for the API server. 
     Cannot be set at the same time as `basicAuth`, `bearerToken`, or `bearerTokenFile`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1PrometheusSpecApiserverConfigAuthorizationCredentials, default is Undefined, optional
        credentials
    credentialsFile : str, default is Undefined, optional
        File to read a secret from, mutually exclusive with `credentials`.
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1PrometheusSpecApiserverConfigAuthorizationCredentials

    credentialsFile?: str

    $type?: str


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigAuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuth:
    """
    BasicAuth configuration for the API server. 
     Cannot be set at the same time as `authorization`, `bearerToken`, or `bearerTokenFile`.

    Attributes
    ----------
    password : MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuthPassword

    username?: MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuthUsername


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigBasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfig:
    """
    TLS Config to use for the API server.

    Attributes
    ----------
    ca : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCaSecret


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecApiserverConfigTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecArbitraryFSAccessThroughSMs:
    """
    When true, ServiceMonitor, PodMonitor and Probe object are forbidden to reference arbitrary files on the file system of the 'prometheus' container. When a ServiceMonitor's endpoint specifies a `bearerTokenFile` value (e.g.  '/var/run/secrets/kubernetes.io/serviceaccount/token'), a malicious target can get access to the Prometheus service account's token in the Prometheus' scrape request. Setting `spec.arbitraryFSAccessThroughSM` to 'true' would prevent the attack. Users should instead provide the credentials using the `spec.bearerTokenSecret` field.

    Attributes
    ----------
    deny : bool, default is Undefined, optional
        deny
    """


    deny?: bool


schema MonitoringCoreosComV1PrometheusSpecContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : MonitoringCoreosComV1PrometheusSpecContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [MonitoringCoreosComV1PrometheusSpecContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
    readinessProbe : MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [MonitoringCoreosComV1PrometheusSpecContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : MonitoringCoreosComV1PrometheusSpecContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is "Always". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as "Always" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy "Always" will be shut down. This lifecycle differs from normal init containers and is often referred to as a "sidecar" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.
    securityContext : MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [MonitoringCoreosComV1PrometheusSpecContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [MonitoringCoreosComV1PrometheusSpecContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0]

    envFrom?: [MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: MonitoringCoreosComV1PrometheusSpecContainersItems0Lifecycle

    livenessProbe?: MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbe

    name: str

    ports?: [MonitoringCoreosComV1PrometheusSpecContainersItems0PortsItems0]

    readinessProbe?: MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbe

    resizePolicy?: [MonitoringCoreosComV1PrometheusSpecContainersItems0ResizePolicyItems0]

    resources?: MonitoringCoreosComV1PrometheusSpecContainersItems0Resources

    restartPolicy?: str

    securityContext?: MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContext

    startupProbe?: MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [MonitoringCoreosComV1PrometheusSpecContainersItems0VolumeDevicesItems0]

    volumeMounts?: [MonitoringCoreosComV1PrometheusSpecContainersItems0VolumeMountsItems0]

    workingDir?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0SecretRef


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFrom


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromSecretKeyRef


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringCoreosComV1PrometheusSpecContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStart

    preStop?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStop


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartExec

    httpGet?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartTCPSocket


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopExec

    httpGet?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopTCPSocket


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeGrpc

    httpGet?: MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeGrpc

    httpGet?: MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextSeccompProfile

    windowsOptions?: MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextWindowsOptions


schema MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeGrpc

    httpGet?: MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema MonitoringCoreosComV1PrometheusSpecContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringCoreosComV1PrometheusSpecExcludedFromEnforcementItems0:
    """
    ObjectReference references a PodMonitor, ServiceMonitor, Probe or PrometheusRule object.

    Attributes
    ----------
    group : str, default is "monitoring.coreos.com", optional
        Group of the referent. When not specified, it defaults to `monitoring.coreos.com`
    name : str, default is Undefined, optional
        Name of the referent. When not set, all resources in the namespace are matched.
    namespace : str, default is Undefined, required
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resource : str, default is Undefined, required
        Resource of the referent.
    """


    group?: "monitoring.coreos.com" = "monitoring.coreos.com"

    name?: str

    namespace: str

    resource: "prometheusrules" | "servicemonitors" | "podmonitors" | "probes" | "scrapeconfigs"


    check:
        len(namespace) >= 1


schema MonitoringCoreosComV1PrometheusSpecExemplars:
    """
    Exemplars related settings that are runtime reloadable. It requires to enable the `exemplar-storage` feature flag to be effective.

    Attributes
    ----------
    maxSize : int, default is Undefined, optional
        Maximum number of exemplars stored in memory for all series. 
         exemplar-storage itself must be enabled using the `spec.enableFeature` option for exemplars to be scraped in the first place. 
         If not set, Prometheus uses its default value. A value of zero or less than zero disables the storage.
    """


    maxSize?: int


schema MonitoringCoreosComV1PrometheusSpecHostAliasesItems0:
    """
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], default is Undefined, required
        Hostnames for the above IP address.
    ip : str, default is Undefined, required
        IP address of the host file entry.
    """


    hostnames: [str]

    ip: str


schema MonitoringCoreosComV1PrometheusSpecImagePullSecretsItems0:
    """
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : MonitoringCoreosComV1PrometheusSpecInitContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
    readinessProbe : MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : MonitoringCoreosComV1PrometheusSpecInitContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is "Always". For non-init containers or when this field is not specified, the restart behavior is defined by the Pod's restart policy and the container type. Setting the RestartPolicy as "Always" for the init container will have the following effect: this init container will be continually restarted on exit until all regular containers have terminated. Once all regular containers have completed, all init containers with restartPolicy "Always" will be shut down. This lifecycle differs from normal init containers and is often referred to as a "sidecar" container. Although this init container still starts in the init container sequence, it does not wait for the container to complete before proceeding to the next init container. Instead, the next init container starts immediately after this init container is started, or after any startupProbe has successfully completed.
    securityContext : MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0]

    envFrom?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0Lifecycle

    livenessProbe?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbe

    name: str

    ports?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0PortsItems0]

    readinessProbe?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbe

    resizePolicy?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0ResizePolicyItems0]

    resources?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0Resources

    restartPolicy?: str

    securityContext?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContext

    startupProbe?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0VolumeDevicesItems0]

    volumeMounts?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0VolumeMountsItems0]

    workingDir?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0SecretRef


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFrom


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStart

    preStop?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStop


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartExec

    httpGet?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartTCPSocket


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopExec

    httpGet?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopTCPSocket


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeGrpc

    httpGet?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeGrpc

    httpGet?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextSeccompProfile

    windowsOptions?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextWindowsOptions


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeGrpc

    httpGet?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema MonitoringCoreosComV1PrometheusSpecInitContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringCoreosComV1PrometheusSpecPersistentVolumeClaimRetentionPolicy:
    """
    The field controls if and how PVCs are deleted during the lifecycle of a StatefulSet. The default behavior is all PVCs are retained. This is an alpha field from kubernetes 1.23 until 1.26 and a beta field from 1.26. It requires enabling the StatefulSetAutoDeletePVC feature gate.

    Attributes
    ----------
    whenDeleted : str, default is Undefined, optional
        WhenDeleted specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is deleted. The default policy of `Retain` causes PVCs to not be affected by StatefulSet deletion. The `Delete` policy causes those PVCs to be deleted.
    whenScaled : str, default is Undefined, optional
        WhenScaled specifies what happens to PVCs created from StatefulSet VolumeClaimTemplates when the StatefulSet is scaled down. The default policy of `Retain` causes PVCs to not be affected by a scaledown. The `Delete` policy causes the associated PVCs for any excess pods above the replica count to be deleted.
    """


    whenDeleted?: str

    whenScaled?: str


schema MonitoringCoreosComV1PrometheusSpecPodMetadata:
    """
    PodMetadata configures labels and annotations which are propagated to the Prometheus pods. 
     The following items are reserved and cannot be overridden: * "prometheus" label, set to the name of the Prometheus object. * "app.kubernetes.io/instance" label, set to the name of the Prometheus object. * "app.kubernetes.io/managed-by" label, set to "prometheus-operator". * "app.kubernetes.io/name" label, set to "prometheus". * "app.kubernetes.io/version" label, set to the Prometheus version. * "operator.prometheus.io/name" label, set to the name of the Prometheus object. * "operator.prometheus.io/shard" label, set to the shard number of the Prometheus object. * "kubectl.kubernetes.io/default-container" annotation, set to "prometheus".

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema MonitoringCoreosComV1PrometheusSpecPodMonitorNamespaceSelector:
    """
    Namespaces to match for PodMonitors discovery. An empty label selector matches all namespaces. A null label selector matches the current namespace only.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecPodMonitorNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecPodMonitorNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecPodMonitorNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecPodMonitorSelector:
    """
    *Experimental* PodMonitors to be selected for target discovery. An empty label selector matches all objects. A null label selector matches no objects. 
     If `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector` and `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged. The Prometheus operator will ensure that the Prometheus configuration's Secret exists, but it is the responsibility of the user to provide the raw gzipped Prometheus configuration under the `prometheus.yaml.gz` key. This behavior is *deprecated* and will be removed in the next major version of the custom resource definition. It is recommended to use `spec.additionalScrapeConfigs` instead.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecPodMonitorSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecPodMonitorSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecPodMonitorSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecProbeNamespaceSelector:
    """
    *Experimental* Namespaces to match for Probe discovery. An empty label selector matches all namespaces. A null label selector matches the current namespace only.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecProbeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecProbeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecProbeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecProbeSelector:
    """
    *Experimental* Probes to be selected for target discovery. An empty label selector matches all objects. A null label selector matches no objects. 
     If `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector` and `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged. The Prometheus operator will ensure that the Prometheus configuration's Secret exists, but it is the responsibility of the user to provide the raw gzipped Prometheus configuration under the `prometheus.yaml.gz` key. This behavior is *deprecated* and will be removed in the next major version of the custom resource definition. It is recommended to use `spec.additionalScrapeConfigs` instead.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecProbeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecProbeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecProbeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecPrometheusRulesExcludedFromEnforceItems0:
    """
    PrometheusRuleExcludeConfig enables users to configure excluded PrometheusRule names and their namespaces to be ignored while enforcing namespace label for alerts and metrics.

    Attributes
    ----------
    ruleName : str, default is Undefined, required
        Name of the excluded PrometheusRule object.
    ruleNamespace : str, default is Undefined, required
        Namespace of the excluded PrometheusRule object.
    """


    ruleName: str

    ruleNamespace: str


schema MonitoringCoreosComV1PrometheusSpecQuery:
    """
    QuerySpec defines the configuration of the Promethus query service.

    Attributes
    ----------
    lookbackDelta : str, default is Undefined, optional
        The delta difference allowed for retrieving metrics during expression evaluations.
    maxConcurrency : int, default is Undefined, optional
        Number of concurrent queries that can be run at once.
    maxSamples : int, default is Undefined, optional
        Maximum number of samples a single query can load into memory. Note that queries will fail if they would load more samples than this into memory, so this also limits the number of samples a query can return.
    timeout : str, default is Undefined, optional
        Maximum time a query may take before being aborted.
    """


    lookbackDelta?: str

    maxConcurrency?: int

    maxSamples?: int

    timeout?: str


    check:
        maxConcurrency >= 1
        regex_match(str(timeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if timeout


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0:
    """
    RemoteReadSpec defines the configuration for Prometheus to read back samples from a remote endpoint.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerToken : str, default is Undefined, optional
        *Warning: this field shouldn't be used because the token value appears in clear-text. Prefer using `authorization`.* 
         *Deprecated: this will be removed in a future release.*
    bearerTokenFile : str, default is Undefined, optional
        File from which to read the bearer token for the URL. 
         *Deprecated: this will be removed in a future release. Prefer using `authorization`.*
    filterExternalLabels : bool, default is Undefined, optional
        Whether to use the external labels as selectors for the remote read endpoint. 
         It requires Prometheus >= v2.34.0.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects. 
         It requires Prometheus >= v2.26.0.
    headers : {str:str}, default is Undefined, optional
        Custom HTTP headers to be sent along with each remote read request. Be aware that headers that are set by Prometheus itself can't be overwritten. Only valid in Prometheus versions 2.26.0 and newer.
    name : str, default is Undefined, optional
        The name of the remote read queue, it must be unique if specified. The name is used in metrics and logging in order to differentiate read configurations. 
         It requires Prometheus >= v2.15.0.
    oauth2 : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2, default is Undefined, optional
        oauth2
    proxyUrl : str, default is Undefined, optional
        Optional ProxyURL.
    readRecent : bool, default is Undefined, optional
        Whether reads should be made for queries for time ranges that the local storage should have complete data for.
    remoteTimeout : str, default is Undefined, optional
        Timeout for requests to the remote read endpoint.
    requiredMatchers : {str:str}, default is Undefined, optional
        An optional list of equality matchers which have to be present in a selector to query the remote read endpoint.
    tlsConfig : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        The URL of the endpoint to query from.
    """


    authorization?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Authorization

    basicAuth?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuth

    bearerToken?: str

    bearerTokenFile?: str

    filterExternalLabels?: bool

    followRedirects?: bool

    headers?: {str:str}

    name?: str

    oauth2?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2

    proxyUrl?: str

    readRecent?: bool

    remoteTimeout?: str

    requiredMatchers?: {str:str}

    tlsConfig?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfig

    url: str


    check:
        regex_match(str(remoteTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if remoteTimeout


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Authorization:
    """
    Authorization section for the URL. 
     It requires Prometheus >= v2.26.0. 
     Cannot be set at the same time as `basicAuth`, or `oauth2`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    credentialsFile : str, default is Undefined, optional
        File to read a secret from, mutually exclusive with `credentials`.
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0AuthorizationCredentials

    credentialsFile?: str

    $type?: str


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0AuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuth:
    """
    BasicAuth configuration for the URL. 
     Cannot be set at the same time as `authorization`, or `oauth2`.

    Attributes
    ----------
    password : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuthPassword

    username?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuthUsername


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0BasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2:
    """
    OAuth2 configuration for the URL. 
     It requires Prometheus >= v2.27.0. 
     Cannot be set at the same time as `authorization`, or `basicAuth`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token URL.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """


    clientId: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientID:
    """
    `clientId` specifies a key of a Secret or ConfigMap containing the OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientIDConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientIDSecret


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0Oauth2ClientSecret:
    """
    `clientSecret` specifies a key of a Secret containing the OAuth2 client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfig:
    """
    TLS Config to use for the URL.

    Attributes
    ----------
    ca : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCaSecret


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteReadItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0:
    """
    RemoteWriteSpec defines the configuration to write samples from Prometheus to a remote endpoint.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Authorization, default is Undefined, optional
        authorization
    azureAd : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAd, default is Undefined, optional
        azure ad
    basicAuth : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerToken : str, default is Undefined, optional
        *Warning: this field shouldn't be used because the token value appears in clear-text. Prefer using `authorization`.* 
         *Deprecated: this will be removed in a future release.*
    bearerTokenFile : str, default is Undefined, optional
        File from which to read bearer token for the URL. 
         *Deprecated: this will be removed in a future release. Prefer using `authorization`.*
    headers : {str:str}, default is Undefined, optional
        Custom HTTP headers to be sent along with each remote write request. Be aware that headers that are set by Prometheus itself can't be overwritten. 
         It requires Prometheus >= v2.25.0.
    metadataConfig : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0MetadataConfig, default is Undefined, optional
        metadata config
    name : str, default is Undefined, optional
        The name of the remote write queue, it must be unique if specified. The name is used in metrics and logging in order to differentiate queues. 
         It requires Prometheus >= v2.15.0.
    oauth2 : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2, default is Undefined, optional
        oauth2
    proxyUrl : str, default is Undefined, optional
        Optional ProxyURL.
    queueConfig : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0QueueConfig, default is Undefined, optional
        queue config
    remoteTimeout : str, default is Undefined, optional
        Timeout for requests to the remote write endpoint.
    sendExemplars : bool, default is Undefined, optional
        Enables sending of exemplars over remote write. Note that exemplar-storage itself must be enabled using the `spec.enableFeature` option for exemplars to be scraped in the first place. 
         It requires Prometheus >= v2.27.0.
    sendNativeHistograms : bool, default is Undefined, optional
        Enables sending of native histograms, also known as sparse histograms over remote write. 
         It requires Prometheus >= v2.40.0.
    sigv4 : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4, default is Undefined, optional
        sigv4
    tlsConfig : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        The URL of the endpoint to send samples to.
    writeRelabelConfigs : [MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0WriteRelabelConfigsItems0], default is Undefined, optional
        The list of remote write relabel configurations.
    """


    authorization?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Authorization

    azureAd?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAd

    basicAuth?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuth

    bearerToken?: str

    bearerTokenFile?: str

    headers?: {str:str}

    metadataConfig?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0MetadataConfig

    name?: str

    oauth2?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2

    proxyUrl?: str

    queueConfig?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0QueueConfig

    remoteTimeout?: str

    sendExemplars?: bool

    sendNativeHistograms?: bool

    sigv4?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4

    tlsConfig?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfig

    url: str

    writeRelabelConfigs?: [MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0WriteRelabelConfigsItems0]


    check:
        regex_match(str(remoteTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if remoteTimeout


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Authorization:
    """
    Authorization section for the URL. 
     It requires Prometheus >= v2.26.0. 
     Cannot be set at the same time as `sigv4`, `basicAuth`, `oauth2`, or `azureAd`.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    credentialsFile : str, default is Undefined, optional
        File to read a secret from, mutually exclusive with `credentials`.
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AuthorizationCredentials

    credentialsFile?: str

    $type?: str


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAd:
    """
    AzureAD for the URL. 
     It requires Prometheus >= v2.45.0. 
     Cannot be set at the same time as `authorization`, `basicAuth`, `oauth2`, or `sigv4`.

    Attributes
    ----------
    cloud : str, default is Undefined, optional
        The Azure Cloud. Options are 'AzurePublic', 'AzureChina', or 'AzureGovernment'.
    managedIdentity : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdManagedIdentity, default is Undefined, optional
        managed identity
    oauth : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdOauth, default is Undefined, optional
        oauth
    """


    cloud?: "AzureChina" | "AzureGovernment" | "AzurePublic"

    managedIdentity?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdManagedIdentity

    oauth?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdOauth


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdManagedIdentity:
    """
    ManagedIdentity defines the Azure User-assigned Managed identity. Cannot be set at the same time as `oauth`.

    Attributes
    ----------
    clientId : str, default is Undefined, required
        The client id
    """


    clientId: str


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdOauth:
    """
    OAuth defines the oauth config that is being used to authenticate. Cannot be set at the same time as `managedIdentity`. 
     It requires Prometheus >= v2.48.0.

    Attributes
    ----------
    clientId : str, default is Undefined, required
        `clientID` is the clientId of the Azure Active Directory application that is being used to authenticate.
    clientSecret : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdOauthClientSecret, default is Undefined, required
        client secret
    tenantId : str, default is Undefined, required
        `tenantID` is the tenant ID of the Azure Active Directory application that is being used to authenticate.
    """


    clientId: str

    clientSecret: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdOauthClientSecret

    tenantId: str


    check:
        len(clientId) >= 1
        len(tenantId) >= 1
        regex_match(str(tenantId), r"^[0-9a-zA-Z-.]+$")


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0AzureAdOauthClientSecret:
    """
    `clientSecret` specifies a key of a Secret containing the client secret of the Azure Active Directory application that is being used to authenticate.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuth:
    """
    BasicAuth configuration for the URL. 
     Cannot be set at the same time as `sigv4`, `authorization`, `oauth2`, or `azureAd`.

    Attributes
    ----------
    password : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuthPassword

    username?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuthUsername


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0BasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0MetadataConfig:
    """
    MetadataConfig configures the sending of series metadata to the remote storage.

    Attributes
    ----------
    send : bool, default is Undefined, optional
        Defines whether metric metadata is sent to the remote storage or not.
    sendInterval : str, default is Undefined, optional
        Defines how frequently metric metadata is sent to the remote storage.
    """


    send?: bool

    sendInterval?: str


    check:
        regex_match(str(sendInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if sendInterval


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2:
    """
    OAuth2 configuration for the URL. 
     It requires Prometheus >= v2.27.0. 
     Cannot be set at the same time as `sigv4`, `authorization`, `basicAuth`, or `azureAd`.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token URL.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """


    clientId: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientID:
    """
    `clientId` specifies a key of a Secret or ConfigMap containing the OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientIDConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientIDSecret


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Oauth2ClientSecret:
    """
    `clientSecret` specifies a key of a Secret containing the OAuth2 client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0QueueConfig:
    """
    QueueConfig allows tuning of the remote write queue parameters.

    Attributes
    ----------
    batchSendDeadline : str, default is Undefined, optional
        BatchSendDeadline is the maximum time a sample will wait in buffer.
    capacity : int, default is Undefined, optional
        Capacity is the number of samples to buffer per shard before we start dropping them.
    maxBackoff : str, default is Undefined, optional
        MaxBackoff is the maximum retry delay.
    maxRetries : int, default is Undefined, optional
        MaxRetries is the maximum number of times to retry a batch on recoverable errors.
    maxSamplesPerSend : int, default is Undefined, optional
        MaxSamplesPerSend is the maximum number of samples per send.
    maxShards : int, default is Undefined, optional
        MaxShards is the maximum number of shards, i.e. amount of concurrency.
    minBackoff : str, default is Undefined, optional
        MinBackoff is the initial retry delay. Gets doubled for every retry.
    minShards : int, default is Undefined, optional
        MinShards is the minimum number of shards, i.e. amount of concurrency.
    retryOnRateLimit : bool, default is Undefined, optional
        Retry upon receiving a 429 status code from the remote-write storage. This is experimental feature and might change in the future.
    """


    batchSendDeadline?: str

    capacity?: int

    maxBackoff?: str

    maxRetries?: int

    maxSamplesPerSend?: int

    maxShards?: int

    minBackoff?: str

    minShards?: int

    retryOnRateLimit?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4:
    """
    Sigv4 allows to configures AWS's Signature Verification 4 for the URL. 
     It requires Prometheus >= v2.26.0. 
     Cannot be set at the same time as `authorization`, `basicAuth`, `oauth2`, or `azureAd`.

    Attributes
    ----------
    accessKey : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4AccessKey, default is Undefined, optional
        access key
    profile : str, default is Undefined, optional
        Profile is the named AWS profile used to authenticate.
    region : str, default is Undefined, optional
        Region is the AWS region. If blank, the region from the default credentials chain used.
    roleArn : str, default is Undefined, optional
        RoleArn is the named AWS profile used to authenticate.
    secretKey : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4SecretKey, default is Undefined, optional
        secret key
    """


    accessKey?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4AccessKey

    profile?: str

    region?: str

    roleArn?: str

    secretKey?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4SecretKey


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4AccessKey:
    """
    AccessKey is the AWS API key. If not specified, the environment variable `AWS_ACCESS_KEY_ID` is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0Sigv4SecretKey:
    """
    SecretKey is the AWS API secret. If not specified, the environment variable `AWS_SECRET_ACCESS_KEY` is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfig:
    """
    TLS Config to use for the URL.

    Attributes
    ----------
    ca : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCaSecret


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecRemoteWriteItems0WriteRelabelConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. 
     More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching. 
         `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. 
         Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values. 
         Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the regular expression matches. 
         Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement. 
         It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. 
         Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex_match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1PrometheusSpecResources:
    """
    Defines the resources requests and limits of the 'prometheus' container.

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecRuleNamespaceSelector:
    """
    Namespaces to match for PrometheusRule discovery. An empty label selector matches all namespaces. A null label selector matches the current namespace only.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecRuleNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecRuleNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecRuleNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecRuleSelector:
    """
    PrometheusRule objects to be selected for rule evaluation. An empty label selector matches all objects. A null label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecRuleSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecRuleSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecRuleSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecRules:
    """
    Defines the configuration of the Prometheus rules' engine.

    Attributes
    ----------
    alert : MonitoringCoreosComV1PrometheusSpecRulesAlert, default is Undefined, optional
        alert
    """


    alert?: MonitoringCoreosComV1PrometheusSpecRulesAlert


schema MonitoringCoreosComV1PrometheusSpecRulesAlert:
    """
    Defines the parameters of the Prometheus rules' engine. 
     Any update to these parameters trigger a restart of the pods.

    Attributes
    ----------
    forGracePeriod : str, default is Undefined, optional
        Minimum duration between alert and restored 'for' state. 
         This is maintained only for alerts with a configured 'for' time greater than the grace period.
    forOutageTolerance : str, default is Undefined, optional
        Max time to tolerate prometheus outage for restoring 'for' state of alert.
    resendDelay : str, default is Undefined, optional
        Minimum amount of time to wait before resending an alert to Alertmanager.
    """


    forGracePeriod?: str

    forOutageTolerance?: str

    resendDelay?: str


schema MonitoringCoreosComV1PrometheusSpecScrapeConfigNamespaceSelector:
    """
    Namespaces to match for ScrapeConfig discovery. An empty label selector matches all namespaces. A null label selector matches the current current namespace only.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecScrapeConfigNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecScrapeConfigNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecScrapeConfigNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecScrapeConfigSelector:
    """
    *Experimental* ScrapeConfigs to be selected for target discovery. An empty label selector matches all objects. A null label selector matches no objects. 
     If `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector` and `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged. The Prometheus operator will ensure that the Prometheus configuration's Secret exists, but it is the responsibility of the user to provide the raw gzipped Prometheus configuration under the `prometheus.yaml.gz` key. This behavior is *deprecated* and will be removed in the next major version of the custom resource definition. It is recommended to use `spec.additionalScrapeConfigs` instead.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecScrapeConfigSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecScrapeConfigSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecScrapeConfigSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecSecurityContext:
    """
    SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.

    Attributes
    ----------
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
         1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
         If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, default is Undefined, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : MonitoringCoreosComV1PrometheusSpecSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : MonitoringCoreosComV1PrometheusSpecSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [MonitoringCoreosComV1PrometheusSpecSecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    windowsOptions : MonitoringCoreosComV1PrometheusSpecSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    fsGroup?: int

    fsGroupChangePolicy?: str

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: MonitoringCoreosComV1PrometheusSpecSecurityContextSeLinuxOptions

    seccompProfile?: MonitoringCoreosComV1PrometheusSpecSecurityContextSeccompProfile

    supplementalGroups?: [int]

    sysctls?: [MonitoringCoreosComV1PrometheusSpecSecurityContextSysctlsItems0]

    windowsOptions?: MonitoringCoreosComV1PrometheusSpecSecurityContextWindowsOptions


schema MonitoringCoreosComV1PrometheusSpecSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema MonitoringCoreosComV1PrometheusSpecSecurityContextSeccompProfile:
    """
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must be set if type is "Localhost". Must NOT be set for any other type.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema MonitoringCoreosComV1PrometheusSpecSecurityContextSysctlsItems0:
    """
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """


    name: str

    value: str


schema MonitoringCoreosComV1PrometheusSpecSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema MonitoringCoreosComV1PrometheusSpecServiceMonitorNamespaceSelector:
    """
    Namespaces to match for ServicedMonitors discovery. An empty label selector matches all namespaces. A null label selector matches the current namespace only.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecServiceMonitorNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecServiceMonitorSelector:
    """
    ServiceMonitors to be selected for target discovery. An empty label selector matches all objects. A null label selector matches no objects. 
     If `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector` and `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged. The Prometheus operator will ensure that the Prometheus configuration's Secret exists, but it is the responsibility of the user to provide the raw gzipped Prometheus configuration under the `prometheus.yaml.gz` key. This behavior is *deprecated* and will be removed in the next major version of the custom resource definition. It is recommended to use `spec.additionalScrapeConfigs` instead.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecServiceMonitorSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecServiceMonitorSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecServiceMonitorSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecStorage:
    """
    Storage defines the storage used by Prometheus.

    Attributes
    ----------
    disableMountSubPath : bool, default is Undefined, optional
        *Deprecated: subPath usage will be removed in a future release.*
    emptyDir : MonitoringCoreosComV1PrometheusSpecStorageEmptyDir, default is Undefined, optional
        empty dir
    ephemeral : MonitoringCoreosComV1PrometheusSpecStorageEphemeral, default is Undefined, optional
        ephemeral
    volumeClaimTemplate : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    disableMountSubPath?: bool

    emptyDir?: MonitoringCoreosComV1PrometheusSpecStorageEmptyDir

    ephemeral?: MonitoringCoreosComV1PrometheusSpecStorageEphemeral

    volumeClaimTemplate?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplate


schema MonitoringCoreosComV1PrometheusSpecStorageEmptyDir:
    """
    EmptyDirVolumeSource to be used by the StatefulSet. If specified, it takes precedence over `ephemeral` and `volumeClaimTemplate`. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeral:
    """
    EphemeralVolumeSource to be used by the StatefulSet. This is a beta field in k8s 1.21 and GA in 1.15. For lower versions, starting with k8s 1.19, it requires enabling the GenericEphemeralVolume feature gate. More info: https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes

    Attributes
    ----------
    volumeClaimTemplate : MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplate


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
     An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
     This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
     Required, must not be nil.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
    spec : MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: any

    spec: MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpec


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecResources

    selector?: MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecStorageEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplate:
    """
    Defines the PVC spec to be used by the Prometheus StatefulSets. The easiest way to use a volume that cannot be automatically provisioned is to use a label selector alongside manually created PersistentVolumes.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateMetadata, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpec, default is Undefined, optional
        spec
    status : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateMetadata

    spec?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpec

    status?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateStatus


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateMetadata:
    """
    EmbeddedMetadata contains metadata relevant to an EmbeddedResource.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpec:
    """
    Defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecDataSource

    dataSourceRef?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecDataSourceRef

    resources?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecResources

    selector?: MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateStatus:
    """
    *Deprecated: this field is never set.*

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResourceStatuses : {str:str}, default is Undefined, optional
        allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax. Valid values are either: * Un-prefixed keys: - storage - the capacity of the volume. * Custom resources must use implementation-defined prefixed names such as "example.com/my-custom-resource" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used. 
         ClaimResourceStatus can be in any of following states: - ControllerResizeInProgress: State set when resize controller starts resizing the volume in control-plane. - ControllerResizeFailed: State set when resize has failed in resize controller with a terminal error. - NodeResizePending: State set when resize controller has finished resizing the volume but further resizing of volume is needed on the node. - NodeResizeInProgress: State set when kubelet starts resizing the volume. - NodeResizeFailed: State set when resizing has failed in kubelet with a terminal error. Transient errors don't set NodeResizeFailed. For example: if expanding a PVC for more capacity - this field can be one of the following states: - pvc.status.allocatedResourceStatus['storage'] = "ControllerResizeInProgress" - pvc.status.allocatedResourceStatus['storage'] = "ControllerResizeFailed" - pvc.status.allocatedResourceStatus['storage'] = "NodeResizePending" - pvc.status.allocatedResourceStatus['storage'] = "NodeResizeInProgress" - pvc.status.allocatedResourceStatus['storage'] = "NodeResizeFailed" When this field is not set, it means that no resize operation is in progress for the given PVC. 
         A controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC. 
         This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax. Valid values are either: * Un-prefixed keys: - storage - the capacity of the volume. * Custom resources must use implementation-defined prefixed names such as "example.com/my-custom-resource" Apart from above values - keys that are unprefixed or have kubernetes.io prefix are considered reserved and hence may not be used. 
         Capacity reported here may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. 
         A controller that receives PVC update with previously unknown resourceName should ignore the update for the purpose it was designed. For example - a controller that only is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid resources associated with PVC. 
         This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateStatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    """


    accessModes?: [str]

    allocatedResourceStatuses?: {str:str}

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateStatusConditionsItems0]

    phase?: str


    check:
        all _, n in allocatedResources { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema MonitoringCoreosComV1PrometheusSpecStorageVolumeClaimTemplateStatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contains details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema MonitoringCoreosComV1PrometheusSpecThanos:
    """
    Defines the configuration of the optional Thanos sidecar. 
     This section is experimental, it may change significantly without deprecation notice in any release.

    Attributes
    ----------
    additionalArgs : [MonitoringCoreosComV1PrometheusSpecThanosAdditionalArgsItems0], default is Undefined, optional
        AdditionalArgs allows setting additional arguments for the Thanos container. The arguments are passed as-is to the Thanos container which may cause issues if they are invalid or not supported the given Thanos version. In case of an argument conflict (e.g. an argument which is already set by the operator itself) or when providing an invalid argument, the reconciliation will fail and an error will be logged.
    baseImage : str, default is Undefined, optional
        *Deprecated: use 'image' instead.*
    blockSize : str, default is "2h", optional
        BlockDuration controls the size of TSDB blocks produced by Prometheus. The default value is 2h to match the upstream Prometheus defaults. 
         WARNING: Changing the block duration can impact the performance and efficiency of the entire Prometheus/Thanos stack due to how it interacts with memory and Thanos compactors. It is recommended to keep this value set to a multiple of 120 times your longest scrape or rule interval. For example, 30s * 120 = 1h.
    getConfigInterval : str, default is Undefined, optional
        How often to retrieve the Prometheus configuration.
    getConfigTimeout : str, default is Undefined, optional
        Maximum time to wait when retrieving the Prometheus configuration.
    grpcListenLocal : bool, default is Undefined, optional
        When true, the Thanos sidecar listens on the loopback interface instead of the Pod IP's address for the gRPC endpoints. 
         It has no effect if `listenLocal` is true.
    grpcServerTlsConfig : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfig, default is Undefined, optional
        grpc server Tls config
    httpListenLocal : bool, default is Undefined, optional
        When true, the Thanos sidecar listens on the loopback interface instead of the Pod IP's address for the HTTP endpoints. 
         It has no effect if `listenLocal` is true.
    image : str, default is Undefined, optional
        Container image name for Thanos. If specified, it takes precedence over the `spec.thanos.baseImage`, `spec.thanos.tag` and `spec.thanos.sha` fields. 
         Specifying `spec.thanos.version` is still necessary to ensure the Prometheus Operator knows which version of Thanos is being configured. 
         If neither `spec.thanos.image` nor `spec.thanos.baseImage` are defined, the operator will use the latest upstream version of Thanos available at the time when the operator was released.
    listenLocal : bool, default is Undefined, optional
        *Deprecated: use `grpcListenLocal` and `httpListenLocal` instead.*
    logFormat : str, default is Undefined, optional
        Log format for the Thanos sidecar.
    logLevel : str, default is Undefined, optional
        Log level for the Thanos sidecar.
    minTime : str, default is Undefined, optional
        Defines the start of time range limit served by the Thanos sidecar's StoreAPI. The field's value should be a constant time in RFC3339 format or a time duration relative to current time, such as -1d or 2h45m. Valid duration units are ms, s, m, h, d, w, y.
    objectStorageConfig : MonitoringCoreosComV1PrometheusSpecThanosObjectStorageConfig, default is Undefined, optional
        object storage config
    objectStorageConfigFile : str, default is Undefined, optional
        Defines the Thanos sidecar's configuration file to upload TSDB blocks to object storage. 
         More info: https://thanos.io/tip/thanos/storage.md/ 
         This field takes precedence over objectStorageConfig.
    readyTimeout : str, default is Undefined, optional
        ReadyTimeout is the maximum time that the Thanos sidecar will wait for Prometheus to start.
    resources : MonitoringCoreosComV1PrometheusSpecThanosResources, default is Undefined, optional
        resources
    sha : str, default is Undefined, optional
        *Deprecated: use 'image' instead.  The image digest can be specified as part of the image name.*
    tag : str, default is Undefined, optional
        *Deprecated: use 'image' instead. The image's tag can be specified as part of the image name.*
    tracingConfig : MonitoringCoreosComV1PrometheusSpecThanosTracingConfig, default is Undefined, optional
        tracing config
    tracingConfigFile : str, default is Undefined, optional
        Defines the tracing configuration file for the Thanos sidecar. 
         More info: https://thanos.io/tip/thanos/tracing.md/ 
         This is an experimental feature, it may change in any upcoming release in a breaking way. 
         This field takes precedence over tracingConfig.
    version : str, default is Undefined, optional
        Version of Thanos being deployed. The operator uses this information to generate the Prometheus StatefulSet + configuration files. 
         If not specified, the operator assumes the latest upstream release of Thanos available at the time when the version of the operator was released.
    volumeMounts : [MonitoringCoreosComV1PrometheusSpecThanosVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts for Thanos. VolumeMounts specified will be appended to other VolumeMounts in the 'thanos-sidecar' container.
    """


    additionalArgs?: [MonitoringCoreosComV1PrometheusSpecThanosAdditionalArgsItems0]

    baseImage?: str

    blockSize?: str = "2h"

    getConfigInterval?: str

    getConfigTimeout?: str

    grpcListenLocal?: bool

    grpcServerTlsConfig?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfig

    httpListenLocal?: bool

    image?: str

    listenLocal?: bool

    logFormat?: "" | "logfmt" | "json"

    logLevel?: "" | "debug" | "info" | "warn" | "error"

    minTime?: str

    objectStorageConfig?: MonitoringCoreosComV1PrometheusSpecThanosObjectStorageConfig

    objectStorageConfigFile?: str

    readyTimeout?: str

    resources?: MonitoringCoreosComV1PrometheusSpecThanosResources

    sha?: str

    tag?: str

    tracingConfig?: MonitoringCoreosComV1PrometheusSpecThanosTracingConfig

    tracingConfigFile?: str

    version?: str

    volumeMounts?: [MonitoringCoreosComV1PrometheusSpecThanosVolumeMountsItems0]


    check:
        regex_match(str(blockSize), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if blockSize
        regex_match(str(getConfigInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if getConfigInterval
        regex_match(str(getConfigTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if getConfigTimeout
        regex_match(str(readyTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if readyTimeout


schema MonitoringCoreosComV1PrometheusSpecThanosAdditionalArgsItems0:
    """
    Argument as part of the AdditionalArgs list.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the argument, e.g. "scrape.discovery-reload-interval".
    value : str, default is Undefined, optional
        Argument value, e.g. 30s. Can be empty for name-only arguments (e.g. --storage.tsdb.no-lockfile)
    """


    name: str

    value?: str


    check:
        len(name) >= 1


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfig:
    """
    Configures the TLS parameters for the gRPC server providing the StoreAPI. 
     Note: Currently only the `caFile`, `certFile`, and `keyFile` fields are supported.

    Attributes
    ----------
    ca : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCaSecret


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosGrpcServerTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosObjectStorageConfig:
    """
    Defines the Thanos sidecar's configuration to upload TSDB blocks to object storage. 
     More info: https://thanos.io/tip/thanos/storage.md/ 
     objectStorageConfigFile takes precedence over this field.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosResources:
    """
    Defines the resources requests and limits of the Thanos sidecar.

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecThanosResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecThanosResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecThanosResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecThanosTracingConfig:
    """
    Defines the tracing configuration for the Thanos sidecar. 
     More info: https://thanos.io/tip/thanos/tracing.md/ 
     This is an experimental feature, it may change in any upcoming release in a breaking way. 
     tracingConfigFile takes precedence over this field.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecThanosVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringCoreosComV1PrometheusSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector. 
         This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule. 
         For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. 
         This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations. 
         If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included. 
         If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location, but giving higher precedence to topologies that would help reduce the skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """


    labelSelector?: MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecTracingConfig:
    """
    EXPERIMENTAL: TracingConfig configures tracing in Prometheus. This is an experimental feature, it may change in any upcoming release in a breaking way.

    Attributes
    ----------
    clientType : str, default is Undefined, optional
        Client used to export the traces. Supported values are `http` or `grpc`.
    compression : str, default is Undefined, optional
        Compression key for supported compression types. The only supported value is `gzip`.
    endpoint : str, default is Undefined, required
        Endpoint to send the traces to. Should be provided in format <host>:<port>.
    headers : {str:str}, default is Undefined, optional
        Key-value pairs to be used as headers associated with gRPC or HTTP requests.
    insecure : bool, default is Undefined, optional
        If disabled, the client will use a secure connection.
    samplingFraction : int | str, default is Undefined, optional
        Sets the probability a given trace will be sampled. Must be a float from 0 through 1.
    timeout : str, default is Undefined, optional
        Maximum time the exporter will wait for each batch export.
    tlsConfig : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfig, default is Undefined, optional
        tls config
    """


    clientType?: "http" | "grpc"

    compression?: "gzip"

    endpoint: str

    headers?: {str:str}

    insecure?: bool

    samplingFraction?: int | str

    timeout?: str

    tlsConfig?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfig


    check:
        len(endpoint) >= 1
        regex_match(str(samplingFraction), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if samplingFraction
        regex_match(str(timeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if timeout


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfig:
    """
    TLS Config to use when sending traces.

    Attributes
    ----------
    ca : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCa

    caFile?: str

    cert?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCaSecret


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecTracingConfigTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecTsdb:
    """
    Defines the runtime reloadable configuration of the timeseries database (TSDB).

    Attributes
    ----------
    outOfOrderTimeWindow : str, default is Undefined, optional
        Configures how old an out-of-order/out-of-bounds sample can be with respect to the TSDB max time. 
         An out-of-order/out-of-bounds sample is ingested into the TSDB as long as the timestamp of the sample is >= (TSDB.MaxTime - outOfOrderTimeWindow). 
         Out of order ingestion is an experimental feature. 
         It requires Prometheus >= v2.39.0.
    """


    outOfOrderTimeWindow?: str


    check:
        regex_match(str(outOfOrderTimeWindow), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if outOfOrderTimeWindow


schema MonitoringCoreosComV1PrometheusSpecVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0:
    """
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : MonitoringCoreosComV1PrometheusSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : MonitoringCoreosComV1PrometheusSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : MonitoringCoreosComV1PrometheusSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : MonitoringCoreosComV1PrometheusSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : MonitoringCoreosComV1PrometheusSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : MonitoringCoreosComV1PrometheusSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : MonitoringCoreosComV1PrometheusSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : MonitoringCoreosComV1PrometheusSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : MonitoringCoreosComV1PrometheusSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : MonitoringCoreosComV1PrometheusSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : MonitoringCoreosComV1PrometheusSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : MonitoringCoreosComV1PrometheusSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : MonitoringCoreosComV1PrometheusSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : MonitoringCoreosComV1PrometheusSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : MonitoringCoreosComV1PrometheusSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : MonitoringCoreosComV1PrometheusSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    iscsi : MonitoringCoreosComV1PrometheusSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : MonitoringCoreosComV1PrometheusSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : MonitoringCoreosComV1PrometheusSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : MonitoringCoreosComV1PrometheusSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : MonitoringCoreosComV1PrometheusSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : MonitoringCoreosComV1PrometheusSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : MonitoringCoreosComV1PrometheusSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : MonitoringCoreosComV1PrometheusSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : MonitoringCoreosComV1PrometheusSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : MonitoringCoreosComV1PrometheusSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : MonitoringCoreosComV1PrometheusSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : MonitoringCoreosComV1PrometheusSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """


    awsElasticBlockStore?: MonitoringCoreosComV1PrometheusSpecVolumesItems0AwsElasticBlockStore

    azureDisk?: MonitoringCoreosComV1PrometheusSpecVolumesItems0AzureDisk

    azureFile?: MonitoringCoreosComV1PrometheusSpecVolumesItems0AzureFile

    cephfs?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Cephfs

    cinder?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Cinder

    configMap?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ConfigMap

    csi?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Csi

    downwardAPI?: MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPI

    emptyDir?: MonitoringCoreosComV1PrometheusSpecVolumesItems0EmptyDir

    ephemeral?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Ephemeral

    fc?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Fc

    flexVolume?: MonitoringCoreosComV1PrometheusSpecVolumesItems0FlexVolume

    flocker?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Flocker

    gcePersistentDisk?: MonitoringCoreosComV1PrometheusSpecVolumesItems0GcePersistentDisk

    gitRepo?: MonitoringCoreosComV1PrometheusSpecVolumesItems0GitRepo

    glusterfs?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Glusterfs

    hostPath?: MonitoringCoreosComV1PrometheusSpecVolumesItems0HostPath

    iscsi?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Iscsi

    name: str

    nfs?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Nfs

    persistentVolumeClaim?: MonitoringCoreosComV1PrometheusSpecVolumesItems0PersistentVolumeClaim

    photonPersistentDisk?: MonitoringCoreosComV1PrometheusSpecVolumesItems0PhotonPersistentDisk

    portworxVolume?: MonitoringCoreosComV1PrometheusSpecVolumesItems0PortworxVolume

    projected?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Projected

    quobyte?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Quobyte

    rbd?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Rbd

    scaleIO?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ScaleIO

    secret?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Secret

    storageos?: MonitoringCoreosComV1PrometheusSpecVolumesItems0Storageos

    vsphereVolume?: MonitoringCoreosComV1PrometheusSpecVolumesItems0VsphereVolume


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0AwsElasticBlockStore:
    """
    awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """


    fsType?: str

    partition?: int

    readOnly?: bool

    volumeID: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0AzureDisk:
    """
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is Undefined, optional
        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    """


    cachingMode?: str

    diskName: str

    diskURI: str

    fsType?: str

    kind?: str

    readOnly?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0AzureFile:
    """
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """


    readOnly?: bool

    secretName: str

    shareName: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Cephfs:
    """
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """


    monitors: [str]

    path?: str

    readOnly?: bool

    secretFile?: str

    secretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0CephfsSecretRef

    user?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0CephfsSecretRef:
    """
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Cinder:
    """
    cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """


    fsType?: str

    readOnly?: bool

    secretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0CinderSecretRef

    volumeID: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0CinderSecretRef:
    """
    secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ConfigMap:
    """
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [MonitoringCoreosComV1PrometheusSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Csi:
    """
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    nodePublishSecretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0CsiNodePublishSecretRef:
    """
    nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPI:
    """
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """


    defaultMode?: int

    items?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0]


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EmptyDir:
    """
    emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Ephemeral:
    """
    ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
     Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim). 
     Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
     Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
     A pod can use both types of ephemeral volumes and persistent volumes at the same time.

    Attributes
    ----------
    volumeClaimTemplate : MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplate


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
     An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
     This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
     Required, must not be nil.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
    spec : MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: any

    spec: MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpec


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources

    selector?: MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex_match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Fc:
    """
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """


    fsType?: str

    lun?: int

    readOnly?: bool

    targetWWNs?: [str]

    wwids?: [str]


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0FlexVolume:
    """
    flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """


    driver: str

    fsType?: str

    options?: {str:str}

    readOnly?: bool

    secretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0FlexVolumeSecretRef


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0FlexVolumeSecretRef:
    """
    secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Flocker:
    """
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """


    datasetName?: str

    datasetUUID?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0GcePersistentDisk:
    """
    gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """


    fsType?: str

    partition?: int

    pdName: str

    readOnly?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0GitRepo:
    """
    gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """


    directory?: str

    repository: str

    revision?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Glusterfs:
    """
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """


    endpoints: str

    path: str

    readOnly?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0HostPath:
    """
    hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """


    path: str

    $type?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Iscsi:
    """
    iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is Undefined, optional
        iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    """


    chapAuthDiscovery?: bool

    chapAuthSession?: bool

    fsType?: str

    initiatorName?: str

    iqn: str

    iscsiInterface?: str

    lun: int

    portals?: [str]

    readOnly?: bool

    secretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0IscsiSecretRef

    targetPortal: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0IscsiSecretRef:
    """
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Nfs:
    """
    nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """


    path: str

    readOnly?: bool

    server: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0PersistentVolumeClaim:
    """
    persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0PhotonPersistentDisk:
    """
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """


    fsType?: str

    pdID: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0PortworxVolume:
    """
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """


    fsType?: str

    readOnly?: bool

    volumeID: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Projected:
    """
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    sources : [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections
    """


    defaultMode?: int

    sources?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0]


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0:
    """
    Projection that may be projected along with other supported volume types

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    """
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    """
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0Secret:
    """
    secret information about the secret data to project

    Attributes
    ----------
    items : [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    """
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Quobyte:
    """
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """


    group?: str

    readOnly?: bool

    registry: str

    tenant?: str

    user?: str

    volume: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Rbd:
    """
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
    image : str, default is Undefined, required
        image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is Undefined, optional
        keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is Undefined, optional
        pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """


    fsType?: str

    image: str

    keyring?: str

    monitors: [str]

    pool?: str

    readOnly?: bool

    secretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0RbdSecretRef

    user?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0RbdSecretRef:
    """
    secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ScaleIO:
    """
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is Undefined, optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
    """


    fsType?: str

    gateway: str

    protectionDomain?: str

    readOnly?: bool

    secretRef: MonitoringCoreosComV1PrometheusSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool

    storageMode?: str

    storagePool?: str

    system: str

    volumeName?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0ScaleIOSecretRef:
    """
    secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Secret:
    """
    secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [MonitoringCoreosComV1PrometheusSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [MonitoringCoreosComV1PrometheusSpecVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0Storageos:
    """
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : MonitoringCoreosComV1PrometheusSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
    """


    fsType?: str

    readOnly?: bool

    secretRef?: MonitoringCoreosComV1PrometheusSpecVolumesItems0StorageosSecretRef

    volumeName?: str

    volumeNamespace?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0StorageosSecretRef:
    """
    secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringCoreosComV1PrometheusSpecVolumesItems0VsphereVolume:
    """
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """


    fsType?: str

    storagePolicyID?: str

    storagePolicyName?: str

    volumePath: str


schema MonitoringCoreosComV1PrometheusSpecWeb:
    """
    Defines the configuration of the Prometheus web server.

    Attributes
    ----------
    httpConfig : MonitoringCoreosComV1PrometheusSpecWebHTTPConfig, default is Undefined, optional
        http config
    maxConnections : int, default is Undefined, optional
        Defines the maximum number of simultaneous connections A zero value means that Prometheus doesn't accept any incoming connection.
    pageTitle : str, default is Undefined, optional
        The prometheus web page title.
    tlsConfig : MonitoringCoreosComV1PrometheusSpecWebTLSConfig, default is Undefined, optional
        tls config
    """


    httpConfig?: MonitoringCoreosComV1PrometheusSpecWebHTTPConfig

    maxConnections?: int

    pageTitle?: str

    tlsConfig?: MonitoringCoreosComV1PrometheusSpecWebTLSConfig


    check:
        maxConnections >= 0


schema MonitoringCoreosComV1PrometheusSpecWebHTTPConfig:
    """
    Defines HTTP parameters for web server.

    Attributes
    ----------
    headers : MonitoringCoreosComV1PrometheusSpecWebHTTPConfigHeaders, default is Undefined, optional
        headers
    http2 : bool, default is Undefined, optional
        Enable HTTP/2 support. Note that HTTP/2 is only supported with TLS. When TLSConfig is not configured, HTTP/2 will be disabled. Whenever the value of the field changes, a rolling update will be triggered.
    """


    headers?: MonitoringCoreosComV1PrometheusSpecWebHTTPConfigHeaders

    http2?: bool


schema MonitoringCoreosComV1PrometheusSpecWebHTTPConfigHeaders:
    """
    List of headers that can be added to HTTP responses.

    Attributes
    ----------
    contentSecurityPolicy : str, default is Undefined, optional
        Set the Content-Security-Policy header to HTTP responses. Unset if blank.
    strictTransportSecurity : str, default is Undefined, optional
        Set the Strict-Transport-Security header to HTTP responses. Unset if blank. Please make sure that you use this with care as this header might force browsers to load Prometheus and the other applications hosted on the same domain and subdomains over HTTPS. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
    xContentTypeOptions : str, default is Undefined, optional
        Set the X-Content-Type-Options header to HTTP responses. Unset if blank. Accepted value is nosniff. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
    xFrameOptions : str, default is Undefined, optional
        Set the X-Frame-Options header to HTTP responses. Unset if blank. Accepted values are deny and sameorigin. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
    xXSSProtection : str, default is Undefined, optional
        Set the X-XSS-Protection header to all responses. Unset if blank. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
    """


    contentSecurityPolicy?: str

    strictTransportSecurity?: str

    xContentTypeOptions?: "" | "NoSniff"

    xFrameOptions?: "" | "Deny" | "SameOrigin"

    xXSSProtection?: str


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfig:
    """
    Defines the TLS parameters for HTTPS.

    Attributes
    ----------
    cert : MonitoringCoreosComV1PrometheusSpecWebTLSConfigCert, default is Undefined, required
        cert
    cipherSuites : [str], default is Undefined, optional
        List of supported cipher suites for TLS versions up to TLS 1.2. If empty, Go default cipher suites are used. Available cipher suites are documented in the go documentation: https://golang.org/pkg/crypto/tls/#pkg-constants
    clientAuthType : str, default is Undefined, optional
        Server policy for client authentication. Maps to ClientAuth Policies. For more detail on clientAuth options: https://golang.org/pkg/crypto/tls/#ClientAuthType
    client_ca : MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCa, default is Undefined, optional
        client ca
    curvePreferences : [str], default is Undefined, optional
        Elliptic curves that will be used in an ECDHE handshake, in preference order. Available curves are documented in the go documentation: https://golang.org/pkg/crypto/tls/#CurveID
    keySecret : MonitoringCoreosComV1PrometheusSpecWebTLSConfigKeySecret, default is Undefined, required
        key secret
    maxVersion : str, default is Undefined, optional
        Maximum TLS version that is acceptable. Defaults to TLS13.
    minVersion : str, default is Undefined, optional
        Minimum TLS version that is acceptable. Defaults to TLS12.
    preferServerCipherSuites : bool, default is Undefined, optional
        Controls whether the server selects the client's most preferred cipher suite, or the server's most preferred cipher suite. If true then the server's preference, as expressed in the order of elements in cipherSuites, is used.
    """


    cert: MonitoringCoreosComV1PrometheusSpecWebTLSConfigCert

    cipherSuites?: [str]

    clientAuthType?: str

    client_ca?: MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCa

    curvePreferences?: [str]

    keySecret: MonitoringCoreosComV1PrometheusSpecWebTLSConfigKeySecret

    maxVersion?: str

    minVersion?: str

    preferServerCipherSuites?: bool


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigCert:
    """
    Contains the TLS certificate for the server.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecWebTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecWebTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecWebTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecWebTLSConfigCertSecret


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCa:
    """
    Contains the CA certificate for client certificate authentication to the server.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCaConfigMap

    secret?: MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCaSecret


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigClientCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusSpecWebTLSConfigKeySecret:
    """
    Secret containing the TLS key for the server.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1PrometheusStatus:
    """
    Most recent observed status of the Prometheus cluster. Read-only. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    availableReplicas : int, default is Undefined, required
        Total number of available pods (ready for at least minReadySeconds) targeted by this Prometheus deployment.
    conditions : [MonitoringCoreosComV1PrometheusStatusConditionsItems0], default is Undefined, optional
        The current state of the Prometheus deployment.
    paused : bool, default is Undefined, required
        Represents whether any actions on the underlying managed objects are being performed. Only delete actions will be performed.
    replicas : int, default is Undefined, required
        Total number of non-terminated pods targeted by this Prometheus deployment (their labels match the selector).
    shardStatuses : [MonitoringCoreosComV1PrometheusStatusShardStatusesItems0], default is Undefined, optional
        The list has one entry per shard. Each entry provides a summary of the shard status.
    unavailableReplicas : int, default is Undefined, required
        Total number of unavailable pods targeted by this Prometheus deployment.
    updatedReplicas : int, default is Undefined, required
        Total number of non-terminated pods targeted by this Prometheus deployment that have the desired version spec.
    """


    availableReplicas: int

    conditions?: [MonitoringCoreosComV1PrometheusStatusConditionsItems0]

    paused: bool

    replicas: int

    shardStatuses?: [MonitoringCoreosComV1PrometheusStatusShardStatusesItems0]

    unavailableReplicas: int

    updatedReplicas: int


schema MonitoringCoreosComV1PrometheusStatusConditionsItems0:
    """
    Condition represents the state of the resources associated with the Prometheus, Alertmanager or ThanosRuler resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the time of the last update to the current status property.
    message : str, default is Undefined, optional
        Human-readable message indicating details for the condition's last transition.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if `.metadata.generation` is currently 12, but the `.status.conditions[].observedGeneration` is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, optional
        Reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition.
    $type : str, default is Undefined, required
        Type of the condition being reported.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason?: str

    status: str

    $type: str


schema MonitoringCoreosComV1PrometheusStatusShardStatusesItems0:
    """
    monitoring coreos com v1 prometheus status shard statuses items0

    Attributes
    ----------
    availableReplicas : int, default is Undefined, required
        Total number of available pods (ready for at least minReadySeconds) targeted by this shard.
    replicas : int, default is Undefined, required
        Total number of pods targeted by this shard.
    shardID : str, default is Undefined, required
        Identifier of the shard.
    unavailableReplicas : int, default is Undefined, required
        Total number of unavailable pods targeted by this shard.
    updatedReplicas : int, default is Undefined, required
        Total number of non-terminated pods targeted by this shard that have the desired spec.
    """


    availableReplicas: int

    replicas: int

    shardID: str

    unavailableReplicas: int

    updatedReplicas: int


