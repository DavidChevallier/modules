"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema ScrapeConfig:
    """
    ScrapeConfig defines a namespaced Prometheus scrape_config to be aggregated across multiple namespaces into the Prometheus configuration.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ScrapeConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1alpha1ScrapeConfigSpec, default is Undefined, required
        spec
    """


    apiVersion: "monitoring.coreos.com/v1alpha1" = "monitoring.coreos.com/v1alpha1"

    kind: "ScrapeConfig" = "ScrapeConfig"

    metadata?: v1.ObjectMeta

    spec: MonitoringCoreosComV1alpha1ScrapeConfigSpec


schema MonitoringCoreosComV1alpha1ScrapeConfigSpec:
    """
    ScrapeConfigSpec is a specification of the desired configuration for a scrape configuration.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorization, default is Undefined, optional
        authorization
    azureSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0], default is Undefined, optional
        AzureSDConfigs defines a list of Azure service discovery configurations.
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuth, default is Undefined, optional
        basic auth
    consulSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0], default is Undefined, optional
        ConsulSDConfigs defines a list of Consul service discovery configurations.
    dnsSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecDNSSDConfigsItems0], default is Undefined, optional
        DNSSDConfigs defines a list of DNS service discovery configurations.
    ec2SDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0], default is Undefined, optional
        EC2SDConfigs defines a list of EC2 service discovery configurations.
    fileSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecFileSDConfigsItems0], default is Undefined, optional
        FileSDConfigs defines a list of file service discovery configurations.
    gceSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecGceSDConfigsItems0], default is Undefined, optional
        GCESDConfigs defines a list of GCE service discovery configurations.
    honorLabels : bool, default is Undefined, optional
        HonorLabels chooses the metric's labels on collisions with target labels.
    honorTimestamps : bool, default is Undefined, optional
        HonorTimestamps controls whether Prometheus respects the timestamps present in scraped data.
    httpSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0], default is Undefined, optional
        HTTPSDConfigs defines a list of HTTP service discovery configurations.
    keepDroppedTargets : int, default is Undefined, optional
        Per-scrape limit on the number of targets dropped by relabeling that will be kept in memory. 0 means no limit. 
         It requires Prometheus >= v2.47.0.
    kubernetesSDConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0], default is Undefined, optional
        KubernetesSDConfigs defines a list of Kubernetes service discovery configurations.
    labelLimit : int, default is Undefined, optional
        Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    labelNameLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    labelValueLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    metricRelabelings : [MonitoringCoreosComV1alpha1ScrapeConfigSpecMetricRelabelingsItems0], default is Undefined, optional
        MetricRelabelConfigs to apply to samples before ingestion.
    metricsPath : str, default is Undefined, optional
        MetricsPath HTTP path to scrape for metrics. If empty, Prometheus uses the default value (e.g. /metrics).
    params : {str:[str]}, default is Undefined, optional
        Optional HTTP URL parameters
    relabelings : [MonitoringCoreosComV1alpha1ScrapeConfigSpecRelabelingsItems0], default is Undefined, optional
        RelabelConfigs defines how to rewrite the target's labels before scraping. Prometheus Operator automatically adds relabelings for a few standard Kubernetes fields. The original scrape job's name is available via the `__tmp_prometheus_job_name` label. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    sampleLimit : int, default is Undefined, optional
        SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
    scheme : str, default is Undefined, optional
        Configures the protocol scheme used for requests. If empty, Prometheus uses HTTP by default.
    scrapeInterval : str, default is Undefined, optional
        ScrapeInterval is the interval between consecutive scrapes.
    scrapeTimeout : str, default is Undefined, optional
        ScrapeTimeout is the number of seconds to wait until a scrape request times out.
    staticConfigs : [MonitoringCoreosComV1alpha1ScrapeConfigSpecStaticConfigsItems0], default is Undefined, optional
        StaticConfigs defines a list of static targets with a common label set.
    targetLimit : int, default is Undefined, optional
        TargetLimit defines a limit on the number of scraped targets that will be accepted.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfig, default is Undefined, optional
        tls config
    trackTimestampsStaleness : bool, default is Undefined, optional
        TrackTimestampsStaleness whether Prometheus tracks staleness of the metrics that have an explicit timestamp present in scraped data. Has no effect if `honorTimestamps` is false. It requires Prometheus >= v2.48.0.
    """


    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorization

    azureSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0]

    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuth

    consulSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0]

    dnsSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecDNSSDConfigsItems0]

    ec2SDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0]

    fileSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecFileSDConfigsItems0]

    gceSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecGceSDConfigsItems0]

    honorLabels?: bool

    honorTimestamps?: bool

    httpSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0]

    keepDroppedTargets?: int

    kubernetesSDConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0]

    labelLimit?: int

    labelNameLengthLimit?: int

    labelValueLengthLimit?: int

    metricRelabelings?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecMetricRelabelingsItems0]

    metricsPath?: str

    params?: {str:[str]}

    relabelings?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecRelabelingsItems0]

    sampleLimit?: int

    scheme?: "HTTP" | "HTTPS"

    scrapeInterval?: str

    scrapeTimeout?: str

    staticConfigs?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecStaticConfigsItems0]

    targetLimit?: int

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfig

    trackTimestampsStaleness?: bool


    check:
        regex_match(str(scrapeInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeInterval
        regex_match(str(scrapeTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorization:
    """
    Authorization header to use on every scrape request.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorizationCredentials

    $type?: str


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0:
    """
    AzureSDConfig allow retrieving scrape targets from Azure VMs. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#azure_sd_config

    Attributes
    ----------
    authenticationMethod : str, default is Undefined, optional
        # The authentication method, either OAuth or ManagedIdentity. See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview
    clientID : str, default is Undefined, optional
        Optional client ID. Only required with the OAuth authentication method.
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ClientSecret, default is Undefined, optional
        client secret
    environment : str, default is Undefined, optional
        The Azure environment.
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.
    resourceGroup : str, default is Undefined, optional
        Optional resource group name. Limits discovery to this resource group.
    subscriptionID : str, default is Undefined, required
        The subscription ID. Always required.
    tenantID : str, default is Undefined, optional
        Optional tenant ID. Only required with the OAuth authentication method.
    """


    authenticationMethod?: "OAuth" | "ManagedIdentity"

    clientID?: str

    clientSecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ClientSecret

    environment?: str

    port?: int

    refreshInterval?: str

    resourceGroup?: str

    subscriptionID: str

    tenantID?: str


    check:
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(subscriptionID) >= 1


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecAzureSDConfigsItems0ClientSecret:
    """
    Optional client secret. Only required with the OAuth authentication method.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuth:
    """
    BasicAuth information to use on every scrape request.

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthPassword

    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthUsername


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecBasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0:
    """
    ConsulSDConfig defines a Consul service discovery configuration See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#consul_sd_config

    Attributes
    ----------
    allowStale : bool, default is Undefined, optional
        Allow stale Consul results (see https://www.consul.io/api/features/consistency.html). Will reduce load on Consul. If unset, Prometheus uses its default value.
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    datacenter : str, default is Undefined, optional
        Consul Datacenter name, if not provided it will use the local Consul Agent Datacenter.
    enableHTTP2 : bool, default is Undefined, optional
        Whether to enable HTTP2. If unset, Prometheus uses its default value.
    followRedirects : bool, default is Undefined, optional
        Configure whether HTTP requests follow HTTP 3xx redirects. If unset, Prometheus uses its default value.
    namespace : str, default is Undefined, optional
        Namespaces are only supported in Consul Enterprise.
    noProxy : str, default is Undefined, optional
        Comma-separated string that can contain IPs, CIDR notation, domain names that should be excluded from proxying. IP and domain names can contain port numbers.
    nodeMeta : {str:str}, default is Undefined, optional
        Node metadata key/value pairs to filter nodes for a given service.
    oauth2 : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2, default is Undefined, optional
        oauth2
    partition : str, default is Undefined, optional
        Admin Partitions are only supported in Consul Enterprise.
    proxyConnectHeader : {str:MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0ProxyConnectHeaderAnon}, default is Undefined, optional
        Specifies headers to send to proxies during CONNECT requests.
    proxyFromEnvironment : bool, default is Undefined, optional
        Use proxy URL indicated by environment variables (HTTP_PROXY, https_proxy, HTTPs_PROXY, https_proxy, and no_proxy) If unset, Prometheus uses its default value.
    proxyUrl : str, default is Undefined, optional
        Optional proxy URL.
    refreshInterval : str, default is Undefined, optional
        The time after which the provided names are refreshed. On large setup it might be a good idea to increase this value because the catalog will change all the time. If unset, Prometheus uses its default value.
    scheme : str, default is Undefined, optional
        HTTP Scheme default "http"
    server : str, default is Undefined, required
        A valid string consisting of a hostname or IP followed by an optional port number.
    services : [str], default is Undefined, optional
        A list of services for which targets are retrieved. If omitted, all services are scraped.
    tagSeparator : str, default is Undefined, optional
        The string by which Consul tags are joined into the tag label. If unset, Prometheus uses its default value.
    tags : [str], default is Undefined, optional
        An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    tokenRef : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TokenRef, default is Undefined, optional
        token ref
    """


    allowStale?: bool

    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Authorization

    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuth

    datacenter?: str

    enableHTTP2?: bool

    followRedirects?: bool

    namespace?: str

    noProxy?: str

    nodeMeta?: {str:str}

    oauth2?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2

    partition?: str

    proxyConnectHeader?: {str:MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0ProxyConnectHeaderAnon}

    proxyFromEnvironment?: bool

    proxyUrl?: str

    refreshInterval?: str

    scheme?: "HTTP" | "HTTPS"

    server: str

    services?: [str]

    tagSeparator?: str

    tags?: [str]

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfig

    tokenRef?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TokenRef


    check:
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(server) >= 1


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Authorization:
    """
    Authorization header configuration to authenticate against the Consul Server.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0AuthorizationCredentials

    $type?: str


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0AuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuth:
    """
    BasicAuth information to authenticate against the Consul Server. More info: https://prometheus.io/docs/operating/configuration/#endpoints

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthPassword

    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthUsername


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0BasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2:
    """
    Optional OAuth 2.0 configuration.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        `endpointParams` configures the HTTP parameters to append to the token URL.
    scopes : [str], default is Undefined, optional
        `scopes` defines the OAuth2 scopes used for the token request.
    tokenUrl : str, default is Undefined, required
        `tokenURL` configures the URL to fetch the token from.
    """


    clientId: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientID

    clientSecret: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientID:
    """
    `clientId` specifies a key of a Secret or ConfigMap containing the OAuth2 client's ID.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0Oauth2ClientSecret:
    """
    `clientSecret` specifies a key of a Secret containing the OAuth2 client's secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0ProxyConnectHeaderAnon:
    """
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfig:
    """
    TLS Config

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCa

    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCert

    insecureSkipVerify?: bool

    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecConsulSDConfigsItems0TokenRef:
    """
    Consul ACL TokenRef, if not provided it will use the ACL from the local Consul Agent.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecDNSSDConfigsItems0:
    """
    DNSSDConfig allows specifying a set of DNS domain names which are periodically queried to discover a list of targets. The DNS servers to be contacted are read from /etc/resolv.conf. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#dns_sd_config

    Attributes
    ----------
    names : [str], default is Undefined, required
        A list of DNS domain names to be queried.
    port : int, default is Undefined, optional
        The port number used if the query type is not SRV Ignored for SRV records
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the time after which the provided names are refreshed. If not set, Prometheus uses its default value.
    $type : str, default is Undefined, optional
        The type of DNS query to perform. One of SRV, A, AAAA or MX. If not set, Prometheus uses its default value.
    """


    names: [str]

    port?: int

    refreshInterval?: str

    $type?: "SRV" | "A" | "AAAA" | "MX"


    check:
        len(names) >= 1
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0:
    """
    EC2SDConfig allow retrieving scrape targets from AWS EC2 instances. The private IP address is used by default, but may be changed to the public IP address with relabeling. The IAM credentials used must have the ec2:DescribeInstances permission to discover scrape targets See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config

    Attributes
    ----------
    accessKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0AccessKey, default is Undefined, optional
        access key
    filters : [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0FiltersItems0], default is Undefined, optional
        Filters can be used optionally to filter the instance list by other criteria. Available filter criteria can be found here: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html Filter API documentation: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.
    region : str, default is Undefined, optional
        The AWS region
    roleARN : str, default is Undefined, optional
        AWS Role ARN, an alternative to using AWS API keys.
    secretKey : MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0SecretKey, default is Undefined, optional
        secret key
    """


    accessKey?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0AccessKey

    filters?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0FiltersItems0]

    port?: int

    refreshInterval?: str

    region?: str

    roleARN?: str

    secretKey?: MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0SecretKey


    check:
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0AccessKey:
    """
    AccessKey is the AWS API key.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0FiltersItems0:
    """
    EC2Filter is the configuration for filtering EC2 instances.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    values : [str], default is Undefined, required
        values
    """


    name: str

    values: [str]


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecEc2SDConfigsItems0SecretKey:
    """
    SecretKey is the AWS API secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecFileSDConfigsItems0:
    """
    FileSDConfig defines a Prometheus file service discovery configuration See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#file_sd_config

    Attributes
    ----------
    files : [str], default is Undefined, required
        List of files to be used for file discovery. Recommendation: use absolute paths. While relative paths work, the prometheus-operator project makes no guarantees about the working directory where the configuration file is stored. Files must be mounted using Prometheus.ConfigMaps or Prometheus.Secrets.
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will reload the content of the files.
    """


    files: [str]

    refreshInterval?: str


    check:
        len(files) >= 1
        all n in files { regex_match(str(n), r"^[^*]*(\*[^/]*)?\.(json|yml|yaml|JSON|YML|YAML)$") }
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecGceSDConfigsItems0:
    """
    GCESDConfig configures scrape targets from GCP GCE instances. The private IP address is used by default, but may be changed to the public IP address with relabeling. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#gce_sd_config 
     The GCE service discovery will load the Google Cloud credentials from the file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable. See https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform 
     A pre-requisite for using GCESDConfig is that a Secret containing valid Google Cloud credentials is mounted into the Prometheus or PrometheusAgent pod via the `.spec.secrets` field and that the GOOGLE_APPLICATION_CREDENTIALS environment variable is set to /etc/prometheus/secrets/<secret-name>/<credentials-filename.json>.

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        Filter can be used optionally to filter the instance list by other criteria Syntax of this filter is described in the filter query parameter section: https://cloud.google.com/compute/docs/reference/latest/instances/list
    port : int, default is Undefined, optional
        The port to scrape metrics from. If using the public IP address, this must instead be specified in the relabeling rule.
    project : str, default is Undefined, required
        The Google Cloud Project ID
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-read the instance list.
    tagSeparator : str, default is Undefined, optional
        The tag separator is used to separate the tags on concatenation
    zone : str, default is Undefined, required
        The zone of the scrape targets. If you need multiple zones use multiple GCESDConfigs.
    """


    $filter?: str

    port?: int

    project: str

    refreshInterval?: str

    tagSeparator?: str

    zone: str


    check:
        len(project) >= 1
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(zone) >= 1


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0:
    """
    HTTPSDConfig defines a prometheus HTTP service discovery configuration See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#http_sd_config

    Attributes
    ----------
    authorization : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Authorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuth, default is Undefined, optional
        basic auth
    refreshInterval : str, default is Undefined, optional
        RefreshInterval configures the refresh interval at which Prometheus will re-query the endpoint to update the target list.
    tlsConfig : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        URL from which the targets are fetched.
    """


    authorization?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Authorization

    basicAuth?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuth

    refreshInterval?: str

    tlsConfig?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfig

    url: str


    check:
        regex_match(str(refreshInterval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if refreshInterval
        len(url) >= 1
        regex_match(str(url), r"^http(s)?://.+$")


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0Authorization:
    """
    Authorization header configuration to authenticate against the target HTTP endpoint.

    Attributes
    ----------
    credentials : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0AuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Defines the authentication type. The value is case-insensitive. 
         "Basic" is not a supported value. 
         Default: "Bearer"
    """


    credentials?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0AuthorizationCredentials

    $type?: str


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0AuthorizationCredentials:
    """
    Selects a key of a Secret in the namespace that contains the credentials for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuth:
    """
    BasicAuth information to authenticate against the target HTTP endpoint. More info: https://prometheus.io/docs/operating/configuration/#endpoints

    Attributes
    ----------
    password : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthPassword

    username?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthUsername


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthPassword:
    """
    `password` specifies a key of a Secret containing the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0BasicAuthUsername:
    """
    `username` specifies a key of a Secret containing the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfig:
    """
    TLS configuration applying to the target HTTP endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCa

    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCert

    insecureSkipVerify?: bool

    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecHTTPSDConfigsItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0:
    """
    KubernetesSDConfig allows retrieving scrape targets from Kubernetes' REST API. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config

    Attributes
    ----------
    role : str, default is Undefined, required
        Role of the Kubernetes entities that should be discovered.
    selectors : [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0SelectorsItems0], default is Undefined, optional
        Selector to select objects.
    """


    role: "Node" | "node" | "Service" | "service" | "Pod" | "pod" | "Endpoints" | "endpoints" | "EndpointSlice" | "endpointslice" | "Ingress" | "ingress"

    selectors?: [MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0SelectorsItems0]


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecKubernetesSDConfigsItems0SelectorsItems0:
    """
    K8SSelectorConfig is Kubernetes Selector Config

    Attributes
    ----------
    field : str, default is Undefined, optional
        field
    label : str, default is Undefined, optional
        label
    role : str, default is Undefined, required
        Role is role of the service in Kubernetes.
    """


    field?: str

    label?: str

    role: "Node" | "node" | "Service" | "service" | "Pod" | "pod" | "Endpoints" | "endpoints" | "EndpointSlice" | "endpointslice" | "Ingress" | "ingress"


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecMetricRelabelingsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. 
     More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching. 
         `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. 
         Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values. 
         Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the regular expression matches. 
         Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement. 
         It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. 
         Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex_match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecRelabelingsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples. 
     More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on the regex matching. 
         `Uppercase` and `Lowercase` actions require Prometheus >= v2.36.0. `DropEqual` and `KeepEqual` actions require Prometheus >= v2.41.0. 
         Default: "Replace"
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values. 
         Only applicable when the action is `HashMod`.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched.
    replacement : str, default is Undefined, optional
        Replacement value against which a Replace action is performed if the regular expression matches. 
         Regex capture groups are available.
    separator : str, default is Undefined, optional
        Separator is the string between concatenated SourceLabels.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured Separator and matched against the configured regular expression.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting string is written in a replacement. 
         It is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`, `KeepEqual` and `DropEqual` actions. 
         Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex_match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecStaticConfigsItems0:
    """
    StaticConfig defines a Prometheus static configuration. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Labels assigned to all metrics scraped from the targets.
    targets : [str], default is Undefined, optional
        List of targets for this static configuration.
    """


    labels?: {str:str}

    targets?: [str]


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfig:
    """
    TLS configuration to use on every scrape request

    Attributes
    ----------
    ca : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCa

    cert?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCert

    insecureSkipVerify?: bool

    keySecret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertSecret


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1alpha1ScrapeConfigSpecTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


