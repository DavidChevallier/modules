"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VertexAIFeaturestore:
    """
    vertexai cnrm cloud google com v1alpha1 vertex a i featurestore

    Attributes
    ----------
    apiVersion : str, default is "vertexai.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VertexAIFeaturestore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpec, default is Undefined, required
        spec
    status : VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "vertexai.cnrm.cloud.google.com/v1alpha1" = "vertexai.cnrm.cloud.google.com/v1alpha1"

    kind: "VertexAIFeaturestore" = "VertexAIFeaturestore"

    metadata?: v1.ObjectMeta

    spec: VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpec

    status?: VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreStatus


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpec:
    """
    vertexai cnrm cloud google com v1alpha1 vertex a i featurestore spec

    Attributes
    ----------
    encryptionSpec : VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecEncryptionSpec, default is Undefined, optional
        encryption spec
    forceDestroy : bool, default is Undefined, optional
        If set to true, any EntityTypes and Features for this Featurestore will also be deleted.
    onlineServingConfig : VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecOnlineServingConfig, default is Undefined, optional
        online serving config
    onlineStorageTtlDays : int, default is Undefined, optional
        TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than onlineStorageTtlDays since the feature generation time. Note that onlineStorageTtlDays should be less than or equal to offlineStorageTtlDays for each EntityType under a featurestore. If not set, default to 4000 days.
    projectRef : VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecProjectRef, default is Undefined, required
        project ref
    region : str, default is Undefined, required
        Immutable. The region of the dataset. eg us-central1.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    """


    encryptionSpec?: VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecEncryptionSpec

    forceDestroy?: bool

    onlineServingConfig?: VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecOnlineServingConfig

    onlineStorageTtlDays?: int

    projectRef: VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecProjectRef

    region: str

    resourceID?: str


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecEncryptionSpec:
    """
    If set, both of the online and offline data storage will be secured by this key.

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, required
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the compute resource is created.
    """


    kmsKeyName: str


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecOnlineServingConfig:
    """
    Config for online serving resources.

    Attributes
    ----------
    fixedNodeCount : int, default is Undefined, optional
        The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
    scaling : VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecOnlineServingConfigScaling, default is Undefined, optional
        scaling
    """


    fixedNodeCount?: int

    scaling?: VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecOnlineServingConfigScaling


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecOnlineServingConfigScaling:
    """
    Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.

    Attributes
    ----------
    maxNodeCount : int, default is Undefined, required
        The maximum number of nodes to scale up to. Must be greater than minNodeCount, and less than or equal to 10 times of 'minNodeCount'.
    minNodeCount : int, default is Undefined, required
        The minimum number of nodes to scale down to. Must be greater than or equal to 1.
    """


    maxNodeCount: int

    minNodeCount: int


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreSpecProjectRef:
    """
    The project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `Project` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreStatus:
    """
    vertexai cnrm cloud google com v1alpha1 vertex a i featurestore status

    Attributes
    ----------
    conditions : [VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    createTime : str, default is Undefined, optional
        The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    etag : str, default is Undefined, optional
        Used to perform consistent read-modify-write updates.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    updateTime : str, default is Undefined, optional
        The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    """


    conditions?: [VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreStatusConditionsItems0]

    createTime?: str

    etag?: str

    observedGeneration?: int

    updateTime?: str


schema VertexaiCnrmCloudGoogleComV1alpha1VertexAIFeaturestoreStatusConditionsItems0:
    """
    vertexai cnrm cloud google com v1alpha1 vertex a i featurestore status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


