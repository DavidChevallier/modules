"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ComputeAutoscaler:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler

    Attributes
    ----------
    apiVersion : str, default is "compute.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ComputeAutoscaler", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpec, default is Undefined, required
        spec
    status : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.cnrm.cloud.google.com/v1alpha1" = "compute.cnrm.cloud.google.com/v1alpha1"

    kind: "ComputeAutoscaler" = "ComputeAutoscaler"

    metadata?: v1.ObjectMeta

    spec: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpec

    status?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerStatus


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpec:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler spec

    Attributes
    ----------
    autoscalingPolicy : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicy, default is Undefined, required
        autoscaling policy
    description : str, default is Undefined, optional
        An optional description of this resource.
    projectRef : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecProjectRef, default is Undefined, required
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    targetRef : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecTargetRef, default is Undefined, required
        target ref
    zone : str, default is Undefined, required
        Immutable. URL of the zone where the instance group resides.
    """


    autoscalingPolicy: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicy

    description?: str

    projectRef: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecProjectRef

    resourceID?: str

    targetRef: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecTargetRef

    zone: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicy:
    """
    The configuration parameters for the autoscaling algorithm. You can
    define one or more of the policies for an autoscaler: cpuUtilization,
    customMetricUtilizations, and loadBalancingUtilization.

    If none of these are specified, the default will be to autoscale based
    on cpuUtilization to 0.6 or 60%.

    Attributes
    ----------
    cooldownPeriod : int, default is Undefined, optional
        The number of seconds that the autoscaler should wait before it
        starts collecting information from a new instance. This prevents
        the autoscaler from collecting information when the instance is
        initializing, during which the collected usage would not be
        reliable. The default time autoscaler waits is 60 seconds.

        Virtual machine initialization times might vary because of
        numerous factors. We recommend that you test how long an
        instance may take to initialize. To do this, create an instance
        and time the startup process.
    cpuUtilization : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyCPUUtilization, default is Undefined, optional
        cpu utilization
    loadBalancingUtilization : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyLoadBalancingUtilization, default is Undefined, optional
        load balancing utilization
    maxReplicas : int, default is Undefined, required
        The maximum number of instances that the autoscaler can scale up
        to. This is required when creating or updating an autoscaler. The
        maximum number of replicas should not be lower than minimal number
        of replicas.
    metric : [ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyMetricItems0], default is Undefined, optional
        Configuration parameters of autoscaling based on a custom metric.
    minReplicas : int, default is Undefined, required
        The minimum number of replicas that the autoscaler can scale down
        to. This cannot be less than 0. If not provided, autoscaler will
        choose a default value depending on maximum number of instances
        allowed.
    mode : str, default is Undefined, optional
        Defines operating mode for this policy. Default value: "ON" Possible values: ["OFF", "ONLY_UP", "ON"].
    scaleDownControl : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleDownControl, default is Undefined, optional
        scale down control
    scaleInControl : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleInControl, default is Undefined, optional
        scale in control
    scalingSchedules : [ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScalingSchedulesItems0], default is Undefined, optional
        Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler and they can overlap.
    """


    cooldownPeriod?: int

    cpuUtilization?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyCPUUtilization

    loadBalancingUtilization?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyLoadBalancingUtilization

    maxReplicas: int

    metric?: [ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyMetricItems0]

    minReplicas: int

    mode?: str

    scaleDownControl?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleDownControl

    scaleInControl?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleInControl

    scalingSchedules?: [ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScalingSchedulesItems0]


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyCPUUtilization:
    """
    Defines the CPU utilization policy that allows the autoscaler to
    scale based on the average CPU utilization of a managed instance
    group.

    Attributes
    ----------
    predictiveMethod : str, default is Undefined, optional
        Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are:

        - NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics.

        - OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
    target : float, default is Undefined, required
        The target CPU utilization that the autoscaler should maintain.
        Must be a float value in the range (0, 1]. If not specified, the
        default is 0.6.

        If the CPU level is below the target utilization, the autoscaler
        scales down the number of instances until it reaches the minimum
        number of instances you specified or until the average CPU of
        your instances reaches the target utilization.

        If the average CPU is above the target utilization, the autoscaler
        scales up until it reaches the maximum number of instances you
        specified or until the average utilization reaches the target
        utilization.
    """


    predictiveMethod?: str

    target: float


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyLoadBalancingUtilization:
    """
    Configuration parameters of autoscaling based on a load balancer.

    Attributes
    ----------
    target : float, default is Undefined, required
        Fraction of backend capacity utilization (set in HTTP(s) load
        balancing configuration) that autoscaler should maintain. Must
        be a positive float value. If not defined, the default is 0.8.
    """


    target: float


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyMetricItems0:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler spec autoscaling policy metric items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter string to be used as the filter string for
        a Stackdriver Monitoring TimeSeries.list API call.
        This filter is used to select a specific TimeSeries for
        the purpose of autoscaling and to determine whether the metric
        is exporting per-instance or per-group data.

        You can only use the AND operator for joining selectors.
        You can only use direct equality comparison operator (=) without
        any functions for each selector.
        You can specify the metric in both the filter string and in the
        metric field. However, if specified in both places, the metric must
        be identical.

        The monitored resource type determines what kind of values are
        expected for the metric. If it is a gce_instance, the autoscaler
        expects the metric to include a separate TimeSeries for each
        instance in a group. In such a case, you cannot filter on resource
        labels.

        If the resource type is any other value, the autoscaler expects
        this metric to contain values that apply to the entire autoscaled
        instance group and resource label filtering can be performed to
        point autoscaler at the correct TimeSeries to scale upon.
        This is called a per-group metric for the purpose of autoscaling.

        If not specified, the type defaults to gce_instance.

        You should provide a filter that is selective enough to pick just
        one TimeSeries for the autoscaled group or for each of the instances
        (if you are using gce_instance resource type). If multiple
        TimeSeries are returned upon the query execution, the autoscaler
        will sum their respective values to obtain its scaling value.
    name : str, default is Undefined, required
        The identifier (type) of the Stackdriver Monitoring metric.
        The metric cannot have negative values.

        The metric must have a value type of INT64 or DOUBLE.
    singleInstanceAssignment : float, default is Undefined, optional
        If scaling is based on a per-group metric value that represents the
        total amount of work to be done or resource usage, set this value to
        an amount assigned for a single instance of the scaled group.
        The autoscaler will keep the number of instances proportional to the
        value of this metric, the metric itself should not change value due
        to group resizing.

        For example, a good metric to use with the target is
        'pubsub.googleapis.com/subscription/num_undelivered_messages'
        or a custom metric exporting the total number of requests coming to
        your instances.

        A bad example would be a metric exporting an average or median
        latency, since this value can't include a chunk assignable to a
        single instance, it could be better used with utilization_target
        instead.
    target : float, default is Undefined, optional
        The target value of the metric that autoscaler should
        maintain. This must be a positive value. A utilization
        metric scales number of virtual machines handling requests
        to increase or decrease proportionally to the metric.

        For example, a good metric to use as a utilizationTarget is
        www.googleapis.com/compute/instance/network/received_bytes_count.
        The autoscaler will work to keep this value constant for each
        of the instances.
    $type : str, default is Undefined, optional
        Defines how target utilization value is expressed for a
        Stackdriver Monitoring metric. Possible values: ["GAUGE", "DELTA_PER_SECOND", "DELTA_PER_MINUTE"].
    """


    $filter?: str

    name: str

    singleInstanceAssignment?: float

    target?: float

    $type?: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleDownControl:
    """
    Defines scale down controls to reduce the risk of response latency
    and outages due to abrupt scale-in events.

    Attributes
    ----------
    maxScaledDownReplicas : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleDownControlMaxScaledDownReplicas, default is Undefined, optional
        max scaled down replicas
    timeWindowSec : int, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledDownReplicas?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleDownControlMaxScaledDownReplicas

    timeWindowSec?: int


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleDownControlMaxScaledDownReplicas:
    """
    A nested object resource.

    Attributes
    ----------
    fixed : int, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : int, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: int

    percent?: int


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleInControl:
    """
    Defines scale in controls to reduce the risk of response latency
    and outages due to abrupt scale-in events.

    Attributes
    ----------
    maxScaledInReplicas : ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleInControlMaxScaledInReplicas, default is Undefined, optional
        max scaled in replicas
    timeWindowSec : int, default is Undefined, optional
        How long back autoscaling should look when computing recommendations
        to include directives regarding slower scale down, as described above.
    """


    maxScaledInReplicas?: ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleInControlMaxScaledInReplicas

    timeWindowSec?: int


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScaleInControlMaxScaledInReplicas:
    """
    A nested object resource.

    Attributes
    ----------
    fixed : int, default is Undefined, optional
        Specifies a fixed number of VM instances. This must be a positive
        integer.
    percent : int, default is Undefined, optional
        Specifies a percentage of instances between 0 to 100%, inclusive.
        For example, specify 80 for 80%.
    """


    fixed?: int

    percent?: int


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecAutoscalingPolicyScalingSchedulesItems0:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler spec autoscaling policy scaling schedules items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of a scaling schedule.
    disabled : bool, default is Undefined, optional
        A boolean value that specifies if a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect.
    durationSec : int, default is Undefined, required
        The duration of time intervals (in seconds) for which this scaling schedule will be running. The minimum allowed value is 300.
    minRequiredReplicas : int, default is Undefined, required
        Minimum number of VM instances that autoscaler will recommend in time intervals starting according to schedule.
    name : str, default is Undefined, required
        name
    schedule : str, default is Undefined, required
        The start timestamps of time intervals when this scaling schedule should provide a scaling signal. This field uses the extended cron format (with an optional year field).
    timeZone : str, default is Undefined, optional
        The time zone to be used when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
    """


    description?: str

    disabled?: bool

    durationSec: int

    minRequiredReplicas: int

    name: str

    schedule: str

    timeZone?: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecProjectRef:
    """
    The project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `Project` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerSpecTargetRef:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler spec target ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeInstanceGroupManager` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerStatus:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler status

    Attributes
    ----------
    conditions : [ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    selfLink : str, default is Undefined, optional
        self link
    """


    conditions?: [ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerStatusConditionsItems0]

    creationTimestamp?: str

    observedGeneration?: int

    selfLink?: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeAutoscalerStatusConditionsItems0:
    """
    compute cnrm cloud google com v1alpha1 compute autoscaler status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


