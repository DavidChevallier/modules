"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema KMSCryptoKeyVersion:
    """
    kms cnrm cloud google com v1alpha1 k m s crypto key version

    Attributes
    ----------
    apiVersion : str, default is "kms.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KMSCryptoKeyVersion", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionSpec, default is Undefined, required
        spec
    status : KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatus, default is Undefined, optional
        status
    """


    apiVersion: "kms.cnrm.cloud.google.com/v1alpha1" = "kms.cnrm.cloud.google.com/v1alpha1"

    kind: "KMSCryptoKeyVersion" = "KMSCryptoKeyVersion"

    metadata?: v1.ObjectMeta

    spec: KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionSpec

    status?: KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatus


schema KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionSpec:
    """
    kms cnrm cloud google com v1alpha1 k m s crypto key version spec

    Attributes
    ----------
    cryptoKey : str, default is Undefined, required
        Immutable. The name of the cryptoKey associated with the CryptoKeyVersions.
        Format: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
    state : str, default is Undefined, optional
        The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"].
    """


    cryptoKey: str

    resourceID?: str

    state?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatus:
    """
    kms cnrm cloud google com v1alpha1 k m s crypto key version status

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
    attestation : [KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0], default is Undefined, optional
        Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google.
        Only provided for key versions with protectionLevel HSM.
    conditions : [KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    generateTime : str, default is Undefined, optional
        The time this CryptoKeyVersion key material was generated.
    name : str, default is Undefined, optional
        The resource name for this CryptoKeyVersion.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    protectionLevel : str, default is Undefined, optional
        The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
    """


    algorithm?: str

    attestation?: [KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0]

    conditions?: [KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusConditionsItems0]

    generateTime?: str

    name?: str

    observedGeneration?: int

    protectionLevel?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0:
    """
    kms cnrm cloud google com v1alpha1 k m s crypto key version status attestation items0

    Attributes
    ----------
    certChains : KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0CertChains, default is Undefined, optional
        cert chains
    content : str, default is Undefined, optional
        The attestation data provided by the HSM when the key operation was performed.
    externalProtectionLevelOptions : KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0ExternalProtectionLevelOptions, default is Undefined, optional
        external protection level options
    format : str, default is Undefined, optional
        The format of the attestation data.
    """


    certChains?: KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0CertChains

    content?: str

    externalProtectionLevelOptions?: KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0ExternalProtectionLevelOptions

    format?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0CertChains:
    """
    The certificate chains needed to validate the attestation.

    Attributes
    ----------
    caviumCerts : str, default is Undefined, optional
        Cavium certificate chain corresponding to the attestation.
    googleCardCerts : str, default is Undefined, optional
        Google card certificate chain corresponding to the attestation.
    googlePartitionCerts : str, default is Undefined, optional
        Google partition certificate chain corresponding to the attestation.
    """


    caviumCerts?: str

    googleCardCerts?: str

    googlePartitionCerts?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusAttestationItems0ExternalProtectionLevelOptions:
    """
    ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.

    Attributes
    ----------
    ekmConnectionKeyPath : str, default is Undefined, optional
        The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of externalKeyUri when using an EkmConnection.
    externalKeyUri : str, default is Undefined, optional
        The URI for an external resource that this CryptoKeyVersion represents.
    """


    ekmConnectionKeyPath?: str

    externalKeyUri?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSCryptoKeyVersionStatusConditionsItems0:
    """
    kms cnrm cloud google com v1alpha1 k m s crypto key version status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


