"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ContainerAnalysisOccurrence:
    """
    containeranalysis cnrm cloud google com v1alpha1 container analysis occurrence

    Attributes
    ----------
    apiVersion : str, default is "containeranalysis.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ContainerAnalysisOccurrence", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpec, default is Undefined, required
        spec
    status : ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceStatus, default is Undefined, optional
        status
    """


    apiVersion: "containeranalysis.cnrm.cloud.google.com/v1alpha1" = "containeranalysis.cnrm.cloud.google.com/v1alpha1"

    kind: "ContainerAnalysisOccurrence" = "ContainerAnalysisOccurrence"

    metadata?: v1.ObjectMeta

    spec: ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpec

    status?: ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceStatus


schema ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpec:
    """
    containeranalysis cnrm cloud google com v1alpha1 container analysis occurrence spec

    Attributes
    ----------
    attestation : ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecAttestation, default is Undefined, required
        attestation
    noteName : str, default is Undefined, required
        Immutable. The analysis note associated with this occurrence, in the form of
        projects/[PROJECT]/notes/[NOTE_ID]. This field can be used as a
        filter in list requests.
    projectRef : ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecProjectRef, default is Undefined, required
        project ref
    remediation : str, default is Undefined, optional
        A description of actions that can be taken to remedy the note.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
    resourceUri : str, default is Undefined, required
        Immutable. Required. Immutable. A URI that represents the resource for which
        the occurrence applies. For example,
        https://gcr.io/project/image@sha256:123abc for a Docker image.
    """


    attestation: ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecAttestation

    noteName: str

    projectRef: ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecProjectRef

    remediation?: str

    resourceID?: str

    resourceUri: str


schema ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecAttestation:
    """
    Occurrence that represents a single "attestation". The authenticity
    of an attestation can be verified using the attached signature.
    If the verifier trusts the public key of the signer, then verifying
    the signature is sufficient to establish trust. In this circumstance,
    the authority to which this attestation is attached is primarily
    useful for lookup (how to find this attestation if you already
    know the authority and artifact to be verified) and intent (for
    which authority this attestation was intended to sign.

    Attributes
    ----------
    serializedPayload : str, default is Undefined, required
        The serialized payload that is verified by one or
        more signatures. A base64-encoded string.
    signatures : [ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecAttestationSignaturesItems0], default is Undefined, required
        One or more signatures over serializedPayload.
        Verifier implementations should consider this attestation
        message verified if at least one signature verifies
        serializedPayload. See Signature in common.proto for more
        details on signature structure and verification.
    """


    serializedPayload: str

    signatures: [ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecAttestationSignaturesItems0]


schema ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecAttestationSignaturesItems0:
    """
    containeranalysis cnrm cloud google com v1alpha1 container analysis occurrence spec attestation signatures items0

    Attributes
    ----------
    publicKeyId : str, default is Undefined, required
        The identifier for the public key that verifies this
        signature. MUST be an RFC3986 conformant
        URI. * When possible, the key id should be an
        immutable reference, such as a cryptographic digest.
        Examples of valid values:

        * OpenPGP V4 public key fingerprint. See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr
          for more details on this scheme.
            * 'openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA'
        * RFC6920 digest-named SubjectPublicKeyInfo (digest of the DER serialization):
            * "ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU".
    signature : str, default is Undefined, optional
        The content of the signature, an opaque bytestring.
        The payload that this signature verifies MUST be
        unambiguously provided with the Signature during
        verification. A wrapper message might provide the
        payload explicitly. Alternatively, a message might
        have a canonical serialization that can always be
        unambiguously computed to derive the payload.
    """


    publicKeyId: str

    signature?: str


schema ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceSpecProjectRef:
    """
    The project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `Project` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceStatus:
    """
    containeranalysis cnrm cloud google com v1alpha1 container analysis occurrence status

    Attributes
    ----------
    conditions : [ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    createTime : str, default is Undefined, optional
        The time when the repository was created.
    kind : str, default is Undefined, optional
        The note kind which explicitly denotes which of the occurrence
        details are specified. This field can be used as a filter in list
        requests.
    name : str, default is Undefined, optional
        The name of the occurrence.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    updateTime : str, default is Undefined, optional
        The time when the repository was last updated.
    """


    conditions?: [ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceStatusConditionsItems0]

    createTime?: str

    kind?: str

    name?: str

    observedGeneration?: int

    updateTime?: str


schema ContaineranalysisCnrmCloudGoogleComV1alpha1ContainerAnalysisOccurrenceStatusConditionsItems0:
    """
    containeranalysis cnrm cloud google com v1alpha1 container analysis occurrence status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


