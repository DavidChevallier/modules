"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NetworkServicesEdgeCacheOrigin:
    """
    networkservices cnrm cloud google com v1alpha1 network services edge cache origin

    Attributes
    ----------
    apiVersion : str, default is "networkservices.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NetworkServicesEdgeCacheOrigin", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpec, default is Undefined, required
        spec
    status : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkservices.cnrm.cloud.google.com/v1alpha1" = "networkservices.cnrm.cloud.google.com/v1alpha1"

    kind: "NetworkServicesEdgeCacheOrigin" = "NetworkServicesEdgeCacheOrigin"

    metadata?: v1.ObjectMeta

    spec: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpec

    status?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginStatus


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpec:
    """
    networkservices cnrm cloud google com v1alpha1 network services edge cache origin spec

    Attributes
    ----------
    awsV4Authentication : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecAwsV4Authentication, default is Undefined, optional
        aws v4 authentication
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    failoverOrigin : str, default is Undefined, optional
        The Origin resource to try when the current origin cannot be reached.
        After maxAttempts is reached, the configured failoverOrigin will be used to fulfil the request.

        The value of timeout.maxAttemptsTimeout dictates the timeout across all origins.
        A reference to a Topic resource.
    maxAttempts : int, default is Undefined, optional
        The maximum number of attempts to cache fill from this origin. Another attempt is made when a cache fill fails with one of the retryConditions.

        Once maxAttempts to this origin have failed the failoverOrigin will be used, if one is specified. That failoverOrigin may specify its own maxAttempts,
        retryConditions and failoverOrigin to control its own cache fill failures.

        The total number of allowed attempts to cache fill across this and failover origins is limited to four.
        The total time allowed for cache fill attempts across this and failover origins can be controlled with maxAttemptsTimeout.

        The last valid, non-retried response from all origins will be returned to the client.
        If no origin returns a valid response, an HTTP 502 will be returned to the client.

        Defaults to 1. Must be a value greater than 0 and less than 4.
    originAddress : str, default is Undefined, required
        A fully qualified domain name (FQDN) or IP address reachable over the public Internet, or the address of a Google Cloud Storage bucket.

        This address will be used as the origin for cache requests - e.g. FQDN: media-backend.example.com, IPv4: 35.218.1.1, IPv6: 2607:f8b0:4012:809::200e, Cloud Storage: gs://bucketname

        When providing an FQDN (hostname), it must be publicly resolvable (e.g. via Google public DNS) and IP addresses must be publicly routable.  It must not contain a protocol (e.g., https://) and it must not contain any slashes.
        If a Cloud Storage bucket is provided, it must be in the canonical "gs://bucketname" format. Other forms, such as "storage.googleapis.com", will be rejected.
    originOverrideAction : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideAction, default is Undefined, optional
        origin override action
    originRedirect : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginRedirect, default is Undefined, optional
        origin redirect
    port : int, default is Undefined, optional
        The port to connect to the origin on.
        Defaults to port 443 for HTTP2 and HTTPS protocols, and port 80 for HTTP.
    projectRef : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecProjectRef, default is Undefined, required
        project ref
    $protocol : str, default is Undefined, optional
        The protocol to use to connect to the configured origin. Defaults to HTTP2, and it is strongly recommended that users use HTTP2 for both security & performance.

        When using HTTP2 or HTTPS as the protocol, a valid, publicly-signed, unexpired TLS (SSL) certificate must be presented by the origin server. Possible values: ["HTTP2", "HTTPS", "HTTP"].
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    retryConditions : [str], default is Undefined, optional
        Specifies one or more retry conditions for the configured origin.

        If the failure mode during a connection attempt to the origin matches the configured retryCondition(s),
        the origin request will be retried up to maxAttempts times. The failoverOrigin, if configured, will then be used to satisfy the request.

        The default retryCondition is "CONNECT_FAILURE".

        retryConditions apply to this origin, and not subsequent failoverOrigin(s),
        which may specify their own retryConditions and maxAttempts.

        Valid values are:

        - CONNECT_FAILURE: Retry on failures connecting to origins, for example due to connection timeouts.
        - HTTP_5XX: Retry if the origin responds with any 5xx response code, or if the origin does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams.
        - GATEWAY_ERROR: Similar to 5xx, but only applies to response codes 502, 503 or 504.
        - RETRIABLE_4XX: Retry for retriable 4xx response codes, which include HTTP 409 (Conflict) and HTTP 429 (Too Many Requests)
        - NOT_FOUND: Retry if the origin returns a HTTP 404 (Not Found). This can be useful when generating video content, and the segment is not available yet.
        - FORBIDDEN: Retry if the origin returns a HTTP 403 (Forbidden). Possible values: ["CONNECT_FAILURE", "HTTP_5XX", "GATEWAY_ERROR", "RETRIABLE_4XX", "NOT_FOUND", "FORBIDDEN"].
    timeout : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecTimeout, default is Undefined, optional
        timeout
    """


    awsV4Authentication?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecAwsV4Authentication

    description?: str

    failoverOrigin?: str

    maxAttempts?: int

    originAddress: str

    originOverrideAction?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideAction

    originRedirect?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginRedirect

    port?: int

    projectRef: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecProjectRef

    $protocol?: str

    resourceID?: str

    retryConditions?: [str]

    timeout?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecTimeout


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecAwsV4Authentication:
    """
    Enable AWS Signature Version 4 origin authentication.

    Attributes
    ----------
    accessKeyId : str, default is Undefined, required
        The access key ID your origin uses to identify the key.
    originRegion : str, default is Undefined, required
        The name of the AWS region that your origin is in.
    secretAccessKeyVersion : str, default is Undefined, required
        The Secret Manager secret version of the secret access key used by your origin.

        This is the resource name of the secret version in the format 'projects/*/secrets/*/versions/*' where the '*' values are replaced by the project, secret, and version you require.
    """


    accessKeyId: str

    originRegion: str

    secretAccessKeyVersion: str


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideAction:
    """
    The override actions, including url rewrites and header
    additions, for requests that use this origin.

    Attributes
    ----------
    headerAction : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionHeaderAction, default is Undefined, optional
        header action
    urlRewrite : NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionURLRewrite, default is Undefined, optional
        url rewrite
    """


    headerAction?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionHeaderAction

    urlRewrite?: NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionURLRewrite


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionHeaderAction:
    """
    The header actions, including adding and removing
    headers, for request handled by this origin.

    Attributes
    ----------
    requestHeadersToAdd : [NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionHeaderActionRequestHeadersToAddItems0], default is Undefined, optional
        Describes a header to add.

        You may add a maximum of 25 request headers.
    """


    requestHeadersToAdd?: [NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionHeaderActionRequestHeadersToAddItems0]


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionHeaderActionRequestHeadersToAddItems0:
    """
    networkservices cnrm cloud google com v1alpha1 network services edge cache origin spec origin override action header action request headers to add items0

    Attributes
    ----------
    headerName : str, default is Undefined, required
        The name of the header to add.
    headerValue : str, default is Undefined, required
        The value of the header to add.
    replace : bool, default is Undefined, optional
        Whether to replace all existing headers with the same name.

        By default, added header values are appended
        to the response or request headers with the
        same field names. The added values are
        separated by commas.

        To overwrite existing values, set 'replace' to 'true'.
    """


    headerName: str

    headerValue: str

    replace?: bool


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginOverrideActionURLRewrite:
    """
    The URL rewrite configuration for request that are
    handled by this origin.

    Attributes
    ----------
    hostRewrite : str, default is Undefined, optional
        Prior to forwarding the request to the selected
        origin, the request's host header is replaced with
        contents of the hostRewrite.

        This value must be between 1 and 255 characters.
    """


    hostRewrite?: str


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecOriginRedirect:
    """
    Follow redirects from this origin.

    Attributes
    ----------
    redirectConditions : [str], default is Undefined, optional
        The set of redirect response codes that the CDN
        follows. Values of
        [RedirectConditions](https://cloud.google.com/media-cdn/docs/reference/rest/v1/projects.locations.edgeCacheOrigins#redirectconditions)
        are accepted.
    """


    redirectConditions?: [str]


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecProjectRef:
    """
    The project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `Project` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginSpecTimeout:
    """
    The connection and HTTP timeout configuration for this origin.

    Attributes
    ----------
    connectTimeout : str, default is Undefined, optional
        The maximum duration to wait for a single origin connection to be established, including DNS lookup, TLS handshake and TCP/QUIC connection establishment.

        Defaults to 5 seconds. The timeout must be a value between 1s and 15s.

        The connectTimeout capped by the deadline set by the request's maxAttemptsTimeout.  The last connection attempt may have a smaller connectTimeout in order to adhere to the overall maxAttemptsTimeout.
    maxAttemptsTimeout : str, default is Undefined, optional
        The maximum time across all connection attempts to the origin, including failover origins, before returning an error to the client. A HTTP 504 will be returned if the timeout is reached before a response is returned.

        Defaults to 15 seconds. The timeout must be a value between 1s and 30s.

        If a failoverOrigin is specified, the maxAttemptsTimeout of the first configured origin sets the deadline for all connection attempts across all failoverOrigins.
    readTimeout : str, default is Undefined, optional
        The maximum duration to wait between reads of a single HTTP connection/stream.

        Defaults to 15 seconds.  The timeout must be a value between 1s and 30s.

        The readTimeout is capped by the responseTimeout.  All reads of the HTTP connection/stream must be completed by the deadline set by the responseTimeout.

        If the response headers have already been written to the connection, the response will be truncated and logged.
    responseTimeout : str, default is Undefined, optional
        The maximum duration to wait for the last byte of a response to arrive when reading from the HTTP connection/stream.

        Defaults to 30 seconds. The timeout must be a value between 1s and 120s.

        The responseTimeout starts after the connection has been established.

        This also applies to HTTP Chunked Transfer Encoding responses, and/or when an open-ended Range request is made to the origin. Origins that take longer to write additional bytes to the response than the configured responseTimeout will result in an error being returned to the client.

        If the response headers have already been written to the connection, the response will be truncated and logged.
    """


    connectTimeout?: str

    maxAttemptsTimeout?: str

    readTimeout?: str

    responseTimeout?: str


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginStatus:
    """
    networkservices cnrm cloud google com v1alpha1 network services edge cache origin status

    Attributes
    ----------
    conditions : [NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    """


    conditions?: [NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginStatusConditionsItems0]

    observedGeneration?: int


schema NetworkservicesCnrmCloudGoogleComV1alpha1NetworkServicesEdgeCacheOriginStatusConditionsItems0:
    """
    networkservices cnrm cloud google com v1alpha1 network services edge cache origin status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


