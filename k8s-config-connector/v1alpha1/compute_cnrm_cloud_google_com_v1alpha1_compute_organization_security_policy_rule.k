"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ComputeOrganizationSecurityPolicyRule:
    """
    compute cnrm cloud google com v1alpha1 compute organization security policy rule

    Attributes
    ----------
    apiVersion : str, default is "compute.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ComputeOrganizationSecurityPolicyRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpec, default is Undefined, required
        spec
    status : ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.cnrm.cloud.google.com/v1alpha1" = "compute.cnrm.cloud.google.com/v1alpha1"

    kind: "ComputeOrganizationSecurityPolicyRule" = "ComputeOrganizationSecurityPolicyRule"

    metadata?: v1.ObjectMeta

    spec: ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpec

    status?: ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleStatus


schema ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpec:
    """
    compute cnrm cloud google com v1alpha1 compute organization security policy rule spec

    Attributes
    ----------
    action : str, default is Undefined, required
        The Action to perform when the client connection triggers the rule. Can currently be either
        "allow", "deny" or "goto_next".
    description : str, default is Undefined, optional
        A description of the rule.
    direction : str, default is Undefined, optional
        The direction in which this rule applies. If unspecified an INGRESS rule is created. Possible values: ["INGRESS", "EGRESS"].
    enableLogging : bool, default is Undefined, optional
        Denotes whether to enable logging for a particular rule.
        If logging is enabled, logs will be exported to the
        configured export destination in Stackdriver.
    match : ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatch, default is Undefined, required
        match
    policyId : str, default is Undefined, required
        Immutable. The ID of the OrganizationSecurityPolicy this rule applies to.
    preview : bool, default is Undefined, optional
        If set to true, the specified action is not enforced.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The priority of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    targetResources : [str], default is Undefined, optional
        A list of network resource URLs to which this rule applies.
        This field allows you to control which network's VMs get
        this rule. If this field is left blank, all VMs
        within the organization will receive the rule.
    targetServiceAccounts : [str], default is Undefined, optional
        A list of service accounts indicating the sets of
        instances that are applied with this rule.
    """


    action: str

    description?: str

    direction?: str

    enableLogging?: bool

    match: ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatch

    policyId: str

    preview?: bool

    resourceID?: str

    targetResources?: [str]

    targetServiceAccounts?: [str]


schema ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatch:
    """
    A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.

    Attributes
    ----------
    config : ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatchConfig, default is Undefined, required
        config
    description : str, default is Undefined, optional
        A description of the rule.
    versionedExpr : str, default is Undefined, optional
        Preconfigured versioned expression. For organization security policy rules,
        the only supported type is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"].
    """


    config: ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatchConfig

    description?: str

    versionedExpr?: str


schema ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatchConfig:
    """
    The configuration options for matching the rule.

    Attributes
    ----------
    destIpRanges : [str], default is Undefined, optional
        Destination IP address range in CIDR format. Required for
        EGRESS rules.
    layer4Config : [ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatchConfigLayer4ConfigItems0], default is Undefined, required
        Pairs of IP protocols and ports that the rule should match.
    srcIpRanges : [str], default is Undefined, optional
        Source IP address range in CIDR format. Required for
        INGRESS rules.
    """


    destIpRanges?: [str]

    layer4Config: [ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatchConfigLayer4ConfigItems0]

    srcIpRanges?: [str]


schema ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleSpecMatchConfigLayer4ConfigItems0:
    """
    compute cnrm cloud google com v1alpha1 compute organization security policy rule spec match config layer4 config items0

    Attributes
    ----------
    ipProtocol : str, default is Undefined, required
        The IP protocol to which this rule applies. The protocol
        type is required when creating a firewall rule.
        This value can either be one of the following well
        known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp),
        or the IP protocol number.
    ports : [str], default is Undefined, optional
        An optional list of ports to which this rule applies. This field
        is only applicable for UDP or TCP protocol. Each entry must be
        either an integer or a range. If not specified, this rule
        applies to connections through any port.

        Example inputs include: ["22"], ["80","443"], and
        ["12345-12349"].
    """


    ipProtocol: str

    ports?: [str]


schema ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleStatus:
    """
    compute cnrm cloud google com v1alpha1 compute organization security policy rule status

    Attributes
    ----------
    conditions : [ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    """


    conditions?: [ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleStatusConditionsItems0]

    observedGeneration?: int


schema ComputeCnrmCloudGoogleComV1alpha1ComputeOrganizationSecurityPolicyRuleStatusConditionsItems0:
    """
    compute cnrm cloud google com v1alpha1 compute organization security policy rule status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


