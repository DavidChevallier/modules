"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConfigConnector:
    """
    ConfigConnector is the Schema for the configconnectors API

    Attributes
    ----------
    apiVersion : str, default is "core.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConfigConnector", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreCnrmCloudGoogleComV1beta1ConfigConnectorSpec, default is Undefined, optional
        spec
    status : CoreCnrmCloudGoogleComV1beta1ConfigConnectorStatus, default is Undefined, optional
        status
    """


    apiVersion: "core.cnrm.cloud.google.com/v1beta1" = "core.cnrm.cloud.google.com/v1beta1"

    kind: "ConfigConnector" = "ConfigConnector"

    metadata?: v1.ObjectMeta

    spec?: CoreCnrmCloudGoogleComV1beta1ConfigConnectorSpec

    status?: CoreCnrmCloudGoogleComV1beta1ConfigConnectorStatus


schema CoreCnrmCloudGoogleComV1beta1ConfigConnectorSpec:
    """
    ConfigConnectorSpec defines the desired state of ConfigConnector

    Attributes
    ----------
    credentialSecretName : str, default is Undefined, optional
        The Kubernetes secret that contains the Google Service Account Key's credentials to be used by ConfigConnector to authenticate with Google Cloud APIs. This field is used only when in cluster mode. It's recommended to use `googleServiceAccount` when running ConfigConnector in Google Kubernetes Engine (GKE) clusters with Workload Identity enabled. This field cannot be specified together with `googleServiceAccount`.
    googleServiceAccount : str, default is Undefined, optional
        The Google Service Account to be used by Config Connector to authenticate with Google Cloud APIs. This field is used only when running in cluster mode with Workload Identity enabled. See Google Kubernetes Engine (GKE) workload-identity (https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity) for details. This field cannot be specified together with `credentialSecretName`. For namespaced mode, use `googleServiceAccount` in ConfigConnectorContext CRD to specify the Google Service Account to be used to authenticate with Google Cloud APIs per namespace.
    mode : str, default is Undefined, optional
        The mode that Config Connector will run in. This can be either 'cluster' or 'namespaced'. The default is 'namespaced'. Cluster mode uses a single Google Service Account to create and manage resources, even if you are using Config Connector to manage multiple Projects. You must specify either `credentialSecretName` or `googleServiceAccount` when in cluster mode, but not both. Namespaced mode allows you to use different Google service accounts for different Projects. When in namespaced mode, you must create a ConfigConnectorContext object per namespace that you want to enable Config Connector in, and each must set `googleServiceAccount` to specify the Google Service Account to be used to authenticate with Google Cloud APIs for the namespace.
    """


    credentialSecretName?: str

    googleServiceAccount?: str

    mode?: "cluster" | "namespaced"


schema CoreCnrmCloudGoogleComV1beta1ConfigConnectorStatus:
    """
    ConfigConnectorStatus defines the observed state of ConfigConnector

    Attributes
    ----------
    errors : [str], default is Undefined, optional
        errors
    healthy : bool, default is Undefined, required
        healthy
    phase : str, default is Undefined, optional
        phase
    """


    errors?: [str]

    healthy: bool

    phase?: str


