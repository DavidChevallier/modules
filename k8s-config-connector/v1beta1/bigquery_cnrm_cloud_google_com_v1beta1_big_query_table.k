"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BigQueryTable:
    """
    bigquery cnrm cloud google com v1beta1 big query table

    Attributes
    ----------
    apiVersion : str, default is "bigquery.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BigQueryTable", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpec, default is Undefined, required
        spec
    status : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatus, default is Undefined, optional
        status
    """


    apiVersion: "bigquery.cnrm.cloud.google.com/v1beta1" = "bigquery.cnrm.cloud.google.com/v1beta1"

    kind: "BigQueryTable" = "BigQueryTable"

    metadata?: v1.ObjectMeta

    spec: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpec

    status?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatus


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpec:
    """
    bigquery cnrm cloud google com v1beta1 big query table spec

    Attributes
    ----------
    clustering : [str], default is Undefined, optional
        Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in descending priority order.
    datasetRef : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecDatasetRef, default is Undefined, required
        dataset ref
    description : str, default is Undefined, optional
        The field description.
    encryptionConfiguration : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    expirationTime : int, default is Undefined, optional
        The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.
    externalDataConfiguration : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfiguration, default is Undefined, optional
        external data configuration
    friendlyName : str, default is Undefined, optional
        A descriptive name for the table.
    materializedView : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecMaterializedView, default is Undefined, optional
        materialized view
    maxStaleness : str, default is Undefined, optional
        The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a string encoding of sql IntervalValue type.
    rangePartitioning : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioning, default is Undefined, optional
        range partitioning
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The tableId of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    $schema : str, default is Undefined, optional
        A JSON schema for the table.
    timePartitioning : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTimePartitioning, default is Undefined, optional
        time partitioning
    view : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecView, default is Undefined, optional
        view
    """


    clustering?: [str]

    datasetRef: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecDatasetRef

    description?: str

    encryptionConfiguration?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfiguration

    expirationTime?: int

    externalDataConfiguration?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfiguration

    friendlyName?: str

    materializedView?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecMaterializedView

    maxStaleness?: str

    rangePartitioning?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioning

    resourceID?: str

    $schema?: str

    timePartitioning?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTimePartitioning

    view?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecView


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecDatasetRef:
    """
    bigquery cnrm cloud google com v1beta1 big query table spec dataset ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `BigQueryDataset` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfiguration:
    """
    Immutable. Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that process is transparent to the user.

    Attributes
    ----------
    kmsKeyRef : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfigurationKmsKeyRef, default is Undefined, required
        kms key ref
    kmsKeyVersion : str, default is Undefined, optional
        The self link or full name of the kms key version used to encrypt this table.
    """


    kmsKeyRef: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfigurationKmsKeyRef

    kmsKeyVersion?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfigurationKmsKeyRef:
    """
    bigquery cnrm cloud google com v1beta1 big query table spec encryption configuration kms key ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfiguration:
    """
    Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.

    Attributes
    ----------
    autodetect : bool, default is Undefined, required
        Let BigQuery try to autodetect the schema and format of the table.
    avroOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationAvroOptions, default is Undefined, optional
        avro options
    compression : str, default is Undefined, optional
        The compression type of the data source. Valid values are "NONE" or "GZIP".
    connectionId : str, default is Undefined, optional
        The connection specifying the credentials to be used to read external storage, such as Azure Blob, Cloud Storage, or S3. The connectionId can have the form "{{project}}.{{location}}.{{connection_id}}" or "projects/{{project}}/locations/{{location}}/connections/{{connection_id}}".
    csvOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationCsvOptions, default is Undefined, optional
        csv options
    fileSetSpecType : str, default is Undefined, optional
        Specifies how source URIs are interpreted for constructing the file set to load.  By default source URIs are expanded against the underlying storage.  Other options include specifying manifest files. Only applicable to object storage systems.
    googleSheetsOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationGoogleSheetsOptions, default is Undefined, optional
        google sheets options
    hivePartitioningOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationHivePartitioningOptions, default is Undefined, optional
        hive partitioning options
    ignoreUnknownValues : bool, default is Undefined, optional
        Indicates if BigQuery should allow extra values that are not represented in the table schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false.
    jsonOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationJSONOptions, default is Undefined, optional
        json options
    maxBadRecords : int, default is Undefined, optional
        The maximum number of bad records that BigQuery can ignore when reading data.
    metadataCacheMode : str, default is Undefined, optional
        Metadata Cache Mode for the table. Set this to enable caching of metadata from external data source.
    objectMetadata : str, default is Undefined, optional
        Object Metadata is used to create Object Tables. Object Tables contain a listing of objects (with their metadata) found at the sourceUris. If ObjectMetadata is set, sourceFormat should be omitted.
    parquetOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationParquetOptions, default is Undefined, optional
        parquet options
    referenceFileSchemaUri : str, default is Undefined, optional
        When creating an external table, the user can provide a reference file with the table schema. This is enabled for the following formats: AVRO, PARQUET, ORC.
    $schema : str, default is Undefined, optional
        Immutable. A JSON schema for the external table. Schema is required for CSV and JSON formats and is disallowed for Google Cloud Bigtable, Cloud Datastore backups, and Avro formats when using external tables.
    sourceFormat : str, default is Undefined, optional
         Please see sourceFormat under ExternalDataConfiguration in Bigquery's public API documentation (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#externaldataconfiguration) for supported formats. To use "GOOGLE_SHEETS" the scopes must include "googleapis.com/auth/drive.readonly".
    sourceUris : [str], default is Undefined, required
        A list of the fully-qualified URIs that point to your data in Google Cloud.
    """


    autodetect: bool

    avroOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationAvroOptions

    compression?: str

    connectionId?: str

    csvOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationCsvOptions

    fileSetSpecType?: str

    googleSheetsOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationGoogleSheetsOptions

    hivePartitioningOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationHivePartitioningOptions

    ignoreUnknownValues?: bool

    jsonOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationJSONOptions

    maxBadRecords?: int

    metadataCacheMode?: str

    objectMetadata?: str

    parquetOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationParquetOptions

    referenceFileSchemaUri?: str

    $schema?: str

    sourceFormat?: str

    sourceUris: [str]


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationAvroOptions:
    """
    Additional options if source_format is set to "AVRO".

    Attributes
    ----------
    useAvroLogicalTypes : bool, default is Undefined, required
        If sourceFormat is set to "AVRO", indicates whether to interpret logical types as the corresponding BigQuery data type (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).
    """


    useAvroLogicalTypes: bool


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationCsvOptions:
    """
    Additional properties to set if source_format is set to "CSV".

    Attributes
    ----------
    allowJaggedRows : bool, default is Undefined, optional
        Indicates if BigQuery should accept rows that are missing trailing optional columns.
    allowQuotedNewlines : bool, default is Undefined, optional
        Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false.
    encoding : str, default is Undefined, optional
        The character encoding of the data. The supported values are UTF-8 or ISO-8859-1.
    fieldDelimiter : str, default is Undefined, optional
        The separator for fields in a CSV file.
    quote : str, default is Undefined, required
        quote
    skipLeadingRows : int, default is Undefined, optional
        The number of rows at the top of a CSV file that BigQuery will skip when reading the data.
    """


    allowJaggedRows?: bool

    allowQuotedNewlines?: bool

    encoding?: str

    fieldDelimiter?: str

    quote: str

    skipLeadingRows?: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationGoogleSheetsOptions:
    """
    Additional options if source_format is set to "GOOGLE_SHEETS".

    Attributes
    ----------
    range : str, default is Undefined, optional
        Range of a sheet to query from. Only used when non-empty. At least one of range or skip_leading_rows must be set. Typical format: "sheet_name!top_left_cell_id:bottom_right_cell_id" For example: "sheet1!A1:B20".
    skipLeadingRows : int, default is Undefined, optional
        The number of rows at the top of the sheet that BigQuery will skip when reading the data. At least one of range or skip_leading_rows must be set.
    """


    range?: str

    skipLeadingRows?: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationHivePartitioningOptions:
    """
    When set, configures hive partitioning support. Not all storage formats support hive partitioning -- requesting hive partitioning on an unsupported format will lead to an error, as will providing an invalid specification.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        When set, what mode of hive partitioning to use when reading data.
    requirePartitionFilter : bool, default is Undefined, optional
        If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.
    sourceUriPrefix : str, default is Undefined, optional
        When hive partition detection is requested, a common for all source uris must be required. The prefix must end immediately before the partition key encoding begins.
    """


    mode?: str

    requirePartitionFilter?: bool

    sourceUriPrefix?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationJSONOptions:
    """
    Additional properties to set if sourceFormat is set to JSON.".

    Attributes
    ----------
    encoding : str, default is Undefined, optional
        The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
    """


    encoding?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationParquetOptions:
    """
    Additional properties to set if sourceFormat is set to PARQUET.".

    Attributes
    ----------
    enableListInference : bool, default is Undefined, optional
        Indicates whether to use schema inference specifically for Parquet LIST logical type.
    enumAsString : bool, default is Undefined, optional
        Indicates whether to infer Parquet ENUM logical type as STRING instead of BYTES by default.
    """


    enableListInference?: bool

    enumAsString?: bool


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecMaterializedView:
    """
    If specified, configures this table as a materialized view.

    Attributes
    ----------
    enableRefresh : bool, default is Undefined, optional
        Specifies if BigQuery should automatically refresh materialized view when the base table is updated. The default is true.
    query : str, default is Undefined, required
        Immutable. A query whose result is persisted.
    refreshIntervalMs : int, default is Undefined, optional
        Specifies maximum frequency at which this materialized view will be refreshed. The default is 1800000.
    """


    enableRefresh?: bool

    query: str

    refreshIntervalMs?: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioning:
    """
    If specified, configures range-based partitioning for this table.

    Attributes
    ----------
    field : str, default is Undefined, required
        Immutable. The field used to determine how to create a range-based partition.
    range : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioningRange, default is Undefined, required
        range
    """


    field: str

    range: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioningRange


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioningRange:
    """
    Information required to partition based on ranges. Structure is documented below.

    Attributes
    ----------
    end : int, default is Undefined, required
        End of the range partitioning, exclusive.
    interval : int, default is Undefined, required
        The width of each range within the partition.
    start : int, default is Undefined, required
        Start of the range partitioning, inclusive.
    """


    end: int

    interval: int

    start: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTimePartitioning:
    """
    If specified, configures time-based partitioning for this table.

    Attributes
    ----------
    expirationMs : int, default is Undefined, optional
        Number of milliseconds for which to keep the storage for a partition.
    field : str, default is Undefined, optional
        Immutable. The field used to determine how to create a time-based partition. If time-based partitioning is enabled without this value, the table is partitioned based on the load time.
    requirePartitionFilter : bool, default is Undefined, optional
        If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.
    $type : str, default is Undefined, required
        The supported types are DAY, HOUR, MONTH, and YEAR, which will generate one partition per day, hour, month, and year, respectively.
    """


    expirationMs?: int

    field?: str

    requirePartitionFilter?: bool

    $type: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecView:
    """
    If specified, configures this table as a view.

    Attributes
    ----------
    query : str, default is Undefined, required
        A query that BigQuery executes when the view is referenced.
    useLegacySql : bool, default is Undefined, optional
        Specifies whether to use BigQuery's legacy SQL for this view. The default value is true. If set to false, the view will use BigQuery's standard SQL.
    """


    query: str

    useLegacySql?: bool


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatus:
    """
    bigquery cnrm cloud google com v1beta1 big query table status

    Attributes
    ----------
    conditions : [BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationTime : int, default is Undefined, optional
        The time when this table was created, in milliseconds since the epoch.
    etag : str, default is Undefined, optional
        A hash of the resource.
    lastModifiedTime : int, default is Undefined, optional
        The time when this table was last modified, in milliseconds since the epoch.
    location : str, default is Undefined, optional
        The geographic location where the table resides. This value is inherited from the dataset.
    numBytes : int, default is Undefined, optional
        The geographic location where the table resides. This value is inherited from the dataset.
    numLongTermBytes : int, default is Undefined, optional
        The number of bytes in the table that are considered "long-term storage".
    numRows : int, default is Undefined, optional
        The number of rows of data in this table, excluding any data in the streaming buffer.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    $type : str, default is Undefined, optional
        Describes the table type.
    """


    conditions?: [BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatusConditionsItems0]

    creationTime?: int

    etag?: str

    lastModifiedTime?: int

    location?: str

    numBytes?: int

    numLongTermBytes?: int

    numRows?: int

    observedGeneration?: int

    selfLink?: str

    $type?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatusConditionsItems0:
    """
    bigquery cnrm cloud google com v1beta1 big query table status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


