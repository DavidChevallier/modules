"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex

import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachineInstance:
    """
    VirtualMachineInstance is *the* VirtualMachineInstance Definition. It represents a virtual machine in the runtime environment of kubernetes.

    Attributes
    ----------
    apiVersion : str, default is "kubevirt.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachineInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KubevirtIoV1VirtualMachineInstanceSpec, default is Undefined, required
        spec
    status : KubevirtIoV1VirtualMachineInstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "kubevirt.io/v1" = "kubevirt.io/v1"

    kind: "VirtualMachineInstance" = "VirtualMachineInstance"

    metadata?: v1.ObjectMeta

    spec: KubevirtIoV1VirtualMachineInstanceSpec

    status?: KubevirtIoV1VirtualMachineInstanceStatus


schema KubevirtIoV1VirtualMachineInstanceSpec:
    """
    VirtualMachineInstance Spec contains the VirtualMachineInstance specification.

    Attributes
    ----------
    accessCredentials : [KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0], default is Undefined, optional
        Specifies a set of public keys to inject into the vm guest
    affinity : KubevirtIoV1VirtualMachineInstanceSpecAffinity, default is Undefined, optional
        affinity
    dnsConfig : KubevirtIoV1VirtualMachineInstanceSpecDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
    domain : KubevirtIoV1VirtualMachineInstanceSpecDomain, default is Undefined, required
        domain
    evictionStrategy : str, default is Undefined, optional
        EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain.
    hostname : str, default is Undefined, optional
        Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.
    livenessProbe : KubevirtIoV1VirtualMachineInstanceSpecLivenessProbe, default is Undefined, optional
        liveness probe
    networks : [KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0], default is Undefined, optional
        List of networks that can be attached to a vm's virtual interface.
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    priorityClassName : str, default is Undefined, optional
        If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
    readinessProbe : KubevirtIoV1VirtualMachineInstanceSpecReadinessProbe, default is Undefined, optional
        readiness probe
    schedulerName : str, default is Undefined, optional
        If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
    startStrategy : str, default is Undefined, optional
        StartStrategy can be set to "Paused" if Virtual Machine should be started in paused state.
    subdomain : str, default is Undefined, optional
        If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi, no matter if the vmi itself can pick up a hostname.
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
    tolerations : [KubevirtIoV1VirtualMachineInstanceSpecTolerationsItems0], default is Undefined, optional
        If toleration is specified, obey all the toleration rules.
    topologySpreadConstraints : [KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints describes how a group of VMIs will be spread across a given topology domains. K8s scheduler will schedule VMI pods in a way which abides by the constraints.
    volumes : [KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0], default is Undefined, optional
        List of volumes that can be mounted by disks belonging to the vmi.
    """


    accessCredentials?: [KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0]

    affinity?: KubevirtIoV1VirtualMachineInstanceSpecAffinity

    dnsConfig?: KubevirtIoV1VirtualMachineInstanceSpecDNSConfig

    dnsPolicy?: str

    domain: KubevirtIoV1VirtualMachineInstanceSpecDomain

    evictionStrategy?: str

    hostname?: str

    livenessProbe?: KubevirtIoV1VirtualMachineInstanceSpecLivenessProbe

    networks?: [KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0]

    nodeSelector?: {str:str}

    priorityClassName?: str

    readinessProbe?: KubevirtIoV1VirtualMachineInstanceSpecReadinessProbe

    schedulerName?: str

    startStrategy?: str

    subdomain?: str

    terminationGracePeriodSeconds?: int

    tolerations?: [KubevirtIoV1VirtualMachineInstanceSpecTolerationsItems0]

    topologySpreadConstraints?: [KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0]

    volumes?: [KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0]


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0:
    """
    AccessCredential represents a credential source that can be used to authorize remote access to the vm guest Only one of its members may be specified.

    Attributes
    ----------
    sshPublicKey : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKey, default is Undefined, optional
        ssh public key
    userPassword : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPassword, default is Undefined, optional
        user password
    """


    sshPublicKey?: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKey

    userPassword?: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPassword


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKey:
    """
    SSHPublicKey represents the source and method of applying a ssh public key into a guest virtual machine.

    Attributes
    ----------
    propagationMethod : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeyPropagationMethod, default is Undefined, required
        propagation method
    source : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeySource, default is Undefined, required
        source
    """


    propagationMethod: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeyPropagationMethod

    source: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeySource


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeyPropagationMethod:
    """
    PropagationMethod represents how the public key is injected into the vm guest.

    Attributes
    ----------
    configDrive : any, default is Undefined, optional
        ConfigDrivePropagation means that the ssh public keys are injected into the VM using metadata using the configDrive cloud-init provider
    qemuGuestAgent : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeyPropagationMethodQemuGuestAgent, default is Undefined, optional
        qemu guest agent
    """


    configDrive?: any

    qemuGuestAgent?: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeyPropagationMethodQemuGuestAgent


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeyPropagationMethodQemuGuestAgent:
    """
    QemuGuestAgentAccessCredentailPropagation means ssh public keys are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.

    Attributes
    ----------
    users : [str], default is Undefined, required
        Users represents a list of guest users that should have the ssh public keys added to their authorized_keys file.
    """


    users: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeySource:
    """
    Source represents where the public keys are pulled from

    Attributes
    ----------
    secret : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeySourceSecret, default is Undefined, optional
        secret
    """


    secret?: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeySourceSecret


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0SSHPublicKeySourceSecret:
    """
    Secret means that the access credential is pulled from a kubernetes secret

    Attributes
    ----------
    secretName : str, default is Undefined, required
        SecretName represents the name of the secret in the VMI's namespace
    """


    secretName: str


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPassword:
    """
    UserPassword represents the source and method for applying a guest user's password

    Attributes
    ----------
    propagationMethod : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordPropagationMethod, default is Undefined, required
        propagation method
    source : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordSource, default is Undefined, required
        source
    """


    propagationMethod: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordPropagationMethod

    source: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordSource


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordPropagationMethod:
    """
    propagationMethod represents how the user passwords are injected into the vm guest.

    Attributes
    ----------
    qemuGuestAgent : any, default is Undefined, optional
        QemuGuestAgentAccessCredentailPropagation means passwords are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.
    """


    qemuGuestAgent?: any


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordSource:
    """
    Source represents where the user passwords are pulled from

    Attributes
    ----------
    secret : KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordSourceSecret, default is Undefined, optional
        secret
    """


    secret?: KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordSourceSecret


schema KubevirtIoV1VirtualMachineInstanceSpecAccessCredentialsItems0UserPasswordSourceSecret:
    """
    Secret means that the access credential is pulled from a kubernetes secret

    Attributes
    ----------
    secretName : str, default is Undefined, required
        SecretName represents the name of the secret in the VMI's namespace
    """


    secretName: str


schema KubevirtIoV1VirtualMachineInstanceSpecAffinity:
    """
    If affinity is specifies, obey all the affinity rules

    Attributes
    ----------
    nodeAffinity : KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinity

    podAffinity?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinity

    podAntiAffinity?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinity


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinity:
    """
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinity:
    """
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinity:
    """
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecDNSConfig:
    """
    Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [KubevirtIoV1VirtualMachineInstanceSpecDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [KubevirtIoV1VirtualMachineInstanceSpecDNSConfigOptionsItems0]

    searches?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecDNSConfigOptionsItems0:
    """
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomain:
    """
    Specification of the desired behavior of the VirtualMachineInstance on the host.

    Attributes
    ----------
    chassis : KubevirtIoV1VirtualMachineInstanceSpecDomainChassis, default is Undefined, optional
        chassis
    clock : KubevirtIoV1VirtualMachineInstanceSpecDomainClock, default is Undefined, optional
        clock
    cpu : KubevirtIoV1VirtualMachineInstanceSpecDomainCPU, default is Undefined, optional
        cpu
    devices : KubevirtIoV1VirtualMachineInstanceSpecDomainDevices, default is Undefined, required
        devices
    features : KubevirtIoV1VirtualMachineInstanceSpecDomainFeatures, default is Undefined, optional
        features
    firmware : KubevirtIoV1VirtualMachineInstanceSpecDomainFirmware, default is Undefined, optional
        firmware
    ioThreadsPolicy : str, default is Undefined, optional
        Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto
    launchSecurity : KubevirtIoV1VirtualMachineInstanceSpecDomainLaunchSecurity, default is Undefined, optional
        launch security
    machine : KubevirtIoV1VirtualMachineInstanceSpecDomainMachine, default is Undefined, optional
        machine
    memory : KubevirtIoV1VirtualMachineInstanceSpecDomainMemory, default is Undefined, optional
        memory
    resources : KubevirtIoV1VirtualMachineInstanceSpecDomainResources, default is Undefined, optional
        resources
    """


    chassis?: KubevirtIoV1VirtualMachineInstanceSpecDomainChassis

    clock?: KubevirtIoV1VirtualMachineInstanceSpecDomainClock

    cpu?: KubevirtIoV1VirtualMachineInstanceSpecDomainCPU

    devices: KubevirtIoV1VirtualMachineInstanceSpecDomainDevices

    features?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeatures

    firmware?: KubevirtIoV1VirtualMachineInstanceSpecDomainFirmware

    ioThreadsPolicy?: str

    launchSecurity?: KubevirtIoV1VirtualMachineInstanceSpecDomainLaunchSecurity

    machine?: KubevirtIoV1VirtualMachineInstanceSpecDomainMachine

    memory?: KubevirtIoV1VirtualMachineInstanceSpecDomainMemory

    resources?: KubevirtIoV1VirtualMachineInstanceSpecDomainResources


schema KubevirtIoV1VirtualMachineInstanceSpecDomainCPU:
    """
    CPU allow specified the detailed CPU topology inside the vmi.

    Attributes
    ----------
    cores : int, default is Undefined, optional
        Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1.
    dedicatedCpuPlacement : bool, default is Undefined, optional
        DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin the vCPUs to it.
    features : [KubevirtIoV1VirtualMachineInstanceSpecDomainCPUFeaturesItems0], default is Undefined, optional
        Features specifies the CPU features list inside the VMI.
    isolateEmulatorThread : bool, default is Undefined, optional
        IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it.
    model : str, default is Undefined, optional
        Model specifies the CPU model inside the VMI. List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It is possible to specify special cases like "host-passthrough" to get the same CPU as the node and "host-model" to get CPU closest to the node one. Defaults to host-model.
    numa : KubevirtIoV1VirtualMachineInstanceSpecDomainCPUNuma, default is Undefined, optional
        numa
    realtime : KubevirtIoV1VirtualMachineInstanceSpecDomainCPURealtime, default is Undefined, optional
        realtime
    sockets : int, default is Undefined, optional
        Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1.
    threads : int, default is Undefined, optional
        Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1.
    """


    cores?: int

    dedicatedCpuPlacement?: bool

    features?: [KubevirtIoV1VirtualMachineInstanceSpecDomainCPUFeaturesItems0]

    isolateEmulatorThread?: bool

    model?: str

    numa?: KubevirtIoV1VirtualMachineInstanceSpecDomainCPUNuma

    realtime?: KubevirtIoV1VirtualMachineInstanceSpecDomainCPURealtime

    sockets?: int

    threads?: int


schema KubevirtIoV1VirtualMachineInstanceSpecDomainCPUFeaturesItems0:
    """
    CPUFeature allows specifying a CPU feature.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the CPU feature
    policy : str, default is Undefined, optional
        Policy is the CPU feature attribute which can have the following attributes: force    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU. require  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it. optional - The feature will be supported by virtual CPU if and only if it is supported by host CPU. disable  - The feature will not be supported by virtual CPU. forbid   - Guest creation will fail if the feature is supported by host CPU. Defaults to require
    """


    name: str

    policy?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainCPUNuma:
    """
    NUMA allows specifying settings for the guest NUMA topology

    Attributes
    ----------
    guestMappingPassthrough : any, default is Undefined, optional
        GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod. The created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.
    """


    guestMappingPassthrough?: any


schema KubevirtIoV1VirtualMachineInstanceSpecDomainCPURealtime:
    """
    Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads

    Attributes
    ----------
    mask : str, default is Undefined, optional
        Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions. Example: "0-3,^1","0,2,3","2-3"
    """


    mask?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainChassis:
    """
    Chassis specifies the chassis info passed to the domain.

    Attributes
    ----------
    asset : str, default is Undefined, optional
        asset
    manufacturer : str, default is Undefined, optional
        manufacturer
    serial : str, default is Undefined, optional
        serial
    sku : str, default is Undefined, optional
        sku
    version : str, default is Undefined, optional
        version
    """


    asset?: str

    manufacturer?: str

    serial?: str

    sku?: str

    version?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClock:
    """
    Clock sets the clock and timers of the vmi.

    Attributes
    ----------
    timer : KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimer, default is Undefined, optional
        timer
    timezone : str, default is Undefined, optional
        Timezone sets the guest clock to the specified timezone. Zone name follows the TZ environment variable format (e.g. 'America/New_York').
    utc : KubevirtIoV1VirtualMachineInstanceSpecDomainClockUtc, default is Undefined, optional
        utc
    """


    timer?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimer

    timezone?: str

    utc?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockUtc


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimer:
    """
    Timer specifies whih timers are attached to the vmi.

    Attributes
    ----------
    hpet : KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerHpet, default is Undefined, optional
        hpet
    hyperv : KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerHyperv, default is Undefined, optional
        hyperv
    kvm : KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerKvm, default is Undefined, optional
        kvm
    pit : KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerPit, default is Undefined, optional
        pit
    rtc : KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerRtc, default is Undefined, optional
        rtc
    """


    hpet?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerHpet

    hyperv?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerHyperv

    kvm?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerKvm

    pit?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerPit

    rtc?: KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerRtc


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerHpet:
    """
    HPET (High Precision Event Timer) - multiple timers with periodic interrupts.

    Attributes
    ----------
    present : bool, default is Undefined, optional
        Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
    tickPolicy : str, default is Undefined, optional
        TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of "delay", "catchup", "merge", "discard".
    """


    present?: bool

    tickPolicy?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerHyperv:
    """
    Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.

    Attributes
    ----------
    present : bool, default is Undefined, optional
        Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
    """


    present?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerKvm:
    """
    KVM 	(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests.

    Attributes
    ----------
    present : bool, default is Undefined, optional
        Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
    """


    present?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerPit:
    """
    PIT (Programmable Interval Timer) - a timer with periodic interrupts.

    Attributes
    ----------
    present : bool, default is Undefined, optional
        Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
    tickPolicy : str, default is Undefined, optional
        TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of "delay", "catchup", "discard".
    """


    present?: bool

    tickPolicy?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockTimerRtc:
    """
    RTC (Real Time Clock) - a continuously running timer with periodic interrupts.

    Attributes
    ----------
    present : bool, default is Undefined, optional
        Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.
    tickPolicy : str, default is Undefined, optional
        TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of "delay", "catchup".
    track : str, default is Undefined, optional
        Track the guest or the wall clock.
    """


    present?: bool

    tickPolicy?: str

    track?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainClockUtc:
    """
    UTC sets the guest clock to UTC on each boot. If an offset is specified, guest changes to the clock will be kept during reboots and are not reset.

    Attributes
    ----------
    offsetSeconds : int, default is Undefined, optional
        OffsetSeconds specifies an offset in seconds, relative to UTC. If set, guest changes to the clock will be kept during reboots and not reset.
    """


    offsetSeconds?: int


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevices:
    """
    Devices allows adding disks, network interfaces, and others

    Attributes
    ----------
    autoattachGraphicsDevice : bool, default is Undefined, optional
        Whether to attach the default graphics device or not. VNC will not be available if set to false. Defaults to true.
    autoattachInputDevice : bool, default is Undefined, optional
        Whether to attach an Input Device. Defaults to false.
    autoattachMemBalloon : bool, default is Undefined, optional
        Whether to attach the Memory balloon device with default period. Period can be adjusted in virt-config. Defaults to true.
    autoattachPodInterface : bool, default is Undefined, optional
        Whether to attach a pod network interface. Defaults to true.
    autoattachSerialConsole : bool, default is Undefined, optional
        Whether to attach the default serial console or not. Serial console access will not be available if set to false. Defaults to true.
    autoattachVSOCK : bool, default is Undefined, optional
        Whether to attach the VSOCK CID to the VM or not. VSOCK access will be available if set to true. Defaults to false.
    blockMultiQueue : bool, default is Undefined, optional
        Whether or not to enable virtio multi-queue for block devices. Defaults to false.
    clientPassthrough : any, default is Undefined, optional
        To configure and access client devices such as redirecting USB
    disableHotplug : bool, default is Undefined, optional
        DisableHotplug disabled the ability to hotplug disks.
    disks : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0], default is Undefined, optional
        Disks describes disks, cdroms and luns which are connected to the vmi.
    filesystems : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesFilesystemsItems0], default is Undefined, optional
        Filesystems describes filesystem which is connected to the vmi.
    gpus : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0], default is Undefined, optional
        Whether to attach a GPU device to the vmi.
    hostDevices : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesHostDevicesItems0], default is Undefined, optional
        Whether to attach a host device to the vmi.
    inputs : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInputsItems0], default is Undefined, optional
        Inputs describe input devices
    interfaces : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0], default is Undefined, optional
        Interfaces describe network interfaces which are added to the vmi.
    networkInterfaceMultiqueue : bool, default is Undefined, optional
        If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.
    rng : any, default is Undefined, optional
        Whether to have random number generator from host
    sound : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesSound, default is Undefined, optional
        sound
    tpm : any, default is Undefined, optional
        Whether to emulate a TPM device.
    useVirtioTransitional : bool, default is Undefined, optional
        Fall back to legacy virtio 0.9 support if virtio bus is selected on devices. This is helpful for old machines like CentOS6 or RHEL6 which do not understand virtio_non_transitional (virtio 1.0).
    watchdog : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesWatchdog, default is Undefined, optional
        watchdog
    """


    autoattachGraphicsDevice?: bool

    autoattachInputDevice?: bool

    autoattachMemBalloon?: bool

    autoattachPodInterface?: bool

    autoattachSerialConsole?: bool

    autoattachVSOCK?: bool

    blockMultiQueue?: bool

    clientPassthrough?: any

    disableHotplug?: bool

    disks?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0]

    filesystems?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesFilesystemsItems0]

    gpus?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0]

    hostDevices?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesHostDevicesItems0]

    inputs?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInputsItems0]

    interfaces?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0]

    networkInterfaceMultiqueue?: bool

    rng?: any

    sound?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesSound

    tpm?: any

    useVirtioTransitional?: bool

    watchdog?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesWatchdog


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0:
    """
    kubevirt io v1 virtual machine instance spec domain devices disks items0

    Attributes
    ----------
    blockSize : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSize, default is Undefined, optional
        block size
    bootOrder : int, default is Undefined, optional
        BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence. Each disk or interface that has a boot order must have a unique value. Disks without a boot order are not tried if a disk with a boot order exists.
    cache : str, default is Undefined, optional
        Cache specifies which kvm disk cache mode should be used. Supported values are: CacheNone, CacheWriteThrough.
    cdrom : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Cdrom, default is Undefined, optional
        cdrom
    dedicatedIOThread : bool, default is Undefined, optional
        dedicatedIOThread indicates this disk should have an exclusive IO Thread. Enabling this implies useIOThreads = true. Defaults to false.
    disk : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Disk, default is Undefined, optional
        disk
    io : str, default is Undefined, optional
        IO specifies which QEMU disk IO mode should be used. Supported values are: native, default, threads.
    lun : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Lun, default is Undefined, optional
        lun
    name : str, default is Undefined, required
        Name is the device name
    serial : str, default is Undefined, optional
        Serial provides the ability to specify a serial number for the disk device.
    shareable : bool, default is Undefined, optional
        If specified the disk is made sharable and multiple write from different VMs are permitted
    tag : str, default is Undefined, optional
        If specified, disk address and its tag will be provided to the guest via config drive metadata
    """


    blockSize?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSize

    bootOrder?: int

    cache?: str

    cdrom?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Cdrom

    dedicatedIOThread?: bool

    disk?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Disk

    io?: str

    lun?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Lun

    name: str

    serial?: str

    shareable?: bool

    tag?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSize:
    """
    If specified, the virtual disk will be presented with the given block sizes.

    Attributes
    ----------
    custom : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSizeCustom, default is Undefined, optional
        custom
    matchVolume : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSizeMatchVolume, default is Undefined, optional
        match volume
    """


    custom?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSizeCustom

    matchVolume?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSizeMatchVolume


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSizeCustom:
    """
    CustomBlockSize represents the desired logical and physical block size for a VM disk.

    Attributes
    ----------
    logical : int, default is Undefined, required
        logical
    physical : int, default is Undefined, required
        physical
    """


    logical: int

    physical: int


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0BlockSizeMatchVolume:
    """
    Represents if a feature is enabled or disabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Cdrom:
    """
    Attach a volume as a cdrom to the vmi.

    Attributes
    ----------
    bus : str, default is Undefined, optional
        Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.
    readonly : bool, default is Undefined, optional
        ReadOnly. Defaults to true.
    tray : str, default is Undefined, optional
        Tray indicates if the tray of the device is open or closed. Allowed values are "open" and "closed". Defaults to closed.
    """


    bus?: str

    readonly?: bool

    tray?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Disk:
    """
    Attach a volume as a disk to the vmi.

    Attributes
    ----------
    bus : str, default is Undefined, optional
        Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi, usb.
    pciAddress : str, default is Undefined, optional
        If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10
    readonly : bool, default is Undefined, optional
        ReadOnly. Defaults to false.
    """


    bus?: str

    pciAddress?: str

    readonly?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesDisksItems0Lun:
    """
    Attach a volume as a LUN to the vmi.

    Attributes
    ----------
    bus : str, default is Undefined, optional
        Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.
    readonly : bool, default is Undefined, optional
        ReadOnly. Defaults to false.
    """


    bus?: str

    readonly?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesFilesystemsItems0:
    """
    kubevirt io v1 virtual machine instance spec domain devices filesystems items0

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the device name
    virtiofs : any, default is Undefined, required
        Virtiofs is supported
    """


    name: str

    virtiofs: any


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0:
    """
    kubevirt io v1 virtual machine instance spec domain devices gpus items0

    Attributes
    ----------
    deviceName : str, default is Undefined, required
        device name
    name : str, default is Undefined, required
        Name of the GPU device as exposed by a device plugin
    tag : str, default is Undefined, optional
        If specified, the virtual network interface address and its tag will be provided to the guest via config drive
    virtualGPUOptions : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptions, default is Undefined, optional
        virtual g p u options
    """


    deviceName: str

    name: str

    tag?: str

    virtualGPUOptions?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptions


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptions:
    """
    kubevirt io v1 virtual machine instance spec domain devices gpus items0 virtual g p u options

    Attributes
    ----------
    display : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptionsDisplay, default is Undefined, optional
        display
    """


    display?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptionsDisplay


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptionsDisplay:
    """
    kubevirt io v1 virtual machine instance spec domain devices gpus items0 virtual g p u options display

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest. Defaults to true.
    ramFB : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptionsDisplayRAMFB, default is Undefined, optional
        ram f b
    """


    enabled?: bool

    ramFB?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptionsDisplayRAMFB


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesGpusItems0VirtualGPUOptionsDisplayRAMFB:
    """
    Enables a boot framebuffer, until the guest OS loads a real GPU driver Defaults to true.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesHostDevicesItems0:
    """
    kubevirt io v1 virtual machine instance spec domain devices host devices items0

    Attributes
    ----------
    deviceName : str, default is Undefined, required
        DeviceName is the resource name of the host device exposed by a device plugin
    name : str, default is Undefined, required
        name
    tag : str, default is Undefined, optional
        If specified, the virtual network interface address and its tag will be provided to the guest via config drive
    """


    deviceName: str

    name: str

    tag?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInputsItems0:
    """
    kubevirt io v1 virtual machine instance spec domain devices inputs items0

    Attributes
    ----------
    bus : str, default is Undefined, optional
        Bus indicates the bus of input device to emulate. Supported values: virtio, usb.
    name : str, default is Undefined, required
        Name is the device name
    $type : str, default is Undefined, required
        Type indicated the type of input device. Supported values: tablet.
    """


    bus?: str

    name: str

    $type: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0:
    """
    kubevirt io v1 virtual machine instance spec domain devices interfaces items0

    Attributes
    ----------
    acpiIndex : int, default is Undefined, optional
        If specified, the ACPI index is used to provide network interface device naming, that is stable across changes in PCI addresses assigned to the device. This value is required to be unique across all devices and be between 1 and (16*1024-1).
    bootOrder : int, default is Undefined, optional
        BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence. Each interface or disk that has a boot order must have a unique value. Interfaces without a boot order are not tried.
    bridge : any, default is Undefined, optional
        InterfaceBridge connects to a given network via a linux bridge.
    dhcpOptions : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0DhcpOptions, default is Undefined, optional
        dhcp options
    macAddress : str, default is Undefined, optional
        Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.
    macvtap : any, default is Undefined, optional
        InterfaceMacvtap connects to a given network by extending the Kubernetes node's L2 networks via a macvtap interface.
    masquerade : any, default is Undefined, optional
        InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.
    model : str, default is Undefined, optional
        Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio. TODO:(ihar) switch to enums once opengen-api supports them. See: https://github.com/kubernetes/kube-openapi/issues/51
    name : str, default is Undefined, required
        Logical name of the interface as well as a reference to the associated networks. Must match the Name of a Network.
    passt : any, default is Undefined, optional
        InterfacePasst connects to a given network.
    pciAddress : str, default is Undefined, optional
        If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10
    ports : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0PortsItems0], default is Undefined, optional
        List of ports to be forwarded to the virtual machine.
    slirp : any, default is Undefined, optional
        InterfaceSlirp connects to a given network using QEMU user networking mode.
    sriov : any, default is Undefined, optional
        InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.
    tag : str, default is Undefined, optional
        If specified, the virtual network interface address and its tag will be provided to the guest via config drive
    """


    acpiIndex?: int

    bootOrder?: int

    bridge?: any

    dhcpOptions?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0DhcpOptions

    macAddress?: str

    macvtap?: any

    masquerade?: any

    model?: str

    name: str

    passt?: any

    pciAddress?: str

    ports?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0PortsItems0]

    slirp?: any

    sriov?: any

    tag?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0DhcpOptions:
    """
    If specified the network interface will pass additional DHCP options to the VMI

    Attributes
    ----------
    bootFileName : str, default is Undefined, optional
        If specified will pass option 67 to interface's DHCP server
    ntpServers : [str], default is Undefined, optional
        If specified will pass the configured NTP server to the VM via DHCP option 042.
    privateOptions : [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0DhcpOptionsPrivateOptionsItems0], default is Undefined, optional
        If specified will pass extra DHCP options for private use, range: 224-254
    tftpServerName : str, default is Undefined, optional
        If specified will pass option 66 to interface's DHCP server
    """


    bootFileName?: str

    ntpServers?: [str]

    privateOptions?: [KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0DhcpOptionsPrivateOptionsItems0]

    tftpServerName?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0DhcpOptionsPrivateOptionsItems0:
    """
    DHCPExtraOptions defines Extra DHCP options for a VM.

    Attributes
    ----------
    option : int, default is Undefined, required
        Option is an Integer value from 224-254 Required.
    value : str, default is Undefined, required
        Value is a String value for the Option provided Required.
    """


    option: int

    value: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesInterfacesItems0PortsItems0:
    """
    Port represents a port to expose from the virtual machine. Default protocol TCP. The port field is mandatory

    Attributes
    ----------
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    port : int, default is Undefined, required
        Number of port to expose for the virtual machine. This must be a valid port number, 0 < x < 65536.
    $protocol : str, default is Undefined, optional
        Protocol for port. Must be UDP or TCP. Defaults to "TCP".
    """


    name?: str

    port: int

    $protocol?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesSound:
    """
    Whether to emulate a sound device.

    Attributes
    ----------
    model : str, default is Undefined, optional
        We only support ich9 or ac97. If SoundDevice is not set: No sound card is emulated. If SoundDevice is set but Model is not: ich9
    name : str, default is Undefined, required
        User's defined name for this sound device
    """


    model?: str

    name: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesWatchdog:
    """
    Watchdog describes a watchdog device which can be added to the vmi.

    Attributes
    ----------
    i6300esb : KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesWatchdogI6300esb, default is Undefined, optional
        i6300esb
    name : str, default is Undefined, required
        Name of the watchdog.
    """


    i6300esb?: KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesWatchdogI6300esb

    name: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainDevicesWatchdogI6300esb:
    """
    i6300esb watchdog device.

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action to take. Valid values are poweroff, reset, shutdown. Defaults to reset.
    """


    action?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeatures:
    """
    Features like acpi, apic, hyperv, smm.

    Attributes
    ----------
    acpi : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesAcpi, default is Undefined, optional
        acpi
    apic : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesApic, default is Undefined, optional
        apic
    hyperv : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHyperv, default is Undefined, optional
        hyperv
    kvm : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesKvm, default is Undefined, optional
        kvm
    pvspinlock : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesPvspinlock, default is Undefined, optional
        pvspinlock
    smm : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesSmm, default is Undefined, optional
        smm
    """


    acpi?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesAcpi

    apic?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesApic

    hyperv?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHyperv

    kvm?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesKvm

    pvspinlock?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesPvspinlock

    smm?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesSmm


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesAcpi:
    """
    ACPI enables/disables ACPI inside the guest. Defaults to enabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesApic:
    """
    Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    endOfInterrupt : bool, default is Undefined, optional
        EndOfInterrupt enables the end of interrupt notification in the guest. Defaults to false.
    """


    enabled?: bool

    endOfInterrupt?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHyperv:
    """
    Defaults to the machine type setting.

    Attributes
    ----------
    evmcs : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervEvmcs, default is Undefined, optional
        evmcs
    frequencies : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervFrequencies, default is Undefined, optional
        frequencies
    ipi : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervIpi, default is Undefined, optional
        ipi
    reenlightenment : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervReenlightenment, default is Undefined, optional
        reenlightenment
    $relaxed : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervRelaxed, default is Undefined, optional
        relaxed
    reset : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervReset, default is Undefined, optional
        reset
    runtime : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervRuntime, default is Undefined, optional
        runtime
    spinlocks : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSpinlocks, default is Undefined, optional
        spinlocks
    synic : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynic, default is Undefined, optional
        synic
    synictimer : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynictimer, default is Undefined, optional
        synictimer
    tlbflush : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervTlbflush, default is Undefined, optional
        tlbflush
    vapic : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVapic, default is Undefined, optional
        vapic
    vendorid : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVendorid, default is Undefined, optional
        vendorid
    vpindex : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVpindex, default is Undefined, optional
        vpindex
    """


    evmcs?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervEvmcs

    frequencies?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervFrequencies

    ipi?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervIpi

    reenlightenment?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervReenlightenment

    $relaxed?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervRelaxed

    reset?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervReset

    runtime?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervRuntime

    spinlocks?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSpinlocks

    synic?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynic

    synictimer?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynictimer

    tlbflush?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervTlbflush

    vapic?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVapic

    vendorid?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVendorid

    vpindex?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVpindex


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervEvmcs:
    """
    EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervFrequencies:
    """
    Frequencies improves the TSC clock source handling for Hyper-V on KVM. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervIpi:
    """
    IPI improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervReenlightenment:
    """
    Reenlightenment enables the notifications on TSC frequency changes. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervRelaxed:
    """
    Relaxed instructs the guest OS to disable watchdog timeouts. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervReset:
    """
    Reset enables Hyperv reboot/reset for the vmi. Requires synic. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervRuntime:
    """
    Runtime improves the time accounting to improve scheduling in the guest. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSpinlocks:
    """
    Spinlocks allows to configure the spinlock retry attempts.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    spinlocks : int, default is Undefined, optional
        Retries indicates the number of retries. Must be a value greater or equal 4096. Defaults to 4096.
    """


    enabled?: bool

    spinlocks?: int


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynic:
    """
    SyNIC enables the Synthetic Interrupt Controller. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynictimer:
    """
    SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load. Defaults to the machine type setting.

    Attributes
    ----------
    direct : KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynictimerDirect, default is Undefined, optional
        direct
    enabled : bool, default is Undefined, optional
        enabled
    """


    direct?: KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynictimerDirect

    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervSynictimerDirect:
    """
    Represents if a feature is enabled or disabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervTlbflush:
    """
    TLBFlush improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVapic:
    """
    VAPIC improves the paravirtualized handling of interrupts. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVendorid:
    """
    VendorID allows setting the hypervisor vendor id. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    vendorid : str, default is Undefined, optional
        VendorID sets the hypervisor vendor id, visible to the vmi. String up to twelve characters.
    """


    enabled?: bool

    vendorid?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesHypervVpindex:
    """
    VPIndex enables the Virtual Processor Index to help windows identifying virtual processors. Defaults to the machine type setting.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesKvm:
    """
    Configure how KVM presence is exposed to the guest.

    Attributes
    ----------
    hidden : bool, default is Undefined, optional
        Hide the KVM hypervisor from standard MSR based discovery. Defaults to false
    """


    hidden?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesPvspinlock:
    """
    Notify the guest that the host supports paravirtual spinlocks. For older kernels this feature should be explicitly disabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFeaturesSmm:
    """
    SMM enables/disables System Management Mode. TSEG not yet implemented.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.
    """


    enabled?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFirmware:
    """
    Firmware.

    Attributes
    ----------
    bootloader : KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloader, default is Undefined, optional
        bootloader
    kernelBoot : KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareKernelBoot, default is Undefined, optional
        kernel boot
    serial : str, default is Undefined, optional
        The system-serial-number in SMBIOS
    uuid : str, default is Undefined, optional
        UUID reported by the vmi bios. Defaults to a random generated uid.
    """


    bootloader?: KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloader

    kernelBoot?: KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareKernelBoot

    serial?: str

    uuid?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloader:
    """
    Settings to control the bootloader that is used.

    Attributes
    ----------
    bios : KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloaderBios, default is Undefined, optional
        bios
    efi : KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloaderEfi, default is Undefined, optional
        efi
    """


    bios?: KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloaderBios

    efi?: KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloaderEfi


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloaderBios:
    """
    If set (default), BIOS will be used.

    Attributes
    ----------
    useSerial : bool, default is Undefined, optional
        If set, the BIOS output will be transmitted over serial
    """


    useSerial?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareBootloaderEfi:
    """
    If set, EFI will be used instead of BIOS.

    Attributes
    ----------
    secureBoot : bool, default is Undefined, optional
        If set, SecureBoot will be enabled and the OVMF roms will be swapped for SecureBoot-enabled ones. Requires SMM to be enabled. Defaults to true
    """


    secureBoot?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareKernelBoot:
    """
    Settings to set the kernel for booting.

    Attributes
    ----------
    container : KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareKernelBootContainer, default is Undefined, optional
        container
    kernelArgs : str, default is Undefined, optional
        Arguments to be passed to the kernel at boot time
    """


    container?: KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareKernelBootContainer

    kernelArgs?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainFirmwareKernelBootContainer:
    """
    Container defines the container that containes kernel artifacts

    Attributes
    ----------
    image : str, default is Undefined, required
        Image that contains initrd / kernel files.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    imagePullSecret : str, default is Undefined, optional
        ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
    initrdPath : str, default is Undefined, optional
        the fully-qualified path to the ramdisk image in the host OS
    kernelPath : str, default is Undefined, optional
        The fully-qualified path to the kernel image in the host OS
    """


    image: str

    imagePullPolicy?: str

    imagePullSecret?: str

    initrdPath?: str

    kernelPath?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainLaunchSecurity:
    """
    Launch Security setting of the vmi.

    Attributes
    ----------
    sev : any, default is Undefined, optional
        AMD Secure Encrypted Virtualization (SEV).
    """


    sev?: any


schema KubevirtIoV1VirtualMachineInstanceSpecDomainMachine:
    """
    Machine type.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        QEMU machine type is the actual chipset of the VirtualMachineInstance.
    """


    $type?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainMemory:
    """
    Memory allow specifying the VMI memory features.

    Attributes
    ----------
    guest : int | str, default is Undefined, optional
        Guest allows to specifying the amount of memory which is visible inside the Guest OS. The Guest must lie between Requests and Limits from the resources section. Defaults to the requested memory in the resources section if not specified.
    hugepages : KubevirtIoV1VirtualMachineInstanceSpecDomainMemoryHugepages, default is Undefined, optional
        hugepages
    """


    guest?: int | str

    hugepages?: KubevirtIoV1VirtualMachineInstanceSpecDomainMemoryHugepages


    check:
        regex.match(str(guest), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema KubevirtIoV1VirtualMachineInstanceSpecDomainMemoryHugepages:
    """
    Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.

    Attributes
    ----------
    pageSize : str, default is Undefined, optional
        PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
    """


    pageSize?: str


schema KubevirtIoV1VirtualMachineInstanceSpecDomainResources:
    """
    Resources describes the Compute Resources required by this vmi.

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. Valid resource keys are "memory" and "cpu".
    overcommitGuestOverhead : bool, default is Undefined, optional
        Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.
    requests : {str:int | str}, default is Undefined, optional
        Requests is a description of the initial vmi resources. Valid resource keys are "memory" and "cpu".
    """


    limits?: {str:int | str}

    overcommitGuestOverhead?: bool

    requests?: {str:int | str}


schema KubevirtIoV1VirtualMachineInstanceSpecLivenessProbe:
    """
    Periodic probe of VirtualMachineInstance liveness. VirtualmachineInstances will be stopped if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    guestAgentPing : any, default is Undefined, optional
        GuestAgentPing contacts the qemu-guest-agent for availability checks.
    httpGet : KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
    tcpSocket : KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. For exec probes the timeout fails the probe but does not terminate the command running on the guest. This means a blocking command can result in an increasing load on the guest. A small buffer will be added to the resulting workload exec probe to compensate for delays caused by the qemu guest exec mechanism. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeExec

    failureThreshold?: int

    guestAgentPing?: any

    httpGet?: KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeTCPSocket

    timeoutSeconds?: int


schema KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeExec:
    """
    One and only one of the following should be specified. Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent. If the guest agent is not available, this probe will fail.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema KubevirtIoV1VirtualMachineInstanceSpecLivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0:
    """
    Network represents a network type and a resource that should be connected to the vm.

    Attributes
    ----------
    multus : KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0Multus, default is Undefined, optional
        multus
    name : str, default is Undefined, required
        Network name. Must be a DNS_LABEL and unique within the vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    pod : KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0Pod, default is Undefined, optional
        pod
    """


    multus?: KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0Multus

    name: str

    pod?: KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0Pod


schema KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0Multus:
    """
    Represents the multus cni network.

    Attributes
    ----------
    default : bool, default is Undefined, optional
        Select the default network and add it to the multus-cni.io/default-network annotation.
    networkName : str, default is Undefined, required
        References to a NetworkAttachmentDefinition CRD object. Format: <networkName>, <namespace>/<networkName>. If namespace is not specified, VMI namespace is assumed.
    """


    default?: bool

    networkName: str


schema KubevirtIoV1VirtualMachineInstanceSpecNetworksItems0Pod:
    """
    Represents the stock pod network interface.

    Attributes
    ----------
    vmIPv6NetworkCIDR : str, default is Undefined, optional
        IPv6 CIDR for the vm network. Defaults to fd10:0:2::/120 if not specified.
    vmNetworkCIDR : str, default is Undefined, optional
        CIDR for vm network. Default 10.0.2.0/24 if not specified.
    """


    vmIPv6NetworkCIDR?: str

    vmNetworkCIDR?: str


schema KubevirtIoV1VirtualMachineInstanceSpecReadinessProbe:
    """
    Periodic probe of VirtualMachineInstance service readiness. VirtualmachineInstances will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    guestAgentPing : any, default is Undefined, optional
        GuestAgentPing contacts the qemu-guest-agent for availability checks.
    httpGet : KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
    tcpSocket : KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. For exec probes the timeout fails the probe but does not terminate the command running on the guest. This means a blocking command can result in an increasing load on the guest. A small buffer will be added to the resulting workload exec probe to compensate for delays caused by the qemu guest exec mechanism. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeExec

    failureThreshold?: int

    guestAgentPing?: any

    httpGet?: KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeTCPSocket

    timeoutSeconds?: int


schema KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeExec:
    """
    One and only one of the following should be specified. Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent. If the guest agent is not available, this probe will fail.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema KubevirtIoV1VirtualMachineInstanceSpecReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema KubevirtIoV1VirtualMachineInstanceSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed. When 'whenUnsatisfiable=DoNotSchedule', it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When 'whenUnsatisfiable=ScheduleAnyway', it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """


    labelSelector?: KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0LabelSelector

    maxSkew: int

    topologyKey: str

    whenUnsatisfiable: str


schema KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubevirtIoV1VirtualMachineInstanceSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0:
    """
    Volume represents a named volume in a vmi.

    Attributes
    ----------
    cloudInitConfigDrive : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDrive, default is Undefined, optional
        cloud init config drive
    cloudInitNoCloud : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloud, default is Undefined, optional
        cloud init no cloud
    configMap : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    containerDisk : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ContainerDisk, default is Undefined, optional
        container disk
    dataVolume : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DataVolume, default is Undefined, optional
        data volume
    downwardAPI : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    downwardMetrics : any, default is Undefined, optional
        DownwardMetrics adds a very small disk to VMIs which contains a limited view of host and guest metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
    emptyDisk : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0EmptyDisk, default is Undefined, optional
        empty disk
    ephemeral : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    hostDisk : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0HostDisk, default is Undefined, optional
        host disk
    memoryDump : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0MemoryDump, default is Undefined, optional
        memory dump
    name : str, default is Undefined, required
        Volume's name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    persistentVolumeClaim : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    secret : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Secret, default is Undefined, optional
        secret
    serviceAccount : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ServiceAccount, default is Undefined, optional
        service account
    sysprep : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Sysprep, default is Undefined, optional
        sysprep
    """


    cloudInitConfigDrive?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDrive

    cloudInitNoCloud?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloud

    configMap?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ConfigMap

    containerDisk?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ContainerDisk

    dataVolume?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DataVolume

    downwardAPI?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPI

    downwardMetrics?: any

    emptyDisk?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0EmptyDisk

    ephemeral?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Ephemeral

    hostDisk?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0HostDisk

    memoryDump?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0MemoryDump

    name: str

    persistentVolumeClaim?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0PersistentVolumeClaim

    secret?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Secret

    serviceAccount?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ServiceAccount

    sysprep?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Sysprep

schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDrive:
    """
    CloudInitConfigDrive represents a cloud-init Config Drive user-data source. The Config Drive data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html

    Attributes
    ----------
    networkData : str, default is Undefined, optional
        NetworkData contains config drive inline cloud-init networkdata.
    networkDataBase64 : str, default is Undefined, optional
        NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
    networkDataSecretRef : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDriveNetworkDataSecretRef, default is Undefined, optional
        network data secret ref
    secretRef : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDriveSecretRef, default is Undefined, optional
        secret ref
    userData : str, default is Undefined, optional
        UserData contains config drive inline cloud-init userdata.
    userDataBase64 : str, default is Undefined, optional
        UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
    """


    networkData?: str

    networkDataBase64?: str

    networkDataSecretRef?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDriveNetworkDataSecretRef

    secretRef?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDriveSecretRef

    userData?: str

    userDataBase64?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDriveNetworkDataSecretRef:
    """
    NetworkDataSecretRef references a k8s secret that contains config drive networkdata.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitConfigDriveSecretRef:
    """
    UserDataSecretRef references a k8s secret that contains config drive userdata.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloud:
    """
    CloudInitNoCloud represents a cloud-init NoCloud user-data source. The NoCloud data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html

    Attributes
    ----------
    networkData : str, default is Undefined, optional
        NetworkData contains NoCloud inline cloud-init networkdata.
    networkDataBase64 : str, default is Undefined, optional
        NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.
    networkDataSecretRef : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloudNetworkDataSecretRef, default is Undefined, optional
        network data secret ref
    secretRef : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloudSecretRef, default is Undefined, optional
        secret ref
    userData : str, default is Undefined, optional
        UserData contains NoCloud inline cloud-init userdata.
    userDataBase64 : str, default is Undefined, optional
        UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.
    """


    networkData?: str

    networkDataBase64?: str

    networkDataSecretRef?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloudNetworkDataSecretRef

    secretRef?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloudSecretRef

    userData?: str

    userDataBase64?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloudNetworkDataSecretRef:
    """
    NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0CloudInitNoCloudSecretRef:
    """
    UserDataSecretRef references a k8s secret that contains NoCloud userdata.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ConfigMap:
    """
    ConfigMapSource represents a reference to a ConfigMap in the same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or it's keys must be defined
    volumeLabel : str, default is Undefined, optional
        The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
    """


    name?: str

    optional?: bool

    volumeLabel?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ContainerDisk:
    """
    ContainerDisk references a docker image, embedding a qcow or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html

    Attributes
    ----------
    image : str, default is Undefined, required
        Image is the name of the image with the embedded disk.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    imagePullSecret : str, default is Undefined, optional
        ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
    path : str, default is Undefined, optional
        Path defines the path to disk file in the container
    """


    image: str

    imagePullPolicy?: str

    imagePullSecret?: str

    path?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DataVolume:
    """
    DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.

    Attributes
    ----------
    hotpluggable : bool, default is Undefined, optional
        Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
    name : str, default is Undefined, required
        Name of both the DataVolume and the PVC in the same namespace. After PVC population the DataVolume is garbage collected by default.
    """


    hotpluggable?: bool

    name: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPI:
    """
    DownwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    fields : [KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0], default is Undefined, optional
        Fields is a list of downward API volume file
    volumeLabel : str, default is Undefined, optional
        The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
    """


    fields?: [KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0]

    volumeLabel?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0ResourceFieldRef


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0DownwardAPIFieldsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0EmptyDisk:
    """
    EmptyDisk represents a temporary disk which shares the vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html

    Attributes
    ----------
    capacity : int | str, default is Undefined, required
        Capacity of the sparse disk.
    """


    capacity: int | str


    check:
        regex.match(str(capacity), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Ephemeral:
    """
    Ephemeral is a special volume source that "wraps" specified source and provides copy-on-write image on top of it.

    Attributes
    ----------
    persistentVolumeClaim : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0EphemeralPersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    """


    persistentVolumeClaim?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0EphemeralPersistentVolumeClaim


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0EphemeralPersistentVolumeClaim:
    """
    PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0HostDisk:
    """
    HostDisk represents a disk created on the cluster level

    Attributes
    ----------
    capacity : int | str, default is Undefined, optional
        Capacity of the sparse disk
    path : str, default is Undefined, required
        The path to HostDisk image located on the cluster
    shared : bool, default is Undefined, optional
        Shared indicate whether the path is shared between nodes
    $type : str, default is Undefined, required
        Contains information if disk.img exists or should be created allowed options are 'Disk' and 'DiskOrCreate'
    """


    capacity?: int | str

    path: str

    shared?: bool

    $type: str


    check:
        regex.match(str(capacity), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0MemoryDump:
    """
    MemoryDump is attached to the virt launcher and is populated with a memory dump of the vmi

    Attributes
    ----------
    claimName : str, default is Undefined, required
        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    hotpluggable : bool, default is Undefined, optional
        Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
    readOnly : bool, default is Undefined, optional
        Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    hotpluggable?: bool

    readOnly?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0PersistentVolumeClaim:
    """
    PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    hotpluggable : bool, default is Undefined, optional
        Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
    readOnly : bool, default is Undefined, optional
        Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    hotpluggable?: bool

    readOnly?: bool


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Secret:
    """
    SecretVolumeSource represents a reference to a secret data in the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/

    Attributes
    ----------
    optional : bool, default is Undefined, optional
        Specify whether the Secret or it's keys must be defined
    secretName : str, default is Undefined, optional
        Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    volumeLabel : str, default is Undefined, optional
        The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
    """


    optional?: bool

    secretName?: str

    volumeLabel?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0ServiceAccount:
    """
    ServiceAccountVolumeSource represents a reference to a service account. There can only be one volume of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/

    Attributes
    ----------
    serviceAccountName : str, default is Undefined, optional
        Name of the service account in the pod's namespace to use. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    """


    serviceAccountName?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0Sysprep:
    """
    Represents a Sysprep volume source.

    Attributes
    ----------
    configMap : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0SysprepConfigMap, default is Undefined, optional
        config map
    secret : KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0SysprepSecret, default is Undefined, optional
        secret
    """


    configMap?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0SysprepConfigMap

    secret?: KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0SysprepSecret


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0SysprepConfigMap:
    """
    ConfigMap references a ConfigMap that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1VirtualMachineInstanceSpecVolumesItems0SysprepSecret:
    """
    Secret references a k8s Secret that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema KubevirtIoV1VirtualMachineInstanceStatus:
    """
    Status is the high level overview of how the VirtualMachineInstance is doing. It contains information available to controllers and users.

    Attributes
    ----------
    VSOCKCID : int, default is Undefined, optional
        VSOCKCID is used to track the allocated VSOCK CID in the VM.
    activePods : {str:str}, default is Undefined, optional
        ActivePods is a mapping of pod UID to node name. It is possible for multiple pods to be running for a single VMI during migration.
    conditions : [KubevirtIoV1VirtualMachineInstanceStatusConditionsItems0], default is Undefined, optional
        Conditions are specific points in VirtualMachineInstance's pod runtime.
    evacuationNodeName : str, default is Undefined, optional
        EvacuationNodeName is used to track the eviction process of a VMI. It stores the name of the node that we want to evacuate. It is meant to be used by KubeVirt core components only and can't be set or modified by users.
    fsFreezeStatus : str, default is Undefined, optional
        FSFreezeStatus is the state of the fs of the guest it can be either frozen or thawed
    guestOSInfo : KubevirtIoV1VirtualMachineInstanceStatusGuestOSInfo, default is Undefined, optional
        guest o s info
    interfaces : [KubevirtIoV1VirtualMachineInstanceStatusInterfacesItems0], default is Undefined, optional
        Interfaces represent the details of available network interfaces.
    launcherContainerImageVersion : str, default is Undefined, optional
        LauncherContainerImageVersion indicates what container image is currently active for the vmi.
    migrationMethod : str, default is Undefined, optional
        Represents the method using which the vmi can be migrated: live migration or block migration
    migrationState : KubevirtIoV1VirtualMachineInstanceStatusMigrationState, default is Undefined, optional
        migration state
    migrationTransport : str, default is Undefined, optional
        This represents the migration transport
    nodeName : str, default is Undefined, optional
        NodeName is the name where the VirtualMachineInstance is currently running.
    phase : str, default is Undefined, optional
        Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.
    phaseTransitionTimestamps : [KubevirtIoV1VirtualMachineInstanceStatusPhaseTransitionTimestampsItems0], default is Undefined, optional
        PhaseTransitionTimestamp is the timestamp of when the last phase change occurred
    qosClass : str, default is Undefined, optional
        The Quality of Service (QOS) classification assigned to the virtual machine instance based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
    reason : str, default is Undefined, optional
        A brief CamelCase message indicating details about why the VMI is in this state. e.g. 'NodeUnresponsive'
    runtimeUser : int, default is Undefined, optional
        RuntimeUser is used to determine what user will be used in launcher
    selinuxContext : str, default is Undefined, optional
        SELinuxContext is the actual SELinux context of the virt-launcher pod
    topologyHints : KubevirtIoV1VirtualMachineInstanceStatusTopologyHints, default is Undefined, optional
        topology hints
    virtualMachineRevisionName : str, default is Undefined, optional
        VirtualMachineRevisionName is used to get the vm revision of the vmi when doing an online vm snapshot
    volumeStatus : [KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0], default is Undefined, optional
        VolumeStatus contains the statuses of all the volumes
    """


    VSOCKCID?: int

    activePods?: {str:str}

    conditions?: [KubevirtIoV1VirtualMachineInstanceStatusConditionsItems0]

    evacuationNodeName?: str

    fsFreezeStatus?: str

    guestOSInfo?: KubevirtIoV1VirtualMachineInstanceStatusGuestOSInfo

    interfaces?: [KubevirtIoV1VirtualMachineInstanceStatusInterfacesItems0]

    launcherContainerImageVersion?: str

    migrationMethod?: str

    migrationState?: KubevirtIoV1VirtualMachineInstanceStatusMigrationState

    migrationTransport?: str

    nodeName?: str

    phase?: str

    phaseTransitionTimestamps?: [KubevirtIoV1VirtualMachineInstanceStatusPhaseTransitionTimestampsItems0]

    qosClass?: str

    reason?: str

    runtimeUser?: int

    selinuxContext?: str

    topologyHints?: KubevirtIoV1VirtualMachineInstanceStatusTopologyHints

    virtualMachineRevisionName?: str

    volumeStatus?: [KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0]


schema KubevirtIoV1VirtualMachineInstanceStatusConditionsItems0:
    """
    kubevirt io v1 virtual machine instance status conditions items0

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        last probe time
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    message : str, default is Undefined, optional
        message
    reason : str, default is Undefined, optional
        reason
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema KubevirtIoV1VirtualMachineInstanceStatusGuestOSInfo:
    """
    Guest OS Information

    Attributes
    ----------
    id : str, default is Undefined, optional
        Guest OS Id
    kernelRelease : str, default is Undefined, optional
        Guest OS Kernel Release
    kernelVersion : str, default is Undefined, optional
        Kernel version of the Guest OS
    machine : str, default is Undefined, optional
        Machine type of the Guest OS
    name : str, default is Undefined, optional
        Name of the Guest OS
    prettyName : str, default is Undefined, optional
        Guest OS Pretty Name
    version : str, default is Undefined, optional
        Guest OS Version
    versionId : str, default is Undefined, optional
        Version ID of the Guest OS
    """


    id?: str

    kernelRelease?: str

    kernelVersion?: str

    machine?: str

    name?: str

    prettyName?: str

    version?: str

    versionId?: str


schema KubevirtIoV1VirtualMachineInstanceStatusInterfacesItems0:
    """
    kubevirt io v1 virtual machine instance status interfaces items0

    Attributes
    ----------
    infoSource : str, default is Undefined, optional
        Specifies the origin of the interface data collected. values: domain, guest-agent, or both
    interfaceName : str, default is Undefined, optional
        The interface name inside the Virtual Machine
    ipAddress : str, default is Undefined, optional
        IP address of a Virtual Machine interface. It is always the first item of IPs
    ipAddresses : [str], default is Undefined, optional
        List of all IP addresses of a Virtual Machine interface
    mac : str, default is Undefined, optional
        Hardware address of a Virtual Machine interface
    name : str, default is Undefined, optional
        Name of the interface, corresponds to name of the network assigned to the interface
    queueCount : int, default is Undefined, optional
        Specifies how many queues are allocated by MultiQueue
    """


    infoSource?: str

    interfaceName?: str

    ipAddress?: str

    ipAddresses?: [str]

    mac?: str

    name?: str

    queueCount?: int


schema KubevirtIoV1VirtualMachineInstanceStatusMigrationState:
    """
    Represents the status of a live migration

    Attributes
    ----------
    abortRequested : bool, default is Undefined, optional
        Indicates that the migration has been requested to abort
    abortStatus : str, default is Undefined, optional
        Indicates the final status of the live migration abortion
    completed : bool, default is Undefined, optional
        Indicates the migration completed
    endTimestamp : str, default is Undefined, optional
        The time the migration action ended
    failed : bool, default is Undefined, optional
        Indicates that the migration failed
    migrationConfiguration : KubevirtIoV1VirtualMachineInstanceStatusMigrationStateMigrationConfiguration, default is Undefined, optional
        migration configuration
    migrationPolicyName : str, default is Undefined, optional
        Name of the migration policy. If string is empty, no policy is matched
    migrationUid : str, default is Undefined, optional
        The VirtualMachineInstanceMigration object associated with this migration
    mode : str, default is Undefined, optional
        Lets us know if the vmi is currently running pre or post copy migration
    sourceNode : str, default is Undefined, optional
        The source node that the VMI originated on
    startTimestamp : str, default is Undefined, optional
        The time the migration action began
    targetAttachmentPodUID : str, default is Undefined, optional
        The UID of the target attachment pod for hotplug volumes
    targetCPUSet : [int], default is Undefined, optional
        If the VMI requires dedicated CPUs, this field will hold the dedicated CPU set on the target node
    targetDirectMigrationNodePorts : {str:int}, default is Undefined, optional
        The list of ports opened for live migration on the destination node
    targetNode : str, default is Undefined, optional
        The target node that the VMI is moving to
    targetNodeAddress : str, default is Undefined, optional
        The address of the target node to use for the migration
    targetNodeDomainDetected : bool, default is Undefined, optional
        The Target Node has seen the Domain Start Event
    targetNodeTopology : str, default is Undefined, optional
        If the VMI requires dedicated CPUs, this field will hold the numa topology on the target node
    targetPod : str, default is Undefined, optional
        The target pod that the VMI is moving to
    """


    abortRequested?: bool

    abortStatus?: str

    completed?: bool

    endTimestamp?: str

    failed?: bool

    migrationConfiguration?: KubevirtIoV1VirtualMachineInstanceStatusMigrationStateMigrationConfiguration

    migrationPolicyName?: str

    migrationUid?: str

    mode?: str

    sourceNode?: str

    startTimestamp?: str

    targetAttachmentPodUID?: str

    targetCPUSet?: [int]

    targetDirectMigrationNodePorts?: {str:int}

    targetNode?: str

    targetNodeAddress?: str

    targetNodeDomainDetected?: bool

    targetNodeTopology?: str

    targetPod?: str

schema KubevirtIoV1VirtualMachineInstanceStatusMigrationStateMigrationConfiguration:
    """
    Migration configurations to apply

    Attributes
    ----------
    allowAutoConverge : bool, default is Undefined, optional
        AllowAutoConverge allows the platform to compromise performance/availability of VMIs to guarantee successful VMI live migrations. Defaults to false
    allowPostCopy : bool, default is Undefined, optional
        AllowPostCopy enables post-copy live migrations. Such migrations allow even the busiest VMIs to successfully live-migrate. However, events like a network failure can cause a VMI crash. If set to true, migrations will still start in pre-copy, but switch to post-copy when CompletionTimeoutPerGiB triggers. Defaults to false
    bandwidthPerMigration : int | str, default is Undefined, optional
        BandwidthPerMigration limits the amount of network bandwith live migrations are allowed to use. The value is in quantity per second. Defaults to 0 (no limit)
    completionTimeoutPerGiB : int, default is Undefined, optional
        CompletionTimeoutPerGiB is the maximum number of seconds per GiB a migration is allowed to take. If a live-migration takes longer to migrate than this value multiplied by the size of the VMI, the migration will be cancelled, unless AllowPostCopy is true. Defaults to 800
    disableTLS : bool, default is Undefined, optional
        When set to true, DisableTLS will disable the additional layer of live migration encryption provided by KubeVirt. This is usually a bad idea. Defaults to false
    network : str, default is Undefined, optional
        Network is the name of the CNI network to use for live migrations. By default, migrations go through the pod network.
    nodeDrainTaintKey : str, default is Undefined, optional
        NodeDrainTaintKey defines the taint key that indicates a node should be drained. Note: this option relies on the deprecated node taint feature. Default: kubevirt.io/drain
    parallelMigrationsPerCluster : int, default is Undefined, optional
        ParallelMigrationsPerCluster is the total number of concurrent live migrations allowed cluster-wide. Defaults to 5
    parallelOutboundMigrationsPerNode : int, default is Undefined, optional
        ParallelOutboundMigrationsPerNode is the maximum number of concurrent outgoing live migrations allowed per node. Defaults to 2
    progressTimeout : int, default is Undefined, optional
        ProgressTimeout is the maximum number of seconds a live migration is allowed to make no progress. Hitting this timeout means a migration transferred 0 data for that many seconds. The migration is then considered stuck and therefore cancelled. Defaults to 150
    unsafeMigrationOverride : bool, default is Undefined, optional
        UnsafeMigrationOverride allows live migrations to occur even if the compatibility check indicates the migration will be unsafe to the guest. Defaults to false
    """


    allowAutoConverge?: bool

    allowPostCopy?: bool

    bandwidthPerMigration?: int | str

    completionTimeoutPerGiB?: int

    disableTLS?: bool

    network?: str

    nodeDrainTaintKey?: str

    parallelMigrationsPerCluster?: int

    parallelOutboundMigrationsPerNode?: int

    progressTimeout?: int

    unsafeMigrationOverride?: bool


    check:
        regex.match(str(bandwidthPerMigration), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema KubevirtIoV1VirtualMachineInstanceStatusPhaseTransitionTimestampsItems0:
    """
    VirtualMachineInstancePhaseTransitionTimestamp gives a timestamp in relation to when a phase is set on a vmi

    Attributes
    ----------
    phase : str, default is Undefined, optional
        Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.
    phaseTransitionTimestamp : str, default is Undefined, optional
        PhaseTransitionTimestamp is the timestamp of when the phase change occurred
    """


    phase?: str

    phaseTransitionTimestamp?: str


schema KubevirtIoV1VirtualMachineInstanceStatusTopologyHints:
    """
    kubevirt io v1 virtual machine instance status topology hints

    Attributes
    ----------
    tscFrequency : int, default is Undefined, optional
        tsc frequency
    """


    tscFrequency?: int


schema KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0:
    """
    VolumeStatus represents information about the status of volumes attached to the VirtualMachineInstance.

    Attributes
    ----------
    hotplugVolume : KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0HotplugVolume, default is Undefined, optional
        hotplug volume
    memoryDumpVolume : KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0MemoryDumpVolume, default is Undefined, optional
        memory dump volume
    message : str, default is Undefined, optional
        Message is a detailed message about the current hotplug volume phase
    name : str, default is Undefined, required
        Name is the name of the volume
    persistentVolumeClaimInfo : KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0PersistentVolumeClaimInfo, default is Undefined, optional
        persistent volume claim info
    phase : str, default is Undefined, optional
        Phase is the phase
    reason : str, default is Undefined, optional
        Reason is a brief description of why we are in the current hotplug volume phase
    size : int, default is Undefined, optional
        Represents the size of the volume
    target : str, default is Undefined, required
        Target is the target name used when adding the volume to the VM, eg: vda
    """


    hotplugVolume?: KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0HotplugVolume

    memoryDumpVolume?: KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0MemoryDumpVolume

    message?: str

    name: str

    persistentVolumeClaimInfo?: KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0PersistentVolumeClaimInfo

    phase?: str

    reason?: str

    size?: int

    target: str


schema KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0HotplugVolume:
    """
    If the volume is hotplug, this will contain the hotplug status.

    Attributes
    ----------
    attachPodName : str, default is Undefined, optional
        AttachPodName is the name of the pod used to attach the volume to the node.
    attachPodUID : str, default is Undefined, optional
        AttachPodUID is the UID of the pod used to attach the volume to the node.
    """


    attachPodName?: str

    attachPodUID?: str


schema KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0MemoryDumpVolume:
    """
    If the volume is memorydump volume, this will contain the memorydump info.

    Attributes
    ----------
    claimName : str, default is Undefined, optional
        ClaimName is the name of the pvc the memory was dumped to
    endTimestamp : str, default is Undefined, optional
        EndTimestamp is the time when the memory dump completed
    startTimestamp : str, default is Undefined, optional
        StartTimestamp is the time when the memory dump started
    targetFileName : str, default is Undefined, optional
        TargetFileName is the name of the memory dump output
    """


    claimName?: str

    endTimestamp?: str

    startTimestamp?: str

    targetFileName?: str


schema KubevirtIoV1VirtualMachineInstanceStatusVolumeStatusItems0PersistentVolumeClaimInfo:
    """
    PersistentVolumeClaimInfo is information about the PVC that handler requires during start flow

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    capacity : {str:int | str}, default is Undefined, optional
        Capacity represents the capacity set on the corresponding PVC status
    filesystemOverhead : str, default is Undefined, optional
        Percentage of filesystem's size to be reserved when resizing the PVC
    preallocated : bool, default is Undefined, optional
        Preallocated indicates if the PVC's storage is preallocated or not
    requests : {str:int | str}, default is Undefined, optional
        Requests represents the resources requested by the corresponding PVC spec
    volumeMode : str, default is Undefined, optional
        VolumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    """


    accessModes?: [str]

    capacity?: {str:int | str}

    filesystemOverhead?: str

    preallocated?: bool

    requests?: {str:int | str}

    volumeMode?: str


    check:
        regex.match(filesystemOverhead, r"^(0(?:\.\d{1,3})?|1)$")


