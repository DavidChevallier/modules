"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FargateProfile:
    """
    FargateProfile is the Schema for the FargateProfiles API

    Attributes
    ----------
    apiVersion : str, default is "eks.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FargateProfile", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksServicesK8sAwsV1alpha1FargateProfileSpec, default is Undefined, optional
        spec
    status : EksServicesK8sAwsV1alpha1FargateProfileStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.services.k8s.aws/v1alpha1" = "eks.services.k8s.aws/v1alpha1"

    kind: "FargateProfile" = "FargateProfile"

    metadata?: v1.ObjectMeta

    spec?: EksServicesK8sAwsV1alpha1FargateProfileSpec

    status?: EksServicesK8sAwsV1alpha1FargateProfileStatus


schema EksServicesK8sAwsV1alpha1FargateProfileSpec:
    """
    FargateProfileSpec defines the desired state of FargateProfile. 
     An object representing an Fargate profile.

    Attributes
    ----------
    clientRequestToken : str, default is Undefined, optional
        Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    clusterName : str, default is Undefined, optional
        The name of the Amazon EKS cluster to apply the Fargate profile to.
    clusterRef : EksServicesK8sAwsV1alpha1FargateProfileSpecClusterRef, default is Undefined, optional
        cluster ref
    name : str, default is Undefined, required
        The name of the Fargate profile.
    podExecutionRoleARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the pod execution role to use for pods that match the selectors in the Fargate profile. The pod execution role allows Fargate infrastructure to register with your cluster as a node, and it provides read access to Amazon ECR image repositories. For more information, see Pod Execution Role (https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html) in the Amazon EKS User Guide.
    podExecutionRoleRef : EksServicesK8sAwsV1alpha1FargateProfileSpecPodExecutionRoleRef, default is Undefined, optional
        pod execution role ref
    selectors : [EksServicesK8sAwsV1alpha1FargateProfileSpecSelectorsItems0], default is Undefined, optional
        The selectors to match for pods to use this Fargate profile. Each selector must have an associated namespace. Optionally, you can also specify labels for a namespace. You may specify up to five selectors in a Fargate profile.
    subnetRefs : [EksServicesK8sAwsV1alpha1FargateProfileSpecSubnetRefsItems0], default is Undefined, optional
        subnet refs
    subnets : [str], default is Undefined, optional
        The IDs of subnets to launch your pods into. At this time, pods running on Fargate are not assigned public IP addresses, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.
    tags : {str:str}, default is Undefined, optional
        The metadata to apply to the Fargate profile to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Fargate profile tags do not propagate to any other resources associated with the Fargate profile, such as the pods that are scheduled with it.
    """


    clientRequestToken?: str

    clusterName?: str

    clusterRef?: EksServicesK8sAwsV1alpha1FargateProfileSpecClusterRef

    name: str

    podExecutionRoleARN?: str

    podExecutionRoleRef?: EksServicesK8sAwsV1alpha1FargateProfileSpecPodExecutionRoleRef

    selectors?: [EksServicesK8sAwsV1alpha1FargateProfileSpecSelectorsItems0]

    subnetRefs?: [EksServicesK8sAwsV1alpha1FargateProfileSpecSubnetRefsItems0]

    subnets?: [str]

    tags?: {str:str}


schema EksServicesK8sAwsV1alpha1FargateProfileSpecClusterRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : EksServicesK8sAwsV1alpha1FargateProfileSpecClusterRefFrom, default is Undefined, optional
        from
    """


    from?: EksServicesK8sAwsV1alpha1FargateProfileSpecClusterRefFrom


schema EksServicesK8sAwsV1alpha1FargateProfileSpecClusterRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema EksServicesK8sAwsV1alpha1FargateProfileSpecPodExecutionRoleRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : EksServicesK8sAwsV1alpha1FargateProfileSpecPodExecutionRoleRefFrom, default is Undefined, optional
        from
    """


    from?: EksServicesK8sAwsV1alpha1FargateProfileSpecPodExecutionRoleRefFrom


schema EksServicesK8sAwsV1alpha1FargateProfileSpecPodExecutionRoleRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema EksServicesK8sAwsV1alpha1FargateProfileSpecSelectorsItems0:
    """
    An object representing an Fargate profile selector.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        labels
    namespace : str, default is Undefined, optional
        namespace
    """


    labels?: {str:str}

    namespace?: str


schema EksServicesK8sAwsV1alpha1FargateProfileSpecSubnetRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : EksServicesK8sAwsV1alpha1FargateProfileSpecSubnetRefsItems0From, default is Undefined, optional
        from
    """


    from?: EksServicesK8sAwsV1alpha1FargateProfileSpecSubnetRefsItems0From


schema EksServicesK8sAwsV1alpha1FargateProfileSpecSubnetRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema EksServicesK8sAwsV1alpha1FargateProfileStatus:
    """
    FargateProfileStatus defines the observed state of FargateProfile

    Attributes
    ----------
    ackResourceMetadata : EksServicesK8sAwsV1alpha1FargateProfileStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [EksServicesK8sAwsV1alpha1FargateProfileStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    createdAt : str, default is Undefined, optional
        The Unix epoch timestamp in seconds for when the Fargate profile was created.
    status : str, default is Undefined, optional
        The current status of the Fargate profile.
    """


    ackResourceMetadata?: EksServicesK8sAwsV1alpha1FargateProfileStatusAckResourceMetadata

    conditions?: [EksServicesK8sAwsV1alpha1FargateProfileStatusConditionsItems0]

    createdAt?: str

    status?: str


schema EksServicesK8sAwsV1alpha1FargateProfileStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema EksServicesK8sAwsV1alpha1FargateProfileStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


