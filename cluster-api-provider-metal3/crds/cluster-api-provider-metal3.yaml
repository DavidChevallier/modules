
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3clusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Cluster
    listKind: Metal3ClusterList
    plural: metal3clusters
    shortNames:
    - m3c
    - m3cluster
    - m3clusters
    - metal3c
    - metal3cluster
    singular: metal3cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of Metal3Cluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: metal3Cluster is Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Most recent error
      jsonPath: .status.failureReason
      name: Error
      type: string
    - description: Cluster to which this BMCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Control plane endpoint
      jsonPath: .spec.controlPlaneEndpoint
      name: Endpoint
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3Cluster is the Schema for the metal3clusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3ClusterSpec defines the desired state of Metal3Cluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              noCloudProvider:
                description: Determines if the cluster is not to be deployed with
                  an external cloud provider. If set to true, CAPM3 will use node
                  labels to set providerID on the kubernetes nodes. If set to false,
                  providerID is set on nodes by other entities and CAPM3 uses the
                  value of the providerID on the m3m resource.
                type: boolean
            type: object
          status:
            description: Metal3ClusterStatus defines the observed state of Metal3Cluster.
            properties:
              conditions:
                description: Conditions defines current service state of the Metal3Cluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: FailureMessage indicates that there is a fatal problem
                  reconciling the state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: FailureReason indicates that there is a fatal problem
                  reconciling the state, and will be set to a token value suitable
                  for programmatic interpretation.
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              ready:
                description: Ready denotes that the Metal3 cluster (infrastructure)
                  is ready. In Baremetal case, it does not mean anything for now as
                  no infrastructure steps need to be performed. Required by Cluster
                  API. Set to True by the metal3Cluster controller after creation.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3datas.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Data
    listKind: Metal3DataList
    plural: metal3datas
    shortNames:
    - m3d
    - m3data
    - m3datas
    - metal3d
    - metal3data
    singular: metal3data
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of Metal3Data
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3Data is the Schema for the metal3datas API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3DataSpec defines the desired state of Metal3Data.
            properties:
              claim:
                description: DataClaim points to the Metal3DataClaim the Metal3Data
                  was created for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              index:
                description: Index stores the index value of this instance in the
                  Metal3DataTemplate.
                type: integer
              metaData:
                description: MetaData points to the rendered MetaData secret.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkData:
                description: NetworkData points to the rendered NetworkData secret.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              template:
                description: DataTemplate is the Metal3DataTemplate this was generated
                  from.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              templateReference:
                description: TemplateReference refers to the Template the Metal3MachineTemplate
                  refers to. It can be matched against the key or it may also point
                  to the name of the template Metal3Data refers to
                type: string
            required:
            - claim
            - template
            type: object
          status:
            description: Metal3DataStatus defines the observed state of Metal3Data.
            properties:
              errorMessage:
                description: ErrorMessage contains the error message
                type: string
              ready:
                description: Ready is a flag set to True if the secrets were rendered
                  properly
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3dataclaims.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3DataClaim
    listKind: Metal3DataClaimList
    plural: metal3dataclaims
    shortNames:
    - m3dc
    - m3dataclaim
    - m3dataclaims
    - metal3dc
    - metal3dataclaim
    singular: metal3dataclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of Metal3DataClaim
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3DataClaim is the Schema for the metal3datas API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3DataClaimSpec defines the desired state of Metal3DataClaim.
            properties:
              template:
                description: Template is the Metal3DataTemplate this was generated
                  for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - template
            type: object
          status:
            description: Metal3DataClaimStatus defines the observed state of Metal3DataClaim.
            properties:
              errorMessage:
                description: ErrorMessage contains the error message
                type: string
              renderedData:
                description: RenderedData references the Metal3Data when ready
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3datatemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3DataTemplate
    listKind: Metal3DataTemplateList
    plural: metal3datatemplates
    shortNames:
    - m3dt
    - m3datatemplate
    - m3datatemplates
    - metal3dt
    - metal3datatemplate
    singular: metal3datatemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this template belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Time duration since creation of Metal3DataTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3DataTemplate is the Schema for the metal3datatemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3DataTemplateSpec defines the desired state of Metal3DataTemplate.
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs
                  to.
                minLength: 1
                type: string
              metaData:
                description: MetaData contains the information needed to generate
                  the metadata secret
                properties:
                  dnsServersFromIPPool:
                    description: DNSServersFromPool is the list of metadata items
                      to be rendered as dns servers.
                    items:
                      properties:
                        apiGroup:
                          description: APIGroup is the api group of the IP pool.
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        kind:
                          description: Kind is the kind of the IP pool
                          type: string
                        name:
                          description: Name is the name of the IP pool used to fetch
                            the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - apiGroup
                      - key
                      - kind
                      - name
                      type: object
                    type: array
                  fromAnnotations:
                    description: FromAnnotations is the list of metadata items to
                      be fetched from object Annotations
                    items:
                      description: MetaDataFromAnnotation contains the information
                        to fetch an annotation content, if the label does not exist,
                        it is rendered as empty string.
                      properties:
                        annotation:
                          description: Annotation is the key of the Annotation to
                            fetch
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        object:
                          description: Object is the type of the object from which
                            we retrieve the name
                          enum:
                          - machine
                          - metal3machine
                          - baremetalhost
                          type: string
                      required:
                      - annotation
                      - key
                      - object
                      type: object
                    type: array
                  fromHostInterfaces:
                    description: FromHostInterfaces is the list of metadata items
                      to be rendered as MAC addresses of the host interfaces.
                    items:
                      description: MetaDataHostInterface contains the information
                        to render the object name.
                      properties:
                        interface:
                          description: Interface is the name of the interface in the
                            BareMetalHost Status Hardware Details list of interfaces
                            from which to fetch the MAC address.
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                      required:
                      - interface
                      - key
                      type: object
                    type: array
                  fromLabels:
                    description: FromLabels is the list of metadata items to be fetched
                      from object labels
                    items:
                      description: MetaDataFromLabel contains the information to fetch
                        a label content, if the label does not exist, it is rendered
                        as empty string.
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        label:
                          description: Label is the key of the label to fetch
                          type: string
                        object:
                          description: Object is the type of the object from which
                            we retrieve the name
                          enum:
                          - machine
                          - metal3machine
                          - baremetalhost
                          type: string
                      required:
                      - key
                      - label
                      - object
                      type: object
                    type: array
                  gatewaysFromIPPool:
                    description: GatewaysFromPool is the list of metadata items to
                      be rendered as gateway addresses.
                    items:
                      properties:
                        apiGroup:
                          description: APIGroup is the api group of the IP pool.
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        kind:
                          description: Kind is the kind of the IP pool
                          type: string
                        name:
                          description: Name is the name of the IP pool used to fetch
                            the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - apiGroup
                      - key
                      - kind
                      - name
                      type: object
                    type: array
                  indexes:
                    description: Indexes is the list of metadata items to be rendered
                      from the index of the Metal3Data
                    items:
                      description: MetaDataIndex contains the information to render
                        the index.
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        offset:
                          description: Offset is the offset to apply to the index
                            when rendering it
                          type: integer
                        prefix:
                          description: Prefix is the prefix string
                          type: string
                        step:
                          default: 1
                          description: Step is the multiplier of the index
                          type: integer
                        suffix:
                          description: Suffix is the suffix string
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  ipAddressesFromIPPool:
                    description: IPAddressesFromPool is the list of metadata items
                      to be rendered as ip addresses.
                    items:
                      properties:
                        apiGroup:
                          description: APIGroup is the api group of the IP pool.
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        kind:
                          description: Kind is the kind of the IP pool
                          type: string
                        name:
                          description: Name is the name of the IP pool used to fetch
                            the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - apiGroup
                      - key
                      - kind
                      - name
                      type: object
                    type: array
                  namespaces:
                    description: Namespaces is the list of metadata items to be rendered
                      from the namespace
                    items:
                      description: MetaDataNamespace contains the information to render
                        the namespace.
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  objectNames:
                    description: ObjectNames is the list of metadata items to be rendered
                      from the name of objects.
                    items:
                      description: MetaDataObjectName contains the information to
                        render the object name.
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        object:
                          description: Object is the type of the object from which
                            we retrieve the name
                          enum:
                          - machine
                          - metal3machine
                          - baremetalhost
                          type: string
                      required:
                      - key
                      - object
                      type: object
                    type: array
                  prefixesFromIPPool:
                    description: PrefixesFromPool is the list of metadata items to
                      be rendered as network prefixes.
                    items:
                      properties:
                        apiGroup:
                          description: APIGroup is the api group of the IP pool.
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        kind:
                          description: Kind is the kind of the IP pool
                          type: string
                        name:
                          description: Name is the name of the IP pool used to fetch
                            the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - apiGroup
                      - key
                      - kind
                      - name
                      type: object
                    type: array
                  strings:
                    description: Strings is the list of metadata items to be rendered
                      from strings
                    items:
                      description: MetaDataString contains the information to render
                        the string.
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata
                            map for cloud-init
                          type: string
                        value:
                          description: Value is the string to render.
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                type: object
              networkData:
                description: NetworkData contains the information needed to generate
                  the networkdata secret
                properties:
                  links:
                    description: Links is a structure containing lists of different
                      types objects
                    properties:
                      bonds:
                        description: Bonds contains a list of Bond links
                        items:
                          description: NetworkDataLinkBond represents a bond link
                            object.
                          properties:
                            bondLinks:
                              description: BondLinks is the list of links that are
                                part of the bond.
                              items:
                                type: string
                              type: array
                            bondMode:
                              description: BondMode is the mode of bond used. It can
                                be one of balance-rr, active-backup, balance-xor,
                                broadcast, balance-tlb, balance-alb, 802.3ad
                              enum:
                              - balance-rr
                              - active-backup
                              - balance-xor
                              - broadcast
                              - balance-tlb
                              - balance-alb
                              - 802.3ad
                              type: string
                            bondXmitHashPolicy:
                              description: Selects the transmit hash policy used for
                                port selection in balance-xor and 802.3ad modes
                              enum:
                              - layer2
                              - layer3+4
                              - layer2+3
                              type: string
                            id:
                              description: Id is the ID of the interface (used for
                                naming)
                              type: string
                            macAddress:
                              description: MACAddress is the MAC address of the interface,
                                containing the object used to render it.
                              properties:
                                fromAnnotation:
                                  description: FromAnnotation references an object
                                    Annotation to retrieve the MAC address from
                                  properties:
                                    annotation:
                                      description: Annotation is the key of the Annotation
                                        to fetch
                                      type: string
                                    object:
                                      description: Object is the type of the object
                                        from which we retrieve the name
                                      enum:
                                      - machine
                                      - metal3machine
                                      - baremetalhost
                                      type: string
                                  required:
                                  - annotation
                                  - object
                                  type: object
                                fromHostInterface:
                                  description: FromHostInterface contains the name
                                    of the interface in the BareMetalHost Introspection
                                    details from which to fetch the MAC address
                                  type: string
                                string:
                                  description: String contains the MAC address given
                                    as a string
                                  type: string
                              type: object
                            mtu:
                              default: 1500
                              description: MTU is the MTU of the interface
                              maximum: 9000
                              type: integer
                          required:
                          - bondMode
                          - id
                          - macAddress
                          type: object
                        type: array
                      ethernets:
                        description: Ethernets contains a list of Ethernet links
                        items:
                          description: NetworkDataLinkEthernet represents an ethernet
                            link object.
                          properties:
                            id:
                              description: Id is the ID of the interface (used for
                                naming)
                              type: string
                            macAddress:
                              description: MACAddress is the MAC address of the interface,
                                containing the object used to render it.
                              properties:
                                fromAnnotation:
                                  description: FromAnnotation references an object
                                    Annotation to retrieve the MAC address from
                                  properties:
                                    annotation:
                                      description: Annotation is the key of the Annotation
                                        to fetch
                                      type: string
                                    object:
                                      description: Object is the type of the object
                                        from which we retrieve the name
                                      enum:
                                      - machine
                                      - metal3machine
                                      - baremetalhost
                                      type: string
                                  required:
                                  - annotation
                                  - object
                                  type: object
                                fromHostInterface:
                                  description: FromHostInterface contains the name
                                    of the interface in the BareMetalHost Introspection
                                    details from which to fetch the MAC address
                                  type: string
                                string:
                                  description: String contains the MAC address given
                                    as a string
                                  type: string
                              type: object
                            mtu:
                              default: 1500
                              description: MTU is the MTU of the interface
                              maximum: 9000
                              type: integer
                            type:
                              description: 'Type is the type of the ethernet link.
                                It can be one of: bridge, dvs, hw_veb, hyperv, ovs,
                                tap, vhostuser, vif, phy'
                              enum:
                              - bridge
                              - dvs
                              - hw_veb
                              - hyperv
                              - ovs
                              - tap
                              - vhostuser
                              - vif
                              - phy
                              type: string
                          required:
                          - id
                          - macAddress
                          - type
                          type: object
                        type: array
                      vlans:
                        description: Vlans contains a list of Vlan links
                        items:
                          description: NetworkDataLinkVlan represents a vlan link
                            object.
                          properties:
                            id:
                              description: Id is the ID of the interface (used for
                                naming)
                              type: string
                            macAddress:
                              description: MACAddress is the MAC address of the interface,
                                containing the object used to render it.
                              properties:
                                fromAnnotation:
                                  description: FromAnnotation references an object
                                    Annotation to retrieve the MAC address from
                                  properties:
                                    annotation:
                                      description: Annotation is the key of the Annotation
                                        to fetch
                                      type: string
                                    object:
                                      description: Object is the type of the object
                                        from which we retrieve the name
                                      enum:
                                      - machine
                                      - metal3machine
                                      - baremetalhost
                                      type: string
                                  required:
                                  - annotation
                                  - object
                                  type: object
                                fromHostInterface:
                                  description: FromHostInterface contains the name
                                    of the interface in the BareMetalHost Introspection
                                    details from which to fetch the MAC address
                                  type: string
                                string:
                                  description: String contains the MAC address given
                                    as a string
                                  type: string
                              type: object
                            mtu:
                              default: 1500
                              description: MTU is the MTU of the interface
                              maximum: 9000
                              type: integer
                            vlanID:
                              description: VlanID is the Vlan ID
                              maximum: 4096
                              type: integer
                            vlanLink:
                              description: VlanLink is the name of the link on which
                                the vlan should be added
                              type: string
                          required:
                          - id
                          - macAddress
                          - vlanID
                          - vlanLink
                          type: object
                        type: array
                    type: object
                  networks:
                    description: Networks  is a structure containing lists of different
                      types objects
                    properties:
                      ipv4:
                        description: IPv4 contains a list of IPv4 static allocations
                        items:
                          description: NetworkDataIPv4 represents an ipv4 static network
                            object.
                          properties:
                            fromPoolRef:
                              description: FromPoolRef is a reference to a IP pool
                                to allocate an address from.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            id:
                              description: ID is the network ID (name)
                              type: string
                            ipAddressFromIPPool:
                              description: IPAddressFromIPPool contains the name of
                                the IP pool to use to get an ip address
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv4 routes
                              items:
                                description: NetworkDataRoutev4 represents an ipv4
                                  route object.
                                properties:
                                  gateway:
                                    description: Gateway is the IPv4 address of the
                                      gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the
                                          IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as
                                          a string
                                        pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv4 network address
                                    pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network
                                      as integer (max 32)
                                    maximum: 32
                                    type: integer
                                  services:
                                    description: Services is a list of IPv4 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv4 DNS services
                                        items:
                                          description: IPAddressv4 is used for validation
                                            of an IPv6 address.
                                          pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of
                                          the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                      ipv4DHCP:
                        description: IPv4 contains a list of IPv4 DHCP allocations
                        items:
                          description: NetworkDataIPv4DHCP represents an ipv4 DHCP
                            network object.
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv4 routes
                              items:
                                description: NetworkDataRoutev4 represents an ipv4
                                  route object.
                                properties:
                                  gateway:
                                    description: Gateway is the IPv4 address of the
                                      gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the
                                          IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as
                                          a string
                                        pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv4 network address
                                    pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network
                                      as integer (max 32)
                                    maximum: 32
                                    type: integer
                                  services:
                                    description: Services is a list of IPv4 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv4 DNS services
                                        items:
                                          description: IPAddressv4 is used for validation
                                            of an IPv6 address.
                                          pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of
                                          the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                      ipv6:
                        description: IPv4 contains a list of IPv6 static allocations
                        items:
                          description: NetworkDataIPv6 represents an ipv6 static network
                            object.
                          properties:
                            fromPoolRef:
                              description: FromPoolRef is a reference to a IP pool
                                to allocate an address from.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            id:
                              description: ID is the network ID (name)
                              type: string
                            ipAddressFromIPPool:
                              description: IPAddressFromIPPool contains the name of
                                the IPPool to use to get an ip address
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv6 routes
                              items:
                                description: NetworkDataRoutev6 represents an ipv6
                                  route object.
                                properties:
                                  gateway:
                                    description: Gateway is the IPv6 address of the
                                      gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the
                                          IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as
                                          a string
                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv6 network address
                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network
                                      as integer (max 128)
                                    maximum: 128
                                    type: integer
                                  services:
                                    description: Services is a list of IPv6 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv6 DNS services
                                        items:
                                          description: IPAddressv6 is used for validation
                                            of an IPv6 address.
                                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of
                                          the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - ipAddressFromIPPool
                          - link
                          type: object
                        type: array
                      ipv6DHCP:
                        description: IPv4 contains a list of IPv6 DHCP allocations
                        items:
                          description: NetworkDataIPv6DHCP represents an ipv6 DHCP
                            network object.
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv6 routes
                              items:
                                description: NetworkDataRoutev6 represents an ipv6
                                  route object.
                                properties:
                                  gateway:
                                    description: Gateway is the IPv6 address of the
                                      gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the
                                          IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as
                                          a string
                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv6 network address
                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network
                                      as integer (max 128)
                                    maximum: 128
                                    type: integer
                                  services:
                                    description: Services is a list of IPv6 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv6 DNS services
                                        items:
                                          description: IPAddressv6 is used for validation
                                            of an IPv6 address.
                                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of
                                          the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                      ipv6SLAAC:
                        description: IPv4 contains a list of IPv6 SLAAC allocations
                        items:
                          description: NetworkDataIPv6DHCP represents an ipv6 DHCP
                            network object.
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv6 routes
                              items:
                                description: NetworkDataRoutev6 represents an ipv6
                                  route object.
                                properties:
                                  gateway:
                                    description: Gateway is the IPv6 address of the
                                      gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the
                                          IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as
                                          a string
                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv6 network address
                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network
                                      as integer (max 128)
                                    maximum: 128
                                    type: integer
                                  services:
                                    description: Services is a list of IPv6 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv6 DNS services
                                        items:
                                          description: IPAddressv6 is used for validation
                                            of an IPv6 address.
                                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of
                                          the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                    type: object
                  services:
                    description: Services  is a structure containing lists of different
                      types objects
                    properties:
                      dns:
                        description: DNS is a list of DNS services
                        items:
                          description: IPAddress is used for validation of an IP address.
                          pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                          type: string
                        type: array
                      dnsFromIPPool:
                        description: DNSFromIPPool is the name of the IPPool from
                          which to get the DNS servers
                        type: string
                    type: object
                type: object
              templateReference:
                description: TemplateReference refers to the Template the Metal3MachineTemplate
                  refers to. It can be matched against the key or it may also point
                  to the name of the template Metal3Data refers to
                type: string
            required:
            - clusterName
            type: object
          status:
            description: Metal3DataTemplateStatus defines the observed state of Metal3DataTemplate.
            properties:
              indexes:
                additionalProperties:
                  type: integer
                description: Indexes contains the map of Metal3Machine and index used
                type: object
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3machines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Machine
    listKind: Metal3MachineList
    plural: metal3machines
    shortNames:
    - m3m
    - m3machine
    - m3machines
    - metal3m
    - metal3machine
    singular: metal3machine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of Metal3Machine
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: metal3machine is Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Cluster to which this M3Machine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: metal3machine current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3Machine is the Schema for the metal3machines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineSpec defines the desired state of Metal3Machine.
            properties:
              automatedCleaningMode:
                description: When set to disabled, automated cleaning of host disks
                  will be skipped during provisioning and deprovisioning.
                enum:
                - metadata
                - disabled
                type: string
              dataTemplate:
                description: MetadataTemplate is a reference to a Metal3DataTemplate
                  object containing a template of metadata to be rendered. Metadata
                  keys defined in the metadataTemplate take precedence over keys defined
                  in metadata field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              hostSelector:
                description: HostSelector specifies matching criteria for labels on
                  BareMetalHosts. This is used to limit the set of BareMetalHost objects
                  considered for claiming for a metal3machine.
                properties:
                  matchExpressions:
                    description: Label match expressions that must be true on a chosen
                      BareMetalHost
                    items:
                      properties:
                        key:
                          type: string
                        operator:
                          description: Operator represents a key/field's relationship
                            to value(s). See labels.Requirement and fields.Requirement
                            for more details.
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: Key/value pairs of labels that must exist on a chosen
                      BareMetalHost
                    type: object
                type: object
              image:
                description: Image is the image to be provisioned.
                properties:
                  checksum:
                    description: Checksum is a md5sum, sha256sum or sha512sum value
                      or a URL to retrieve one.
                    type: string
                  checksumType:
                    description: ChecksumType is the checksum algorithm for the image.
                      e.g md5, sha256, sha512
                    enum:
                    - md5
                    - sha256
                    - sha512
                    type: string
                  format:
                    description: DiskFormat contains the image disk format.
                    enum:
                    - raw
                    - qcow2
                    - vdi
                    - vmdk
                    - live-iso
                    type: string
                  url:
                    description: URL is a location of an image to deploy.
                    type: string
                required:
                - checksum
                - url
                type: object
              metaData:
                description: MetaData is an object storing the reference to the secret
                  containing the Metadata given by the user.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkData:
                description: NetworkData is an object storing the reference to the
                  secret containing the network data given by the user.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              providerID:
                description: ProviderID will be the Metal3 machine in ProviderID format
                  (metal3://<bmh-uuid>)
                type: string
              userData:
                description: UserData references the Secret that holds user data needed
                  by the bare metal operator. The Namespace is optional; it will default
                  to the metal3machine's namespace if not specified.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - image
            type: object
          status:
            description: Metal3MachineStatus defines the observed state of Metal3Machine.
            properties:
              addresses:
                description: Addresses is a list of addresses assigned to the machine.
                  This field is copied from the infrastructure provider reference.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the Metal3Machine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the metal3machine and will contain
                  a more verbose string suitable for logging and human consumption.
                  \n This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the metal3machine's spec or the configuration of the
                  controller, and that manual intervention is required. Examples of
                  terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the responsible
                  controller itself being critically misconfigured. \n Any transient
                  errors that occur during the reconciliation of metal3machines can
                  be added as events to the metal3machine object and/or logged in
                  the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the metal3machine and will contain
                  a succinct value suitable for machine interpretation. \n This field
                  should not be set for transitive errors that a controller faces
                  that are expected to be fixed automatically over time (like service
                  outages), but instead indicate that something is fundamentally wrong
                  with the metal3machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of metal3machines can be added as
                  events to the metal3machine object and/or logged in the controller's
                  output."
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              metaData:
                description: MetaData is an object storing the reference to the secret
                  containing the Metadata used to deploy the BareMetalHost.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkData:
                description: NetworkData is an object storing the reference to the
                  secret containing the network data used to deploy the BareMetalHost.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              phase:
                description: Phase represents the current phase of machine actuation.
                  E.g. Pending, Running, Terminating, Failed etc.
                type: string
              ready:
                description: 'Ready is the state of the metal3. TODO : Document the
                  variable : mhrivnak: " it would be good to document what this means,
                  how to interpret it, under what circumstances the value changes,
                  etc."'
                type: boolean
              renderedData:
                description: RenderedData is a reference to a rendered Metal3Data
                  object containing the references to metaData and networkData secrets.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              userData:
                description: UserData references the Secret that holds user data needed
                  by the bare metal operator. The Namespace is optional; it will default
                  to the metal3machine's namespace if not specified.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3machinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3MachineTemplate
    listKind: Metal3MachineTemplateList
    plural: metal3machinetemplates
    shortNames:
    - m3mt
    - m3machinetemplate
    - m3machinetemplates
    - metal3mt
    - metal3machinetemplate
    singular: metal3machinetemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of Metal3MachineTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3MachineTemplate is the Schema for the metal3machinetemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineTemplateSpec defines the desired state of Metal3MachineTemplate.
            properties:
              nodeReuse:
                default: false
                description: When set to True, CAPM3 Machine controller will pick
                  the same pool of BMHs' that were released during the upgrade operation.
                type: boolean
              template:
                description: Metal3MachineTemplateResource describes the data needed
                  to create a Metal3Machine from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      automatedCleaningMode:
                        description: When set to disabled, automated cleaning of host
                          disks will be skipped during provisioning and deprovisioning.
                        enum:
                        - metadata
                        - disabled
                        type: string
                      dataTemplate:
                        description: MetadataTemplate is a reference to a Metal3DataTemplate
                          object containing a template of metadata to be rendered.
                          Metadata keys defined in the metadataTemplate take precedence
                          over keys defined in metadata field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      hostSelector:
                        description: HostSelector specifies matching criteria for
                          labels on BareMetalHosts. This is used to limit the set
                          of BareMetalHost objects considered for claiming for a metal3machine.
                        properties:
                          matchExpressions:
                            description: Label match expressions that must be true
                              on a chosen BareMetalHost
                            items:
                              properties:
                                key:
                                  type: string
                                operator:
                                  description: Operator represents a key/field's relationship
                                    to value(s). See labels.Requirement and fields.Requirement
                                    for more details.
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              - values
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: Key/value pairs of labels that must exist
                              on a chosen BareMetalHost
                            type: object
                        type: object
                      image:
                        description: Image is the image to be provisioned.
                        properties:
                          checksum:
                            description: Checksum is a md5sum, sha256sum or sha512sum
                              value or a URL to retrieve one.
                            type: string
                          checksumType:
                            description: ChecksumType is the checksum algorithm for
                              the image. e.g md5, sha256, sha512
                            enum:
                            - md5
                            - sha256
                            - sha512
                            type: string
                          format:
                            description: DiskFormat contains the image disk format.
                            enum:
                            - raw
                            - qcow2
                            - vdi
                            - vmdk
                            - live-iso
                            type: string
                          url:
                            description: URL is a location of an image to deploy.
                            type: string
                        required:
                        - checksum
                        - url
                        type: object
                      metaData:
                        description: MetaData is an object storing the reference to
                          the secret containing the Metadata given by the user.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      networkData:
                        description: NetworkData is an object storing the reference
                          to the secret containing the network data given by the user.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      providerID:
                        description: ProviderID will be the Metal3 machine in ProviderID
                          format (metal3://<bmh-uuid>)
                        type: string
                      userData:
                        description: UserData references the Secret that holds user
                          data needed by the bare metal operator. The Namespace is
                          optional; it will default to the metal3machine's namespace
                          if not specified.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - image
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3remediations.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Remediation
    listKind: Metal3RemediationList
    plural: metal3remediations
    shortNames:
    - m3r
    - m3remediation
    singular: metal3remediation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: How many times remediation controller should attempt to remediate
        the host
      jsonPath: .spec.strategy.retryLimit
      name: Retry limit
      type: string
    - description: How many times remediation controller has tried to remediate the
        node
      jsonPath: .status.retryCount
      name: Retry count
      type: string
    - description: Timestamp of the last remediation attempt
      jsonPath: .status.lastRemediated
      name: Last Remediated
      type: string
    - description: Type of the remediation strategy
      jsonPath: .spec.strategy.type
      name: Strategy
      type: string
    - description: Phase of the remediation
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3Remediation is the Schema for the metal3remediations API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3RemediationSpec defines the desired state of Metal3Remediation.
            properties:
              strategy:
                description: Strategy field defines remediation strategy.
                properties:
                  retryLimit:
                    description: Sets maximum number of remediation retries.
                    type: integer
                  timeout:
                    description: Sets the timeout between remediation retries.
                    type: string
                  type:
                    description: Type of remediation.
                    type: string
                type: object
            type: object
          status:
            description: Metal3RemediationStatus defines the observed state of Metal3Remediation.
            properties:
              lastRemediated:
                description: LastRemediated identifies when the host was last remediated
                format: date-time
                type: string
              phase:
                description: Phase represents the current phase of machine remediation.
                  E.g. Pending, Running, Done etc.
                type: string
              retryCount:
                description: RetryCount can be used as a counter during the remediation.
                  Field can hold number of reboots etc.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: metal3remediationtemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3RemediationTemplate
    listKind: Metal3RemediationTemplateList
    plural: metal3remediationtemplates
    shortNames:
    - m3rt
    - m3remediationtemplate
    - m3remediationtemplates
    - metal3rt
    - metal3remediationtemplate
    singular: metal3remediationtemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Metal3RemediationTemplate is the Schema for the metal3remediationtemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3RemediationTemplateSpec defines the desired state of
              Metal3RemediationTemplate.
            properties:
              template:
                description: Metal3RemediationTemplateResource describes the data
                  needed to create a Metal3Remediation from a template.
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the Metal3Remediation.
                    properties:
                      strategy:
                        description: Strategy field defines remediation strategy.
                        properties:
                          retryLimit:
                            description: Sets maximum number of remediation retries.
                            type: integer
                          timeout:
                            description: Sets the timeout between remediation retries.
                            type: string
                          type:
                            description: Type of remediation.
                            type: string
                        type: object
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: Metal3RemediationTemplateStatus defines the observed state
              of Metal3RemediationTemplate.
            properties:
              status:
                description: Metal3RemediationStatus defines the observed state of
                  Metal3Remediation
                properties:
                  lastRemediated:
                    description: LastRemediated identifies when the host was last
                      remediated
                    format: date-time
                    type: string
                  phase:
                    description: Phase represents the current phase of machine remediation.
                      E.g. Pending, Running, Done etc.
                    type: string
                  retryCount:
                    description: RetryCount can be used as a counter during the remediation.
                      Field can hold number of reboots etc.
                    type: integer
                type: object
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: baremetalhosts.metal3.io
spec:
  group: metal3.io
  names:
    kind: BareMetalHost
    listKind: BareMetalHostList
    plural: baremetalhosts
    shortNames:
    - bmh
    - bmhost
    singular: baremetalhost
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Operational status
      jsonPath: .status.operationalStatus
      name: Status
      priority: 1
      type: string
    - description: Provisioning status
      jsonPath: .status.provisioning.state
      name: State
      type: string
    - description: Consumer using this host
      jsonPath: .spec.consumerRef.name
      name: Consumer
      type: string
    - description: Address of management controller
      jsonPath: .spec.bmc.address
      name: BMC
      priority: 1
      type: string
    - description: The type of hardware detected
      jsonPath: .status.hardwareProfile
      name: Hardware_Profile
      priority: 1
      type: string
    - description: Whether the host is online or not
      jsonPath: .spec.online
      name: Online
      type: string
    - description: Type of the most recent error
      jsonPath: .status.errorType
      name: Error
      type: string
    - description: Time duration since creation of BaremetalHost
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BareMetalHost is the Schema for the baremetalhosts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BareMetalHostSpec defines the desired state of BareMetalHost
            properties:
              architecture:
                description: CPU architecture of the host, e.g. "x86_64" or "aarch64".
                  If unset, eventually populated by inspection.
                type: string
              automatedCleaningMode:
                default: metadata
                description: When set to disabled, automated cleaning will be avoided
                  during provisioning and deprovisioning.
                enum:
                - metadata
                - disabled
                type: string
              bmc:
                description: How do we connect to the BMC?
                properties:
                  address:
                    description: Address holds the URL for accessing the controller
                      on the network.
                    type: string
                  credentialsName:
                    description: The name of the secret containing the BMC credentials
                      (requires keys "username" and "password").
                    type: string
                  disableCertificateVerification:
                    description: DisableCertificateVerification disables verification
                      of server certificates when using HTTPS to connect to the BMC.
                      This is required when the server certificate is self-signed,
                      but is insecure because it allows a man-in-the-middle to intercept
                      the connection.
                    type: boolean
                required:
                - address
                - credentialsName
                type: object
              bootMACAddress:
                description: Which MAC address will PXE boot? This is optional for
                  some types, but required for libvirt VMs driven by vbmc.
                pattern: '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'
                type: string
              bootMode:
                description: Select the method of initializing the hardware during
                  boot. Defaults to UEFI.
                enum:
                - UEFI
                - UEFISecureBoot
                - legacy
                type: string
              consumerRef:
                description: ConsumerRef can be used to store information about something
                  that is using a host. When it is not empty, the host is considered
                  "in use".
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              customDeploy:
                description: A custom deploy procedure.
                properties:
                  method:
                    description: Custom deploy method name. This name is specific
                      to the deploy ramdisk used. If you don't have a custom deploy
                      ramdisk, you shouldn't use CustomDeploy.
                    type: string
                required:
                - method
                type: object
              description:
                description: Description is a human-entered text used to help identify
                  the host
                type: string
              externallyProvisioned:
                description: ExternallyProvisioned means something else is managing
                  the image running on the host and the operator should only manage
                  the power status and hardware inventory inspection. If the Image
                  field is filled in, this field is ignored.
                type: boolean
              firmware:
                description: BIOS configuration for bare metal server
                properties:
                  simultaneousMultithreadingEnabled:
                    description: 'Allows a single physical processor core to appear
                      as several logical processors. This supports following options:
                      true, false.'
                    enum:
                    - true
                    - false
                    type: boolean
                  sriovEnabled:
                    description: 'SR-IOV support enables a hypervisor to create virtual
                      instances of a PCI-express device, potentially increasing performance.
                      This supports following options: true, false.'
                    enum:
                    - true
                    - false
                    type: boolean
                  virtualizationEnabled:
                    description: 'Supports the virtualization of platform hardware.
                      This supports following options: true, false.'
                    enum:
                    - true
                    - false
                    type: boolean
                type: object
              hardwareProfile:
                description: What is the name of the hardware profile for this host?
                  It should only be necessary to set this when inspection cannot automatically
                  determine the profile.
                type: string
              image:
                description: Image holds the details of the image to be provisioned.
                properties:
                  checksum:
                    description: Checksum is the checksum for the image.
                    type: string
                  checksumType:
                    description: ChecksumType is the checksum algorithm for the image.
                      e.g md5, sha256, sha512
                    enum:
                    - md5
                    - sha256
                    - sha512
                    type: string
                  format:
                    description: DiskFormat contains the format of the image (raw,
                      qcow2, ...). Needs to be set to raw for raw images streaming.
                      Note live-iso means an iso referenced by the url will be live-booted
                      and not deployed to disk, and in this case the checksum options
                      are not required and if specified will be ignored.
                    enum:
                    - raw
                    - qcow2
                    - vdi
                    - vmdk
                    - live-iso
                    type: string
                  url:
                    description: URL is a location of an image to deploy.
                    type: string
                required:
                - url
                type: object
              metaData:
                description: MetaData holds the reference to the Secret containing
                  host metadata (e.g. meta_data.json) which is passed to the Config
                  Drive.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              networkData:
                description: NetworkData holds the reference to the Secret containing
                  network configuration (e.g content of network_data.json) which is
                  passed to the Config Drive.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              online:
                description: Should the server be online?
                type: boolean
              preprovisioningNetworkDataName:
                description: PreprovisioningNetworkDataName is the name of the Secret
                  in the local namespace containing network configuration (e.g content
                  of network_data.json) which is passed to the preprovisioning image,
                  and to the Config Drive if not overridden by specifying NetworkData.
                type: string
              raid:
                description: RAID configuration for bare metal server
                properties:
                  hardwareRAIDVolumes:
                    description: The list of logical disks for hardware RAID, if rootDeviceHints
                      isn't used, first volume is root volume. You can set the value
                      of this field to `[]` to clear all the hardware RAID configurations.
                    items:
                      description: HardwareRAIDVolume defines the desired configuration
                        of volume in hardware RAID
                      properties:
                        controller:
                          description: The name of the RAID controller to use
                          type: string
                        level:
                          description: 'RAID level for the logical disk. The following
                            levels are supported: 0;1;2;5;6;1+0;5+0;6+0.'
                          enum:
                          - "0"
                          - "1"
                          - "2"
                          - "5"
                          - "6"
                          - 1+0
                          - 5+0
                          - 6+0
                          type: string
                        name:
                          description: Name of the volume. Should be unique within
                            the Node. If not specified, volume name will be auto-generated.
                          maxLength: 64
                          type: string
                        numberOfPhysicalDisks:
                          description: Integer, number of physical disks to use for
                            the logical disk. Defaults to minimum number of disks
                            required for the particular RAID level.
                          minimum: 1
                          type: integer
                        physicalDisks:
                          description: Optional list of physical disk names to be
                            used for the Hardware RAID volumes. The disk names are
                            interpreted by the Hardware RAID controller, and the format
                            is hardware specific.
                          items:
                            type: string
                          type: array
                        rotational:
                          description: Select disks with only rotational or solid-state
                            storage
                          type: boolean
                        sizeGibibytes:
                          description: Size (Integer) of the logical disk to be created
                            in GiB. If unspecified or set be 0, the maximum capacity
                            of disk will be used for logical disk.
                          minimum: 0
                          type: integer
                      required:
                      - level
                      type: object
                    nullable: true
                    type: array
                  softwareRAIDVolumes:
                    description: The list of logical disks for software RAID, if rootDeviceHints
                      isn't used, first volume is root volume. If HardwareRAIDVolumes
                      is set this item will be invalid. The number of created Software
                      RAID devices must be 1 or 2. If there is only one Software RAID
                      device, it has to be a RAID-1. If there are two, the first one
                      has to be a RAID-1, while the RAID level for the second one
                      can be 0, 1, or 1+0. As the first RAID device will be the deployment
                      device, enforcing a RAID-1 reduces the risk of ending up with
                      a non-booting node in case of a disk failure. Software RAID
                      will always be deleted.
                    items:
                      description: SoftwareRAIDVolume defines the desired configuration
                        of volume in software RAID
                      properties:
                        level:
                          description: 'RAID level for the logical disk. The following
                            levels are supported: 0;1;1+0.'
                          enum:
                          - "0"
                          - "1"
                          - 1+0
                          type: string
                        physicalDisks:
                          description: A list of device hints, the number of items
                            should be greater than or equal to 2.
                          items:
                            description: RootDeviceHints holds the hints for specifying
                              the storage location for the root filesystem for the
                              image.
                            properties:
                              deviceName:
                                description: A Linux device name like "/dev/vda",
                                  or a by-path link to it like "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0".
                                  The hint must match the actual value exactly.
                                type: string
                              hctl:
                                description: A SCSI bus address like 0:0:0:0. The
                                  hint must match the actual value exactly.
                                type: string
                              minSizeGigabytes:
                                description: The minimum size of the device in Gigabytes.
                                minimum: 0
                                type: integer
                              model:
                                description: A vendor-specific device identifier.
                                  The hint can be a substring of the actual value.
                                type: string
                              rotational:
                                description: True if the device should use spinning
                                  media, false otherwise.
                                type: boolean
                              serialNumber:
                                description: Device serial number. The hint must match
                                  the actual value exactly.
                                type: string
                              vendor:
                                description: The name of the vendor or manufacturer
                                  of the device. The hint can be a substring of the
                                  actual value.
                                type: string
                              wwn:
                                description: Unique storage identifier. The hint must
                                  match the actual value exactly.
                                type: string
                              wwnVendorExtension:
                                description: Unique vendor storage identifier. The
                                  hint must match the actual value exactly.
                                type: string
                              wwnWithExtension:
                                description: Unique storage identifier with the vendor
                                  extension appended. The hint must match the actual
                                  value exactly.
                                type: string
                            type: object
                          minItems: 2
                          type: array
                        sizeGibibytes:
                          description: Size (Integer) of the logical disk to be created
                            in GiB. If unspecified or set be 0, the maximum capacity
                            of disk will be used for logical disk.
                          minimum: 0
                          type: integer
                      required:
                      - level
                      type: object
                    maxItems: 2
                    nullable: true
                    type: array
                type: object
              rootDeviceHints:
                description: Provide guidance about how to choose the device for the
                  image being provisioned.
                properties:
                  deviceName:
                    description: A Linux device name like "/dev/vda", or a by-path
                      link to it like "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0".
                      The hint must match the actual value exactly.
                    type: string
                  hctl:
                    description: A SCSI bus address like 0:0:0:0. The hint must match
                      the actual value exactly.
                    type: string
                  minSizeGigabytes:
                    description: The minimum size of the device in Gigabytes.
                    minimum: 0
                    type: integer
                  model:
                    description: A vendor-specific device identifier. The hint can
                      be a substring of the actual value.
                    type: string
                  rotational:
                    description: True if the device should use spinning media, false
                      otherwise.
                    type: boolean
                  serialNumber:
                    description: Device serial number. The hint must match the actual
                      value exactly.
                    type: string
                  vendor:
                    description: The name of the vendor or manufacturer of the device.
                      The hint can be a substring of the actual value.
                    type: string
                  wwn:
                    description: Unique storage identifier. The hint must match the
                      actual value exactly.
                    type: string
                  wwnVendorExtension:
                    description: Unique vendor storage identifier. The hint must match
                      the actual value exactly.
                    type: string
                  wwnWithExtension:
                    description: Unique storage identifier with the vendor extension
                      appended. The hint must match the actual value exactly.
                    type: string
                type: object
              taints:
                description: Taints is the full, authoritative list of taints to apply
                  to the corresponding Machine. This list will overwrite any modifications
                  made to the Machine on an ongoing basis.
                items:
                  description: The node this Taint is attached to has the "effect"
                    on any pod that does not tolerate the Taint.
                  properties:
                    effect:
                      description: Required. The effect of the taint on pods that
                        do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule
                        and NoExecute.
                      type: string
                    key:
                      description: Required. The taint key to be applied to a node.
                      type: string
                    timeAdded:
                      description: TimeAdded represents the time at which the taint
                        was added. It is only written for NoExecute taints.
                      format: date-time
                      type: string
                    value:
                      description: The taint value corresponding to the taint key.
                      type: string
                  required:
                  - effect
                  - key
                  type: object
                type: array
              userData:
                description: UserData holds the reference to the Secret containing
                  the user data to be passed to the host before it boots.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - online
            type: object
          status:
            description: BareMetalHostStatus defines the observed state of BareMetalHost
            properties:
              errorCount:
                default: 0
                description: ErrorCount records how many times the host has encoutered
                  an error since the last successful operation
                type: integer
              errorMessage:
                description: the last error message reported by the provisioning subsystem
                type: string
              errorType:
                description: ErrorType indicates the type of failure encountered when
                  the OperationalStatus is OperationalStatusError
                enum:
                - provisioned registration error
                - registration error
                - inspection error
                - preparation error
                - provisioning error
                - power management error
                type: string
              goodCredentials:
                description: the last credentials we were able to validate as working
                properties:
                  credentials:
                    description: SecretReference represents a Secret Reference. It
                      has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  credentialsVersion:
                    type: string
                type: object
              hardware:
                description: The hardware discovered to exist on the host.
                properties:
                  cpu:
                    description: CPU describes one processor on the host.
                    properties:
                      arch:
                        type: string
                      clockMegahertz:
                        description: ClockSpeed is a clock speed in MHz
                        format: double
                        type: number
                      count:
                        type: integer
                      flags:
                        items:
                          type: string
                        type: array
                      model:
                        type: string
                    type: object
                  firmware:
                    description: Firmware describes the firmware on the host.
                    properties:
                      bios:
                        description: The BIOS for this firmware
                        properties:
                          date:
                            description: The release/build date for this BIOS
                            type: string
                          vendor:
                            description: The vendor name for this BIOS
                            type: string
                          version:
                            description: The version of the BIOS
                            type: string
                        type: object
                    type: object
                  hostname:
                    type: string
                  nics:
                    items:
                      description: NIC describes one network interface on the host.
                      properties:
                        ip:
                          description: The IP address of the interface. This will
                            be an IPv4 or IPv6 address if one is present.  If both
                            IPv4 and IPv6 addresses are present in a dual-stack environment,
                            two nics will be output, one with each IP.
                          type: string
                        mac:
                          description: The device MAC address
                          pattern: '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'
                          type: string
                        model:
                          description: The vendor and product IDs of the NIC, e.g.
                            "0x8086 0x1572"
                          type: string
                        name:
                          description: The name of the network interface, e.g. "en0"
                          type: string
                        pxe:
                          description: Whether the NIC is PXE Bootable
                          type: boolean
                        speedGbps:
                          description: The speed of the device in Gigabits per second
                          type: integer
                        vlanId:
                          description: The untagged VLAN ID
                          format: int32
                          maximum: 4094
                          minimum: 0
                          type: integer
                        vlans:
                          description: The VLANs available
                          items:
                            description: VLAN represents the name and ID of a VLAN
                            properties:
                              id:
                                description: VLANID is a 12-bit 802.1Q VLAN identifier
                                format: int32
                                maximum: 4094
                                minimum: 0
                                type: integer
                              name:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  ramMebibytes:
                    type: integer
                  storage:
                    items:
                      description: Storage describes one storage device (disk, SSD,
                        etc.) on the host.
                      properties:
                        hctl:
                          description: The SCSI location of the device
                          type: string
                        model:
                          description: Hardware model
                          type: string
                        name:
                          description: The Linux device name of the disk, e.g. "/dev/sda".
                            Note that this may not be stable across reboots.
                          type: string
                        rotational:
                          description: Whether this disk represents rotational storage.
                            This field is not recommended for usage, please prefer
                            using 'Type' field instead, this field will be deprecated
                            eventually.
                          type: boolean
                        serialNumber:
                          description: The serial number of the device
                          type: string
                        sizeBytes:
                          description: The size of the disk in Bytes
                          format: int64
                          type: integer
                        type:
                          description: 'Device type, one of: HDD, SSD, NVME.'
                          enum:
                          - HDD
                          - SSD
                          - NVME
                          type: string
                        vendor:
                          description: The name of the vendor of the device
                          type: string
                        wwn:
                          description: The WWN of the device
                          type: string
                        wwnVendorExtension:
                          description: The WWN Vendor extension of the device
                          type: string
                        wwnWithExtension:
                          description: The WWN with the extension
                          type: string
                      type: object
                    type: array
                  systemVendor:
                    description: HardwareSystemVendor stores details about the whole
                      hardware system.
                    properties:
                      manufacturer:
                        type: string
                      productName:
                        type: string
                      serialNumber:
                        type: string
                    type: object
                type: object
              hardwareProfile:
                description: The name of the profile matching the hardware details.
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              operationHistory:
                description: OperationHistory holds information about operations performed
                  on this host.
                properties:
                  deprovision:
                    description: OperationMetric contains metadata about an operation
                      (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                  inspect:
                    description: OperationMetric contains metadata about an operation
                      (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                  provision:
                    description: OperationMetric contains metadata about an operation
                      (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                  register:
                    description: OperationMetric contains metadata about an operation
                      (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                type: object
              operationalStatus:
                description: OperationalStatus holds the status of the host
                enum:
                - ""
                - OK
                - discovered
                - error
                - delayed
                - detached
                type: string
              poweredOn:
                description: indicator for whether or not the host is powered on
                type: boolean
              provisioning:
                description: Information tracked by the provisioner.
                properties:
                  ID:
                    description: The machine's UUID from the underlying provisioning
                      tool
                    type: string
                  bootMode:
                    description: BootMode indicates the boot mode used to provision
                      the node
                    enum:
                    - UEFI
                    - UEFISecureBoot
                    - legacy
                    type: string
                  customDeploy:
                    description: Custom deploy procedure applied to the host.
                    properties:
                      method:
                        description: Custom deploy method name. This name is specific
                          to the deploy ramdisk used. If you don't have a custom deploy
                          ramdisk, you shouldn't use CustomDeploy.
                        type: string
                    required:
                    - method
                    type: object
                  firmware:
                    description: The Bios set by the user
                    properties:
                      simultaneousMultithreadingEnabled:
                        description: 'Allows a single physical processor core to appear
                          as several logical processors. This supports following options:
                          true, false.'
                        enum:
                        - true
                        - false
                        type: boolean
                      sriovEnabled:
                        description: 'SR-IOV support enables a hypervisor to create
                          virtual instances of a PCI-express device, potentially increasing
                          performance. This supports following options: true, false.'
                        enum:
                        - true
                        - false
                        type: boolean
                      virtualizationEnabled:
                        description: 'Supports the virtualization of platform hardware.
                          This supports following options: true, false.'
                        enum:
                        - true
                        - false
                        type: boolean
                    type: object
                  image:
                    description: Image holds the details of the last image successfully
                      provisioned to the host.
                    properties:
                      checksum:
                        description: Checksum is the checksum for the image.
                        type: string
                      checksumType:
                        description: ChecksumType is the checksum algorithm for the
                          image. e.g md5, sha256, sha512
                        enum:
                        - md5
                        - sha256
                        - sha512
                        type: string
                      format:
                        description: DiskFormat contains the format of the image (raw,
                          qcow2, ...). Needs to be set to raw for raw images streaming.
                          Note live-iso means an iso referenced by the url will be
                          live-booted and not deployed to disk, and in this case the
                          checksum options are not required and if specified will
                          be ignored.
                        enum:
                        - raw
                        - qcow2
                        - vdi
                        - vmdk
                        - live-iso
                        type: string
                      url:
                        description: URL is a location of an image to deploy.
                        type: string
                    required:
                    - url
                    type: object
                  raid:
                    description: The Raid set by the user
                    properties:
                      hardwareRAIDVolumes:
                        description: The list of logical disks for hardware RAID,
                          if rootDeviceHints isn't used, first volume is root volume.
                          You can set the value of this field to `[]` to clear all
                          the hardware RAID configurations.
                        items:
                          description: HardwareRAIDVolume defines the desired configuration
                            of volume in hardware RAID
                          properties:
                            controller:
                              description: The name of the RAID controller to use
                              type: string
                            level:
                              description: 'RAID level for the logical disk. The following
                                levels are supported: 0;1;2;5;6;1+0;5+0;6+0.'
                              enum:
                              - "0"
                              - "1"
                              - "2"
                              - "5"
                              - "6"
                              - 1+0
                              - 5+0
                              - 6+0
                              type: string
                            name:
                              description: Name of the volume. Should be unique within
                                the Node. If not specified, volume name will be auto-generated.
                              maxLength: 64
                              type: string
                            numberOfPhysicalDisks:
                              description: Integer, number of physical disks to use
                                for the logical disk. Defaults to minimum number of
                                disks required for the particular RAID level.
                              minimum: 1
                              type: integer
                            physicalDisks:
                              description: Optional list of physical disk names to
                                be used for the Hardware RAID volumes. The disk names
                                are interpreted by the Hardware RAID controller, and
                                the format is hardware specific.
                              items:
                                type: string
                              type: array
                            rotational:
                              description: Select disks with only rotational or solid-state
                                storage
                              type: boolean
                            sizeGibibytes:
                              description: Size (Integer) of the logical disk to be
                                created in GiB. If unspecified or set be 0, the maximum
                                capacity of disk will be used for logical disk.
                              minimum: 0
                              type: integer
                          required:
                          - level
                          type: object
                        nullable: true
                        type: array
                      softwareRAIDVolumes:
                        description: The list of logical disks for software RAID,
                          if rootDeviceHints isn't used, first volume is root volume.
                          If HardwareRAIDVolumes is set this item will be invalid.
                          The number of created Software RAID devices must be 1 or
                          2. If there is only one Software RAID device, it has to
                          be a RAID-1. If there are two, the first one has to be a
                          RAID-1, while the RAID level for the second one can be 0,
                          1, or 1+0. As the first RAID device will be the deployment
                          device, enforcing a RAID-1 reduces the risk of ending up
                          with a non-booting node in case of a disk failure. Software
                          RAID will always be deleted.
                        items:
                          description: SoftwareRAIDVolume defines the desired configuration
                            of volume in software RAID
                          properties:
                            level:
                              description: 'RAID level for the logical disk. The following
                                levels are supported: 0;1;1+0.'
                              enum:
                              - "0"
                              - "1"
                              - 1+0
                              type: string
                            physicalDisks:
                              description: A list of device hints, the number of items
                                should be greater than or equal to 2.
                              items:
                                description: RootDeviceHints holds the hints for specifying
                                  the storage location for the root filesystem for
                                  the image.
                                properties:
                                  deviceName:
                                    description: A Linux device name like "/dev/vda",
                                      or a by-path link to it like "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0".
                                      The hint must match the actual value exactly.
                                    type: string
                                  hctl:
                                    description: A SCSI bus address like 0:0:0:0.
                                      The hint must match the actual value exactly.
                                    type: string
                                  minSizeGigabytes:
                                    description: The minimum size of the device in
                                      Gigabytes.
                                    minimum: 0
                                    type: integer
                                  model:
                                    description: A vendor-specific device identifier.
                                      The hint can be a substring of the actual value.
                                    type: string
                                  rotational:
                                    description: True if the device should use spinning
                                      media, false otherwise.
                                    type: boolean
                                  serialNumber:
                                    description: Device serial number. The hint must
                                      match the actual value exactly.
                                    type: string
                                  vendor:
                                    description: The name of the vendor or manufacturer
                                      of the device. The hint can be a substring of
                                      the actual value.
                                    type: string
                                  wwn:
                                    description: Unique storage identifier. The hint
                                      must match the actual value exactly.
                                    type: string
                                  wwnVendorExtension:
                                    description: Unique vendor storage identifier.
                                      The hint must match the actual value exactly.
                                    type: string
                                  wwnWithExtension:
                                    description: Unique storage identifier with the
                                      vendor extension appended. The hint must match
                                      the actual value exactly.
                                    type: string
                                type: object
                              minItems: 2
                              type: array
                            sizeGibibytes:
                              description: Size (Integer) of the logical disk to be
                                created in GiB. If unspecified or set be 0, the maximum
                                capacity of disk will be used for logical disk.
                              minimum: 0
                              type: integer
                          required:
                          - level
                          type: object
                        maxItems: 2
                        nullable: true
                        type: array
                    type: object
                  rootDeviceHints:
                    description: The RootDevicehints set by the user
                    properties:
                      deviceName:
                        description: A Linux device name like "/dev/vda", or a by-path
                          link to it like "/dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0".
                          The hint must match the actual value exactly.
                        type: string
                      hctl:
                        description: A SCSI bus address like 0:0:0:0. The hint must
                          match the actual value exactly.
                        type: string
                      minSizeGigabytes:
                        description: The minimum size of the device in Gigabytes.
                        minimum: 0
                        type: integer
                      model:
                        description: A vendor-specific device identifier. The hint
                          can be a substring of the actual value.
                        type: string
                      rotational:
                        description: True if the device should use spinning media,
                          false otherwise.
                        type: boolean
                      serialNumber:
                        description: Device serial number. The hint must match the
                          actual value exactly.
                        type: string
                      vendor:
                        description: The name of the vendor or manufacturer of the
                          device. The hint can be a substring of the actual value.
                        type: string
                      wwn:
                        description: Unique storage identifier. The hint must match
                          the actual value exactly.
                        type: string
                      wwnVendorExtension:
                        description: Unique vendor storage identifier. The hint must
                          match the actual value exactly.
                        type: string
                      wwnWithExtension:
                        description: Unique storage identifier with the vendor extension
                          appended. The hint must match the actual value exactly.
                        type: string
                    type: object
                  state:
                    description: An indiciator for what the provisioner is doing with
                      the host.
                    type: string
                required:
                - ID
                - state
                type: object
              triedCredentials:
                description: the last credentials we sent to the provisioning backend
                properties:
                  credentials:
                    description: SecretReference represents a Secret Reference. It
                      has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  credentialsVersion:
                    type: string
                type: object
            required:
            - errorCount
            - errorMessage
            - hardwareProfile
            - operationalStatus
            - poweredOn
            - provisioning
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1
