"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VSphereClusterIdentity:
    """
    VSphereClusterIdentity defines the account to be used for reconciling clusters 
     Deprecated: This type will be removed in one of the next releases.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1alpha4", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VSphereClusterIdentity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentityStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1alpha4" = "infrastructure.cluster.x-k8s.io/v1alpha4"

    kind: "VSphereClusterIdentity" = "VSphereClusterIdentity"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpec

    status?: InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentityStatus


schema InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpec:
    """
    infrastructure clusterx k8s io v1alpha4 v sphere cluster identity spec

    Attributes
    ----------
    allowedNamespaces : InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespaces, default is Undefined, optional
        allowed namespaces
    secretName : str, default is Undefined, optional
        SecretName references a Secret inside the controller namespace with the credentials to use
    """


    allowedNamespaces?: InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespaces

    secretName?: str


    check:
        len(secretName) >= 1


schema InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespaces:
    """
    AllowedNamespaces is used to identify which namespaces are allowed to use this account. Namespaces can be selected with a label selector. If this object is nil, no namespaces will be allowed

    Attributes
    ----------
    selector : InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespacesSelector, default is Undefined, optional
        selector
    """


    selector?: InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespacesSelector


schema InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespacesSelector:
    """
    Selector is a standard Kubernetes LabelSelector. A label query over a set of resources.

    Attributes
    ----------
    matchExpressions : [InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentitySpecAllowedNamespacesSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentityStatus:
    """
    infrastructure clusterx k8s io v1alpha4 v sphere cluster identity status

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentityStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the VSphereCluster.
    ready : bool, default is Undefined, optional
        ready
    """


    conditions?: [InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentityStatusConditionsItems0]

    ready?: bool


schema InfrastructureClusterxK8sIoV1alpha4VSphereClusterIdentityStatusConditionsItems0:
    """
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition. This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


