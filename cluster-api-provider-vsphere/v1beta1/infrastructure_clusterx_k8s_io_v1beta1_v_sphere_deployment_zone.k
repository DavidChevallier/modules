"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VSphereDeploymentZone:
    """
    VSphereDeploymentZone is the Schema for the vspheredeploymentzones API

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VSphereDeploymentZone", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "VSphereDeploymentZone" = "VSphereDeploymentZone"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneSpec

    status?: InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneStatus


schema InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneSpec:
    """
    VSphereDeploymentZoneSpec defines the desired state of VSphereDeploymentZone

    Attributes
    ----------
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    failureDomain : str, default is Undefined, optional
        FailureDomain is the name of the VSphereFailureDomain used for this VSphereDeploymentZone
    placementConstraint : InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneSpecPlacementConstraint, default is Undefined, required
        placement constraint
    server : str, default is Undefined, optional
        Server is the address of the vSphere endpoint.
    """


    controlPlane?: bool

    failureDomain?: str

    placementConstraint: InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneSpecPlacementConstraint

    server?: str


schema InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneSpecPlacementConstraint:
    """
    PlacementConstraint encapsulates the placement constraints used within this deployment zone.

    Attributes
    ----------
    folder : str, default is Undefined, optional
        Folder is the name or inventory path of the folder in which the virtual machine is created/located.
    resourcePool : str, default is Undefined, optional
        ResourcePool is the name or inventory path of the resource pool in which the virtual machine is created/located.
    """


    folder?: str

    resourcePool?: str


schema InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneStatus:
    """
    infrastructure clusterx k8s io v1beta1 v sphere deployment zone status

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the VSphereMachine.
    ready : bool, default is Undefined, optional
        Ready is true when the VSphereDeploymentZone resource is ready. If set to false, it will be ignored by VSphereClusters
    """


    conditions?: [InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneStatusConditionsItems0]

    ready?: bool


schema InfrastructureClusterxK8sIoV1beta1VSphereDeploymentZoneStatusConditionsItems0:
    """
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition. This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


