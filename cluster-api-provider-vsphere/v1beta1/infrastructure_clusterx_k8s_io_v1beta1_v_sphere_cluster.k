"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VSphereCluster:
    """
    VSphereCluster is the Schema for the vsphereclusters API

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VSphereCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1beta1VSphereClusterSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1beta1VSphereClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1beta1" = "infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "VSphereCluster" = "VSphereCluster"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1beta1VSphereClusterSpec

    status?: InfrastructureClusterxK8sIoV1beta1VSphereClusterStatus


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterSpec:
    """
    VSphereClusterSpec defines the desired state of VSphereCluster

    Attributes
    ----------
    clusterModules : [InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecClusterModulesItems0], default is Undefined, optional
        ClusterModules hosts information regarding the anti-affinity vSphere constructs for each of the objects responsible for creation of VM objects belonging to the cluster.
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    failureDomainSelector : InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecFailureDomainSelector, default is Undefined, optional
        failure domain selector
    identityRef : InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecIdentityRef, default is Undefined, optional
        identity ref
    server : str, default is Undefined, optional
        Server is the address of the vSphere endpoint.
    thumbprint : str, default is Undefined, optional
        Thumbprint is the colon-separated SHA-1 checksum of the given vCenter server's host certificate
    """


    clusterModules?: [InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecClusterModulesItems0]

    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecControlPlaneEndpoint

    failureDomainSelector?: InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecFailureDomainSelector

    identityRef?: InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecIdentityRef

    server?: str

    thumbprint?: str


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecClusterModulesItems0:
    """
    ClusterModule holds the anti affinity construct `ClusterModule` identifier in use by the VMs owned by the object referred by the TargetObjectName field.

    Attributes
    ----------
    controlPlane : bool, default is Undefined, required
        ControlPlane indicates whether the referred object is responsible for control plane nodes. Currently, only the KubeadmControlPlane objects have this flag set to true. Only a single object in the slice can have this value set to true.
    moduleUUID : str, default is Undefined, required
        ModuleUUID is the unique identifier of the `ClusterModule` used by the object.
    targetObjectName : str, default is Undefined, required
        TargetObjectName points to the object that uses the Cluster Module information to enforce anti-affinity amongst its descendant VM objects.
    """


    controlPlane: bool

    moduleUUID: str

    targetObjectName: str


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecControlPlaneEndpoint:
    """
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecFailureDomainSelector:
    """
    FailureDomainSelector is the label selector to use for failure domain selection for the control plane nodes of the cluster. If not set (`nil`), selecting failure domains will be disabled. An empty value (`{}`) selects all existing failure domains. A valid selector will select all failure domains which match the selector.

    Attributes
    ----------
    matchExpressions : [InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecFailureDomainSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecFailureDomainSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecFailureDomainSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterSpecIdentityRef:
    """
    IdentityRef is a reference to either a Secret or VSphereClusterIdentity that contains the identity to use when reconciling the cluster.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity. Can either be VSphereClusterIdentity or Secret
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "VSphereClusterIdentity" | "Secret"

    name: str


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterStatus:
    """
    VSphereClusterStatus defines the observed state of VSphereClusterSpec

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1beta1VSphereClusterStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the VSphereCluster.
    failureDomains : {str:InfrastructureClusterxK8sIoV1beta1VSphereClusterStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains is a list of failure domain objects synced from the infrastructure provider.
    ready : bool, default is Undefined, optional
        ready
    vCenterVersion : str, default is Undefined, optional
        VCenterVersion defines the version of the vCenter server defined in the spec.
    """


    conditions?: [InfrastructureClusterxK8sIoV1beta1VSphereClusterStatusConditionsItems0]

    failureDomains?: {str:InfrastructureClusterxK8sIoV1beta1VSphereClusterStatusFailureDomainsAnon}

    ready?: bool

    vCenterVersion?: str


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterStatusConditionsItems0:
    """
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition. This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema InfrastructureClusterxK8sIoV1beta1VSphereClusterStatusFailureDomainsAnon:
    """
    FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


