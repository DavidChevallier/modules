"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProviderServiceAccount:
    """
    ProviderServiceAccount is the schema for the ProviderServiceAccount API.

    Attributes
    ----------
    apiVersion : str, default is "vmware.infrastructure.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProviderServiceAccount", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpec, default is Undefined, optional
        spec
    """


    apiVersion: "vmware.infrastructure.cluster.x-k8s.io/v1beta1" = "vmware.infrastructure.cluster.x-k8s.io/v1beta1"

    kind: "ProviderServiceAccount" = "ProviderServiceAccount"

    metadata?: v1.ObjectMeta

    spec?: VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpec


schema VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpec:
    """
    ProviderServiceAccountSpec defines the desired state of ProviderServiceAccount.

    Attributes
    ----------
    ref : VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpecRef, default is Undefined, required
        ref
    rules : [VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpecRulesItems0], default is Undefined, required
        Rules specifies the privileges that need to be granted to the service account.
    targetNamespace : str, default is Undefined, required
        TargetNamespace is the namespace in the target cluster where the secret containing the generated service account token needs to be created.
    targetSecretName : str, default is Undefined, required
        TargetSecretName is the name of the secret in the target cluster that contains the generated service account token.
    """


    ref: VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpecRef

    rules: [VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpecRulesItems0]

    targetNamespace: str

    targetSecretName: str


schema VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpecRef:
    """
    Ref specifies the reference to the VSphereCluster for which the ProviderServiceAccount needs to be realized.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema VmwareInfrastructureClusterxK8sIoV1beta1ProviderServiceAccountSpecRulesItems0:
    """
    PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.

    Attributes
    ----------
    apiGroups : [str], default is Undefined, optional
        APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. "" represents the core API group and "*" represents all API groups.
    nonResourceURLs : [str], default is Undefined, optional
        NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
    resourceNames : [str], default is Undefined, optional
        ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
    resources : [str], default is Undefined, optional
        Resources is a list of resources this rule applies to. '*' represents all resources.
    verbs : [str], default is Undefined, required
        Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
    """


    apiGroups?: [str]

    nonResourceURLs?: [str]

    resourceNames?: [str]

    resources?: [str]

    verbs: [str]


