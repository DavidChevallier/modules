"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachineSetResourcePolicy:
    """
    VirtualMachineSetResourcePolicy is the Schema for the virtualmachinesetresourcepolicies API.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachineSetResourcePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpec, default is Undefined, optional
        spec
    status : VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "vmoperator.vmware.com/v1alpha2" = "vmoperator.vmware.com/v1alpha2"

    kind: "VirtualMachineSetResourcePolicy" = "VirtualMachineSetResourcePolicy"

    metadata?: v1.ObjectMeta

    spec?: VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpec

    status?: VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicyStatus


schema VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpec:
    """
    VirtualMachineSetResourcePolicySpec defines the desired state of VirtualMachineSetResourcePolicy.

    Attributes
    ----------
    clusterModuleGroups : [str], default is Undefined, optional
        cluster module groups
    folder : str, default is Undefined, optional
        folder
    resourcePool : VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePool, default is Undefined, optional
        resource pool
    """


    clusterModuleGroups?: [str]

    folder?: str

    resourcePool?: VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePool


schema VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePool:
    """
    ResourcePoolSpec defines a Logical Grouping of workloads that share resource policies.

    Attributes
    ----------
    limits : VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePoolLimits, default is Undefined, optional
        limits
    name : str, default is Undefined, optional
        Name describes the name of the ResourcePool grouping.
    reservations : VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePoolReservations, default is Undefined, optional
        reservations
    """


    limits?: VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePoolLimits

    name?: str

    reservations?: VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePoolReservations


schema VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePoolLimits:
    """
    Limits describes the limit to resources available to the ResourcePool.

    Attributes
    ----------
    cpu : int | str, default is Undefined, optional
        cpu
    memory : int | str, default is Undefined, optional
        memory
    """


    cpu?: int | str

    memory?: int | str


    check:
        regex.match(str(cpu), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cpu
        regex.match(str(memory), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if memory


schema VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicySpecResourcePoolReservations:
    """
    Reservations describes the guaranteed resources reserved for the ResourcePool.

    Attributes
    ----------
    cpu : int | str, default is Undefined, optional
        cpu
    memory : int | str, default is Undefined, optional
        memory
    """


    cpu?: int | str

    memory?: int | str


    check:
        regex.match(str(cpu), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cpu
        regex.match(str(memory), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if memory


schema VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicyStatus:
    """
    VirtualMachineSetResourcePolicyStatus defines the observed state of VirtualMachineSetResourcePolicy.

    Attributes
    ----------
    clustermodules : [VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicyStatusClustermodulesItems0], default is Undefined, optional
        clustermodules
    """


    clustermodules?: [VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicyStatusClustermodulesItems0]


schema VmoperatorVmwareComV1alpha2VirtualMachineSetResourcePolicyStatusClustermodulesItems0:
    """
    VSphereClusterModuleStatus describes the observed state of a vSphere cluster module.

    Attributes
    ----------
    clusterMoID : str, default is Undefined, required
        cluster mo ID
    groupName : str, default is Undefined, required
        group name
    moduleUUID : str, default is Undefined, required
        module UUID
    """


    clusterMoID: str

    groupName: str

    moduleUUID: str


