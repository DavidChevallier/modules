"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachineClass:
    """
    VirtualMachineClass is the Schema for the virtualmachineclasses API. A VirtualMachineClass represents the desired specification and the observed status of a VirtualMachineClass instance.  A VirtualMachineClass represents a policy and configuration resource which defines a set of attributes to be used in the configuration of a VirtualMachine instance.  A VirtualMachine resource references a VirtualMachineClass as a required input.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachineClass", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VmoperatorVmwareComV1alpha1VirtualMachineClassSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        VirtualMachineClassStatus defines the observed state of VirtualMachineClass.  VirtualMachineClasses are immutable, non-dynamic resources, so this status is currently unused.
    """


    apiVersion: "vmoperator.vmware.com/v1alpha1" = "vmoperator.vmware.com/v1alpha1"

    kind: "VirtualMachineClass" = "VirtualMachineClass"

    metadata?: v1.ObjectMeta

    spec?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpec

    status?: any


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpec:
    """
    VirtualMachineClassSpec defines the desired state of VirtualMachineClass.

    Attributes
    ----------
    configSpec : any, default is Undefined, optional
        ConfigSpec describes additional configuration information for a VirtualMachine. The contents of this field are the VirtualMachineConfigSpec data object (https://bit.ly/3HDtiRu) marshaled to JSON using the discriminator field "_typeName" to preserve type information.
    controllerName : str, default is Undefined, optional
        ControllerName describes the name of the controller responsible for reconciling VirtualMachine resources that are realized from this VirtualMachineClass. 
         When omitted, controllers reconciling VirtualMachine resources determine the default controller name from the environment variable DEFAULT_VM_CLASS_CONTROLLER_NAME. If this environment variable is not defined or empty, it defaults to vmoperator.vmware.com/vsphere. 
         Once a non-empty value is assigned to this field, attempts to set this field to an empty value will be silently ignored.
    description : str, default is Undefined, optional
        Description describes the configuration of the VirtualMachineClass which is not related to virtual hardware or infrastructure policy. This field is used to address remaining specs about this VirtualMachineClass.
    hardware : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardware, default is Undefined, optional
        hardware
    policies : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPolicies, default is Undefined, optional
        policies
    """


    configSpec?: any

    controllerName?: str

    description?: str

    hardware?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardware

    policies?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPolicies


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardware:
    """
    Hardware describes the configuration of the VirtualMachineClass attributes related to virtual hardware.  The configuration specified in this field is used to customize the virtual hardware characteristics of any VirtualMachine associated with this VirtualMachineClass.

    Attributes
    ----------
    cpus : int, default is Undefined, optional
        cpus
    devices : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevices, default is Undefined, optional
        devices
    instanceStorage : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareInstanceStorage, default is Undefined, optional
        instance storage
    memory : int | str, default is Undefined, optional
        memory
    """


    cpus?: int

    devices?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevices

    instanceStorage?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareInstanceStorage

    memory?: int | str


    check:
        regex.match(str(memory), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if memory


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevices:
    """
    VirtualDevices contains information about the virtual devices associated with a VirtualMachineClass.

    Attributes
    ----------
    dynamicDirectPathIODevices : [VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevicesDynamicDirectPathIODevicesItems0], default is Undefined, optional
        dynamic direct path i o devices
    vgpuDevices : [VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevicesVgpuDevicesItems0], default is Undefined, optional
        vgpu devices
    """


    dynamicDirectPathIODevices?: [VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevicesDynamicDirectPathIODevicesItems0]

    vgpuDevices?: [VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevicesVgpuDevicesItems0]


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevicesDynamicDirectPathIODevicesItems0:
    """
    DynamicDirectPathIODevice contains the configuration corresponding to a Dynamic DirectPath I/O device.

    Attributes
    ----------
    customLabel : str, default is Undefined, optional
        custom label
    deviceID : int, default is Undefined, required
        device ID
    vendorID : int, default is Undefined, required
        vendor ID
    """


    customLabel?: str

    deviceID: int

    vendorID: int


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareDevicesVgpuDevicesItems0:
    """
    VGPUDevice contains the configuration corresponding to a vGPU device.

    Attributes
    ----------
    profileName : str, default is Undefined, required
        profile name
    """


    profileName: str


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareInstanceStorage:
    """
    InstanceStorage provides information used to configure instance storage volumes for a VirtualMachine.

    Attributes
    ----------
    storageClass : str, default is Undefined, optional
        StorageClass refers to the name of a StorageClass resource used to provide the storage for the configured instance storage volumes. The value of this field has no relationship to or bearing on the field virtualMachine.spec.storageClass. Please note the referred StorageClass must be available in the same namespace as the VirtualMachineClass that uses it for configuring instance storage.
    volumes : [VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareInstanceStorageVolumesItems0], default is Undefined, optional
        Volumes describes instance storage volumes created for a VirtualMachine instance that use this VirtualMachineClass.
    """


    storageClass?: str

    volumes?: [VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareInstanceStorageVolumesItems0]


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecHardwareInstanceStorageVolumesItems0:
    """
    InstanceStorageVolume contains information required to create an instance storage volume on a VirtualMachine.

    Attributes
    ----------
    size : int | str, default is Undefined, required
        size
    """


    size: int | str


    check:
        regex.match(str(size), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$")


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPolicies:
    """
    Policies describes the configuration of the VirtualMachineClass attributes related to virtual infrastructure policy.  The configuration specified in this field is used to customize various policies related to infrastructure resource consumption.

    Attributes
    ----------
    resources : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResources, default is Undefined, optional
        resources
    """


    resources?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResources


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResources:
    """
    VirtualMachineClassResources describes the virtual hardware resource reservations and limits configuration to be used by a VirtualMachineClass.

    Attributes
    ----------
    limits : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResourcesLimits, default is Undefined, optional
        limits
    requests : VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResourcesRequests, default is Undefined, optional
        requests
    """


    limits?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResourcesLimits

    requests?: VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResourcesRequests


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResourcesLimits:
    """
    VirtualMachineResourceSpec describes a virtual hardware policy specification.

    Attributes
    ----------
    cpu : int | str, default is Undefined, optional
        cpu
    memory : int | str, default is Undefined, optional
        memory
    """


    cpu?: int | str

    memory?: int | str


    check:
        regex.match(str(cpu), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cpu
        regex.match(str(memory), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if memory


schema VmoperatorVmwareComV1alpha1VirtualMachineClassSpecPoliciesResourcesRequests:
    """
    VirtualMachineResourceSpec describes a virtual hardware policy specification.

    Attributes
    ----------
    cpu : int | str, default is Undefined, optional
        cpu
    memory : int | str, default is Undefined, optional
        memory
    """


    cpu?: int | str

    memory?: int | str


    check:
        regex.match(str(cpu), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if cpu
        regex.match(str(memory), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if memory


