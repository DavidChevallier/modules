"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachineService:
    """
    VirtualMachineService is the Schema for the virtualmachineservices API. A VirtualMachineService represents the desired specification and the observed status of a VirtualMachineService instance. A VirtualMachineService represents a network service, provided by one or more VirtualMachines, that is desired to be exposed to other workloads both internal and external to the cluster.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachineService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VmoperatorVmwareComV1alpha1VirtualMachineServiceSpec, default is Undefined, optional
        spec
    status : VmoperatorVmwareComV1alpha1VirtualMachineServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "vmoperator.vmware.com/v1alpha1" = "vmoperator.vmware.com/v1alpha1"

    kind: "VirtualMachineService" = "VirtualMachineService"

    metadata?: v1.ObjectMeta

    spec?: VmoperatorVmwareComV1alpha1VirtualMachineServiceSpec

    status?: VmoperatorVmwareComV1alpha1VirtualMachineServiceStatus


schema VmoperatorVmwareComV1alpha1VirtualMachineServiceSpec:
    """
    VirtualMachineServiceSpec defines the desired state of VirtualMachineService. Each VirtualMachineService exposes a set of TargetPorts on a set of VirtualMachine instances as a network endpoint within or outside of the Kubernetes cluster. The VirtualMachineService is loosely coupled to the VirtualMachines that are backing it through the use of a Label Selector. In Kubernetes, a Label Selector enables matching of a resource using a set of key-value pairs, aka Labels. By using a Label Selector, the VirtualMachineService can be generically defined to apply to any VirtualMachine in the same namespace that has the appropriate set of labels.

    Attributes
    ----------
    clusterIp : str, default is Undefined, optional
        clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    externalName : str, default is Undefined, optional
        externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
    loadBalancerIP : str, default is Undefined, optional
        Only applies to VirtualMachineService Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying load balancer provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the provider does not support the feature.
    loadBalancerSourceRanges : [str], default is Undefined, optional
        LoadBalancerSourceRanges is an array of IP addresses in the format of CIDRs, for example: 103.21.244.0/22 and 10.0.0.0/24. If specified and supported by the load balancer provider, this will restrict ingress traffic to the specified client IPs. This field will be ignored if the provider does not support the feature.
    ports : [VmoperatorVmwareComV1alpha1VirtualMachineServiceSpecPortsItems0], default is Undefined, optional
        Ports specifies a list of VirtualMachineServicePort to expose with this VirtualMachineService. Each of these ports will be an accessible network entry point to access this service by.
    selector : {str:str}, default is Undefined, optional
        Selector specifies a map of key-value pairs, also known as a Label Selector, that is used to match this VirtualMachineService with the set of VirtualMachines that should back this VirtualMachineService.
    $type : str, default is Undefined, required
        Type specifies a desired VirtualMachineServiceType for this VirtualMachineService. Supported types are ClusterIP, LoadBalancer, ExternalName.
    """


    clusterIp?: str

    externalName?: str

    loadBalancerIP?: str

    loadBalancerSourceRanges?: [str]

    ports?: [VmoperatorVmwareComV1alpha1VirtualMachineServiceSpecPortsItems0]

    selector?: {str:str}

    $type: str


schema VmoperatorVmwareComV1alpha1VirtualMachineServiceSpecPortsItems0:
    """
    VirtualMachineServicePort describes the specification of a service port to be exposed by a VirtualMachineService. This VirtualMachineServicePort specification includes attributes that define the external and internal representation of the service port.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name describes the name to be used to identify this VirtualMachineServicePort
    port : int, default is Undefined, required
        Port describes the external port that will be exposed by the service.
    $protocol : str, default is Undefined, required
        Protocol describes the Layer 4 transport protocol for this port. Supports "TCP", "UDP", and "SCTP".
    targetPort : int, default is Undefined, required
        TargetPort describes the internal port open on a VirtualMachine that should be mapped to the external Port.
    """


    name: str

    port: int

    $protocol: str

    targetPort: int


schema VmoperatorVmwareComV1alpha1VirtualMachineServiceStatus:
    """
    VirtualMachineServiceStatus defines the observed state of VirtualMachineService.

    Attributes
    ----------
    loadBalancer : VmoperatorVmwareComV1alpha1VirtualMachineServiceStatusLoadBalancer, default is Undefined, optional
        load balancer
    """


    loadBalancer?: VmoperatorVmwareComV1alpha1VirtualMachineServiceStatusLoadBalancer


schema VmoperatorVmwareComV1alpha1VirtualMachineServiceStatusLoadBalancer:
    """
    LoadBalancer contains the current status of the load balancer, if one is present.

    Attributes
    ----------
    ingress : [VmoperatorVmwareComV1alpha1VirtualMachineServiceStatusLoadBalancerIngressItems0], default is Undefined, optional
        Ingress is a list containing ingress addresses for the load balancer. Traffic intended for the service should be sent to any of these ingress points.
    """


    ingress?: [VmoperatorVmwareComV1alpha1VirtualMachineServiceStatusLoadBalancerIngressItems0]


schema VmoperatorVmwareComV1alpha1VirtualMachineServiceStatusLoadBalancerIngressItems0:
    """
    LoadBalancerIngress represents the status of a load balancer ingress point: traffic intended for the service should be sent to an ingress point. IP or Hostname may both be set in this structure. It is up to the consumer to determine which field should be used when accessing this LoadBalancer.

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        Hostname is set for load balancer ingress points that are specified by a DNS address.
    ip : str, default is Undefined, optional
        IP is set for load balancer ingress points that are specified by an IP address.
    """


    hostname?: str

    ip?: str


