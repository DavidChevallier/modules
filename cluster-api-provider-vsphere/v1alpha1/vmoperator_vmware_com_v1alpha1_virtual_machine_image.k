"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachineImage:
    """
    VirtualMachineImage is the Schema for the virtualmachineimages API A VirtualMachineImage represents a VirtualMachine image (e.g. VM template) that can be used as the base image for creating a VirtualMachine instance.  The VirtualMachineImage is a required field of the VirtualMachine spec.  Currently, VirtualMachineImages are immutable to end users.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachineImage", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VmoperatorVmwareComV1alpha1VirtualMachineImageSpec, default is Undefined, optional
        spec
    status : VmoperatorVmwareComV1alpha1VirtualMachineImageStatus, default is Undefined, optional
        status
    """


    apiVersion: "vmoperator.vmware.com/v1alpha1" = "vmoperator.vmware.com/v1alpha1"

    kind: "VirtualMachineImage" = "VirtualMachineImage"

    metadata?: v1.ObjectMeta

    spec?: VmoperatorVmwareComV1alpha1VirtualMachineImageSpec

    status?: VmoperatorVmwareComV1alpha1VirtualMachineImageStatus


schema VmoperatorVmwareComV1alpha1VirtualMachineImageSpec:
    """
    VirtualMachineImageSpec defines the desired state of VirtualMachineImage.

    Attributes
    ----------
    hwVersion : int, default is Undefined, optional
        HardwareVersion describes the virtual hardware version of the image
    imageID : str, default is Undefined, required
        ImageID is a unique identifier exposed by the provider of this VirtualMachineImage.
    imageSourceType : str, default is Undefined, optional
        ImageSourceType describes the type of content source of the VirtualMachineImage.  The only Content Source supported currently is the vSphere Content Library.
    osInfo : VmoperatorVmwareComV1alpha1VirtualMachineImageSpecOsInfo, default is Undefined, optional
        os info
    ovfEnv : {str:VmoperatorVmwareComV1alpha1VirtualMachineImageSpecOvfEnvAnon}, default is Undefined, optional
        OVFEnv describes the user configurable customization parameters of the VirtualMachineImage.
    productInfo : VmoperatorVmwareComV1alpha1VirtualMachineImageSpecProductInfo, default is Undefined, optional
        product info
    providerRef : VmoperatorVmwareComV1alpha1VirtualMachineImageSpecProviderRef, default is Undefined, required
        provider ref
    $type : str, default is Undefined, required
        Type describes the type of the VirtualMachineImage. Currently, the only supported image is "OVF"
    """


    hwVersion?: int

    imageID: str

    imageSourceType?: str

    osInfo?: VmoperatorVmwareComV1alpha1VirtualMachineImageSpecOsInfo

    ovfEnv?: {str:VmoperatorVmwareComV1alpha1VirtualMachineImageSpecOvfEnvAnon}

    productInfo?: VmoperatorVmwareComV1alpha1VirtualMachineImageSpecProductInfo

    providerRef: VmoperatorVmwareComV1alpha1VirtualMachineImageSpecProviderRef

    $type: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageSpecOsInfo:
    """
    OSInfo describes the attributes of the VirtualMachineImage relating to the Operating System contained in the image.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type typically describes the type of the guest operating system.
    version : str, default is Undefined, optional
        Version typically describes the version of the guest operating system.
    """


    $type?: str

    version?: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageSpecOvfEnvAnon:
    """
    OvfProperty describes information related to a user configurable property element that is supported by VirtualMachineImage and can be customized during VirtualMachine creation.

    Attributes
    ----------
    default : str, default is Undefined, optional
        Default describes the default value of the ovf key.
    description : str, default is Undefined, optional
        Description contains the value of the OVF property's optional "Description" element.
    key : str, default is Undefined, required
        Key describes the key of the ovf property.
    label : str, default is Undefined, optional
        Label contains the value of the OVF property's optional "Label" element.
    $type : str, default is Undefined, required
        Type describes the type of the ovf property.
    """


    default?: str

    description?: str

    key: str

    label?: str

    $type: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageSpecProductInfo:
    """
    ProductInfo describes the attributes of the VirtualMachineImage relating to the product contained in the image.

    Attributes
    ----------
    fullVersion : str, default is Undefined, optional
        FullVersion typically describes a long-form version of the image.
    product : str, default is Undefined, optional
        Product typically describes the type of product contained in the image.
    vendor : str, default is Undefined, optional
        Vendor typically describes the name of the vendor that is producing the image.
    version : str, default is Undefined, optional
        Version typically describes a short-form version of the image.
    """


    fullVersion?: str

    product?: str

    vendor?: str

    version?: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageSpecProviderRef:
    """
    ProviderRef is a reference to a content provider object that describes a provider.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced.
    name : str, default is Undefined, required
        Name is the name of resource being referenced.
    namespace : str, default is Undefined, optional
        Namespace of the resource being referenced. If empty, cluster scoped resource is assumed.
    """


    apiVersion?: str

    kind: str

    name: str

    namespace?: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageStatus:
    """
    VirtualMachineImageStatus defines the observed state of VirtualMachineImage.

    Attributes
    ----------
    conditions : [VmoperatorVmwareComV1alpha1VirtualMachineImageStatusConditionsItems0], default is Undefined, optional
        Conditions describes the current condition information of the VirtualMachineImage object. e.g. if the OS type is supported or image is supported by VMService
    contentLibraryRef : VmoperatorVmwareComV1alpha1VirtualMachineImageStatusContentLibraryRef, default is Undefined, optional
        content library ref
    contentVersion : str, default is Undefined, optional
        ContentVersion describes the observed content version of this VirtualMachineImage that was last successfully synced with the vSphere content library item.
    firmware : str, default is Undefined, optional
        Firmware describe the firmware type used by this VirtualMachineImage. eg: bios, efi.
    imageName : str, default is Undefined, optional
        ImageName describes the display name of this VirtualMachineImage.
    imageSupported : bool, default is Undefined, optional
        ImageSupported indicates whether the VirtualMachineImage is supported by VMService. A VirtualMachineImage is supported by VMService if the following conditions are true: - VirtualMachineImageV1Alpha1CompatibleCondition
    internalId : str, default is Undefined, optional
        Deprecated
    powerState : str, default is Undefined, optional
        Deprecated
    uuid : str, default is Undefined, optional
        Deprecated
    """


    conditions?: [VmoperatorVmwareComV1alpha1VirtualMachineImageStatusConditionsItems0]

    contentLibraryRef?: VmoperatorVmwareComV1alpha1VirtualMachineImageStatusContentLibraryRef

    contentVersion?: str

    firmware?: str

    imageName?: str

    imageSupported?: bool

    internalId?: str

    powerState?: str

    uuid?: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageStatusConditionsItems0:
    """
    Condition defines an observation of a VM Operator API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition. This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to disambiguate is important.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema VmoperatorVmwareComV1alpha1VirtualMachineImageStatusContentLibraryRef:
    """
    ContentLibraryRef is a reference to the source ContentLibrary/ClusterContentLibrary resource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


