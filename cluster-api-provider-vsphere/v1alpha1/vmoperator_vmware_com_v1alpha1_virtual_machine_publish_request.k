"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualMachinePublishRequest:
    """
    VirtualMachinePublishRequest defines the information necessary to publish a VirtualMachine as a VirtualMachineImage to an image registry.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualMachinePublishRequest", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpec, default is Undefined, optional
        spec
    status : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatus, default is Undefined, optional
        status
    """


    apiVersion: "vmoperator.vmware.com/v1alpha1" = "vmoperator.vmware.com/v1alpha1"

    kind: "VirtualMachinePublishRequest" = "VirtualMachinePublishRequest"

    metadata?: v1.ObjectMeta

    spec?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpec

    status?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatus


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpec:
    """
    VirtualMachinePublishRequestSpec defines the desired state of a VirtualMachinePublishRequest. 
     All the fields in this spec are optional. This is especially useful when a DevOps persona wants to publish a VM without doing anything more than applying a VirtualMachinePublishRequest resource that has the same name as said VM in the same namespace as said VM.

    Attributes
    ----------
    source : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecSource, default is Undefined, optional
        source
    target : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTarget, default is Undefined, optional
        target
    ttlSecondsAfterFinished : int, default is Undefined, optional
        TTLSecondsAfterFinished is the time-to-live duration for how long this resource will be allowed to exist once the publication operation completes. After the TTL expires, the resource will be automatically deleted without the user having to take any direct action. 
         If this field is unset then the request resource will not be automatically deleted. If this field is set to zero then the request resource is eligible for deletion immediately after it finishes.
    """


    source?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecSource

    target?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTarget

    ttlSecondsAfterFinished?: int


    check:
        ttlSecondsAfterFinished >= 0


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecSource:
    """
    Source is the source of the publication request, ex. a VirtualMachine resource. 
     If this value is omitted then the publication controller checks to see if there is a resource with the same name as this VirtualMachinePublishRequest resource, an API version equal to spec.source.apiVersion, and a kind equal to spec.source.kind. If such a resource exists, then it is the source of the publication.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha1", optional
        APIVersion is the API version of the referenced object.
    kind : str, default is "VirtualMachine", optional
        Kind is the kind of referenced object.
    name : str, default is Undefined, optional
        Name is the name of the referenced object. 
         If omitted this value defaults to the name of the VirtualMachinePublishRequest resource.
    """


    apiVersion?: str = "vmoperator.vmware.com/v1alpha1"

    kind?: str = "VirtualMachine"

    name?: str


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTarget:
    """
    Target is the target of the publication request, ex. item information and a ContentLibrary resource. 
     If this value is omitted, the controller uses spec.source.name + "-image" as the name of the published item. Additionally, when omitted the controller attempts to identify the target location by matching a resource with an API version equal to spec.target.location.apiVersion, a kind equal to spec.target.location.kind, w/ the label "imageregistry.vmware.com/default". 
     Please note that while optional, if a VirtualMachinePublishRequest sans target information is applied to a namespace without a default publication target, then the VirtualMachinePublishRequest resource will be marked in error.

    Attributes
    ----------
    item : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTargetItem, default is Undefined, optional
        item
    location : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTargetLocation, default is Undefined, optional
        location
    """


    item?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTargetItem

    location?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTargetLocation


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTargetItem:
    """
    Item contains information about the name of the object to which the VM is published. 
     Please note this value is optional and if omitted, the controller will use spec.source.name + "-image" as the name of the published item.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description is the description to assign to the published object.
    name : str, default is Undefined, optional
        Name is the name of the published object. 
         If the spec.target.location.apiVersion equals imageregistry.vmware.com/v1alpha1 and the spec.target.location.kind equals ContentLibrary, then this should be the name that will show up in vCenter Content Library, not the custom resource name in the namespace. 
         If omitted then the controller will use spec.source.name + "-image".
    """


    description?: str

    name?: str


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestSpecTargetLocation:
    """
    Location contains information about the location to which to publish the VM.

    Attributes
    ----------
    apiVersion : str, default is "imageregistry.vmware.com/v1alpha1", optional
        APIVersion is the API version of the referenced object.
    kind : str, default is "ContentLibrary", optional
        Kind is the kind of referenced object.
    name : str, default is Undefined, optional
        Name is the name of the referenced object. 
         Please note an error will be returned if this field is not set in a namespace that lacks a default publication target. 
         A default publication target is a resource with an API version equal to spec.target.location.apiVersion, a kind equal to spec.target.location.kind, and has the label "imageregistry.vmware.com/default".
    """


    apiVersion?: str = "imageregistry.vmware.com/v1alpha1"

    kind?: str = "ContentLibrary"

    name?: str


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatus:
    """
    VirtualMachinePublishRequestStatus defines the observed state of a VirtualMachinePublishRequest.

    Attributes
    ----------
    attempts : int, default is Undefined, optional
        Attempts represents the number of times the request to publish the VM has been attempted.
    completionTime : str, default is Undefined, optional
        CompletionTime represents time when the request was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. 
         The value of this field should be equal to the value of the LastTransitionTime for the status condition Type=Complete.
    conditions : [VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusConditionsItems0], default is Undefined, optional
        Conditions is a list of the latest, available observations of the request's current state.
    imageName : str, default is Undefined, optional
        ImageName is the name of the VirtualMachineImage resource that is eventually realized in the same namespace as the VM and publication request after the publication operation completes. 
         This field will not be set until the VirtualMachineImage resource is realized.
    lastAttemptTime : str, default is Undefined, optional
        LastAttemptTime represents the time when the latest request was sent.
    ready : bool, default is Undefined, optional
        Ready is set to true only when the VM has been published successfully and the new VirtualMachineImage resource is ready. 
         Readiness is determined by waiting until there is status condition Type=Complete and ensuring it and all other status conditions present have a Status=True. The conditions present will be: 
         * SourceValid * TargetValid * Uploaded * ImageAvailable * Complete
    sourceRef : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusSourceRef, default is Undefined, optional
        source ref
    startTime : str, default is Undefined, optional
        StartTime represents time when the request was acknowledged by the controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
    targetRef : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRef, default is Undefined, optional
        target ref
    """


    attempts?: int

    completionTime?: str

    conditions?: [VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusConditionsItems0]

    imageName?: str

    lastAttemptTime?: str

    ready?: bool

    sourceRef?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusSourceRef

    startTime?: str

    targetRef?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRef


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusConditionsItems0:
    """
    Condition defines an observation of a VM Operator API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition. This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to disambiguate is important.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusSourceRef:
    """
    SourceRef is the reference to the source of the publication request, ex. a VirtualMachine resource.

    Attributes
    ----------
    apiVersion : str, default is "vmoperator.vmware.com/v1alpha1", optional
        APIVersion is the API version of the referenced object.
    kind : str, default is "VirtualMachine", optional
        Kind is the kind of referenced object.
    name : str, default is Undefined, optional
        Name is the name of the referenced object. 
         If omitted this value defaults to the name of the VirtualMachinePublishRequest resource.
    """


    apiVersion?: str = "vmoperator.vmware.com/v1alpha1"

    kind?: str = "VirtualMachine"

    name?: str


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRef:
    """
    TargetRef is the reference to the target of the publication request, ex. item information and a ContentLibrary resource.

    Attributes
    ----------
    item : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRefItem, default is Undefined, optional
        item
    location : VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRefLocation, default is Undefined, optional
        location
    """


    item?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRefItem

    location?: VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRefLocation


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRefItem:
    """
    Item contains information about the name of the object to which the VM is published. 
     Please note this value is optional and if omitted, the controller will use spec.source.name + "-image" as the name of the published item.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description is the description to assign to the published object.
    name : str, default is Undefined, optional
        Name is the name of the published object. 
         If the spec.target.location.apiVersion equals imageregistry.vmware.com/v1alpha1 and the spec.target.location.kind equals ContentLibrary, then this should be the name that will show up in vCenter Content Library, not the custom resource name in the namespace. 
         If omitted then the controller will use spec.source.name + "-image".
    """


    description?: str

    name?: str


schema VmoperatorVmwareComV1alpha1VirtualMachinePublishRequestStatusTargetRefLocation:
    """
    Location contains information about the location to which to publish the VM.

    Attributes
    ----------
    apiVersion : str, default is "imageregistry.vmware.com/v1alpha1", optional
        APIVersion is the API version of the referenced object.
    kind : str, default is "ContentLibrary", optional
        Kind is the kind of referenced object.
    name : str, default is Undefined, optional
        Name is the name of the referenced object. 
         Please note an error will be returned if this field is not set in a namespace that lacks a default publication target. 
         A default publication target is a resource with an API version equal to spec.target.location.apiVersion, a kind equal to spec.target.location.kind, and has the label "imageregistry.vmware.com/default".
    """


    apiVersion?: str = "imageregistry.vmware.com/v1alpha1"

    kind?: str = "ContentLibrary"

    name?: str


