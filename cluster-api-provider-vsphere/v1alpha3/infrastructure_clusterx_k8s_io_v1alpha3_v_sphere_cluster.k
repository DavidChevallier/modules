"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VSphereCluster:
    """
    VSphereCluster is the Schema for the vsphereclusters API 
     Deprecated: This type will be removed in one of the next releases.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1alpha3", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VSphereCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1alpha3" = "infrastructure.cluster.x-k8s.io/v1alpha3"

    kind: "VSphereCluster" = "VSphereCluster"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpec

    status?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatus


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpec:
    """
    VSphereClusterSpec defines the desired state of VSphereCluster

    Attributes
    ----------
    cloudProviderConfiguration : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfiguration, default is Undefined, optional
        cloud provider configuration
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    identityRef : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecIdentityRef, default is Undefined, optional
        identity ref
    insecure : bool, default is Undefined, optional
        Insecure is a flag that controls whether or not to validate the vSphere server's certificate. DEPRECATED: will be removed in v1alpha4
    loadBalancerRef : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecLoadBalancerRef, default is Undefined, optional
        load balancer ref
    server : str, default is Undefined, optional
        Server is the address of the vSphere endpoint.
    thumbprint : str, default is Undefined, optional
        Thumbprint is the colon-separated SHA-1 checksum of the given vCenter server's host certificate When provided, Insecure should not be set to true
    """


    cloudProviderConfiguration?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfiguration

    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecControlPlaneEndpoint

    identityRef?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecIdentityRef

    insecure?: bool

    loadBalancerRef?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecLoadBalancerRef

    server?: str

    thumbprint?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfiguration:
    """
    CloudProviderConfiguration holds the cluster-wide configuration for the DEPRECATED: will be removed in v1alpha4 vSphere cloud provider.

    Attributes
    ----------
    disk : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationDisk, default is Undefined, optional
        disk
    global : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationGlobal, default is Undefined, optional
        global
    labels : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationLabels, default is Undefined, optional
        labels
    network : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationNetwork, default is Undefined, optional
        network
    providerConfig : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfig, default is Undefined, optional
        provider config
    virtualCenter : {str:InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationVirtualCenterAnon}, default is Undefined, optional
        VCenter is a list of vCenter configurations.
    workspace : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationWorkspace, default is Undefined, optional
        workspace
    """


    disk?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationDisk

    global?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationGlobal

    labels?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationLabels

    network?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationNetwork

    providerConfig?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfig

    virtualCenter?: {str:InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationVirtualCenterAnon}

    workspace?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationWorkspace


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationDisk:
    """
    Disk is the vSphere cloud provider's disk configuration.

    Attributes
    ----------
    scsiControllerType : str, default is Undefined, optional
        SCSIControllerType defines SCSI controller to be used.
    """


    scsiControllerType?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationGlobal:
    """
    Global is the vSphere cloud provider's global configuration.

    Attributes
    ----------
    apiBindPort : str, default is Undefined, optional
        APIBindPort configures the vSphere cloud controller manager API port. Defaults to 43001.
    apiDisable : bool, default is Undefined, optional
        APIDisable disables the vSphere cloud controller manager API. Defaults to true.
    caFile : str, default is Undefined, optional
        CAFile Specifies the path to a CA certificate in PEM format. If not configured, the system's CA certificates will be used.
    datacenters : str, default is Undefined, optional
        Datacenters is a CSV string of the datacenters in which VMs are located.
    insecure : bool, default is Undefined, optional
        Insecure is a flag that disables TLS peer verification.
    password : str, default is Undefined, optional
        Password is the password used to access a vSphere endpoint.
    port : str, default is Undefined, optional
        Port is the port on which the vSphere endpoint is listening. Defaults to 443.
    roundTripperCount : int, default is Undefined, optional
        RoundTripperCount specifies the SOAP round tripper count (retries = RoundTripper - 1)
    secretName : str, default is Undefined, optional
        SecretName is the name of the Kubernetes secret in which the vSphere credentials are located.
    secretNamespace : str, default is Undefined, optional
        SecretNamespace is the namespace for SecretName.
    secretsDirectory : str, default is Undefined, optional
        SecretsDirectory is a directory in which secrets may be found. This may used in the event that: 1. It is not desirable to use the K8s API to watch changes to secrets 2. The cloud controller manager is not running in a K8s environment, such as DC/OS. For example, the container storage interface (CSI) is container orcehstrator (CO) agnostic, and should support non-K8s COs. Defaults to /etc/cloud/credentials.
    serviceAccount : str, default is Undefined, optional
        ServiceAccount is the Kubernetes service account used to launch the cloud controller manager. Defaults to cloud-controller-manager.
    thumbprint : str, default is Undefined, optional
        Thumbprint is the cryptographic thumbprint of the vSphere endpoint's certificate.
    username : str, default is Undefined, optional
        Username is the username used to access a vSphere endpoint.
    """


    apiBindPort?: str

    apiDisable?: bool

    caFile?: str

    datacenters?: str

    insecure?: bool

    password?: str

    port?: str

    roundTripperCount?: int

    secretName?: str

    secretNamespace?: str

    secretsDirectory?: str

    serviceAccount?: str

    thumbprint?: str

    username?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationLabels:
    """
    Labels is the vSphere cloud provider's zone and region configuration.

    Attributes
    ----------
    region : str, default is Undefined, optional
        Region is the region in which VMs are created/located.
    zone : str, default is Undefined, optional
        Zone is the zone in which VMs are created/located.
    """


    region?: str

    zone?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationNetwork:
    """
    Network is the vSphere cloud provider's network configuration.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is the name of the network to which VMs are connected.
    """


    name?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfig:
    """
    CPIProviderConfig contains extra information used to configure the vSphere cloud provider.

    Attributes
    ----------
    cloud : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfigCloud, default is Undefined, optional
        cloud
    storage : InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfigStorage, default is Undefined, optional
        storage
    """


    cloud?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfigCloud

    storage?: InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfigStorage


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfigCloud:
    """
    infrastructure clusterx k8s io v1alpha3 v sphere cluster spec cloud provider configuration provider config cloud

    Attributes
    ----------
    controllerImage : str, default is Undefined, optional
        controller image
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs passes through extra arguments to the cloud provider. The arguments here are passed to the cloud provider daemonset specification
    """


    controllerImage?: str

    extraArgs?: {str:str}


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationProviderConfigStorage:
    """
    infrastructure clusterx k8s io v1alpha3 v sphere cluster spec cloud provider configuration provider config storage

    Attributes
    ----------
    attacherImage : str, default is Undefined, optional
        attacher image
    controllerImage : str, default is Undefined, optional
        controller image
    livenessProbeImage : str, default is Undefined, optional
        liveness probe image
    metadataSyncerImage : str, default is Undefined, optional
        metadata syncer image
    nodeDriverImage : str, default is Undefined, optional
        node driver image
    provisionerImage : str, default is Undefined, optional
        provisioner image
    registrarImage : str, default is Undefined, optional
        registrar image
    """


    attacherImage?: str

    controllerImage?: str

    livenessProbeImage?: str

    metadataSyncerImage?: str

    nodeDriverImage?: str

    provisionerImage?: str

    registrarImage?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationVirtualCenterAnon:
    """
    CPIVCenterConfig is a vSphere cloud provider's vCenter configuration.

    Attributes
    ----------
    datacenters : str, default is Undefined, optional
        Datacenters is a CSV string of the datacenters in which VMs are located.
    password : str, default is Undefined, optional
        Password is the password used to access a vSphere endpoint.
    port : str, default is Undefined, optional
        Port is the port on which the vSphere endpoint is listening. Defaults to 443.
    roundTripperCount : int, default is Undefined, optional
        RoundTripperCount specifies the SOAP round tripper count (retries = RoundTripper - 1)
    thumbprint : str, default is Undefined, optional
        Thumbprint is the cryptographic thumbprint of the vSphere endpoint's certificate.
    username : str, default is Undefined, optional
        Username is the username used to access a vSphere endpoint.
    """


    datacenters?: str

    password?: str

    port?: str

    roundTripperCount?: int

    thumbprint?: str

    username?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecCloudProviderConfigurationWorkspace:
    """
    Workspace is the vSphere cloud provider's workspace configuration.

    Attributes
    ----------
    datacenter : str, default is Undefined, optional
        Datacenter is the datacenter in which VMs are created/located.
    datastore : str, default is Undefined, optional
        Datastore is the datastore in which VMs are created/located.
    folder : str, default is Undefined, optional
        Folder is the folder in which VMs are created/located.
    resourcePool : str, default is Undefined, optional
        ResourcePool is the resource pool in which VMs are created/located.
    server : str, default is Undefined, optional
        Server is the IP address or FQDN of the vSphere endpoint.
    """


    datacenter?: str

    datastore?: str

    folder?: str

    resourcePool?: str

    server?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecControlPlaneEndpoint:
    """
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        The hostname on which the API server is serving.
    port : int, default is Undefined, required
        The port on which the API server is serving.
    """


    host: str

    port: int


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecIdentityRef:
    """
    IdentityRef is a reference to either a Secret or VSphereClusterIdentity that contains the identity to use when reconciling the cluster.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the identity. Can either be VSphereClusterIdentity or Secret
    name : str, default is Undefined, required
        Name of the identity.
    """


    kind: "VSphereClusterIdentity" | "Secret"

    name: str


    check:
        len(name) >= 1


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterSpecLoadBalancerRef:
    """
    LoadBalancerRef may be used to enable a control plane load balancer for this cluster. When a LoadBalancerRef is provided, the VSphereCluster.Status.Ready field will not be true until the referenced resource is Status.Ready and has a non-empty Status.Address value. DEPRECATED: will be removed in v1alpha4

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatus:
    """
    VSphereClusterStatus defines the observed state of VSphereClusterSpec

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the VSphereCluster.
    failureDomains : {str:InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains is a list of failure domain objects synced from the infrastructure provider.
    ready : bool, default is Undefined, optional
        ready
    """


    conditions?: [InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatusConditionsItems0]

    failureDomains?: {str:InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatusFailureDomainsAnon}

    ready?: bool


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatusConditionsItems0:
    """
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition. This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema InfrastructureClusterxK8sIoV1alpha3VSphereClusterStatusFailureDomainsAnon:
    """
    FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


