apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: storeconfigs.azure.crossplane.io
spec:
  group: azure.crossplane.io
  names:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how GCP controller should store connection
          details.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            properties:
              defaultScope:
                description: DefaultScope used for scoping secrets for "cluster-scoped"
                  resources. If store type is "Kubernetes", this would mean the default
                  namespace to store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: Kubernetes configures a Kubernetes secret store. If the
                  "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              type:
                default: Kubernetes
                description: Type configures which secret store to be used. Only the
                  configuration block for this store will be used and others will
                  be ignored if provided. Default is Kubernetes.
                type: string
              vault:
                description: Vault configures a Vault secret store.
                properties:
                  auth:
                    description: Auth configures an authentication method for Vault.
                    properties:
                      method:
                        description: Method configures which auth method will be used.
                        type: string
                      token:
                        description: Token configures Token Auth for Vault.
                        properties:
                          env:
                            description: Env is a reference to an environment variable
                              that contains credentials that must be used to connect
                              to the provider.
                            properties:
                              name:
                                description: Name is the name of an environment variable.
                                type: string
                            required:
                            - name
                            type: object
                          fs:
                            description: Fs is a reference to a filesystem location
                              that contains credentials that must be used to connect
                              to the provider.
                            properties:
                              path:
                                description: Path is a filesystem path.
                                type: string
                            required:
                            - path
                            type: object
                          secretRef:
                            description: A SecretRef is a reference to a secret key
                              that contains the credentials that must be used to connect
                              to the provider.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          source:
                            description: Source of the credentials.
                            enum:
                            - None
                            - Secret
                            - Environment
                            - Filesystem
                            type: string
                        required:
                        - source
                        type: object
                    required:
                    - method
                    type: object
                  caBundle:
                    description: CABundle configures CA bundle for Vault Server.
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                  mountPath:
                    description: MountPath is the mount path of the KV secrets engine.
                    type: string
                  server:
                    description: Server is the url of the Vault server, e.g. "https://vault.acme.org"
                    type: string
                  version:
                    default: v2
                    description: Version of the KV Secrets engine of Vault. https://www.vaultproject.io/docs/secrets/kv
                    type: string
                required:
                - auth
                - mountPath
                - server
                type: object
            required:
            - defaultScope
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providers.azure.crossplane.io
spec:
  group: azure.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - azure
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.credentialsSecretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A Provider configures an Azure 'provider', i.e. a connection
          to a particular Azure account using a particular Azure Service Principal.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderSpec defines the desired state of a Provider.
            properties:
              credentialsSecretRef:
                description: CredentialsSecretRef references a specific secret's key
                  that contains the credentials that are used to connect to the Azure
                  API.
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
            required:
            - credentialsSecretRef
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: resourcegroups.azure.crossplane.io
spec:
  group: azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: ResourceGroup
    listKind: ResourceGroupList
    plural: resourcegroups
    singular: resourcegroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A ResourceGroup is a managed resource that represents an Azure
          Resource Group.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ResourceGroupSpec defines the desired state of a ResourceGroup.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              location:
                description: Location of the resource group. See the  official list
                  of valid regions - https://azure.microsoft.com/en-us/global-infrastructure/regions/
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - location
            type: object
          status:
            description: A ResourceGroupStatus represents the observed status of a
              ResourceGroup.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              provisioningState:
                description: ProvisioningState - The provisioning state of the resource
                  group.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigs.azure.crossplane.io
spec:
  group: azure.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - azure
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.credentialsSecretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfig configures an Azure 'provider', i.e. a connection
          to a particular Azure account using a particular Azure Service Principal.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              credentials:
                description: Credentials required to authenticate to this provider.
                properties:
                  env:
                    description: Env is a reference to an environment variable that
                      contains credentials that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: Fs is a reference to a filesystem location that contains
                      credentials that must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: A SecretRef is a reference to a secret key that contains
                      the credentials that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - Environment
                    - Filesystem
                    type: string
                required:
                - source
                type: object
            required:
            - credentials
            type: object
          status:
            description: A ProviderConfigStatus represents the status of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigusages.azure.crossplane.io
spec:
  group: azure.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - azure
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: redis.cache.azure.crossplane.io
spec:
  group: cache.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Redis
    listKind: RedisList
    plural: redis
    singular: redis
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.provisioningState
      name: STATE
      type: string
    - jsonPath: .status.atProvider.redisVersion
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Redis is a managed resource that represents an Azure Redis
          cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RedisSpec defines the desired state of a Redis.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RedisParameters define the desired state of an Azure
                  Redis cluster. https://docs.microsoft.com/en-us/rest/api/redis/redis/create#redisresource
                properties:
                  enableNonSslPort:
                    description: EnableNonSSLPort specifies whether the non-ssl Redis
                      server port (6379) is enabled.
                    type: boolean
                  location:
                    description: Location in which to create this resource.
                    type: string
                  minimumTlsVersion:
                    description: 'MinimumTLSVersion - Optional: requires clients to
                      use a specified TLS version (or higher) to connect (e,g, ''1.0'',
                      ''1.1'', ''1.2''). Possible values include: ''OneFullStopZero'',
                      ''OneFullStopOne'', ''OneFullStopTwo'''
                    type: string
                  redisConfiguration:
                    additionalProperties:
                      type: string
                    description: 'RedisConfiguration - All Redis Settings. Few possible
                      keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency
                      maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,
                      slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,
                      list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,
                      set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
                      etc.'
                    type: object
                  resourceGroupName:
                    description: ResourceGroupName in which to create this resource.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef to fetch resource group name.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector to select a reference to
                      a resource group.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  shardCount:
                    description: ShardCount specifies the number of shards to be created
                      on a Premium Cluster Cache.
                    type: integer
                  sku:
                    description: Sku - The SKU of the Redis cache to deploy.
                    properties:
                      capacity:
                        description: 'Capacity specifies the size of Redis cache to
                          deploy. Valid values: for C family (0, 1, 2, 3, 4, 5, 6),
                          for P family (1, 2, 3, 4).'
                        maximum: 6
                        minimum: 0
                        type: integer
                      family:
                        description: 'Family specifies which family to use. Valid
                          values: (C, P). Possible values include: ''C'', ''P'''
                        enum:
                        - C
                        - P
                        type: string
                      name:
                        description: 'Name specifies what type of Redis cache to deploy.
                          Valid values: (Basic, Standard, Premium). Possible values
                          include: ''Basic'', ''Standard'', ''Premium'''
                        enum:
                        - Basic
                        - Standard
                        - Premium
                        type: string
                    required:
                    - capacity
                    - family
                    - name
                    type: object
                  staticIp:
                    description: StaticIP address. Required when deploying a Redis
                      cache inside an existing Azure Virtual Network.
                    type: string
                  subnetId:
                    description: 'SubnetID specifies the full resource ID of a subnet
                      in a virtual network to deploy the Redis cache in. Example format:
                      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1'
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Resource tags.
                    type: object
                  tenantSettings:
                    additionalProperties:
                      type: string
                    description: TenantSettings - A dictionary of tenant settings
                    type: object
                  zones:
                    description: Zones - A list of availability zones denoting where
                      the resource needs to come from.
                    items:
                      type: string
                    type: array
                required:
                - location
                - sku
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RedisStatus represents the observed state of a Redis.
            properties:
              atProvider:
                description: RedisObservation represents the observed state of the
                  Redis object in Azure.
                properties:
                  hostName:
                    description: HostName - Redis host name.
                    type: string
                  id:
                    description: ID - Resource ID.
                    type: string
                  linkedServers:
                    description: LinkedServers - List of the linked servers associated
                      with the cache
                    items:
                      type: string
                    type: array
                  name:
                    description: Name - Resource name.
                    type: string
                  port:
                    description: Port - Redis non-SSL port.
                    type: integer
                  provisioningState:
                    description: 'ProvisioningState - Redis instance provisioning
                      status. Possible values include: ''Creating'', ''Deleting'',
                      ''Disabled'', ''Failed'', ''Linking'', ''Provisioning'', ''RecoveringScaleFailure'',
                      ''Scaling'', ''Succeeded'', ''Unlinking'', ''Unprovisioning'',
                      ''Updating'''
                    type: string
                  redisVersion:
                    description: RedisVersion - Redis version.
                    type: string
                  sslPort:
                    description: SSLPort - Redis SSL port.
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: aksclusters.compute.azure.crossplane.io
spec:
  group: compute.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: AKSCluster
    listKind: AKSClusterList
    plural: aksclusters
    singular: akscluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.endpoint
      name: ENDPOINT
      type: string
    - jsonPath: .spec.location
      name: LOCATION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: An AKSCluster is a managed resource that represents an Azure
          Kubernetes Engine cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An AKSClusterSpec defines the desired state of a AKSCluster.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              disableRBAC:
                description: DisableRBAC determines whether RBAC will be disabled
                  or enabled in the cluster.
                type: boolean
              dnsNamePrefix:
                description: DNSNamePrefix is the DNS name prefix to use with the
                  hosted Kubernetes API server FQDN. You will use this to connect
                  to the Kubernetes API when managing containers after creating the
                  cluster.
                type: string
              location:
                description: Location is the Azure location that the cluster will
                  be created in
                type: string
              nodeCount:
                description: NodeCount is the number of nodes that the cluster will
                  initially be created with.  This can be scaled over time and defaults
                  to 1.
                maximum: 100
                minimum: 0
                type: integer
              nodeVMSize:
                description: NodeVMSize is the name of the worker node VM size, e.g.,
                  Standard_B2s, Standard_F2s_v2, etc.
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName is the name of the resource group that
                  the cluster will be created in
                type: string
              resourceGroupNameRef:
                description: ResourceGroupNameRef - A reference to a ResourceGroup
                  to retrieve its name
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupNameSelector:
                description: ResourceGroupNameSelector - Select a reference to a ResourceGroup
                  to retrieve its name
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              version:
                description: Version is the Kubernetes version that will be deployed
                  to the cluster
                type: string
              vnetSubnetID:
                description: VnetSubnetID is the subnet to which the cluster will
                  be deployed.
                type: string
              vnetSubnetIDRef:
                description: VnetSubnetIDRef - A reference to a Subnet to retrieve
                  its ID
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              vnetSubnetIDSelector:
                description: VnetSubnetIDSelector - Select a reference to a Subnet
                  to retrieve its ID
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - location
            - version
            type: object
          status:
            description: An AKSClusterStatus represents the observed state of an AKSCluster.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              endpoint:
                description: Endpoint is the endpoint where the cluster can be reached
                type: string
              providerID:
                description: ProviderID is the external ID to identify this resource
                  in the cloud provider.
                type: string
              state:
                description: State is the current state of the cluster.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cosmosdbaccounts.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: CosmosDBAccount
    listKind: CosmosDBAccountList
    plural: cosmosdbaccounts
    singular: cosmosdbaccount
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .spec.forProvider.kind
      name: KIND
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A CosmosDBAccount is a managed resource that represents an Azure
          CosmosDB account with CosmosDB API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A CosmosDBAccountSpec defines the desired state of a CosmosDB
              Account.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CosmosDBAccountParameters define the desired state of
                  an Azure CosmosDB account.
                properties:
                  kind:
                    description: Kind - Indicates the type of database account.
                    type: string
                  location:
                    description: Location - The location of the resource. This will
                      be one of the supported and registered Azure Geo Regions (e.g.
                      West US, East US, Southeast Asia, etc.).
                    type: string
                  properties:
                    description: Properties - Account properties like databaseAccountOfferType,
                      ipRangeFilters, etc.
                    properties:
                      consistencyPolicy:
                        description: ConsistencyPolicy - The consistency policy for
                          the Cosmos DB account.
                        properties:
                          defaultConsistencyLevel:
                            description: 'DefaultConsistencyLevel - The default consistency
                              level and configuration settings of the Cosmos DB account.
                              Possible values include: ''Eventual'', ''Session'',
                              ''BoundedStaleness'', ''Strong'', ''ConsistentPrefix'''
                            type: string
                          maxIntervalInSeconds:
                            description: MaxIntervalInSeconds - When used with the
                              Bounded Staleness consistency level, this value represents
                              the time amount of staleness (in seconds) tolerated.
                              Accepted range for this value is 5 - 86400. Required
                              when defaultConsistencyPolicy is set to 'BoundedStaleness'.
                            format: int32
                            type: integer
                          maxStalenessPrefix:
                            description: MaxStalenessPrefix - When used with the Bounded
                              Staleness consistency level, this value represents the
                              number of stale requests tolerated. Accepted range for
                              this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy
                              is set to 'BoundedStaleness'.
                            format: int64
                            type: integer
                        required:
                        - defaultConsistencyLevel
                        type: object
                      databaseAccountOfferType:
                        description: DatabaseAccountOfferType - The offer type for
                          the database
                        type: string
                      enableAutomaticFailover:
                        description: EnableAutomaticFailover - Enables automatic failover
                          of the write region in the rare event that the region is
                          unavailable due to an outage. Automatic failover will result
                          in a new write region for the account and is chosen based
                          on the failover priorities configured for the account.
                        type: boolean
                      enableCassandraConnector:
                        description: EnableCassandraConnector - Enables the cassandra
                          connector on the Cosmos DB C* account
                        type: boolean
                      enableMultipleWriteLocations:
                        description: EnableMultipleWriteLocations - Enables the account
                          to write in multiple locations
                        type: boolean
                      ipRangeFilter:
                        description: 'IPRangeFilter - Cosmos DB Firewall Support:
                          This value specifies the set of IP addresses or IP address
                          ranges in CIDR form to be included as the allowed list of
                          client IPs for a given database account. IP addresses/ranges
                          must be comma separated and must not contain any spaces.'
                        type: string
                      locations:
                        description: Locations - An array that contains the georeplication
                          locations enabled for the Cosmos DB account.
                        items:
                          description: CosmosDBAccountLocation a region in which the
                            Azure Cosmos DB database account is deployed.
                          properties:
                            failoverPriority:
                              description: FailoverPriority - The failover priority
                                of the region. A failover priority of 0 indicates
                                a write region. The maximum value for a failover priority
                                = (total number of regions - 1). Failover priority
                                values must be unique for each of the regions in which
                                the database account exists.
                              format: int32
                              type: integer
                            isZoneRedundant:
                              description: IsZoneRedundant - Flag to indicate whether
                                or not this region is an AvailabilityZone region
                              type: boolean
                            locationName:
                              description: LocationName - The name of the region.
                              type: string
                          required:
                          - failoverPriority
                          - isZoneRedundant
                          - locationName
                          type: object
                        type: array
                    required:
                    - databaseAccountOfferType
                    - locations
                    type: object
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this Account.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector to select a reference to
                      a resource group.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - A list of key value pairs that describe the
                      resource. These tags can be used for viewing and grouping this
                      resource (across resource groups). A maximum of 15 tags can
                      be provided for a resource. Each tag must have a key with a
                      length no greater than 128 characters and a value with a length
                      no greater than 256 characters.
                    type: object
                required:
                - kind
                - location
                - properties
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: An CosmosDBAccountStatus represents the observed state of
              an Account.
            properties:
              atProvider:
                description: CosmosDBAccountObservation shows current state of an
                  Azure CosmosDB account.
                properties:
                  id:
                    description: Identity - The identity of the resource.
                    type: string
                  state:
                    description: State - current state of the account in Azure.
                    type: string
                required:
                - id
                - state
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: mysqlserverfirewallrules.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: MySQLServerFirewallRule
    listKind: MySQLServerFirewallRuleList
    plural: mysqlserverfirewallrules
    singular: mysqlserverfirewallrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A MySQLServerFirewallRule is a managed resource that represents
          an Azure MySQL firewall rule.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A FirewallRuleSpec defines the desired state of an Azure
              SQL firewall rule.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: FirewallRuleParameters define the desired state of an
                  Azure SQL firewall rule.
                properties:
                  properties:
                    description: FirewallRuleProperties - Resource properties.
                    properties:
                      endIpAddress:
                        description: EndIPAddress of the IP range this firewall rule
                          allows.
                        type: string
                      startIpAddress:
                        description: StartIPAddress of the IP range this firewall
                          rule allows.
                        type: string
                    required:
                    - endIpAddress
                    - startIpAddress
                    type: object
                  resourceGroupName:
                    description: ResourceGroupName - Name of the Firewall Rule's resource
                      group.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - Selects a ResourceGroup
                      to reference.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  serverName:
                    description: ServerName - Name of the Firewall Rule's server.
                    type: string
                  serverNameRef:
                    description: ServerNameRef - A reference to the Firewall Rule's
                      MySQLServer.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  serverNameSelector:
                    description: ServerNameSelector - Selects a MySQLServer to reference.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                required:
                - properties
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A FirewallRuleStatus represents the status of an Azure SQL
              firewall rule.
            properties:
              atProvider:
                description: A FirewallRuleObservation represents the observed state
                  of an Azure SQL firewall rule.
                properties:
                  id:
                    description: ID - Resource ID
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: mysqlservervirtualnetworkrules.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: MySQLServerVirtualNetworkRule
    listKind: MySQLServerVirtualNetworkRuleList
    plural: mysqlservervirtualnetworkrules
    singular: mysqlservervirtualnetworkrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A MySQLServerVirtualNetworkRule is a managed resource that represents
          an Azure MySQL Database virtual network rule.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A MySQLVirtualNetworkRuleSpec defines the desired state of
              a MySQLVirtualNetworkRule.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              properties:
                description: VirtualNetworkRuleProperties - Resource properties.
                properties:
                  ignoreMissingVnetServiceEndpoint:
                    description: IgnoreMissingVnetServiceEndpoint - Create firewall
                      rule before the virtual network has vnet service endpoint enabled.
                    type: boolean
                  virtualNetworkSubnetId:
                    description: VirtualNetworkSubnetID - The ARM resource id of the
                      virtual network subnet.
                    type: string
                  virtualNetworkSubnetIdRef:
                    description: VirtualNetworkSubnetIDRef - A reference to a Subnet
                      to retrieve its ID
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  virtualNetworkSubnetIdSelector:
                    description: VirtualNetworkSubnetIDRef - A selector for a Subnet
                      to retrieve its ID
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName - Name of the Virtual Network Rule's
                  resource group.
                type: string
              resourceGroupNameRef:
                description: ResourceGroupNameRef - A reference to a ResourceGroup
                  object to retrieve its name
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupNameSelector:
                description: ResourceGroupNameSelector - Selects a ResourceGroup to
                  reference.
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              serverName:
                description: ServerName - Name of the Virtual Network Rule's server.
                type: string
              serverNameRef:
                description: ServerNameRef - A reference to the Virtual Network Rule's
                  MySQLServer.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              serverNameSelector:
                description: ServerNameSelector - Selects a MySQLServer to reference.
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - properties
            type: object
          status:
            description: A VirtualNetworkRuleStatus represents the observed state
              of a VirtualNetworkRule.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: ID - Resource ID
                type: string
              message:
                description: A Message containing details about the state of this
                  virtual network rule, if any.
                type: string
              state:
                description: State of this virtual network rule.
                type: string
              type:
                description: Type - Resource type.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: postgresqlserverfirewallrules.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: PostgreSQLServerFirewallRule
    listKind: PostgreSQLServerFirewallRuleList
    plural: postgresqlserverfirewallrules
    singular: postgresqlserverfirewallrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A PostgreSQLServerFirewallRule is a managed resource that represents
          an Azure PostgreSQL firewall rule.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A FirewallRuleSpec defines the desired state of an Azure
              SQL firewall rule.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: FirewallRuleParameters define the desired state of an
                  Azure SQL firewall rule.
                properties:
                  properties:
                    description: FirewallRuleProperties - Resource properties.
                    properties:
                      endIpAddress:
                        description: EndIPAddress of the IP range this firewall rule
                          allows.
                        type: string
                      startIpAddress:
                        description: StartIPAddress of the IP range this firewall
                          rule allows.
                        type: string
                    required:
                    - endIpAddress
                    - startIpAddress
                    type: object
                  resourceGroupName:
                    description: ResourceGroupName - Name of the Firewall Rule's resource
                      group.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - Selects a ResourceGroup
                      to reference.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  serverName:
                    description: ServerName - Name of the Firewall Rule's server.
                    type: string
                  serverNameRef:
                    description: ServerNameRef - A reference to the Firewall Rule's
                      MySQLServer.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  serverNameSelector:
                    description: ServerNameSelector - Selects a MySQLServer to reference.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                required:
                - properties
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A FirewallRuleStatus represents the status of an Azure SQL
              firewall rule.
            properties:
              atProvider:
                description: A FirewallRuleObservation represents the observed state
                  of an Azure SQL firewall rule.
                properties:
                  id:
                    description: ID - Resource ID
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: postgresqlservervirtualnetworkrules.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: PostgreSQLServerVirtualNetworkRule
    listKind: PostgreSQLServerVirtualNetworkRuleList
    plural: postgresqlservervirtualnetworkrules
    singular: postgresqlservervirtualnetworkrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A PostgreSQLServerVirtualNetworkRule is a managed resource that
          represents an Azure PostgreSQL Database virtual network rule.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A PostgreSQLVirtualNetworkRuleSpec defines the desired state
              of a PostgreSQLVirtualNetworkRule.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              properties:
                description: VirtualNetworkRuleProperties - Resource properties.
                properties:
                  ignoreMissingVnetServiceEndpoint:
                    description: IgnoreMissingVnetServiceEndpoint - Create firewall
                      rule before the virtual network has vnet service endpoint enabled.
                    type: boolean
                  virtualNetworkSubnetId:
                    description: VirtualNetworkSubnetID - The ARM resource id of the
                      virtual network subnet.
                    type: string
                  virtualNetworkSubnetIdRef:
                    description: VirtualNetworkSubnetIDRef - A reference to a Subnet
                      to retrieve its ID
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  virtualNetworkSubnetIdSelector:
                    description: VirtualNetworkSubnetIDRef - A selector for a Subnet
                      to retrieve its ID
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName - Name of the Virtual Network Rule's
                  resource group.
                type: string
              resourceGroupNameRef:
                description: ResourceGroupNameRef - A reference to a ResourceGroup
                  object to retrieve its name
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupNameSelector:
                description: ResourceGroupNameSelector - A selector for a ResourceGroup
                  object to retrieve its name
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              serverName:
                description: ServerName - Name of the Virtual Network Rule's PostgreSQLServer.
                type: string
              serverNameRef:
                description: ServerNameRef - A reference to the Virtual Network Rule's
                  PostgreSQLServer.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              serverNameSelector:
                description: ServerNameSelector - A selector of the Virtual Network
                  Rule's PostgreSQLServer.
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - properties
            type: object
          status:
            description: A VirtualNetworkRuleStatus represents the observed state
              of a VirtualNetworkRule.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: ID - Resource ID
                type: string
              message:
                description: A Message containing details about the state of this
                  virtual network rule, if any.
                type: string
              state:
                description: State of this virtual network rule.
                type: string
              type:
                description: Type - Resource type.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: mysqlservers.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: MySQLServer
    listKind: MySQLServerList
    plural: mysqlservers
    singular: mysqlserver
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A MySQLServer is a managed resource that represents an Azure
          MySQL Database Server.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A SQLServerSpec defines the desired state of a SQLServer.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: SQLServerParameters define the desired state of an Azure
                  SQL Database, either PostgreSQL or MySQL.
                properties:
                  administratorLogin:
                    description: AdministratorLogin - The administrator's login name
                      of a server. Can only be specified when the server is being
                      created (and is required for creation).
                    type: string
                  createMode:
                    description: 'CreateMode - Possible values include: ''CreateModeDefault'',
                      ''CreateModePointInTimeRestore'', ''CreateModeGeoRestore'',
                      ''CreateModeReplica'''
                    enum:
                    - Default
                    - GeoRestore
                    - PointInTimeRestore
                    - Replica
                    type: string
                  location:
                    description: Location specifies the location of this SQLServer.
                    type: string
                  minimalTlsVersion:
                    description: MinimalTLSVersion - control TLS connection policy
                    type: string
                  publicNetworkAccess:
                    description: PublicNetworkAccess - Whether or not public network
                      access is allowed for this server. Value is optional but if
                      passed in, must be 'Enabled' or 'Disabled'.
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this SQLServer.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - A selector for a ResourceGroup
                      object to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  restorePointInTime:
                    description: RestorePointInTime - Restore point creation time
                      (RFC3339 format), specifying the time to restore from.
                    format: date-time
                    type: string
                  sku:
                    description: SKU is the billing information related properties
                      of the server.
                    properties:
                      capacity:
                        description: Capacity - The scale up/out capacity, representing
                          server's compute units.
                        type: integer
                      family:
                        description: Family - The family of hardware.
                        type: string
                      size:
                        description: Size - The size code, to be interpreted by resource
                          as appropriate.
                        type: string
                      tier:
                        description: 'Tier - The tier of the particular SKU. Possible
                          values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                        enum:
                        - Basic
                        - GeneralPurpose
                        - MemoryOptimized
                        type: string
                    required:
                    - capacity
                    - family
                    - tier
                    type: object
                  sourceServerID:
                    description: SourceServerID - The server to restore from when
                      restoring or creating replicas
                    type: string
                  sslEnforcement:
                    description: 'SSLEnforcement - Enable ssl enforcement or not when
                      connect to server. Possible values include: ''Enabled'', ''Disabled'''
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  storageProfile:
                    description: StorageProfile - Storage profile of a server.
                    properties:
                      backupRetentionDays:
                        description: BackupRetentionDays - Backup retention days for
                          the server.
                        type: integer
                      geoRedundantBackup:
                        description: 'GeoRedundantBackup - Enable Geo-redundant or
                          not for server backup. Possible values include: ''Enabled'',
                          ''Disabled'''
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      storageAutogrow:
                        description: 'StorageAutogrow - Enable Storage Auto Grow.
                          Possible values include: ''Enabled'', ''Disabled'''
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      storageMB:
                        description: StorageMB - Max storage allowed for a server.
                        type: integer
                    required:
                    - storageMB
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Application-specific metadata in the form
                      of key-value pairs.
                    type: object
                  version:
                    description: Version - Server version.
                    type: string
                required:
                - administratorLogin
                - location
                - sku
                - sslEnforcement
                - storageProfile
                - version
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A SQLServerStatus represents the observed state of a SQLServer.
            properties:
              atProvider:
                description: SQLServerObservation represents the current state of
                  Azure SQL resource.
                properties:
                  fullyQualifiedDomainName:
                    description: FullyQualifiedDomainName - The fully qualified domain
                      name of a server.
                    type: string
                  id:
                    description: ID - Resource ID
                    type: string
                  lastOperation:
                    description: LastOperation represents the state of the last operation
                      started by the controller.
                    properties:
                      errorMessage:
                        description: ErrorMessage represents the error that occurred
                          during the operation.
                        type: string
                      method:
                        description: Method is HTTP method that the initial request
                          is made with.
                        type: string
                      pollingUrl:
                        description: PollingURL is used to fetch the status of the
                          given operation.
                        type: string
                      status:
                        description: Status represents the status of the operation.
                        type: string
                    type: object
                  masterServerId:
                    description: MasterServerID - The master server id of a replica
                      server.
                    type: string
                  name:
                    description: Name - Resource name.
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                  userVisibleState:
                    description: UserVisibleState - A state of a server that is visible
                      to user.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: mysqlserverconfigurations.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: MySQLServerConfiguration
    listKind: MySQLServerConfigurationList
    plural: mysqlserverconfigurations
    singular: mysqlserverconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A MySQLServerConfiguration is a managed resource that represents
          an Azure MySQL Server Configuration.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A SQLServerConfigurationSpec defines the desired state of
              a SQLServer Configuration.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: SQLServerConfigurationParameters define the desired state
                  of an Azure SQL Database Server Configuration, either PostgreSQL
                  or MySQL Configuration.
                properties:
                  name:
                    description: Name - Configuration name to be applied
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this SQLServer.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - A selector for a ResourceGroup
                      object to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  serverName:
                    description: ServerName specifies the name of the server that
                      this configuration applies to.
                    type: string
                  serverNameRef:
                    description: ServerNameRef - A reference to a server object to
                      retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  serverNameSelector:
                    description: ServerNameSelector - A selector for a server object
                      to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  value:
                    description: Value - Configuration value to be applied Can be
                      left unset to read the current value as a result of late-initialization.
                    type: string
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A SQLServerConfigurationStatus represents the observed state
              of a SQLServerConfiguration.
            properties:
              atProvider:
                description: SQLServerConfigurationObservation represents the current
                  state of Azure SQL resource.
                properties:
                  dataType:
                    description: DataType - Data type for the configuration
                    type: string
                  defaultValue:
                    description: DefaultValue - Default value for this configuration
                    type: string
                  description:
                    description: Description - Description for the configuration
                    type: string
                  id:
                    description: ID - Resource ID
                    type: string
                  lastOperation:
                    description: LastOperation represents the state of the last operation
                      started by the controller.
                    properties:
                      errorMessage:
                        description: ErrorMessage represents the error that occurred
                          during the operation.
                        type: string
                      method:
                        description: Method is HTTP method that the initial request
                          is made with.
                        type: string
                      pollingUrl:
                        description: PollingURL is used to fetch the status of the
                          given operation.
                        type: string
                      status:
                        description: Status represents the status of the operation.
                        type: string
                    type: object
                  name:
                    description: Name - Resource name.
                    type: string
                  source:
                    description: Source - Applied configuration source
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                  value:
                    description: Value - Applied configuration value
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: postgresqlservers.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: PostgreSQLServer
    listKind: PostgreSQLServerList
    plural: postgresqlservers
    singular: postgresqlserver
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A PostgreSQLServer is a managed resource that represents an Azure
          PostgreSQL Database Server.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A SQLServerSpec defines the desired state of a SQLServer.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: SQLServerParameters define the desired state of an Azure
                  SQL Database, either PostgreSQL or MySQL.
                properties:
                  administratorLogin:
                    description: AdministratorLogin - The administrator's login name
                      of a server. Can only be specified when the server is being
                      created (and is required for creation).
                    type: string
                  createMode:
                    description: 'CreateMode - Possible values include: ''CreateModeDefault'',
                      ''CreateModePointInTimeRestore'', ''CreateModeGeoRestore'',
                      ''CreateModeReplica'''
                    enum:
                    - Default
                    - GeoRestore
                    - PointInTimeRestore
                    - Replica
                    type: string
                  location:
                    description: Location specifies the location of this SQLServer.
                    type: string
                  minimalTlsVersion:
                    description: MinimalTLSVersion - control TLS connection policy
                    type: string
                  publicNetworkAccess:
                    description: PublicNetworkAccess - Whether or not public network
                      access is allowed for this server. Value is optional but if
                      passed in, must be 'Enabled' or 'Disabled'.
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this SQLServer.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - A selector for a ResourceGroup
                      object to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  restorePointInTime:
                    description: RestorePointInTime - Restore point creation time
                      (RFC3339 format), specifying the time to restore from.
                    format: date-time
                    type: string
                  sku:
                    description: SKU is the billing information related properties
                      of the server.
                    properties:
                      capacity:
                        description: Capacity - The scale up/out capacity, representing
                          server's compute units.
                        type: integer
                      family:
                        description: Family - The family of hardware.
                        type: string
                      size:
                        description: Size - The size code, to be interpreted by resource
                          as appropriate.
                        type: string
                      tier:
                        description: 'Tier - The tier of the particular SKU. Possible
                          values include: ''Basic'', ''GeneralPurpose'', ''MemoryOptimized'''
                        enum:
                        - Basic
                        - GeneralPurpose
                        - MemoryOptimized
                        type: string
                    required:
                    - capacity
                    - family
                    - tier
                    type: object
                  sourceServerID:
                    description: SourceServerID - The server to restore from when
                      restoring or creating replicas
                    type: string
                  sslEnforcement:
                    description: 'SSLEnforcement - Enable ssl enforcement or not when
                      connect to server. Possible values include: ''Enabled'', ''Disabled'''
                    enum:
                    - Enabled
                    - Disabled
                    type: string
                  storageProfile:
                    description: StorageProfile - Storage profile of a server.
                    properties:
                      backupRetentionDays:
                        description: BackupRetentionDays - Backup retention days for
                          the server.
                        type: integer
                      geoRedundantBackup:
                        description: 'GeoRedundantBackup - Enable Geo-redundant or
                          not for server backup. Possible values include: ''Enabled'',
                          ''Disabled'''
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      storageAutogrow:
                        description: 'StorageAutogrow - Enable Storage Auto Grow.
                          Possible values include: ''Enabled'', ''Disabled'''
                        enum:
                        - Enabled
                        - Disabled
                        type: string
                      storageMB:
                        description: StorageMB - Max storage allowed for a server.
                        type: integer
                    required:
                    - storageMB
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Application-specific metadata in the form
                      of key-value pairs.
                    type: object
                  version:
                    description: Version - Server version.
                    type: string
                required:
                - administratorLogin
                - location
                - sku
                - sslEnforcement
                - storageProfile
                - version
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A SQLServerStatus represents the observed state of a SQLServer.
            properties:
              atProvider:
                description: SQLServerObservation represents the current state of
                  Azure SQL resource.
                properties:
                  fullyQualifiedDomainName:
                    description: FullyQualifiedDomainName - The fully qualified domain
                      name of a server.
                    type: string
                  id:
                    description: ID - Resource ID
                    type: string
                  lastOperation:
                    description: LastOperation represents the state of the last operation
                      started by the controller.
                    properties:
                      errorMessage:
                        description: ErrorMessage represents the error that occurred
                          during the operation.
                        type: string
                      method:
                        description: Method is HTTP method that the initial request
                          is made with.
                        type: string
                      pollingUrl:
                        description: PollingURL is used to fetch the status of the
                          given operation.
                        type: string
                      status:
                        description: Status represents the status of the operation.
                        type: string
                    type: object
                  masterServerId:
                    description: MasterServerID - The master server id of a replica
                      server.
                    type: string
                  name:
                    description: Name - Resource name.
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                  userVisibleState:
                    description: UserVisibleState - A state of a server that is visible
                      to user.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: postgresqlserverconfigurations.database.azure.crossplane.io
spec:
  group: database.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: PostgreSQLServerConfiguration
    listKind: PostgreSQLServerConfigurationList
    plural: postgresqlserverconfigurations
    singular: postgresqlserverconfiguration
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A PostgreSQLServerConfiguration is a managed resource that represents
          an Azure PostgreSQL Server Configuration.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A SQLServerConfigurationSpec defines the desired state of
              a SQLServer Configuration.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: SQLServerConfigurationParameters define the desired state
                  of an Azure SQL Database Server Configuration, either PostgreSQL
                  or MySQL Configuration.
                properties:
                  name:
                    description: Name - Configuration name to be applied
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this SQLServer.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - A selector for a ResourceGroup
                      object to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  serverName:
                    description: ServerName specifies the name of the server that
                      this configuration applies to.
                    type: string
                  serverNameRef:
                    description: ServerNameRef - A reference to a server object to
                      retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  serverNameSelector:
                    description: ServerNameSelector - A selector for a server object
                      to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  value:
                    description: Value - Configuration value to be applied Can be
                      left unset to read the current value as a result of late-initialization.
                    type: string
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A SQLServerConfigurationStatus represents the observed state
              of a SQLServerConfiguration.
            properties:
              atProvider:
                description: SQLServerConfigurationObservation represents the current
                  state of Azure SQL resource.
                properties:
                  dataType:
                    description: DataType - Data type for the configuration
                    type: string
                  defaultValue:
                    description: DefaultValue - Default value for this configuration
                    type: string
                  description:
                    description: Description - Description for the configuration
                    type: string
                  id:
                    description: ID - Resource ID
                    type: string
                  lastOperation:
                    description: LastOperation represents the state of the last operation
                      started by the controller.
                    properties:
                      errorMessage:
                        description: ErrorMessage represents the error that occurred
                          during the operation.
                        type: string
                      method:
                        description: Method is HTTP method that the initial request
                          is made with.
                        type: string
                      pollingUrl:
                        description: PollingURL is used to fetch the status of the
                          given operation.
                        type: string
                      status:
                        description: Status represents the status of the operation.
                        type: string
                    type: object
                  name:
                    description: Name - Resource name.
                    type: string
                  source:
                    description: Source - Applied configuration source
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                  value:
                    description: Value - Applied configuration value
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: recordsets.dns.azure.crossplane.io
spec:
  group: dns.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: RecordSet
    listKind: RecordSetList
    plural: recordsets
    singular: recordset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A RecordSet is a managed resource that represents an Azure DNS
          RecordSet
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RecordSetSpec defines the desired state of a RecordSet.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: RecordSetParameters define the desired state of an Azure
                  DNS RecordSet.
                properties:
                  aRecords:
                    description: ARecords - The list of A records in the record set.
                    items:
                      description: ARecord an A record.
                      properties:
                        ipV4Address:
                          description: IPV4Address - The IPv4 address of this A record.
                          type: string
                      type: object
                    type: array
                  aaaaRecords:
                    description: AAAARecords - The list of AAAA records in the record
                      set.
                    items:
                      description: AAAARecord an AAAA record.
                      properties:
                        ipV6Address:
                          description: IPV6Address - The IPv6 address of this AAAA
                            record.
                          type: string
                      type: object
                    type: array
                  caaRecords:
                    description: CAARecords - The list of CAA records in the record
                      set.
                    items:
                      description: CAARecord a CAA record.
                      properties:
                        flags:
                          description: Flags - The flags for this CAA record as an
                            integer between 0 and 255.
                          type: integer
                        tag:
                          description: Tag - The tag for this CAA record.
                          type: string
                        value:
                          description: Value - The value for this CAA record.
                          type: string
                      type: object
                    type: array
                  cnameRecord:
                    description: CNAMERecord - The CNAME record in the  record set.
                    properties:
                      cname:
                        description: CNAME - The canonical name for this CNAME record.
                        type: string
                    type: object
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata - The metadata attached to the record set
                    type: object
                  mxRecords:
                    description: MXRecords - The list of MX records in the record
                      set.
                    items:
                      description: MXRecord an MX record.
                      properties:
                        exchange:
                          description: Exchange - The domain name of the mail host
                            for this MX record.
                          type: string
                        preference:
                          description: Preference - The preference value for this
                            MX record.
                          type: integer
                      type: object
                    type: array
                  nsRecords:
                    description: NSRecords - The list of NS records in the record
                      set.
                    items:
                      description: NSRecord an NS record.
                      properties:
                        nsDName:
                          description: NSDName - The name server name for this NS
                            record.
                          type: string
                      type: object
                    type: array
                  ptrRecords:
                    description: PTRRecords - The list of PTR records in the record
                      set.
                    items:
                      description: PTRRecord a PTR record.
                      properties:
                        ptrDName:
                          description: PTRDName - The PTR target domain name for this
                            PTR record.
                          type: string
                      type: object
                    type: array
                  recordType:
                    description: RecordType enumerates the values for record type.
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this DNS Zone.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - A selector for a ResourceGroup
                      object to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  soaRecord:
                    description: SOARecord - The SOA record in the record set.
                    properties:
                      email:
                        description: Email - The email contact for this SOA record.
                        type: string
                      expireTime:
                        description: ExpireTime - The expire time for this SOA record.
                        type: integer
                      host:
                        description: Host - The domain name of the authoritative name
                          server for this SOA record.
                        type: string
                      minimumTTL:
                        description: MinimumTTL - The minimum value for this SOA record.
                          By convention this is used to determine the negative caching
                          duration.
                        type: integer
                      refreshTime:
                        description: RefreshTime - The refresh value for this SOA
                          record.
                        type: integer
                      retryTime:
                        description: RetryTime - The retry time for this SOA record.
                        type: integer
                      serialNumber:
                        description: SerialNumber - The serial number for this SOA
                          record.
                        type: integer
                    type: object
                  srvRecords:
                    description: SRVRecords - The list of SRV records in the record
                      set.
                    items:
                      description: SRVRecord an SRV record.
                      properties:
                        port:
                          description: Port - The port value for this SRV record.
                          type: integer
                        priority:
                          description: Priority - The priority value for this SRV
                            record.
                          type: integer
                        target:
                          description: Target - The target domain name for this SRV
                            record.
                          type: string
                        weight:
                          description: Weight - The weight value for this SRV record.
                          type: integer
                      type: object
                    type: array
                  targetResource:
                    description: TargetResource - A reference to an azure resource
                      from where the dns resource value is taken.
                    properties:
                      id:
                        description: ID - Resource id.
                        type: string
                    type: object
                  ttl:
                    description: TTL - The TTL (time-to-live) of the records in the
                      record set.
                    type: integer
                  txtRecords:
                    description: TXTRecords - The list of TXT records in the record
                      set.
                    items:
                      description: TXTRecord a TXT record.
                      properties:
                        value:
                          description: Value - The text value of this TXT record.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  zoneName:
                    description: ZoneName specifies the name of the Zone that should
                      contain this DNS RecordSet.
                    type: string
                  zoneNameRef:
                    description: ZoneNameRef - A reference to a Zone object to retrieve
                      its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  zoneNameSelector:
                    description: ZoneNameSelector - A selector for a Zone object to
                      retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                required:
                - recordType
                - ttl
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RecordSetStatus represents the observed state of a RecordSet.
            properties:
              atProvider:
                description: RecordSetObservation define the actual state of an Azure
                  DNS RecordSet.
                properties:
                  etag:
                    description: Etag - The etag of the zone.
                    type: string
                  fqdn:
                    description: FQDN - Fully qualified domain name of the record
                      set.
                    type: string
                  id:
                    description: ID - Resource ID
                    type: string
                  name:
                    description: Name - The name of the zone.
                    type: string
                  provisioningState:
                    description: ProvisioningState -provisioning State of the record
                      set.
                    type: string
                  type:
                    description: Type - Resource type.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zones.dns.azure.crossplane.io
spec:
  group: dns.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.version
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Zone is a managed resource that represents an Azure DNS Zone
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ZoneSpec defines the desired state of a Zone.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ZoneParameters define the desired state of an Azure DNS
                  Zone.
                properties:
                  location:
                    description: Location is the Azure location that the DNS Zone
                      will be created in
                    type: string
                  registrationVirtualNetworks:
                    description: RegistrationVirtualNetworks - A list of references
                      to virtual networks that register hostnames in this DNS zone.
                      This is an only when ZoneType is Private.
                    items:
                      description: SubResource a reference to another resource
                      properties:
                        id:
                          description: ID - Resource id.
                          type: string
                      type: object
                    type: array
                  resolutionVirtualNetworks:
                    description: ResolutionVirtualNetworks - A list of references
                      to virtual networks that resolve records in this DNS zone. This
                      is an only when ZoneType is Private.
                    items:
                      description: SubResource a reference to another resource
                      properties:
                        id:
                          description: ID - Resource id.
                          type: string
                      type: object
                    type: array
                  resourceGroupName:
                    description: ResourceGroupName specifies the name of the resource
                      group that should contain this DNS Zone.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to a ResourceGroup
                      object to retrieve its name
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - A selector for a ResourceGroup
                      object to retrieve its name
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Resource tags.
                    type: object
                  zoneType:
                    default: Public
                    description: 'ZoneType - Type of DNS zone to create. Allowed values:
                      Private, Public Default: Public'
                    enum:
                    - Public
                    - Private
                    type: string
                required:
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ZoneStatus represents the observed state of a Zone.
            properties:
              atProvider:
                description: ZoneObservation define the actual state of an Azure DNS
                  Zone.
                properties:
                  etag:
                    description: Etag - The etag of the zone.
                    type: string
                  id:
                    description: ID - Resource ID
                    type: string
                  maxNumberOfRecordSets:
                    description: MaxNumberOfRecordSets - The maximum number of record
                      sets that can be created in this DNS zone. This is a read-only
                      property and any attempt to set this value will be ignored.
                    type: integer
                  name:
                    description: Name - The name of the zone.
                    type: string
                  nameServers:
                    description: NameServers - The name servers for this DNS zone.
                      This is a read-only property and any attempt to set this value
                      will be ignored.
                    items:
                      type: string
                    type: array
                  numberOfRecordSets:
                    description: NumberOfRecordSets - The current number of record
                      sets in this DNS zone. This is a read-only property and any
                      attempt to set this value will be ignored.
                    type: integer
                  type:
                    description: Type - Resource type.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: keyvaultsecrets.keyvault.azure.crossplane.io
spec:
  group: keyvault.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: KeyVaultSecret
    listKind: KeyVaultSecretList
    plural: keyvaultsecrets
    shortNames:
    - kvsecret
    singular: keyvaultsecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A KeyVaultSecret is a managed resource that represents an Azure
          KeyVaultSecret cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A KeyVaultSecretSpec defines the desired state of a Secret.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: KeyVaultSecretParameters defines the desired state of
                  an Azure Key Vault Secret. https://docs.microsoft.com/en-us/rest/api/keyvault/#secret-operations
                properties:
                  attributes:
                    description: SecretAttributes - The secret management attributes
                    properties:
                      enabled:
                        description: Enabled - Determines whether the object is enabled.
                        type: boolean
                      expirationDate:
                        description: Expires - Expiry date in UTC (RFC3339 format).
                        format: date-time
                        type: string
                      notBeforeDate:
                        description: NotBeforeDate - Not before date in UTC (RFC3339
                          format).
                        format: date-time
                        type: string
                    type: object
                  contentType:
                    description: ContentType - Type of the secret value such as a
                      password
                    type: string
                  name:
                    description: Name - The name of the secret
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Application-specific metadata in the form
                      of key-value pairs
                    type: object
                  value:
                    description: Value - The value of the secret
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  vaultBaseUrl:
                    description: VaultBaseURL - The vault name, for example https://myvault.vault.azure.net.
                    type: string
                required:
                - name
                - value
                - vaultBaseUrl
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A KeyVaultSecretStatus represents the observed state of a
              Secret.
            properties:
              atProvider:
                description: KeyVaultSecretObservation represents the observed state
                  of the Secret object in Azure.
                properties:
                  attributes:
                    description: Attributes - The secret management attributes.
                    properties:
                      created:
                        description: Created - READ-ONLY; Creation time in UTC.
                        format: date-time
                        type: string
                      recoveryLevel:
                        description: 'RecoveryLevel - READ-ONLY; Reflects the deletion
                          recovery level currently in effect for secrets in the current
                          vault. If it contains ''Purgeable'', the secret can be permanently
                          deleted by a privileged user; otherwise, only the system
                          can purge the secret, at the end of the retention interval.
                          Possible values include: ''Purgeable'', ''RecoverablePurgeable'',
                          ''Recoverable'', ''RecoverableProtectedSubscription'', ''CustomizedRecoverablePurgeable'',
                          ''CustomizedRecoverable'', ''CustomizedRecoverableProtectedSubscription'''
                        type: string
                      updated:
                        description: Updated - READ-ONLY; Last updated time in UTC.
                        format: date-time
                        type: string
                    type: object
                  id:
                    description: ID - The secret id.
                    type: string
                  kid:
                    description: Kid - READ-ONLY; If this is a secret backing a KV
                      certificate, then this field specifies the corresponding key
                      backing the KV certificate.
                    type: string
                  managed:
                    description: Managed - READ-ONLY; True if the secret's lifetime
                      is managed by key vault. If this is a secret backing a certificate,
                      then managed will be true.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: publicipaddresses.network.azure.crossplane.io
spec:
  group: network.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: PublicIPAddress
    listKind: PublicIPAddressList
    plural: publicipaddresses
    singular: publicipaddress
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.address
      name: ADDRESS
      type: string
    - jsonPath: .status.atProvider.dnsSettings.fqdn
      name: FQDN
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A PublicIPAddress is a managed resource that represents an Azure
          PublicIPAddress.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A PublicIPAddressSpec defines the desired state of a PublicIPAddress.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: PublicIPAddressProperties defines properties of the PublicIPAddress.
                properties:
                  allocationMethod:
                    description: 'PublicIPAllocationMethod - The public IP address
                      allocation method. Possible values include: ''Static'', ''Dynamic'''
                    enum:
                    - Static
                    - Dynamic
                    type: string
                  dnsSettings:
                    description: PublicIPAddressDNSSettings - The FQDN of the DNS
                      record associated with the public IP address.
                    properties:
                      domainNameLabel:
                        description: DomainNameLabel -the Domain name label. The concatenation
                          of the domain name label and the regionalized DNS zone make
                          up the fully qualified domain name associated with the public
                          IP address. If a domain name label is specified, an A DNS
                          record is created for the public IP in the Microsoft Azure
                          DNS system.
                        minLength: 1
                        type: string
                      reverseFqdn:
                        description: ReverseFQDN - Gets or Sets the Reverse FQDN.
                          A user-visible, fully qualified domain name that resolves
                          to this public IP address. If the reverseFqdn is specified,
                          then a PTR DNS record is created pointing from the IP address
                          in the in-addr.arpa domain to the reverse FQDN.
                        type: string
                    required:
                    - domainNameLabel
                    type: object
                  ipTags:
                    description: IPTags - IP tags to be assigned to this public IP
                      address
                    items:
                      description: IPTag list of tags to be assigned to this public
                        IP
                      properties:
                        ipTagType:
                          description: 'IPTagType - Type of the IP tag. Example: FirstPartyUsage.'
                          type: string
                        tag:
                          description: Tag - Value of the IpTag associated with the
                            public IP. Example SQL, Storage etc.
                          type: string
                      required:
                      - ipTagType
                      - tag
                      type: object
                    type: array
                  location:
                    description: Location - Resource location.
                    minLength: 1
                    type: string
                  publicIPPrefixID:
                    description: PublicIPPrefixID - The Public IP Prefix this Public
                      IP Address should be allocated from.
                    type: string
                  resourceGroupName:
                    description: ResourceGroupName - Name of the Public IP address's
                      resource group.
                    type: string
                  resourceGroupNameRef:
                    description: ResourceGroupNameRef - A reference to the the Public
                      IP address's resource group.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  resourceGroupNameSelector:
                    description: ResourceGroupNameSelector - Select a reference to
                      the Public IP address's resource group.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                    type: object
                  sku:
                    description: SKU of PublicIPAddress
                    properties:
                      name:
                        description: 'Name - Name of sku. Possible values include:
                          [''Standard'', ''Basic'']'
                        enum:
                        - Standard
                        - Basic
                        type: string
                    required:
                    - name
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - Resource tags.
                    type: object
                  tcpIdleTimeoutInMinutes:
                    description: TCPIdleTimeoutInMinutes - Timeout in minutes for
                      idle TCP connections
                    format: int32
                    minimum: 0
                    type: integer
                  version:
                    description: 'PublicIPAllocationMethod - The public IP address
                      version. Possible values include: ''IPv4'', ''IPv6'''
                    enum:
                    - IPv4
                    - IPv6
                    type: string
                required:
                - allocationMethod
                - location
                - version
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A PublicIPAddressStatus represents the observed state of
              a SQLServer.
            properties:
              atProvider:
                description: A PublicIPAddressObservation represents the observed
                  state of a PublicIPAddress.
                properties:
                  address:
                    description: Address - A string identifying address of PublicIPAddress
                      resource
                    type: string
                  dnsSettings:
                    description: DNSSettings observed DNS settings of the IP address
                    properties:
                      domainNameLabel:
                        description: DomainNameLabel -the Domain name label. The concatenation
                          of the domain name label and the regionalized DNS zone make
                          up the fully qualified domain name associated with the public
                          IP address. If a domain name label is specified, an A DNS
                          record is created for the public IP in the Microsoft Azure
                          DNS system.
                        type: string
                      fqdn:
                        description: FQDN - Gets the FQDN, Fully qualified domain
                          name of the A DNS record associated with the public IP.
                          This is the concatenation of the domainNameLabel and the
                          regionalized DNS zone.
                        type: string
                      reverseFqdn:
                        description: ReverseFQDN - Gets or Sets the Reverse FQDN.
                          A user-visible, fully qualified domain name that resolves
                          to this public IP address. If the reverseFqdn is specified,
                          then a PTR DNS record is created pointing from the IP address
                          in the in-addr.arpa domain to the reverse FQDN.
                        type: string
                    type: object
                  etag:
                    description: Etag - A unique string that changes whenever the
                      resource is updated.
                    type: string
                  id:
                    description: ID of this PublicIPAddress.
                    type: string
                  ipConfiguration:
                    description: IPConfiguration - The IP configuration associated
                      with the public IP address
                    properties:
                      privateIPAddress:
                        description: PrivateIPAddress - The private IP address of
                          the IP configuration.
                        type: string
                      privateIPAllocationMethod:
                        description: 'PrivateIPAllocationMethod - The private IP address
                          allocation method. Possible values include: ''Static'',
                          ''Dynamic'''
                        type: string
                      provisioningState:
                        description: 'ProvisioningState - Gets the provisioning state
                          of the public IP resource. Possible values are: ''Updating'',
                          ''Deleting'', and ''Failed''.'
                        type: string
                    required:
                    - privateIPAllocationMethod
                    - provisioningState
                    type: object
                  message:
                    description: A Message providing detail about the state of this
                      PublicIPAddress, if any.
                    type: string
                  state:
                    description: State of this PublicIPAddress.
                    type: string
                  version:
                    description: Version observed IP version
                    type: string
                required:
                - address
                - version
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: subnets.network.azure.crossplane.io
spec:
  group: network.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Subnet
    listKind: SubnetList
    plural: subnets
    singular: subnet
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A Subnet is a managed resource that represents an Azure Subnet.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A SubnetSpec defines the desired state of a Subnet.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              properties:
                description: SubnetPropertiesFormat - Properties of the subnet.
                properties:
                  addressPrefix:
                    description: AddressPrefix - The address prefix for the subnet.
                    type: string
                  serviceEndpoints:
                    description: ServiceEndpoints - An array of service endpoints.
                    items:
                      description: ServiceEndpointPropertiesFormat defines properties
                        of a service endpoint.
                      properties:
                        locations:
                          description: Locations - A list of locations.
                          items:
                            type: string
                          type: array
                        provisioningState:
                          description: ProvisioningState - The provisioning state
                            of the resource.
                          type: string
                        service:
                          description: Service - The type of the endpoint service.
                          type: string
                      type: object
                    type: array
                required:
                - addressPrefix
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName - Name of the Subnet's resource group.
                type: string
              resourceGroupNameRef:
                description: ResourceGroupNameRef - A reference to the the Subnets's
                  resource group.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupNameSelector:
                description: ResourceGroupNameSelector - Selects a reference to the
                  the Subnets's resource group.
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              virtualNetworkName:
                description: VirtualNetworkName - Name of the Subnet's virtual network.
                type: string
              virtualNetworkNameRef:
                description: VirtualNetworkNameRef references to a VirtualNetwork
                  to retrieve its name
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              virtualNetworkNameSelector:
                description: VirtualNetworkNameSelector selects a reference to a VirtualNetwork
                  to retrieve its name
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - properties
            type: object
          status:
            description: A SubnetStatus represents the observed state of a Subnet.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              etag:
                description: Etag - A unique string that changes whenever the resource
                  is updated.
                type: string
              id:
                description: ID of this Subnet.
                type: string
              message:
                description: A Message providing detail about the state of this Subnet,
                  if any.
                type: string
              purpose:
                description: Purpose - A string identifying the intention of use for
                  this subnet based on delegations and other user-defined properties.
                type: string
              state:
                description: State of this Subnet.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: virtualnetworks.network.azure.crossplane.io
spec:
  group: network.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: VirtualNetwork
    listKind: VirtualNetworkList
    plural: virtualnetworks
    singular: virtualnetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .spec.location
      name: LOCATION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A VirtualNetwork is a managed resource that represents an Azure
          Virtual Network.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A VirtualNetworkSpec defines the desired state of a VirtualNetwork.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              location:
                description: Location - Resource location.
                type: string
              properties:
                description: VirtualNetworkPropertiesFormat - Properties of the virtual
                  network.
                properties:
                  addressSpace:
                    description: AddressSpace - The AddressSpace that contains an
                      array of IP address ranges that can be used by subnets.
                    properties:
                      addressPrefixes:
                        description: AddressPrefixes - A list of address blocks reserved
                          for this virtual network in CIDR notation.
                        items:
                          type: string
                        type: array
                    required:
                    - addressPrefixes
                    type: object
                  enableDdosProtection:
                    description: EnableDDOSProtection - Indicates if DDoS protection
                      is enabled for all the protected resources in the virtual network.
                      It requires a DDoS protection plan associated with the resource.
                    type: boolean
                  enableVmProtection:
                    description: EnableVMProtection - Indicates if VM protection is
                      enabled for all the subnets in the virtual network.
                    type: boolean
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName - Name of the Virtual Network's resource
                  group.
                type: string
              resourceGroupNameRef:
                description: ResourceGroupNameRef - A reference to the the Virtual
                  Network's resource group.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              resourceGroupNameSelector:
                description: ResourceGroupNameSelector - Select a reference to the
                  the Virtual Network's resource group.
                properties:
                  matchControllerRef:
                    description: MatchControllerRef ensures an object with the same
                      controller reference as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                type: object
              tags:
                additionalProperties:
                  type: string
                description: Tags - Resource tags.
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - location
            - properties
            type: object
          status:
            description: A VirtualNetworkStatus represents the observed state of a
              VirtualNetwork.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              etag:
                description: Etag - A unique read-only string that changes whenever
                  the resource is updated.
                type: string
              id:
                description: ID of this VirtualNetwork.
                type: string
              message:
                description: A Message providing detail about the state of this VirtualNetwork,
                  if any.
                type: string
              resourceGuid:
                description: ResourceGUID - The GUID of this VirtualNetwork.
                type: string
              state:
                description: State of this VirtualNetwork.
                type: string
              type:
                description: Type of this VirtualNetwork.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: accounts.storage.azure.crossplane.io
spec:
  group: storage.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Account
    listKind: AccountList
    plural: accounts
    singular: account
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.resourceGroupName
      name: RESOURCE_GROUP
      type: string
    - jsonPath: .spec.storageAccountName
      name: ACCOUNT_NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: An Account is a managed resource that represents an Azure Blob
          Service Account.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: An AccountSpec defines the desired state of an Account.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              resourceGroupName:
                description: ResourceGroupName specifies the resource group for this
                  Account.
                type: string
              storageAccountSpec:
                description: StorageAccountSpec specifies the desired state of this
                  Account.
                properties:
                  identity:
                    description: Identity - The identity of the resource.
                    properties:
                      principalId:
                        description: PrincipalID - The principal ID of resource identity.
                        type: string
                      tenantId:
                        description: TenantID - The tenant ID of resource.
                        type: string
                      type:
                        description: Type - The identity type.
                        type: string
                    type: object
                  kind:
                    description: 'Kind - Indicates the type of storage account. Possible
                      values include: ''Storage'', ''BlobStorage'''
                    enum:
                    - Storage
                    - BlobStorage
                    type: string
                  location:
                    description: Location - The location of the resource. This will
                      be one of the supported and registered Azure Geo Regions (e.g.
                      West US, East US, Southeast Asia, etc.).
                    type: string
                  properties:
                    description: StorageAccountSpecProperties - The parameters used
                      to create the storage account.
                    properties:
                      accessTier:
                        description: 'AccessTier - Required for storage accounts where
                          kind = BlobStorage. The access tier used for billing. Possible
                          values include: ''Hot'', ''Cool'''
                        enum:
                        - Hot
                        - Cool
                        type: string
                      customDomain:
                        description: CustomDomain - User domain assigned to the storage
                          account. Name is the CNAME source. Only one custom domain
                          is supported per storage account at this time. to clear
                          the existing custom domain, use an empty string for the
                          custom domain name property.
                        properties:
                          name:
                            description: Name - custom domain name assigned to the
                              storage account. Name is the CNAME source.
                            type: string
                          useSubDomainName:
                            description: UseSubDomainName - Indicates whether indirect
                              CNAME validation is enabled.
                            type: boolean
                        type: object
                      encryption:
                        description: Encryption - Provides the encryption settings
                          on the account. If left unspecified the account encryption
                          settings will remain the same. The default setting is unencrypted.
                        properties:
                          keySource:
                            description: "KeySource - The encryption keySource (provider).
                              \n Possible values (case-insensitive):  Microsoft.Storage,
                              Microsoft.Keyvault"
                            enum:
                            - Microsoft.Storage
                            - Microsoft.Keyvault
                            type: string
                          keyvaultproperties:
                            description: KeyVaultProperties - Properties provided
                              by key vault.
                            properties:
                              keyname:
                                description: KeyName - The name of KeyVault key.
                                type: string
                              keyvaulturi:
                                description: KeyVaultURI - The Uri of KeyVault.
                                type: string
                              keyversion:
                                description: KeyVersion - The version of KeyVault
                                  key.
                                type: string
                            type: object
                          services:
                            description: Services - List of services which support
                              encryption.
                            properties:
                              blob:
                                description: Blob - The encryption function of the
                                  blob storage service.
                                type: boolean
                              file:
                                description: File - The encryption function of the
                                  file storage service.
                                type: boolean
                            type: object
                        type: object
                      networkAcls:
                        description: NetworkRuleSet - Network rule set
                        properties:
                          bypass:
                            description: 'Bypass - Specifies whether traffic is bypassed
                              for Logging/Metrics/AzureServices. Possible values are
                              any combination of Logging|Metrics|AzureServices (For
                              example, "Logging, Metrics"), or None to bypass none
                              of those traffics. Possible values include: ''None'',
                              ''Logging'', ''Metrics'', ''AzureServices'''
                            type: string
                          defaultAction:
                            description: "DefaultAction - Specifies the default action
                              of allow or deny when no other rules match. \n Possible
                              values include: 'Allow', 'Deny'"
                            enum:
                            - Allow
                            - Deny
                            type: string
                          ipRules:
                            description: IPRules - Sets the IP ACL rules
                            items:
                              description: IPRule IP rule with specific IP or IP range
                                in CIDR format.
                              properties:
                                action:
                                  description: 'Action - The action of IP ACL rule.
                                    Possible values include: ''Allow'''
                                  enum:
                                  - Allow
                                  type: string
                                value:
                                  description: IPAddressOrRange - Specifies the IP
                                    or IP range in CIDR format. Only IPV4 address
                                    is allowed.
                                  type: string
                              type: object
                            type: array
                          virtualNetworkRules:
                            description: VirtualNetworkRules - Sets the virtual network
                              rules
                            items:
                              description: VirtualNetworkRule virtual Network rule.
                              properties:
                                action:
                                  description: 'Action - The action of virtual network
                                    rule. Possible values include: ''Allow'''
                                  enum:
                                  - Allow
                                  type: string
                                id:
                                  description: 'VirtualNetworkResourceID - Resource
                                    ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'
                                  type: string
                              type: object
                            type: array
                        type: object
                      supportsHttpsTrafficOnly:
                        description: EnableHTTPSTrafficOnly - Allows https traffic
                          only to storage service if sets to true.
                        type: boolean
                    type: object
                  sku:
                    description: Sku of the storage account.
                    properties:
                      capabilities:
                        description: Capabilities - The capability information in
                          the specified sku, including file encryption, network acls,
                          change notification, etc.
                        items:
                          description: skuCapability the capability information in
                            the specified sku, including file encryption, network
                            acls, change notification, etc.
                          properties:
                            name:
                              description: Name - The name of capability, The capability
                                information in the specified sku, including file encryption,
                                network acls, change notification, etc.
                              type: string
                            value:
                              description: Value - A string value to indicate states
                                of given capability. Possibly 'true' or 'false'.
                              enum:
                              - true
                              - false
                              type: string
                          type: object
                        type: array
                      kind:
                        description: "Kind - Indicates the type of storage account.
                          \n Possible values include: 'Storage', 'BlobStorage'"
                        enum:
                        - Storage
                        - BlobStorage
                        type: string
                      locations:
                        description: Locations - The set of locations that the Sku
                          is available. This will be supported and registered Azure
                          Geo Regions (e.g. West US, East US, Southeast Asia, etc.).
                        items:
                          type: string
                        type: array
                      name:
                        description: "Name - Gets or sets the sku name. Required for
                          account creation; optional for update. Note that in older
                          versions, sku name was called accountType. \n Possible values
                          include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS',
                          'Standard_ZRS', 'Premium_LRS'"
                        enum:
                        - Standard_LRS
                        - Standard_GRS
                        - Standard_RAGRS
                        - Standard_ZRS
                        - Premium_LRS
                        type: string
                      resourceType:
                        description: ResourceType - The type of the resource, usually
                          it is 'storageAccounts'.
                        type: string
                      tier:
                        description: "Tier - Gets the sku tier. This is based on the
                          Sku name. \n Possible values include: 'Standard', 'Premium'"
                        enum:
                        - Standard
                        - Premium
                        type: string
                    required:
                    - name
                    type: object
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags - A list of key value pairs that describe the
                      resource. These tags can be used for viewing and grouping this
                      resource (across resource groups). A maximum of 15 tags can
                      be provided for a resource. Each tag must have a key with a
                      length no greater than 128 characters and a value with a length
                      no greater than 256 characters.
                    type: object
                required:
                - kind
                - location
                - sku
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - resourceGroupName
            - storageAccountSpec
            type: object
          status:
            description: An AccountStatus represents the observed state of an Account.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              id:
                description: ID of this Account.
                type: string
              name:
                description: Name of this Account.
                type: string
              properties:
                description: Properties of this Account.
                properties:
                  creationTime:
                    description: CreationTime - the creation date and time of the
                      storage account in UTC.
                    format: date-time
                    type: string
                  lastGeoFailoverTime:
                    description: LastGeoFailoverTime - the timestamp of the most recent
                      instance of a failover to the secondary location. Only the most
                      recent timestamp is retained. This element is not returned if
                      there has never been a failover instance. Only available if
                      the accountType is Standard_GRS or Standard_RAGRS.
                    format: date-time
                    type: string
                  primaryEndpoints:
                    description: PrimaryEndpoints - the URLs that are used to perform
                      a retrieval of a public blob, queue, or table object. Note that
                      Standard_ZRS and Premium_LRS accounts only return the blob endpoint.
                    properties:
                      blob:
                        description: Blob - the blob endpoint.
                        type: string
                      file:
                        description: File - the file endpoint.
                        type: string
                      queue:
                        description: Queue - the queue endpoint.
                        type: string
                      table:
                        description: Table - the table endpoint.
                        type: string
                    type: object
                  primaryLocation:
                    description: PrimaryLocation - the location of the primary data
                      center for the storage account.
                    type: string
                  provisioningState:
                    description: 'ProvisioningState - the status of the storage account
                      at the time the operation was called. Possible values include:
                      ''Creating'', ''ResolvingDNS'', ''Succeeded'''
                    enum:
                    - Creating
                    - ResolvingDNS
                    - Succeeded
                    type: string
                  secondaryEndpoints:
                    description: SecondaryEndpoints - the URLs that are used to perform
                      a retrieval of a public blob, queue, or table object from the
                      secondary location of the storage account. Only available if
                      the Sku name is Standard_RAGRS.
                    properties:
                      blob:
                        description: Blob - the blob endpoint.
                        type: string
                      file:
                        description: File - the file endpoint.
                        type: string
                      queue:
                        description: Queue - the queue endpoint.
                        type: string
                      table:
                        description: Table - the table endpoint.
                        type: string
                    type: object
                  secondaryLocation:
                    description: SecondaryLocation - the location of the geo-replicated
                      secondary for the storage account. Only available if the accountType
                      is Standard_GRS or Standard_RAGRS.
                    type: string
                  statusOfPrimary:
                    description: 'StatusOfPrimary - the status indicating whether
                      the primary location of the storage account is available or
                      unavailable. Possible values include: ''Available'', ''Unavailable'''
                    type: string
                  statusOfSecondary:
                    description: 'StatusOfSecondary - the status indicating whether
                      the secondary location of the storage account is available or
                      unavailable. Only available if the Sku name is Standard_GRS
                      or Standard_RAGRS. Possible values include: ''Available'', ''Unavailable'''
                    enum:
                    - Available
                    - Unavailable
                    type: string
                type: object
              type:
                description: Type of this Account.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: containers.storage.azure.crossplane.io
spec:
  group: storage.azure.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: Container
    listKind: ContainerList
    plural: containers
    singular: container
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.accountRef.name
      name: STORAGE_ACCOUNT
      type: string
    - jsonPath: .spec.publicAccessType
      name: PUBLIC_ACCESS_TYPE
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A Container is a managed resource that represents an Azure Blob
          Storage Container.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ContainerSpec defines the desired state of a Container.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              metadata:
                additionalProperties:
                  type: string
                description: Metadata for this Container.
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              publicAccessType:
                description: PublicAccessType for this container; either "blob" or
                  "container".
                type: string
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            description: A ContainerStatus represents the observed status of a Container.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions:
  - v1alpha3

---
