"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex

import k8s.apimachinery.pkg.apis.meta.v1


schema MachineSet:
    """
    MachineSet ensures that a specified number of machines replicas are running at any given time. Compatibility level 2: Stable within a major release for a minimum of 9 months or 3 minor releases (whichever is longer).

    Attributes
    ----------
    apiVersion : str, default is "machine.openshift.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MachineSet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MachineOpenshiftIoV1beta1MachineSetSpec, default is Undefined, optional
        spec
    status : MachineOpenshiftIoV1beta1MachineSetStatus, default is Undefined, optional
        status
    """


    apiVersion: "machine.openshift.io/v1beta1" = "machine.openshift.io/v1beta1"

    kind: "MachineSet" = "MachineSet"

    metadata?: v1.ObjectMeta

    spec?: MachineOpenshiftIoV1beta1MachineSetSpec

    status?: MachineOpenshiftIoV1beta1MachineSetStatus


schema MachineOpenshiftIoV1beta1MachineSetSpec:
    """
    MachineSetSpec defines the desired state of MachineSet

    Attributes
    ----------
    deletePolicy : str, default is Undefined, optional
        DeletePolicy defines the policy used to identify nodes to delete when downscaling. Defaults to "Random".  Valid values are "Random, "Newest", "Oldest"
    minReadySeconds : int, default is Undefined, optional
        MinReadySeconds is the minimum number of seconds for which a newly created machine should be ready. Defaults to 0 (machine will be considered available as soon as it is ready)
    replicas : int, default is 1, optional
        Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1.
    selector : MachineOpenshiftIoV1beta1MachineSetSpecSelector, default is Undefined, optional
        selector
    template : MachineOpenshiftIoV1beta1MachineSetSpecTemplate, default is Undefined, optional
        template
    """


    deletePolicy?: "Random" | "Newest" | "Oldest"

    minReadySeconds?: int

    replicas?: int = 1

    selector?: MachineOpenshiftIoV1beta1MachineSetSpecSelector

    template?: MachineOpenshiftIoV1beta1MachineSetSpecTemplate


schema MachineOpenshiftIoV1beta1MachineSetSpecSelector:
    """
    Selector is a label query over machines that should match the replica count. Label keys and values that must match in order to be controlled by this MachineSet. It must match the machine template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors

    Attributes
    ----------
    matchExpressions : [MachineOpenshiftIoV1beta1MachineSetSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MachineOpenshiftIoV1beta1MachineSetSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MachineOpenshiftIoV1beta1MachineSetSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplate:
    """
    Template is the object that describes the machine that will be created if insufficient replicas are detected.

    Attributes
    ----------
    metadata : MachineOpenshiftIoV1beta1MachineSetSpecTemplateMetadata, default is Undefined, optional
        metadata
    spec : MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpec, default is Undefined, optional
        spec
    """


    metadata?: MachineOpenshiftIoV1beta1MachineSetSpecTemplateMetadata

    spec?: MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpec


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateMetadata:
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    generateName : str, default is Undefined, optional
        GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. 
         If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). 
         Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace : str, default is Undefined, optional
        Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. 
         Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    ownerReferences : [MachineOpenshiftIoV1beta1MachineSetSpecTemplateMetadataOwnerReferencesItems0], default is Undefined, optional
        List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
    """


    annotations?: {str:str}

    generateName?: str

    labels?: {str:str}

    name?: str

    namespace?: str

    ownerReferences?: [MachineOpenshiftIoV1beta1MachineSetSpecTemplateMetadataOwnerReferencesItems0]


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateMetadataOwnerReferencesItems0:
    """
    OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        API version of the referent.
    blockOwnerDeletion : bool, default is Undefined, optional
        If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
    controller : bool, default is Undefined, optional
        If true, this reference points to the managing controller.
    kind : str, default is Undefined, required
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, required
        Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    uid : str, default is Undefined, required
        UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """


    apiVersion: str

    blockOwnerDeletion?: bool

    controller?: bool

    kind: str

    name: str

    uid: str


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpec:
    """
    Specification of the desired behavior of the machine. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status

    Attributes
    ----------
    lifecycleHooks : MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooks, default is Undefined, optional
        lifecycle hooks
    metadata : MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecMetadata, default is Undefined, optional
        metadata
    providerID : str, default is Undefined, optional
        ProviderID is the identification ID of the machine provided by the provider. This field must match the provider ID as seen on the node object corresponding to this machine. This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a generic out-of-tree provider for autoscaler, this field is required by autoscaler to be able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver and then a comparison is done to find out unregistered machines and are marked for delete. This field will be set by the actuators and consumed by higher level entities like autoscaler that will be interfacing with cluster-api as generic provider.
    providerSpec : MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecProviderSpec, default is Undefined, optional
        provider spec
    taints : [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecTaintsItems0], default is Undefined, optional
        The list of the taints to be applied to the corresponding Node in additive manner. This list will not overwrite any other taints added to the Node on an ongoing basis by other entities. These taints should be actively reconciled e.g. if you ask the machine controller to apply a taint and then manually remove the taint the machine controller will put it back) but not have the machine controller remove any taints
    """


    lifecycleHooks?: MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooks

    metadata?: MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecMetadata

    providerID?: str

    providerSpec?: MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecProviderSpec

    taints?: [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecTaintsItems0]


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooks:
    """
    LifecycleHooks allow users to pause operations on the machine at certain predefined points within the machine lifecycle.

    Attributes
    ----------
    preDrain : [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooksPreDrainItems0], default is Undefined, optional
        PreDrain hooks prevent the machine from being drained. This also blocks further lifecycle events, such as termination.
    preTerminate : [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooksPreTerminateItems0], default is Undefined, optional
        PreTerminate hooks prevent the machine from being terminated. PreTerminate hooks be actioned after the Machine has been drained.
    """


    preDrain?: [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooksPreDrainItems0]

    preTerminate?: [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooksPreTerminateItems0]


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooksPreDrainItems0:
    """
    LifecycleHook represents a single instance of a lifecycle hook

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines a unique name for the lifcycle hook. The name should be unique and descriptive, ideally 1-3 words, in CamelCase or it may be namespaced, eg. foo.example.com/CamelCase. Names must be unique and should only be managed by a single entity.
    owner : str, default is Undefined, required
        Owner defines the owner of the lifecycle hook. This should be descriptive enough so that users can identify who/what is responsible for blocking the lifecycle. This could be the name of a controller (e.g. clusteroperator/etcd) or an administrator managing the hook.
    """


    name: str

    owner: str


    check:
        len(name) <= 256
        len(name) >= 3
        regex.match(name, r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")
        len(owner) <= 512
        len(owner) >= 3


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecLifecycleHooksPreTerminateItems0:
    """
    LifecycleHook represents a single instance of a lifecycle hook

    Attributes
    ----------
    name : str, default is Undefined, required
        Name defines a unique name for the lifcycle hook. The name should be unique and descriptive, ideally 1-3 words, in CamelCase or it may be namespaced, eg. foo.example.com/CamelCase. Names must be unique and should only be managed by a single entity.
    owner : str, default is Undefined, required
        Owner defines the owner of the lifecycle hook. This should be descriptive enough so that users can identify who/what is responsible for blocking the lifecycle. This could be the name of a controller (e.g. clusteroperator/etcd) or an administrator managing the hook.
    """


    name: str

    owner: str


    check:
        len(name) <= 256
        len(name) >= 3
        regex.match(name, r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")
        len(owner) <= 512
        len(owner) >= 3


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecMetadata:
    """
    ObjectMeta will autopopulate the Node created. Use this to indicate what labels, annotations, name prefix, etc., should be used when creating the Node.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    generateName : str, default is Undefined, optional
        GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. 
         If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). 
         Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace : str, default is Undefined, optional
        Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. 
         Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    ownerReferences : [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecMetadataOwnerReferencesItems0], default is Undefined, optional
        List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
    """


    annotations?: {str:str}

    generateName?: str

    labels?: {str:str}

    name?: str

    namespace?: str

    ownerReferences?: [MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecMetadataOwnerReferencesItems0]


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecMetadataOwnerReferencesItems0:
    """
    OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        API version of the referent.
    blockOwnerDeletion : bool, default is Undefined, optional
        If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
    controller : bool, default is Undefined, optional
        If true, this reference points to the managing controller.
    kind : str, default is Undefined, required
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, required
        Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    uid : str, default is Undefined, required
        UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """


    apiVersion: str

    blockOwnerDeletion?: bool

    controller?: bool

    kind: str

    name: str

    uid: str


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecProviderSpec:
    """
    ProviderSpec details Provider-specific configuration to use during node creation.

    Attributes
    ----------
    value : any, default is Undefined, optional
        Value is an inlined, serialized representation of the resource configuration. It is recommended that providers maintain their own versioned API types that should be serialized/deserialized from this field, akin to component config.
    """


    value?: any


schema MachineOpenshiftIoV1beta1MachineSetSpecTemplateSpecTaintsItems0:
    """
    The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.

    Attributes
    ----------
    effect : str, default is Undefined, required
        Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, required
        Required. The taint key to be applied to a node.
    timeAdded : str, default is Undefined, optional
        TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
    value : str, default is Undefined, optional
        The taint value corresponding to the taint key.
    """


    effect: str

    key: str

    timeAdded?: str

    value?: str


schema MachineOpenshiftIoV1beta1MachineSetStatus:
    """
    MachineSetStatus defines the observed state of MachineSet

    Attributes
    ----------
    availableReplicas : int, default is Undefined, optional
        The number of available replicas (ready for at least minReadySeconds) for this MachineSet.
    errorMessage : str, default is Undefined, optional
        error message
    errorReason : str, default is Undefined, optional
        In the event that there is a terminal problem reconciling the replicas, both ErrorReason and ErrorMessage will be set. ErrorReason will be populated with a succinct value suitable for machine interpretation, while ErrorMessage will contain a more verbose string suitable for logging and human consumption. 
         These fields should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachineTemplate's spec or the configuration of the machine controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the machine controller, or the responsible machine controller itself being critically misconfigured. 
         Any transient errors that occur during the reconciliation of Machines can be added as events to the MachineSet object and/or logged in the controller's output.
    fullyLabeledReplicas : int, default is Undefined, optional
        The number of replicas that have labels matching the labels of the machine template of the MachineSet.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration reflects the generation of the most recently observed MachineSet.
    readyReplicas : int, default is Undefined, optional
        The number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is "Ready".
    replicas : int, default is Undefined, optional
        Replicas is the most recently observed number of replicas.
    """


    availableReplicas?: int

    errorMessage?: str

    errorReason?: str

    fullyLabeledReplicas?: int

    observedGeneration?: int

    readyReplicas?: int

    replicas?: int


