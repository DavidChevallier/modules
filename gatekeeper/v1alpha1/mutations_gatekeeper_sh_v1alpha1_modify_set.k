"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema ModifySet:
    """
    ModifySet allows the user to modify non-keyed lists, such as the list of arguments to a container.

    Attributes
    ----------
    apiVersion : str, default is "mutations.gatekeeper.sh/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ModifySet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MutationsGatekeeperShV1alpha1ModifySetSpec, default is Undefined, optional
        spec
    status : MutationsGatekeeperShV1alpha1ModifySetStatus, default is Undefined, optional
        status
    """


    apiVersion: "mutations.gatekeeper.sh/v1alpha1" = "mutations.gatekeeper.sh/v1alpha1"

    kind: "ModifySet" = "ModifySet"

    metadata?: v1.ObjectMeta

    spec?: MutationsGatekeeperShV1alpha1ModifySetSpec

    status?: MutationsGatekeeperShV1alpha1ModifySetStatus


schema MutationsGatekeeperShV1alpha1ModifySetSpec:
    """
    ModifySetSpec defines the desired state of ModifySet.

    Attributes
    ----------
    applyTo : [MutationsGatekeeperShV1alpha1ModifySetSpecApplyToItems0], default is Undefined, optional
        ApplyTo lists the specific groups, versions and kinds a mutation will be applied to. This is necessary because every mutation implies part of an object schema and object schemas are associated with specific GVKs.
    location : str, default is Undefined, optional
        Location describes the path to be mutated, for example: `spec.containers[name: main].args`.
    match : MutationsGatekeeperShV1alpha1ModifySetSpecMatch, default is Undefined, optional
        match
    parameters : MutationsGatekeeperShV1alpha1ModifySetSpecParameters, default is Undefined, optional
        parameters
    """


    applyTo?: [MutationsGatekeeperShV1alpha1ModifySetSpecApplyToItems0]

    location?: str

    match?: MutationsGatekeeperShV1alpha1ModifySetSpecMatch

    parameters?: MutationsGatekeeperShV1alpha1ModifySetSpecParameters


schema MutationsGatekeeperShV1alpha1ModifySetSpecApplyToItems0:
    """
    ApplyTo determines what GVKs items the mutation should apply to. Globs are not allowed.

    Attributes
    ----------
    groups : [str], default is Undefined, optional
        groups
    kinds : [str], default is Undefined, optional
        kinds
    versions : [str], default is Undefined, optional
        versions
    """


    groups?: [str]

    kinds?: [str]

    versions?: [str]


schema MutationsGatekeeperShV1alpha1ModifySetSpecMatch:
    """
    Match allows the user to limit which resources get mutated. Individual match criteria are AND-ed together. An undefined match criteria matches everything.

    Attributes
    ----------
    excludedNamespaces : [str], default is Undefined, optional
        ExcludedNamespaces is a list of namespace names. If defined, a constraint only applies to resources not in a listed namespace. ExcludedNamespaces also supports a prefix or suffix based glob.  For example, `excludedNamespaces: [kube-*]` matches both `kube-system` and `kube-public`, and `excludedNamespaces: [*-system]` matches both `kube-system` and `gatekeeper-system`.
    kinds : [MutationsGatekeeperShV1alpha1ModifySetSpecMatchKindsItems0], default is Undefined, optional
        kinds
    labelSelector : MutationsGatekeeperShV1alpha1ModifySetSpecMatchLabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Name is the name of an object.  If defined, it will match against objects with the specified name.  Name also supports a prefix or suffix glob.  For example, `name: pod-*` would match both `pod-a` and `pod-b`, and `name: *-pod` would match both `a-pod` and `b-pod`.
    namespaceSelector : MutationsGatekeeperShV1alpha1ModifySetSpecMatchNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        Namespaces is a list of namespace names. If defined, a constraint only applies to resources in a listed namespace.  Namespaces also supports a prefix or suffix based glob.  For example, `namespaces: [kube-*]` matches both `kube-system` and `kube-public`, and `namespaces: [*-system]` matches both `kube-system` and `gatekeeper-system`.
    scope : str, default is Undefined, optional
        Scope determines if cluster-scoped and/or namespaced-scoped resources are matched.  Accepts `*`, `Cluster`, or `Namespaced`. (defaults to `*`)
    source : str, default is Undefined, optional
        Source determines whether generated or original resources are matched. Accepts `Generated`|`Original`|`All` (defaults to `All`). A value of `Generated` will only match generated resources, while `Original` will only match regular resources.
    """


    excludedNamespaces?: [str]

    kinds?: [MutationsGatekeeperShV1alpha1ModifySetSpecMatchKindsItems0]

    labelSelector?: MutationsGatekeeperShV1alpha1ModifySetSpecMatchLabelSelector

    name?: str

    namespaceSelector?: MutationsGatekeeperShV1alpha1ModifySetSpecMatchNamespaceSelector

    namespaces?: [str]

    scope?: str

    source?: "All" | "Generated" | "Original"


    check:
        all n in excludedNamespaces { regex.match(str(n), r"^(\*|\*-)?[a-z0-9]([-:a-z0-9]*[a-z0-9])?(\*|-\*)?$") } if excludedNamespaces
        regex.match(str(name), r"^(\*|\*-)?[a-z0-9]([-:a-z0-9]*[a-z0-9])?(\*|-\*)?$") if name
        all n in namespaces { regex.match(str(n), r"^(\*|\*-)?[a-z0-9]([-:a-z0-9]*[a-z0-9])?(\*|-\*)?$") } if namespaces


schema MutationsGatekeeperShV1alpha1ModifySetSpecMatchKindsItems0:
    """
    Kinds accepts a list of objects with apiGroups and kinds fields that list the groups/kinds of objects to which the mutation will apply. If multiple groups/kinds objects are specified, only one match is needed for the resource to be in scope.

    Attributes
    ----------
    apiGroups : [str], default is Undefined, optional
        APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
    kinds : [str], default is Undefined, optional
        kinds
    """


    apiGroups?: [str]

    kinds?: [str]


schema MutationsGatekeeperShV1alpha1ModifySetSpecMatchLabelSelector:
    """
    LabelSelector is the combination of two optional fields: `matchLabels` and `matchExpressions`.  These two fields provide different methods of selecting or excluding k8s objects based on the label keys and values included in object metadata.  All selection expressions from both sections are ANDed to determine if an object meets the cumulative requirements of the selector.

    Attributes
    ----------
    matchExpressions : [MutationsGatekeeperShV1alpha1ModifySetSpecMatchLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MutationsGatekeeperShV1alpha1ModifySetSpecMatchLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MutationsGatekeeperShV1alpha1ModifySetSpecMatchLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MutationsGatekeeperShV1alpha1ModifySetSpecMatchNamespaceSelector:
    """
    NamespaceSelector is a label selector against an object's containing namespace or the object itself, if the object is a namespace.

    Attributes
    ----------
    matchExpressions : [MutationsGatekeeperShV1alpha1ModifySetSpecMatchNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MutationsGatekeeperShV1alpha1ModifySetSpecMatchNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MutationsGatekeeperShV1alpha1ModifySetSpecMatchNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MutationsGatekeeperShV1alpha1ModifySetSpecParameters:
    """
    Parameters define the behavior of the mutator.

    Attributes
    ----------
    operation : str, default is "merge", optional
        Operation describes whether values should be merged in ("merge"), or pruned ("prune"). Default value is "merge"
    pathTests : [MutationsGatekeeperShV1alpha1ModifySetSpecParametersPathTestsItems0], default is Undefined, optional
        PathTests are a series of existence tests that can be checked before a mutation is applied
    values : any, default is Undefined, optional
        Values describes the values provided to the operation as `values.fromList`.
    """


    operation?: "merge" | "prune" = "merge"

    pathTests?: [MutationsGatekeeperShV1alpha1ModifySetSpecParametersPathTestsItems0]

    values?: any


schema MutationsGatekeeperShV1alpha1ModifySetSpecParametersPathTestsItems0:
    """
    PathTest allows the user to customize how the mutation works if parent paths are missing. It traverses the list in order. All sub paths are tested against the provided condition, if the test fails, the mutation is not applied. All `subPath` entries must be a prefix of `location`. Any glob characters will take on the same value as was used to expand the matching glob in `location`. 
     Available Tests: * MustExist    - the path must exist or do not mutate * MustNotExist - the path must not exist or do not mutate.

    Attributes
    ----------
    condition : str, default is Undefined, optional
        Condition describes whether the path either MustExist or MustNotExist in the original object
    subPath : str, default is Undefined, optional
        sub path
    """


    condition?: "MustExist" | "MustNotExist"

    subPath?: str


schema MutationsGatekeeperShV1alpha1ModifySetStatus:
    """
    ModifySetStatus defines the observed state of ModifySet.

    Attributes
    ----------
    byPod : [MutationsGatekeeperShV1alpha1ModifySetStatusByPodItems0], default is Undefined, optional
        by pod
    """


    byPod?: [MutationsGatekeeperShV1alpha1ModifySetStatusByPodItems0]


schema MutationsGatekeeperShV1alpha1ModifySetStatusByPodItems0:
    """
    MutatorPodStatusStatus defines the observed state of MutatorPodStatus.

    Attributes
    ----------
    enforced : bool, default is Undefined, optional
        enforced
    errors : [MutationsGatekeeperShV1alpha1ModifySetStatusByPodItems0ErrorsItems0], default is Undefined, optional
        errors
    id : str, default is Undefined, optional
        id
    mutatorUID : str, default is Undefined, optional
        Storing the mutator UID allows us to detect drift, such as when a mutator has been recreated after its CRD was deleted out from under it, interrupting the watch
    observedGeneration : int, default is Undefined, optional
        observed generation
    operations : [str], default is Undefined, optional
        operations
    """


    enforced?: bool

    errors?: [MutationsGatekeeperShV1alpha1ModifySetStatusByPodItems0ErrorsItems0]

    id?: str

    mutatorUID?: str

    observedGeneration?: int

    operations?: [str]


schema MutationsGatekeeperShV1alpha1ModifySetStatusByPodItems0ErrorsItems0:
    """
    MutatorError represents a single error caught while adding a mutator to a system.

    Attributes
    ----------
    message : str, default is Undefined, required
        message
    $type : str, default is Undefined, optional
        Type indicates a specific class of error for use by controller code. If not present, the error should be treated as not matching any known type.
    """


    message: str

    $type?: str


