"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TraitDefinition:
    """
    A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.

    Attributes
    ----------
    apiVersion : str, default is "core.oam.dev/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TraitDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CoreOamDevV1beta1TraitDefinitionSpec, default is Undefined, optional
        spec
    status : CoreOamDevV1beta1TraitDefinitionStatus, default is Undefined, optional
        status
    """


    apiVersion: "core.oam.dev/v1beta1" = "core.oam.dev/v1beta1"

    kind: "TraitDefinition" = "TraitDefinition"

    metadata?: v1.ObjectMeta

    spec?: CoreOamDevV1beta1TraitDefinitionSpec

    status?: CoreOamDevV1beta1TraitDefinitionStatus


schema CoreOamDevV1beta1TraitDefinitionSpec:
    """
    A TraitDefinitionSpec defines the desired state of a TraitDefinition.

    Attributes
    ----------
    appliesToWorkloads : [str], default is Undefined, optional
        AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.
    conflictsWith : [str], default is Undefined, optional
        ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: "service" # Trait definition name "services.k8s.io" # API resource/crd name "*.networking.k8s.io" # API group "labelSelector:foo=bar" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse
    controlPlaneOnly : bool, default is Undefined, optional
        ControlPlaneOnly defines which cluster is dispatched to
    definitionRef : CoreOamDevV1beta1TraitDefinitionSpecDefinitionRef, default is Undefined, optional
        definition ref
    extension : any, default is Undefined, optional
        Extension is used for extension needs by OAM platform builders
    manageWorkload : bool, default is Undefined, optional
        ManageWorkload defines the trait would be responsible for creating the workload
    podDisruptive : bool, default is Undefined, optional
        PodDisruptive specifies whether using the trait will cause the pod to restart or not.
    revisionEnabled : bool, default is Undefined, optional
        Revision indicates whether a trait is aware of component revision
    schematic : CoreOamDevV1beta1TraitDefinitionSpecSchematic, default is Undefined, optional
        schematic
    stage : str, default is Undefined, optional
        Stage defines the stage information to which this trait resource processing belongs. Currently, PreDispatch and PostDispatch are provided, which are used to control resource pre-process and post-process respectively.
    status : CoreOamDevV1beta1TraitDefinitionSpecStatus, default is Undefined, optional
        status
    workloadRefPath : str, default is Undefined, optional
        WorkloadRefPath indicates where/if a trait accepts a workloadRef object
    """


    appliesToWorkloads?: [str]

    conflictsWith?: [str]

    controlPlaneOnly?: bool

    definitionRef?: CoreOamDevV1beta1TraitDefinitionSpecDefinitionRef

    extension?: any

    manageWorkload?: bool

    podDisruptive?: bool

    revisionEnabled?: bool

    schematic?: CoreOamDevV1beta1TraitDefinitionSpecSchematic

    stage?: str

    status?: CoreOamDevV1beta1TraitDefinitionSpecStatus

    workloadRefPath?: str


schema CoreOamDevV1beta1TraitDefinitionSpecDefinitionRef:
    """
    Reference to the CustomResourceDefinition that defines this trait kind.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced CustomResourceDefinition.
    version : str, default is Undefined, optional
        Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified
    """


    name: str

    version?: str


schema CoreOamDevV1beta1TraitDefinitionSpecSchematic:
    """
    Schematic defines the data format and template of the encapsulation of the trait. Only CUE and Kube schematic are supported for now.

    Attributes
    ----------
    cue : CoreOamDevV1beta1TraitDefinitionSpecSchematicCue, default is Undefined, optional
        cue
    terraform : CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraform, default is Undefined, optional
        terraform
    """


    cue?: CoreOamDevV1beta1TraitDefinitionSpecSchematicCue

    terraform?: CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraform


schema CoreOamDevV1beta1TraitDefinitionSpecSchematicCue:
    """
    CUE defines the encapsulation in CUE format

    Attributes
    ----------
    template : str, default is Undefined, required
        Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.
    """


    template: str


schema CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraform:
    """
    Terraform is the struct to describe cloud resources managed by Hashicorp Terraform

    Attributes
    ----------
    configuration : str, default is Undefined, required
        Configuration is Terraform Configuration
    customRegion : str, default is Undefined, optional
        Region is cloud provider's region. It will override the region in the region field of ProviderReference
    deleteResource : bool, default is True, optional
        DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted
    gitCredentialsSecretReference : CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformGitCredentialsSecretReference, default is Undefined, optional
        git credentials secret reference
    path : str, default is Undefined, optional
        Path is the sub-directory of remote git repository. It's valid when remote is set
    providerRef : CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformProviderRef, default is Undefined, optional
        provider ref
    $type : str, default is "hcl", optional
        Type specifies which Terraform configuration it is, HCL or JSON syntax
    writeConnectionSecretToRef : CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    configuration: str

    customRegion?: str

    deleteResource?: bool = True

    gitCredentialsSecretReference?: CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformGitCredentialsSecretReference

    path?: str

    providerRef?: CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformProviderRef

    $type?: "hcl" | "json" | "remote" = "hcl"

    writeConnectionSecretToRef?: CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformWriteConnectionSecretToRef


schema CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformGitCredentialsSecretReference:
    """
    GitCredentialsSecretReference specifies the reference to the secret containing the git credentials

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformProviderRef:
    """
    ProviderReference specifies the reference to Provider

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is "default", optional
        Namespace of the referenced object.
    """


    name: str

    namespace?: str = "default"


schema CoreOamDevV1beta1TraitDefinitionSpecSchematicTerraformWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, optional
        Namespace of the secret.
    """


    name: str

    namespace?: str


schema CoreOamDevV1beta1TraitDefinitionSpecStatus:
    """
    Status defines the custom health policy and status message for trait

    Attributes
    ----------
    customStatus : str, default is Undefined, optional
        CustomStatus defines the custom status message that could display to user
    healthPolicy : str, default is Undefined, optional
        HealthPolicy defines the health check policy for the abstraction
    """


    customStatus?: str

    healthPolicy?: str


schema CoreOamDevV1beta1TraitDefinitionStatus:
    """
    TraitDefinitionStatus is the status of TraitDefinition

    Attributes
    ----------
    conditions : [CoreOamDevV1beta1TraitDefinitionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    configMapRef : str, default is Undefined, optional
        ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.
    latestRevision : CoreOamDevV1beta1TraitDefinitionStatusLatestRevision, default is Undefined, optional
        latest revision
    """


    conditions?: [CoreOamDevV1beta1TraitDefinitionStatusConditionsItems0]

    configMapRef?: str

    latestRevision?: CoreOamDevV1beta1TraitDefinitionStatusLatestRevision


schema CoreOamDevV1beta1TraitDefinitionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


schema CoreOamDevV1beta1TraitDefinitionStatusLatestRevision:
    """
    LatestRevision of the component definition

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    revision : int, default is Undefined, required
        revision
    revisionHash : str, default is Undefined, optional
        RevisionHash record the hash value of the spec of ApplicationRevision object.
    """


    name: str

    revision: int

    revisionHash?: str


