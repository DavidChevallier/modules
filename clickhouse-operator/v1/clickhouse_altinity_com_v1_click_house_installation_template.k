"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema ClickHouseInstallationTemplate:
    """
    define a set of Kubernetes resources (StatefulSet, PVC, Service, ConfigMap) which describe behavior one or more ClickHouse clusters

    Attributes
    ----------
    apiVersion : str, default is "clickhouse.altinity.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClickHouseInstallationTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpec, default is Undefined, required
        spec
    status : ClickhouseAltinityComV1ClickHouseInstallationTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion: "clickhouse.altinity.com/v1" = "clickhouse.altinity.com/v1"

    kind: "ClickHouseInstallationTemplate" = "ClickHouseInstallationTemplate"

    metadata?: v1.ObjectMeta

    spec: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpec

    status?: ClickhouseAltinityComV1ClickHouseInstallationTemplateStatus


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpec:
    """
    Specification of the desired behavior of one or more ClickHouse clusters
    More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md


    Attributes
    ----------
    configuration : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfiguration, default is Undefined, optional
        configuration
    defaults : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaults, default is Undefined, optional
        defaults
    namespaceDomainPattern : str, default is Undefined, optional
        custom domain suffix which will add to end of `Service` or `Pod` name, use it when you use custom cluster domain in your Kubernetes cluster
    reconciling : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconciling, default is Undefined, optional
        reconciling
    restart : str, default is Undefined, optional
        This is a 'soft restart' button. When set to 'RollingUpdate' operator will restart ClickHouse pods in a graceful way. Remove it after the use in order to avoid unneeded restarts
    stop : str, default is Undefined, optional
        Allow stop all ClickHouse clusters described in current chi.
        Stop mechanism works as follows:
         - When `stop` is `1` then setup `Replicas: 0` in each related to current `chi` StatefulSet resource, all `Pods` and `Service` resources will desctroy, but PVCs still live
         - When `stop` is `0` then `Pods` will created again and will attach retained PVCs and `Service` also will created again

    taskID : str, default is Undefined, optional
        Allows to define custom taskID for named update operation and watch status of this update execution in .status.taskIDs field.
        By default every update of chi manifest will generate random taskID

    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplates, default is Undefined, optional
        templates
    templating : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplating, default is Undefined, optional
        templating
    troubleshoot : str, default is Undefined, optional
        allows troubleshoot Pods during CrashLoopBack state, when you apply wrong configuration, `clickhouse-server` wouldn't startup
    useTemplates : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecUseTemplatesItems0], default is Undefined, optional
        list of `ClickHouseInstallationTemplate` (chit) resource names which will merge with current `Chi` manifest during render Kubernetes resources to create related ClickHouse clusters
    """


    configuration?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfiguration

    defaults?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaults

    namespaceDomainPattern?: str

    reconciling?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconciling

    restart?: "" | "RollingUpdate"

    stop?: "" | "0" | "1" | "False" | "false" | "True" | "true" | "No" | "no" | "Yes" | "yes" | "Off" | "off" | "On" | "on" | "Disable" | "disable" | "Enable" | "enable" | "Disabled" | "disabled" | "Enabled" | "enabled"

    taskID?: str

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplates

    templating?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplating

    troubleshoot?: "" | "0" | "1" | "False" | "false" | "True" | "true" | "No" | "no" | "Yes" | "yes" | "Off" | "off" | "On" | "on" | "Disable" | "disable" | "Enable" | "enable" | "Disabled" | "disabled" | "Enabled" | "enabled"

    useTemplates?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecUseTemplatesItems0]


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfiguration:
    """
    allows configure multiple aspects and behavior for `clickhouse-server` instance and also allows describe multiple `clickhouse-server` clusters inside one `chi` resource

    Attributes
    ----------
    clusters : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0], default is Undefined, optional
        describes ClickHouse clusters layout and allows change settings on cluster-level, shard-level and replica-level
        every cluster is a set of StatefulSet, one StatefulSet contains only one Pod with `clickhouse-server`
        all Pods will rendered in <remote_server> part of ClickHouse configs, mounted from ConfigMap as `/etc/clickhouse-server/config.d/chop-generated-remote_servers.xml`
        Clusters will use for Distributed table engine, more details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
        If `cluster` contains zookeeper settings (could be inherited from top `chi` level), when you can create *ReplicatedMergeTree tables

    files : any, default is Undefined, optional
        allows define content of any setting file inside each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
        every key in this object is the file name
        every value in this object is the file content
        you can use `!!binary |` and base64 for binary files, see details here https://yaml.org/type/binary.html
        each key could contains prefix like USERS, COMMON, HOST or config.d, users.d, cond.d, wrong prefixes will ignored, subfolders also will ignored
        More details: https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/05-settings-05-files-nested.yaml

    profiles : any, default is Undefined, optional
        allows configure <yandex><profiles>..</profiles></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
        you can configure any aspect of settings profile
        More details: https://clickhouse.tech/docs/en/operations/settings/settings-profiles/
        Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationprofiles

    quotas : any, default is Undefined, optional
        allows configure <yandex><quotas>..</quotas></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
        you can configure any aspect of resource quotas
        More details: https://clickhouse.tech/docs/en/operations/quotas/
        Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationquotas

    settings : any, default is Undefined, optional
        allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/
        Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationsettings

    users : any, default is Undefined, optional
        allows configure <yandex><users>..</users></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
        you can configure password hashed, authorization restrictions, database level security row filters etc.
        More details: https://clickhouse.tech/docs/en/operations/settings/settings-users/
        Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationusers

    zookeeper : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationZookeeper, default is Undefined, optional
        zookeeper
    """


    clusters?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0]

    files?: any

    profiles?: any

    quotas?: any

    settings?: any

    users?: any

    zookeeper?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationZookeeper


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration clusters items0

    Attributes
    ----------
    files : any, default is Undefined, optional
        optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
        override top-level `chi.spec.configuration.files`

    layout : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Layout, default is Undefined, optional
        layout
    name : str, default is Undefined, optional
        cluster name, used to identify set of ClickHouse servers and wide used during generate names of related Kubernetes resources
    schemaPolicy : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SchemaPolicy, default is Undefined, optional
        schema policy
    secret : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Secret, default is Undefined, optional
        secret
    settings : any, default is Undefined, optional
        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
        override top-level `chi.spec.configuration.settings`
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/

    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Templates, default is Undefined, optional
        templates
    zookeeper : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Zookeeper, default is Undefined, optional
        zookeeper
    """


    files?: any

    layout?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Layout

    name?: str

    schemaPolicy?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SchemaPolicy

    secret?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Secret

    settings?: any

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Templates

    zookeeper?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Zookeeper


    check:
        len(name) <= 15
        len(name) >= 1
        regex.match(str(name), r"^[a-zA-Z0-9-]{0,15}$") if name


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Layout:
    """
    describe current cluster layout, how much shards in cluster, how much replica in shard
    allows override settings on each shard and replica separatelly


    Attributes
    ----------
    replicas : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0], default is Undefined, optional
        optional, allows override top-level `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters` configuration for each replica and each shard relates to selected replica, use it only if you fully understand what you do
    replicasCount : int, default is Undefined, optional
        how much replicas in each shards for current ClickHouse cluster will run in Kubernetes, each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance, every shard contains 1 replica by default
    shards : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0], default is Undefined, optional
        optional, allows override top-level `chi.spec.configuration`, cluster-level `chi.spec.configuration.clusters` settings for each shard separately, use it only if you fully understand what you do
    shardsCount : int, default is Undefined, optional
        how much shards for current ClickHouse cluster will run in Kubernetes, each shard contains shared-nothing part of data and contains set of replicas, cluster contains 1 shard by default
    $type : str, default is Undefined, optional
        DEPRECATED - to be removed soon
    """


    replicas?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0]

    replicasCount?: int

    shards?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0]

    shardsCount?: int

    $type?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration clusters items0 layout replicas items0

    Attributes
    ----------
    files : any, default is Undefined, optional
        optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
        override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents

    name : str, default is Undefined, optional
        optional, by default replica name is generated, but you can override it and setup custom name
    settings : any, default is Undefined, optional
        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/

    shards : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0ShardsItems0], default is Undefined, optional
        optional, list of shards related to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
    shardsCount : int, default is Undefined, optional
        optional, count of shards related to current replica, you can override each shard behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0Templates, default is Undefined, optional
        templates
    """


    files?: any

    name?: str

    settings?: any

    shards?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0ShardsItems0]

    shardsCount?: int

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0Templates


    check:
        len(name) <= 15
        len(name) >= 1
        regex.match(str(name), r"^[a-zA-Z0-9-]{0,15}$") if name
        shardsCount >= 1


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0ShardsItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration clusters items0 layout replicas items0 shards items0

    Attributes
    ----------
    files : any, default is Undefined, optional
        optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
        override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents

    httpPort : int, default is Undefined, optional
        optional, setup `Pod.spec.containers.ports` with name `http` for selected shard, override `chi.spec.templates.hostTemplates.spec.httpPort`
        allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`

    interserverHTTPPort : int, default is Undefined, optional
        optional, setup `Pod.spec.containers.ports` with name `interserver` for selected shard, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
        allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol

    name : str, default is Undefined, optional
        optional, by default shard name is generated, but you can override it and setup custom name
    secure : bool, default is Undefined, optional
        optional, setup `secure` inside `clickhouse-server` settings for each Pod where current template will apply
        if specified

    settings : any, default is Undefined, optional
        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/

    tcpPort : int, default is Undefined, optional
        optional, setup `Pod.spec.containers.ports` with name `tcp` for selected shard, override `chi.spec.templates.hostTemplates.spec.tcpPort`
        allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`

    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0ShardsItems0Templates, default is Undefined, optional
        templates
    """


    files?: any

    httpPort?: int

    interserverHTTPPort?: int

    name?: str

    secure?: bool

    settings?: any

    tcpPort?: int

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0ShardsItems0Templates


    check:
        httpPort <= 65535
        httpPort >= 1
        interserverHTTPPort <= 65535
        interserverHTTPPort >= 1
        len(name) <= 15
        len(name) >= 1
        regex.match(str(name), r"^[a-zA-Z0-9-]{0,15}$") if name
        tcpPort <= 65535
        tcpPort >= 1


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0ShardsItems0Templates:
    """
    optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
    override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`


    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutReplicasItems0Templates:
    """
    optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
    override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`


    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration clusters items0 layout shards items0

    Attributes
    ----------
    definitionType : str, default is Undefined, optional
        DEPRECATED - to be removed soon
    files : any, default is Undefined, optional
        optional, allows define content of any setting file inside each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
        override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`

    internalReplication : str, default is Undefined, optional
        optional, `true` by default when `chi.spec.configuration.clusters[].layout.ReplicaCount` > 1 and 0 otherwise
        allows setup <internal_replication> setting which will use during insert into tables with `Distributed` engine for insert only in one live replica and other replicas will download inserted data during replication,
        will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
        More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/

    name : str, default is Undefined, optional
        optional, by default shard name is generated, but you can override it and setup custom name
    replicas : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0ReplicasItems0], default is Undefined, optional
        optional, allows override behavior for selected replicas from cluster-level `chi.spec.configuration.clusters` and shard-level `chi.spec.configuration.clusters.layout.shards`

    replicasCount : int, default is Undefined, optional
        optional, how much replicas in selected shard for selected ClickHouse cluster will run in Kubernetes, each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
        shard contains 1 replica by default
        override cluster-level `chi.spec.configuration.clusters.layout.replicasCount`

    settings : any, default is Undefined, optional
        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
        override top-level `chi.spec.configuration.settings` and cluster-level `chi.spec.configuration.clusters.settings`
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/

    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0Templates, default is Undefined, optional
        templates
    weight : int, default is Undefined, optional
        optional, 1 by default, allows setup shard <weight> setting which will use during insert into tables with `Distributed` engine,
        will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
        More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/

    """


    definitionType?: str

    files?: any

    internalReplication?: "" | "0" | "1" | "False" | "false" | "True" | "true" | "No" | "no" | "Yes" | "yes" | "Off" | "off" | "On" | "on" | "Disable" | "disable" | "Enable" | "enable" | "Disabled" | "disabled" | "Enabled" | "enabled"

    name?: str

    replicas?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0ReplicasItems0]

    replicasCount?: int

    settings?: any

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0Templates

    weight?: int


    check:
        len(name) <= 15
        len(name) >= 1
        regex.match(str(name), r"^[a-zA-Z0-9-]{0,15}$") if name
        replicasCount >= 1


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0ReplicasItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration clusters items0 layout shards items0 replicas items0

    Attributes
    ----------
    files : any, default is Undefined, optional
        optional, allows define content of any setting file inside `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
        override top-level `chi.spec.configuration.files`, cluster-level `chi.spec.configuration.clusters.files` and shard-level `chi.spec.configuration.clusters.layout.shards.files`

    httpPort : int, default is Undefined, optional
        optional, setup `Pod.spec.containers.ports` with name `http` for selected replica, override `chi.spec.templates.hostTemplates.spec.httpPort`
        allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`

    interserverHTTPPort : int, default is Undefined, optional
        optional, setup `Pod.spec.containers.ports` with name `interserver` for selected replica, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
        allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol

    name : str, default is Undefined, optional
        optional, by default replica name is generated, but you can override it and setup custom name
    secure : bool, default is Undefined, optional
        optional, setup `secure` inside `clickhouse-server` settings for each Pod where current template will apply
        if specified

    settings : any, default is Undefined, optional
        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
        override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and shard-level `chi.spec.configuration.clusters.layout.shards.settings`
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/

    tcpPort : int, default is Undefined, optional
        optional, setup `Pod.spec.containers.ports` with name `tcp` for selected replica, override `chi.spec.templates.hostTemplates.spec.tcpPort`
        allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`

    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0ReplicasItems0Templates, default is Undefined, optional
        templates
    """


    files?: any

    httpPort?: int

    interserverHTTPPort?: int

    name?: str

    secure?: bool

    settings?: any

    tcpPort?: int

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0ReplicasItems0Templates


    check:
        httpPort <= 65535
        httpPort >= 1
        interserverHTTPPort <= 65535
        interserverHTTPPort >= 1
        len(name) <= 15
        len(name) >= 1
        regex.match(str(name), r"^[a-zA-Z0-9-]{0,15}$") if name
        tcpPort <= 65535
        tcpPort >= 1


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0ReplicasItems0Templates:
    """
    optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
    override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates` and shard-level `chi.spec.configuration.clusters.layout.shards.templates`


    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0LayoutShardsItems0Templates:
    """
    optional, configuration of the templates names which will use for generate Kubernetes resources according to selected shard
    override top-level `chi.spec.configuration.templates` and cluster-level `chi.spec.configuration.clusters.templates`


    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SchemaPolicy:
    """
    describes how schema is propagated within replicas and shards


    Attributes
    ----------
    replica : str, default is Undefined, optional
        how schema is propagated within a replica
    shard : str, default is Undefined, optional
        how schema is propagated between shards
    """


    replica?: "None" | "All"

    shard?: "None" | "All" | "DistributedTablesOnly"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Secret:
    """
    optional, shared secret value to secure cluster communications

    Attributes
    ----------
    auto : str, default is Undefined, optional
        Auto-generate shared secret value to secure cluster communications
    value : str, default is Undefined, optional
        Cluster shared secret value in plain text
    valueFrom : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SecretValueFrom, default is Undefined, optional
        value from
    """


    auto?: "" | "0" | "1" | "False" | "false" | "True" | "true" | "No" | "no" | "Yes" | "yes" | "Off" | "off" | "On" | "on" | "Disable" | "disable" | "Enable" | "enable" | "Disabled" | "disabled" | "Enabled" | "enabled"

    value?: str

    valueFrom?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SecretValueFrom


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SecretValueFrom:
    """
    Cluster shared secret source

    Attributes
    ----------
    secretKeyRef : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SecretValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SecretValueFromSecretKeyRef


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0SecretValueFromSecretKeyRef:
    """
    Selects a key of a secret in the clickhouse installation namespace.
    Should not be used if value is not empty.


    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from. Must be a valid secret key.
    name : str, default is Undefined, required
        Name of the referent. More info:
        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names

    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name: str

    optional?: bool


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Templates:
    """
    optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
    override top-level `chi.spec.configuration.templates`


    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0Zookeeper:
    """
    optional, allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` only in current ClickHouse cluster, during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
    override top-level `chi.spec.configuration.zookeeper` settings


    Attributes
    ----------
    identity : str, default is Undefined, optional
        optional access credentials string with `user:password` format used when use digest authorization in Zookeeper
    nodes : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0ZookeeperNodesItems0], default is Undefined, optional
        describe every available zookeeper cluster node for interaction
    operation_timeout_ms : int, default is Undefined, optional
        one operation timeout during Zookeeper transactions
    root : str, default is Undefined, optional
        optional root znode path inside zookeeper to store ClickHouse related data (replication queue or distributed DDL)
    session_timeout_ms : int, default is Undefined, optional
        session timeout during connect to Zookeeper
    """


    identity?: str

    nodes?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0ZookeeperNodesItems0]

    operation_timeout_ms?: int

    root?: str

    session_timeout_ms?: int


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationClustersItems0ZookeeperNodesItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration clusters items0 zookeeper nodes items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        dns name or ip address for Zookeeper node
    port : int, default is Undefined, optional
        TCP port which used to connect to Zookeeper node
    """


    host?: str

    port?: int


    check:
        port <= 65535
        port >= 0


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationZookeeper:
    """
    allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
    `clickhouse-operator` itself doesn't manage Zookeeper, please install Zookeeper separatelly look examples on https://github.com/Altinity/clickhouse-operator/tree/master/deploy/zookeeper/
    currently, zookeeper (or clickhouse-keeper replacement) used for *ReplicatedMergeTree table engines and for `distributed_ddl`
    More details: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings_zookeeper


    Attributes
    ----------
    identity : str, default is Undefined, optional
        optional access credentials string with `user:password` format used when use digest authorization in Zookeeper
    nodes : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationZookeeperNodesItems0], default is Undefined, optional
        describe every available zookeeper cluster node for interaction
    operation_timeout_ms : int, default is Undefined, optional
        one operation timeout during Zookeeper transactions
    root : str, default is Undefined, optional
        optional root znode path inside zookeeper to store ClickHouse related data (replication queue or distributed DDL)
    session_timeout_ms : int, default is Undefined, optional
        session timeout during connect to Zookeeper
    """


    identity?: str

    nodes?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationZookeeperNodesItems0]

    operation_timeout_ms?: int

    root?: str

    session_timeout_ms?: int


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecConfigurationZookeeperNodesItems0:
    """
    clickhouse altinity com v1 click house installation template spec configuration zookeeper nodes items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        dns name or ip address for Zookeeper node
    port : int, default is Undefined, optional
        TCP port which used to connect to Zookeeper node
    """


    host?: str

    port?: int


    check:
        port <= 65535
        port >= 0


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaults:
    """
    define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
    More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults


    Attributes
    ----------
    distributedDDL : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsDistributedDDL, default is Undefined, optional
        distributed d d l
    replicasUseFQDN : str, default is Undefined, optional
        define should replicas be specified by FQDN in `<host></host>`.
        In case of "no" will use short hostname and clickhouse-server will use kubernetes default suffixes for DNS lookup
        "yes" by default

    storageManagement : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsStorageManagement, default is Undefined, optional
        storage management
    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsTemplates, default is Undefined, optional
        templates
    """


    distributedDDL?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsDistributedDDL

    replicasUseFQDN?: "" | "0" | "1" | "False" | "false" | "True" | "true" | "No" | "no" | "Yes" | "yes" | "Off" | "off" | "On" | "on" | "Disable" | "disable" | "Enable" | "enable" | "Disabled" | "disabled" | "Enabled" | "enabled"

    storageManagement?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsStorageManagement

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsTemplates


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsDistributedDDL:
    """
    allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
    More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl


    Attributes
    ----------
    profile : str, default is Undefined, optional
        Settings from this profile will be used to execute DDL queries
    """


    profile?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsStorageManagement:
    """
    default storage management options

    Attributes
    ----------
    provisioner : str, default is Undefined, optional
        defines `PVC` provisioner - be it StatefulSet or the Operator
    reclaimPolicy : str, default is Undefined, optional
        defines behavior of `PVC` deletion.
        `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet

    """


    provisioner?: "" | "StatefulSet" | "Operator"

    reclaimPolicy?: "" | "Retain" | "Delete"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecDefaultsTemplates:
    """
    optional, configuration of the templates names which will use for generate Kubernetes resources according to one or more ClickHouse clusters described in current ClickHouseInstallation (chi) resource

    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconciling:
    """
    optional, allows tuning reconciling cycle for ClickhouseInstallation from clickhouse-operator side

    Attributes
    ----------
    cleanup : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanup, default is Undefined, optional
        cleanup
    configMapPropagationTimeout : int, default is Undefined, optional
        timeout in seconds when `clickhouse-operator` will wait when applied `ConfigMap` during reconcile `ClickhouseInstallation` pods will updated from cache
        see details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically

    policy : str, default is Undefined, optional
        DEPRECATED
    """


    cleanup?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanup

    configMapPropagationTimeout?: int

    policy?: str


    check:
        configMapPropagationTimeout <= 3600
        configMapPropagationTimeout >= 0


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanup:
    """
    optional, define behavior for cleanup Kubernetes resources during reconcile cycle

    Attributes
    ----------
    reconcileFailedObjects : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanupReconcileFailedObjects, default is Undefined, optional
        reconcile failed objects
    unknownObjects : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanupUnknownObjects, default is Undefined, optional
        unknown objects
    """


    reconcileFailedObjects?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanupReconcileFailedObjects

    unknownObjects?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanupUnknownObjects


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanupReconcileFailedObjects:
    """
    what clickhouse-operator shall do when reconciling Kubernetes resources are failed, default behavior is `Retain`

    Attributes
    ----------
    configMap : str, default is Undefined, optional
        behavior policy for failed ConfigMap reconciling, Retain by default
    pvc : str, default is Undefined, optional
        behavior policy for failed PVC reconciling, Retain by default
    service : str, default is Undefined, optional
        behavior policy for failed Service reconciling, Retain by default
    statefulSet : str, default is Undefined, optional
        behavior policy for failed StatefulSet reconciling, Retain by default
    """


    configMap?: "Retain" | "Delete"

    pvc?: "Retain" | "Delete"

    service?: "Retain" | "Delete"

    statefulSet?: "Retain" | "Delete"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecReconcilingCleanupUnknownObjects:
    """
    what clickhouse-operator shall do when found Kubernetes resources which should be managed with clickhouse-operator, but not have `ownerReference` to any currently managed `ClickHouseInstallation` resource, default behavior is `Delete`

    Attributes
    ----------
    configMap : str, default is Undefined, optional
        behavior policy for unknown ConfigMap, Delete by default
    pvc : str, default is Undefined, optional
        behavior policy for unknown PVC, Delete by default
    service : str, default is Undefined, optional
        behavior policy for unknown Service, Delete by default
    statefulSet : str, default is Undefined, optional
        behavior policy for unknown StatefulSet, Delete by default
    """


    configMap?: "Retain" | "Delete"

    pvc?: "Retain" | "Delete"

    service?: "Retain" | "Delete"

    statefulSet?: "Retain" | "Delete"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplates:
    """
    allows define templates which will use for render Kubernetes resources like StatefulSet, ConfigMap, Service, PVC, by default, clickhouse-operator have own templates, but you can override it

    Attributes
    ----------
    hostTemplates : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0], default is Undefined, optional
        hostTemplate will use during apply to generate `clickhose-server` config files
    podTemplates : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0], default is Undefined, optional
        podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
        More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates

    serviceTemplates : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesServiceTemplatesItems0], default is Undefined, optional
        allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level

    volumeClaimTemplates : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesVolumeClaimTemplatesItems0], default is Undefined, optional
        allows define template for rendering `PVC` kubernetes resource, which would use inside `Pod` for mount clickhouse `data`, clickhouse `logs` or something else
    """


    hostTemplates?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0]

    podTemplates?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0]

    serviceTemplates?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesServiceTemplatesItems0]

    volumeClaimTemplates?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesVolumeClaimTemplatesItems0]


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0:
    """
    clickhouse altinity com v1 click house installation template spec templates host templates items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        template name, could use to link inside top-level `chi.spec.defaults.templates.hostTemplate`, cluster-level `chi.spec.configuration.clusters.templates.hostTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
    portDistribution : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0PortDistributionItems0], default is Undefined, optional
        define how will distribute numeric values of named ports in `Pod.spec.containers.ports` and clickhouse-server configs
    spec : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0Spec, default is Undefined, optional
        spec
    """


    name?: str

    portDistribution?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0PortDistributionItems0]

    spec?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0Spec


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0PortDistributionItems0:
    """
    clickhouse altinity com v1 click house installation template spec templates host templates items0 port distribution items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        type of distribution, when `Unspecified` (default value) then all listen ports on clickhouse-server configuration in all Pods will have the same value, when `ClusterScopeIndex` then ports will increment to offset from base value depends on shard and replica index inside cluster with combination of `chi.spec.templates.podTemlates.spec.HostNetwork` it allows setup ClickHouse cluster inside Kubernetes and provide access via external network bypass Kubernetes internal network
    """


    $type?: "" | "Unspecified" | "ClusterScopeIndex"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0Spec:
    """
    clickhouse altinity com v1 click house installation template spec templates host templates items0 spec

    Attributes
    ----------
    files : any, default is Undefined, optional
        optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`

    httpPort : int, default is Undefined, optional
        optional, setup `http_port` inside `clickhouse-server` settings for each Pod where current template will apply
        if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=http]`
        More info: https://clickhouse.tech/docs/en/interfaces/http/

    interserverHTTPPort : int, default is Undefined, optional
        optional, setup `interserver_http_port` inside `clickhouse-server` settings for each Pod where current template will apply
        if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=interserver]`
        More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#interserver-http-port

    name : str, default is Undefined, optional
        by default, hostname will generate, but this allows define custom name for each `clickhuse-server`
    secure : bool, default is Undefined, optional
        optional, setup `secure` inside `clickhouse-server` settings for each Pod where current template will apply
        if specified

    settings : any, default is Undefined, optional
        optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
        More details: https://clickhouse.tech/docs/en/operations/settings/settings/

    tcpPort : int, default is Undefined, optional
        optional, setup `tcp_port` inside `clickhouse-server` settings for each Pod where current template will apply
        if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=tcp]`
        More info: https://clickhouse.tech/docs/en/interfaces/tcp/

    templates : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0SpecTemplates, default is Undefined, optional
        templates
    """


    files?: any

    httpPort?: int

    interserverHTTPPort?: int

    name?: str

    secure?: bool

    settings?: any

    tcpPort?: int

    templates?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0SpecTemplates


    check:
        httpPort <= 65535
        httpPort >= 1
        interserverHTTPPort <= 65535
        interserverHTTPPort >= 1
        len(name) <= 15
        len(name) >= 1
        regex.match(str(name), r"^[a-zA-Z0-9-]{0,15}$") if name
        tcpPort <= 65535
        tcpPort >= 1


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesHostTemplatesItems0SpecTemplates:
    """
    be careful, this part of CRD allows override template inside template, don't use it if you don't understand what you do

    Attributes
    ----------
    clusterServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each clickhouse cluster described in `chi.spec.configuration.clusters`
    dataVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse data directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    hostTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.hostTemplates, which will apply to configure every `clickhouse-server` instance during render ConfigMap resources which will mount into `Pod`
    logVolumeClaimTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.volumeClaimTemplates, allows customization each `PVC` which will mount for clickhouse log directory in each `Pod` during render and reconcile every StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    podTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.podTemplates, allows customization each `Pod` resource during render and reconcile each StatefulSet.spec resource described in `chi.spec.configuration.clusters`
    replicaServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each replica inside each shard inside each clickhouse cluster described in `chi.spec.configuration.clusters`
    serviceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for one `Service` resource which will created by `clickhouse-operator` which cover all clusters in whole `chi` resource
    shardServiceTemplate : str, default is Undefined, optional
        optional, template name from chi.spec.templates.serviceTemplates, allows customization for each `Service` resource which will created by `clickhouse-operator` which cover each shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
    volumeClaimTemplate : str, default is Undefined, optional
        DEPRECATED! VolumeClaimTemplate is deprecated in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
    """


    clusterServiceTemplate?: str

    dataVolumeClaimTemplate?: str

    hostTemplate?: str

    logVolumeClaimTemplate?: str

    podTemplate?: str

    replicaServiceTemplate?: str

    serviceTemplate?: str

    shardServiceTemplate?: str

    volumeClaimTemplate?: str


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0:
    """
    clickhouse altinity com v1 click house installation template spec templates pod templates items0

    Attributes
    ----------
    distribution : str, default is Undefined, optional
        DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
    generateName : str, default is Undefined, optional
        allows define format for generated `Pod` name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates for details about aviailable template variables
    metadata : any, default is Undefined, optional
        allows pass standard object's metadata from template to Pod
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    name : str, default is Undefined, optional
        template name, could use to link inside top-level `chi.spec.defaults.templates.podTemplate`, cluster-level `chi.spec.configuration.clusters.templates.podTemplate`, shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
    podDistribution : [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0PodDistributionItems0], default is Undefined, optional
        define ClickHouse Pod distibution policy between Kubernetes Nodes inside Shard, Replica, Namespace, CHI, another ClickHouse cluster
    spec : any, default is Undefined, optional
        allows define whole Pod.spec inside StaefulSet.spec, look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates for details
    zone : ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0Zone, default is Undefined, optional
        zone
    """


    distribution?: "" | "Unspecified" | "OnePerHost"

    generateName?: str

    metadata?: any

    name?: str

    podDistribution?: [ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0PodDistributionItems0]

    spec?: any

    zone?: ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0Zone


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0PodDistributionItems0:
    """
    clickhouse altinity com v1 click house installation template spec templates pod templates items0 pod distribution items0

    Attributes
    ----------
    number : int, default is Undefined, optional
        define, how much ClickHouse Pods could be inside selected scope with selected distribution type
    scope : str, default is Undefined, optional
        scope for apply each podDistribution
    topologyKey : str, default is Undefined, optional
        use for inter-pod affinity look to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`, More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    $type : str, default is Undefined, optional
        you can define multiple affinity policy types
    """


    number?: int

    scope?: "" | "Unspecified" | "Shard" | "Replica" | "Cluster" | "ClickHouseInstallation" | "Namespace"

    topologyKey?: str

    $type?: "" | "Unspecified" | "ClickHouseAntiAffinity" | "ShardAntiAffinity" | "ReplicaAntiAffinity" | "AnotherNamespaceAntiAffinity" | "AnotherClickHouseInstallationAntiAffinity" | "AnotherClusterAntiAffinity" | "MaxNumberPerNode" | "NamespaceAffinity" | "ClickHouseInstallationAffinity" | "ClusterAffinity" | "ShardAffinity" | "ReplicaAffinity" | "PreviousTailAffinity" | "CircularReplication"


    check:
        number <= 65535
        number >= 0


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesPodTemplatesItems0Zone:
    """
    allows define custom zone name and will separate ClickHouse `Pods` between nodes, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`

    Attributes
    ----------
    key : str, default is Undefined, optional
        optional, if defined, allows select kubernetes nodes by label with `name` equal `key`
    values : [str], default is Undefined, optional
        optional, if defined, allows select kubernetes nodes by label with `value` in `values`
    """


    key?: str

    values?: [str]


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesServiceTemplatesItems0:
    """
    clickhouse altinity com v1 click house installation template spec templates service templates items0

    Attributes
    ----------
    generateName : str, default is Undefined, optional
        allows define format for generated `Service` name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates for details about aviailable template variables
    metadata : any, default is Undefined, optional
        allows pass standard object's metadata from template to Service
        Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
        More info: https://kubernetes.io/docs/concepts/services-networking/service/

    name : str, default is Undefined, optional
        template name, could use to link inside
        chi-level `chi.spec.defaults.templates.serviceTemplate`
        cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`

    spec : any, default is Undefined, optional
        describe behavior of generated Service
        More info: https://kubernetes.io/docs/concepts/services-networking/service/

    """


    generateName?: str

    metadata?: any

    name?: str

    spec?: any


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplatesVolumeClaimTemplatesItems0:
    """
    clickhouse altinity com v1 click house installation template spec templates volume claim templates items0

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        allows to pass standard object's metadata from template to PVC
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    name : str, default is Undefined, optional
        template name, could use to link inside
        top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
        cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
        shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
        replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`

    provisioner : str, default is Undefined, optional
        defines `PVC` provisioner - be it StatefulSet or the Operator
    reclaimPolicy : str, default is Undefined, optional
        defines behavior of `PVC` deletion.
        `Delete` by default, if `Retain` specified then `PVC` will be kept when deleting StatefulSet

    spec : any, default is Undefined, optional
        allows define all aspects of `PVC` resource
        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims

    """


    metadata?: any

    name?: str

    provisioner?: "" | "StatefulSet" | "Operator"

    reclaimPolicy?: "" | "Retain" | "Delete"

    spec?: any


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecTemplating:
    """
    optional, define policy for auto applying ClickHouseInstallationTemplate inside ClickHouseInstallation

    Attributes
    ----------
    policy : str, default is Undefined, optional
        when defined as `auto` inside ClickhouseInstallationTemplate, it will auto add into all ClickHouseInstallation, manual value is default
    """


    policy?: "auto" | "manual"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateSpecUseTemplatesItems0:
    """
    clickhouse altinity com v1 click house installation template spec use templates items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name of `ClickHouseInstallationTemplate` (chit) resource
    namespace : str, default is Undefined, optional
        Kubernetes namespace where need search `chit` resource, depending on `watchNamespaces` settings in `clichouse-operator`
    useType : str, default is Undefined, optional
        optional, current strategy is only merge, and current `chi` settings have more priority than merged template `chit`
    """


    name?: str

    namespace?: str

    useType?: "" | "merge"


schema ClickhouseAltinityComV1ClickHouseInstallationTemplateStatus:
    """
    Current ClickHouseInstallation manifest status, contains many fields like a normalized configuration, clickhouse-operator version, current action and all applied action list, current taskID and all applied taskIDs and other

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action
    actions : [str], default is Undefined, optional
        Actions
    added : int, default is Undefined, optional
        Added Hosts count
    chop_commit : str, default is Undefined, optional
        ClickHouse operator git commit SHA
    chop_date : str, default is Undefined, optional
        ClickHouse operator build date
    chop_ip : str, default is Undefined, optional
        IP address of the operator's pod which managed this CHI
    chop_version : str, default is Undefined, optional
        ClickHouse operator version
    clusters : int, default is Undefined, optional
        Clusters count
    delete : int, default is Undefined, optional
        About to delete Hosts count
    deleted : int, default is Undefined, optional
        Deleted Hosts count
    endpoint : str, default is Undefined, optional
        Endpoint
    error : str, default is Undefined, optional
        Last error
    errors : [str], default is Undefined, optional
        Errors
    fqdns : [str], default is Undefined, optional
        Pods FQDNs
    generation : int, default is Undefined, optional
        Generation
    hosts : int, default is Undefined, optional
        Hosts count
    normalized : any, default is Undefined, optional
        Normalized CHI requested
    normalizedCompleted : any, default is Undefined, optional
        Normalized CHI completed
    pod_ips : [str], default is Undefined, optional
        Pod IPs
    pods : [str], default is Undefined, optional
        Pods
    replicas : int, default is Undefined, optional
        Replicas count
    shards : int, default is Undefined, optional
        Shards count
    status : str, default is Undefined, optional
        Status
    taskID : str, default is Undefined, optional
        Current task id
    taskIDsCompleted : [str], default is Undefined, optional
        Completed task ids
    taskIDsStarted : [str], default is Undefined, optional
        Started task ids
    updated : int, default is Undefined, optional
        Updated Hosts count
    """


    action?: str

    actions?: [str]

    added?: int

    chop_commit?: str

    chop_date?: str

    chop_ip?: str

    chop_version?: str

    clusters?: int

    delete?: int

    deleted?: int

    endpoint?: str

    error?: str

    errors?: [str]

    fqdns?: [str]

    generation?: int

    hosts?: int

    normalized?: any

    normalizedCompleted?: any

    pod_ips?: [str]

    pods?: [str]

    replicas?: int

    shards?: int

    status?: str

    taskID?: str

    taskIDsCompleted?: [str]

    taskIDsStarted?: [str]

    updated?: int


    check:
        added >= 0
        clusters >= 0
        delete >= 0
        deleted >= 0
        generation >= 0
        hosts >= 0
        replicas >= 0
        shards >= 0
        updated >= 0


