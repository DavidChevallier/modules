"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DBProxy:
    """
    DBProxy is the Schema for the DBProxies API

    Attributes
    ----------
    apiVersion : str, default is "rds.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DBProxy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsServicesK8sAwsV1alpha1DBProxySpec, default is Undefined, optional
        spec
    status : RdsServicesK8sAwsV1alpha1DBProxyStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.services.k8s.aws/v1alpha1" = "rds.services.k8s.aws/v1alpha1"

    kind: "DBProxy" = "DBProxy"

    metadata?: v1.ObjectMeta

    spec?: RdsServicesK8sAwsV1alpha1DBProxySpec

    status?: RdsServicesK8sAwsV1alpha1DBProxyStatus


schema RdsServicesK8sAwsV1alpha1DBProxySpec:
    """
    DBProxySpec defines the desired state of DBProxy. 
     The data structure representing a proxy managed by the RDS Proxy. 
     This data type is used as a response element in the DescribeDBProxies action.

    Attributes
    ----------
    auth : [RdsServicesK8sAwsV1alpha1DBProxySpecAuthItems0], default is Undefined, required
        The authorization mechanism that the proxy uses.
    debugLogging : bool, default is Undefined, optional
        Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
    engineFamily : str, default is Undefined, required
        The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server, specify SQLSERVER.
    idleClientTimeout : int, default is Undefined, optional
        The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
    name : str, default is Undefined, required
        The identifier for the proxy. This name must be unique for all proxies owned by your Amazon Web Services account in the specified Amazon Web Services Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.
    requireTLS : bool, default is Undefined, optional
        A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.
    roleARN : str, default is Undefined, required
        The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in Amazon Web Services Secrets Manager.
    tags : [RdsServicesK8sAwsV1alpha1DBProxySpecTagsItems0], default is Undefined, optional
        An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
    vpcSecurityGroupIDs : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIDs : [str], default is Undefined, required
        One or more VPC subnet IDs to associate with the new proxy.
    """


    auth: [RdsServicesK8sAwsV1alpha1DBProxySpecAuthItems0]

    debugLogging?: bool

    engineFamily: str

    idleClientTimeout?: int

    name: str

    requireTLS?: bool

    roleARN: str

    tags?: [RdsServicesK8sAwsV1alpha1DBProxySpecTagsItems0]

    vpcSecurityGroupIDs?: [str]

    vpcSubnetIDs: [str]


schema RdsServicesK8sAwsV1alpha1DBProxySpecAuthItems0:
    """
    Specifies the details of authentication used by a proxy to log in as a specific database user.

    Attributes
    ----------
    authScheme : str, default is Undefined, optional
        auth scheme
    clientPasswordAuthType : str, default is Undefined, optional
        client password auth type
    description : str, default is Undefined, optional
        description
    iamAuth : str, default is Undefined, optional
        iam auth
    secretARN : str, default is Undefined, optional
        secret a r n
    userName : str, default is Undefined, optional
        user name
    """


    authScheme?: str

    clientPasswordAuthType?: str

    description?: str

    iamAuth?: str

    secretARN?: str

    userName?: str


schema RdsServicesK8sAwsV1alpha1DBProxySpecTagsItems0:
    """
    Metadata assigned to an Amazon RDS resource consisting of a key-value pair. 
     For more information, see Tagging Amazon RDS Resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema RdsServicesK8sAwsV1alpha1DBProxyStatus:
    """
    DBProxyStatus defines the observed state of DBProxy

    Attributes
    ----------
    ackResourceMetadata : RdsServicesK8sAwsV1alpha1DBProxyStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [RdsServicesK8sAwsV1alpha1DBProxyStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    createdDate : str, default is Undefined, optional
        The date and time when the proxy was first created.
    endpoint : str, default is Undefined, optional
        The endpoint that you can use to connect to the DB proxy. You include the endpoint value in the connection string for a database client application.
    status : str, default is Undefined, optional
        The current status of this proxy. A status of available means the proxy is ready to handle requests. Other values indicate that you must wait for the proxy to be ready, or take some action to resolve an issue.
    updatedDate : str, default is Undefined, optional
        The date and time when the proxy was last updated.
    vpcID : str, default is Undefined, optional
        Provides the VPC ID of the DB proxy.
    """


    ackResourceMetadata?: RdsServicesK8sAwsV1alpha1DBProxyStatusAckResourceMetadata

    conditions?: [RdsServicesK8sAwsV1alpha1DBProxyStatusConditionsItems0]

    createdDate?: str

    endpoint?: str

    status?: str

    updatedDate?: str

    vpcID?: str


schema RdsServicesK8sAwsV1alpha1DBProxyStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema RdsServicesK8sAwsV1alpha1DBProxyStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


