"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CodeSigningConfig:
    """
    CodeSigningConfig is the Schema for the CodeSigningConfigs API

    Attributes
    ----------
    apiVersion : str, default is "lambda.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CodeSigningConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpec, default is Undefined, optional
        spec
    status : LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "lambda.services.k8s.aws/v1alpha1" = "lambda.services.k8s.aws/v1alpha1"

    kind: "CodeSigningConfig" = "CodeSigningConfig"

    metadata?: v1.ObjectMeta

    spec?: LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpec

    status?: LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatus


schema LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpec:
    """
    CodeSigningConfigSpec defines the desired state of CodeSigningConfig. 
     Details about a Code signing configuration (https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html).

    Attributes
    ----------
    allowedPublishers : LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpecAllowedPublishers, default is Undefined, required
        allowed publishers
    codeSigningPolicies : LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpecCodeSigningPolicies, default is Undefined, optional
        code signing policies
    description : str, default is Undefined, optional
        Descriptive name for this code signing configuration.
    """


    allowedPublishers: LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpecAllowedPublishers

    codeSigningPolicies?: LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpecCodeSigningPolicies

    description?: str


schema LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpecAllowedPublishers:
    """
    Signing profiles for this code signing configuration.

    Attributes
    ----------
    signingProfileVersionARNs : [str], default is Undefined, optional
        signing profile version a r ns
    """


    signingProfileVersionARNs?: [str]


schema LambdaServicesK8sAwsV1alpha1CodeSigningConfigSpecCodeSigningPolicies:
    """
    The code signing policies define the actions to take if the validation checks fail.

    Attributes
    ----------
    untrustedArtifactOnDeployment : str, default is Undefined, optional
        untrusted artifact on deployment
    """


    untrustedArtifactOnDeployment?: str


schema LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatus:
    """
    CodeSigningConfigStatus defines the observed state of CodeSigningConfig

    Attributes
    ----------
    ackResourceMetadata : LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    codeSigningConfigID : str, default is Undefined, optional
        Unique identifer for the Code signing configuration.
    conditions : [LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    lastModified : str, default is Undefined, optional
        The date and time that the Code signing configuration was last modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).
    """


    ackResourceMetadata?: LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatusAckResourceMetadata

    codeSigningConfigID?: str

    conditions?: [LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatusConditionsItems0]

    lastModified?: str


schema LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema LambdaServicesK8sAwsV1alpha1CodeSigningConfigStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


