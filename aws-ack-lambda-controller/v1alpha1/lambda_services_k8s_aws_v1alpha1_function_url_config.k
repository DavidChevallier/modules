"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FunctionURLConfig:
    """
    FunctionURLConfig is the Schema for the FunctionURLConfigs API

    Attributes
    ----------
    apiVersion : str, default is "lambda.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FunctionURLConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpec, default is Undefined, optional
        spec
    status : LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "lambda.services.k8s.aws/v1alpha1" = "lambda.services.k8s.aws/v1alpha1"

    kind: "FunctionURLConfig" = "FunctionURLConfig"

    metadata?: v1.ObjectMeta

    spec?: LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpec

    status?: LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatus


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpec:
    """
    FunctionUrlConfigSpec defines the desired state of FunctionUrlConfig. 
     Details about a Lambda function URL.

    Attributes
    ----------
    authType : str, default is Undefined, required
        The type of authentication that your function URL uses. Set to AWS_IAM if you want to restrict access to authenticated IAM users only. Set to NONE if you want to bypass IAM authentication to create a public endpoint. For more information, see Security and auth model for Lambda function URLs (https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html).
    cors : LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecCors, default is Undefined, optional
        cors
    functionName : str, default is Undefined, optional
        The name of the Lambda function. 
         Name formats 
         * Function name – my-function. 
         * Function ARN – arn:aws:lambda:us-west-2:123456789012:function:my-function. 
         * Partial ARN – 123456789012:function:my-function. 
         The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.
    functionRef : LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecFunctionRef, default is Undefined, optional
        function ref
    qualifier : str, default is Undefined, optional
        The alias name.
    """


    authType: str

    cors?: LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecCors

    functionName?: str

    functionRef?: LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecFunctionRef

    qualifier?: str


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecCors:
    """
    The cross-origin resource sharing (CORS) (https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for your function URL.

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        allow credentials
    allowHeaders : [str], default is Undefined, optional
        allow headers
    allowMethods : [str], default is Undefined, optional
        allow methods
    allowOrigins : [str], default is Undefined, optional
        allow origins
    exposeHeaders : [str], default is Undefined, optional
        expose headers
    maxAge : int, default is Undefined, optional
        max age
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: int


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecFunctionRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: from: name: my-api

    Attributes
    ----------
    from : LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecFunctionRefFrom, default is Undefined, optional
        from
    """


    from?: LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecFunctionRefFrom


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigSpecFunctionRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatus:
    """
    FunctionURLConfigStatus defines the observed state of FunctionURLConfig

    Attributes
    ----------
    ackResourceMetadata : LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    creationTime : str, default is Undefined, optional
        When the function URL was created, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).
    functionARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of your function.
    functionURL : str, default is Undefined, optional
        The HTTP URL endpoint for your function.
    """


    ackResourceMetadata?: LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatusAckResourceMetadata

    conditions?: [LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatusConditionsItems0]

    creationTime?: str

    functionARN?: str

    functionURL?: str


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema LambdaServicesK8sAwsV1alpha1FunctionURLConfigStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


