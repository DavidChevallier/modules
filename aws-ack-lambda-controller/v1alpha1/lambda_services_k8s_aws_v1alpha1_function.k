"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Function:
    """
    Function is the Schema for the Functions API

    Attributes
    ----------
    apiVersion : str, default is "lambda.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Function", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LambdaServicesK8sAwsV1alpha1FunctionSpec, default is Undefined, optional
        spec
    status : LambdaServicesK8sAwsV1alpha1FunctionStatus, default is Undefined, optional
        status
    """


    apiVersion: "lambda.services.k8s.aws/v1alpha1" = "lambda.services.k8s.aws/v1alpha1"

    kind: "Function" = "Function"

    metadata?: v1.ObjectMeta

    spec?: LambdaServicesK8sAwsV1alpha1FunctionSpec

    status?: LambdaServicesK8sAwsV1alpha1FunctionStatus


schema LambdaServicesK8sAwsV1alpha1FunctionSpec:
    """
    FunctionSpec defines the desired state of Function.

    Attributes
    ----------
    architectures : [str], default is Undefined, optional
        The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is x86_64.
    code : LambdaServicesK8sAwsV1alpha1FunctionSpecCode, default is Undefined, required
        code
    codeSigningConfigARN : str, default is Undefined, optional
        To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
    deadLetterConfig : LambdaServicesK8sAwsV1alpha1FunctionSpecDeadLetterConfig, default is Undefined, optional
        dead letter config
    description : str, default is Undefined, optional
        A description of the function.
    environment : LambdaServicesK8sAwsV1alpha1FunctionSpecEnvironment, default is Undefined, optional
        environment
    ephemeralStorage : LambdaServicesK8sAwsV1alpha1FunctionSpecEphemeralStorage, default is Undefined, optional
        ephemeral storage
    fileSystemConfigs : [LambdaServicesK8sAwsV1alpha1FunctionSpecFileSystemConfigsItems0], default is Undefined, optional
        Connection settings for an Amazon EFS file system.
    handler : str, default is Undefined, optional
        The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Lambda programming model (https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html).
    imageConfig : LambdaServicesK8sAwsV1alpha1FunctionSpecImageConfig, default is Undefined, optional
        image config
    kmsKeyARN : str, default is Undefined, optional
        The ARN of the Key Management Service (KMS) key that's used to encrypt your function's environment variables. If it's not provided, Lambda uses a default service key.
    kmsKeyRef : LambdaServicesK8sAwsV1alpha1FunctionSpecKmsKeyRef, default is Undefined, optional
        kms key ref
    layers : [str], default is Undefined, optional
        A list of function layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
    memorySize : int, default is Undefined, optional
        The amount of memory available to the function (https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
    name : str, default is Undefined, required
        The name of the Lambda function. 
         Name formats 
         * Function name – my-function. 
         * Function ARN – arn:aws:lambda:us-west-2:123456789012:function:my-function. 
         * Partial ARN – 123456789012:function:my-function. 
         The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.
    packageType : str, default is Undefined, optional
        The type of deployment package. Set to Image for container image and set to Zip for .zip file archive.
    publish : bool, default is Undefined, optional
        Set to true to publish the first version of the function during creation.
    reservedConcurrentExecutions : int, default is Undefined, optional
        The number of simultaneous executions to reserve for the function.
    role : str, default is Undefined, required
        The Amazon Resource Name (ARN) of the function's execution role.
    runtime : str, default is Undefined, optional
        The identifier of the function's runtime (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime is required if the deployment package is a .zip file archive.
    snapStart : LambdaServicesK8sAwsV1alpha1FunctionSpecSnapStart, default is Undefined, optional
        snap start
    tags : {str:str}, default is Undefined, optional
        A list of tags (https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
    timeout : int, default is Undefined, optional
        The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see Lambda execution environment (https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).
    tracingConfig : LambdaServicesK8sAwsV1alpha1FunctionSpecTracingConfig, default is Undefined, optional
        tracing config
    vpcConfig : LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfig, default is Undefined, optional
        vpc config
    """


    architectures?: [str]

    code: LambdaServicesK8sAwsV1alpha1FunctionSpecCode

    codeSigningConfigARN?: str

    deadLetterConfig?: LambdaServicesK8sAwsV1alpha1FunctionSpecDeadLetterConfig

    description?: str

    environment?: LambdaServicesK8sAwsV1alpha1FunctionSpecEnvironment

    ephemeralStorage?: LambdaServicesK8sAwsV1alpha1FunctionSpecEphemeralStorage

    fileSystemConfigs?: [LambdaServicesK8sAwsV1alpha1FunctionSpecFileSystemConfigsItems0]

    handler?: str

    imageConfig?: LambdaServicesK8sAwsV1alpha1FunctionSpecImageConfig

    kmsKeyARN?: str

    kmsKeyRef?: LambdaServicesK8sAwsV1alpha1FunctionSpecKmsKeyRef

    layers?: [str]

    memorySize?: int

    name: str

    packageType?: str

    publish?: bool

    reservedConcurrentExecutions?: int

    role: str

    runtime?: str

    snapStart?: LambdaServicesK8sAwsV1alpha1FunctionSpecSnapStart

    tags?: {str:str}

    timeout?: int

    tracingConfig?: LambdaServicesK8sAwsV1alpha1FunctionSpecTracingConfig

    vpcConfig?: LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfig


schema LambdaServicesK8sAwsV1alpha1FunctionSpecCode:
    """
    The code for the function.

    Attributes
    ----------
    imageURI : str, default is Undefined, optional
        image URI
    s3Bucket : str, default is Undefined, optional
        s3 bucket
    s3BucketRef : LambdaServicesK8sAwsV1alpha1FunctionSpecCodeS3BucketRef, default is Undefined, optional
        s3 bucket ref
    s3Key : str, default is Undefined, optional
        s3 key
    s3ObjectVersion : str, default is Undefined, optional
        s3 object version
    zipFile : str, default is Undefined, optional
        zip file
    """


    imageURI?: str

    s3Bucket?: str

    s3BucketRef?: LambdaServicesK8sAwsV1alpha1FunctionSpecCodeS3BucketRef

    s3Key?: str

    s3ObjectVersion?: str

    zipFile?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecCodeS3BucketRef:
    """
    Reference field for S3Bucket

    Attributes
    ----------
    from : LambdaServicesK8sAwsV1alpha1FunctionSpecCodeS3BucketRefFrom, default is Undefined, optional
        from
    """


    from?: LambdaServicesK8sAwsV1alpha1FunctionSpecCodeS3BucketRefFrom


schema LambdaServicesK8sAwsV1alpha1FunctionSpecCodeS3BucketRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecDeadLetterConfig:
    """
    A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead-letter queues (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq).

    Attributes
    ----------
    targetARN : str, default is Undefined, optional
        target a r n
    """


    targetARN?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecEnvironment:
    """
    Environment variables that are accessible from function code during execution.

    Attributes
    ----------
    variables : {str:str}, default is Undefined, optional
        variables
    """


    variables?: {str:str}


schema LambdaServicesK8sAwsV1alpha1FunctionSpecEphemeralStorage:
    """
    The size of the function's /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB.

    Attributes
    ----------
    size : int, default is Undefined, optional
        size
    """


    size?: int


schema LambdaServicesK8sAwsV1alpha1FunctionSpecFileSystemConfigsItems0:
    """
    Details about the connection between a Lambda function and an Amazon EFS file system (https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html).

    Attributes
    ----------
    arn : str, default is Undefined, optional
        arn
    localMountPath : str, default is Undefined, optional
        local mount path
    """


    arn?: str

    localMountPath?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecImageConfig:
    """
    Container image configuration values (https://docs.aws.amazon.com/lambda/latest/dg/configuration-images.html#configuration-images-settings) that override the values in the container image Dockerfile.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    entryPoint : [str], default is Undefined, optional
        entry point
    workingDirectory : str, default is Undefined, optional
        working directory
    """


    command?: [str]

    entryPoint?: [str]

    workingDirectory?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecKmsKeyRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: from: name: my-api

    Attributes
    ----------
    from : LambdaServicesK8sAwsV1alpha1FunctionSpecKmsKeyRefFrom, default is Undefined, optional
        from
    """


    from?: LambdaServicesK8sAwsV1alpha1FunctionSpecKmsKeyRefFrom


schema LambdaServicesK8sAwsV1alpha1FunctionSpecKmsKeyRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecSnapStart:
    """
    The function's SnapStart (https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html) setting.

    Attributes
    ----------
    applyOn : str, default is Undefined, optional
        apply on
    """


    applyOn?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecTracingConfig:
    """
    Set Mode to Active to sample and trace a subset of incoming requests with X-Ray (https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html).

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfig:
    """
    For network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see Configuring a Lambda function to access resources in a VPC (https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).

    Attributes
    ----------
    securityGroupIDs : [str], default is Undefined, optional
        security group i ds
    securityGroupRefs : [LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSecurityGroupRefsItems0], default is Undefined, optional
        Reference field for SecurityGroupIDs
    subnetIDs : [str], default is Undefined, optional
        subnet i ds
    subnetRefs : [LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSubnetRefsItems0], default is Undefined, optional
        Reference field for SubnetIDs
    """


    securityGroupIDs?: [str]

    securityGroupRefs?: [LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSecurityGroupRefsItems0]

    subnetIDs?: [str]

    subnetRefs?: [LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSubnetRefsItems0]


schema LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSecurityGroupRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: from: name: my-api

    Attributes
    ----------
    from : LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSecurityGroupRefsItems0From, default is Undefined, optional
        from
    """


    from?: LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSecurityGroupRefsItems0From


schema LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSecurityGroupRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSubnetRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: from: name: my-api

    Attributes
    ----------
    from : LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSubnetRefsItems0From, default is Undefined, optional
        from
    """


    from?: LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSubnetRefsItems0From


schema LambdaServicesK8sAwsV1alpha1FunctionSpecVpcConfigSubnetRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema LambdaServicesK8sAwsV1alpha1FunctionStatus:
    """
    FunctionStatus defines the observed state of Function

    Attributes
    ----------
    ackResourceMetadata : LambdaServicesK8sAwsV1alpha1FunctionStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    codeSHA256 : str, default is Undefined, optional
        The SHA256 hash of the function's deployment package.
    codeSize : int, default is Undefined, optional
        The size of the function's deployment package, in bytes.
    conditions : [LambdaServicesK8sAwsV1alpha1FunctionStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    imageConfigResponse : LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponse, default is Undefined, optional
        image config response
    lastModified : str, default is Undefined, optional
        The date and time that the function was last updated, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).
    lastUpdateStatus : str, default is Undefined, optional
        The status of the last update that was performed on the function. This is first set to Successful after function creation completes.
    lastUpdateStatusReason : str, default is Undefined, optional
        The reason for the last update that was performed on the function.
    lastUpdateStatusReasonCode : str, default is Undefined, optional
        The reason code for the last update that was performed on the function.
    layerStatuses : [LambdaServicesK8sAwsV1alpha1FunctionStatusLayerStatusesItems0], default is Undefined, optional
        The function's layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
    masterARN : str, default is Undefined, optional
        For Lambda@Edge functions, the ARN of the main function.
    revisionID : str, default is Undefined, optional
        The latest updated revision of the function or alias.
    signingJobARN : str, default is Undefined, optional
        The ARN of the signing job.
    signingProfileVersionARN : str, default is Undefined, optional
        The ARN of the signing profile version.
    state : str, default is Undefined, optional
        The current state of the function. When the state is Inactive, you can reactivate the function by invoking it.
    stateReason : str, default is Undefined, optional
        The reason for the function's current state.
    stateReasonCode : str, default is Undefined, optional
        The reason code for the function's current state. When the code is Creating, you can't invoke or modify the function.
    version : str, default is Undefined, optional
        The version of the Lambda function.
    """


    ackResourceMetadata?: LambdaServicesK8sAwsV1alpha1FunctionStatusAckResourceMetadata

    codeSHA256?: str

    codeSize?: int

    conditions?: [LambdaServicesK8sAwsV1alpha1FunctionStatusConditionsItems0]

    imageConfigResponse?: LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponse

    lastModified?: str

    lastUpdateStatus?: str

    lastUpdateStatusReason?: str

    lastUpdateStatusReasonCode?: str

    layerStatuses?: [LambdaServicesK8sAwsV1alpha1FunctionStatusLayerStatusesItems0]

    masterARN?: str

    revisionID?: str

    signingJobARN?: str

    signingProfileVersionARN?: str

    state?: str

    stateReason?: str

    stateReasonCode?: str

    version?: str


schema LambdaServicesK8sAwsV1alpha1FunctionStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema LambdaServicesK8sAwsV1alpha1FunctionStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponse:
    """
    The function's image configuration values.

    Attributes
    ----------
    error : LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponseError, default is Undefined, optional
        error
    imageConfig : LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponseImageConfig, default is Undefined, optional
        image config
    """


    error?: LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponseError

    imageConfig?: LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponseImageConfig


schema LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponseError:
    """
    Error response to GetFunctionConfiguration.

    Attributes
    ----------
    errorCode : str, default is Undefined, optional
        error code
    message : str, default is Undefined, optional
        message
    """


    errorCode?: str

    message?: str


schema LambdaServicesK8sAwsV1alpha1FunctionStatusImageConfigResponseImageConfig:
    """
    Configuration values that override the container image Dockerfile settings. For more information, see Container image settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    entryPoint : [str], default is Undefined, optional
        entry point
    workingDirectory : str, default is Undefined, optional
        working directory
    """


    command?: [str]

    entryPoint?: [str]

    workingDirectory?: str


schema LambdaServicesK8sAwsV1alpha1FunctionStatusLayerStatusesItems0:
    """
    An Lambda layer (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).

    Attributes
    ----------
    arn : str, default is Undefined, optional
        arn
    codeSize : int, default is Undefined, optional
        code size
    signingJobARN : str, default is Undefined, optional
        signing job a r n
    signingProfileVersionARN : str, default is Undefined, optional
        signing profile version a r n
    """


    arn?: str

    codeSize?: int

    signingJobARN?: str

    signingProfileVersionARN?: str


