"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Group:
    """
    Group is the Schema for the Groups API

    Attributes
    ----------
    apiVersion : str, default is "iam.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Group", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IamServicesK8sAwsV1alpha1GroupSpec, default is Undefined, optional
        spec
    status : IamServicesK8sAwsV1alpha1GroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "iam.services.k8s.aws/v1alpha1" = "iam.services.k8s.aws/v1alpha1"

    kind: "Group" = "Group"

    metadata?: v1.ObjectMeta

    spec?: IamServicesK8sAwsV1alpha1GroupSpec

    status?: IamServicesK8sAwsV1alpha1GroupStatus


schema IamServicesK8sAwsV1alpha1GroupSpec:
    """
    GroupSpec defines the desired state of Group. 
     Contains information about an IAM group entity. 
     This data type is used as a response element in the following operations: 
     - CreateGroup 
     - GetGroup 
     - ListGroups

    Attributes
    ----------
    inlinePolicies : {str:str}, default is Undefined, optional
        inline policies
    name : str, default is Undefined, required
        The name of the group to create. Do not include the path in this value. 
         IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both "MyResource" and "myresource".
    path : str, default is Undefined, optional
        The path to the group. For more information about paths, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the IAM User Guide. 
         This parameter is optional. If it is not included, it defaults to a slash (/). 
         This parameter allows (through its regex pattern (http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.
    policies : [str], default is Undefined, optional
        policies
    policyRefs : [IamServicesK8sAwsV1alpha1GroupSpecPolicyRefsItems0], default is Undefined, optional
        policy refs
    """


    inlinePolicies?: {str:str}

    name: str

    path?: str

    policies?: [str]

    policyRefs?: [IamServicesK8sAwsV1alpha1GroupSpecPolicyRefsItems0]


schema IamServicesK8sAwsV1alpha1GroupSpecPolicyRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : IamServicesK8sAwsV1alpha1GroupSpecPolicyRefsItems0From, default is Undefined, optional
        from
    """


    from?: IamServicesK8sAwsV1alpha1GroupSpecPolicyRefsItems0From


schema IamServicesK8sAwsV1alpha1GroupSpecPolicyRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema IamServicesK8sAwsV1alpha1GroupStatus:
    """
    GroupStatus defines the observed state of Group

    Attributes
    ----------
    ackResourceMetadata : IamServicesK8sAwsV1alpha1GroupStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [IamServicesK8sAwsV1alpha1GroupStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    createDate : str, default is Undefined, optional
        The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601), when the group was created.
    groupID : str, default is Undefined, optional
        The stable and unique string identifying the group. For more information about IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the IAM User Guide.
    """


    ackResourceMetadata?: IamServicesK8sAwsV1alpha1GroupStatusAckResourceMetadata

    conditions?: [IamServicesK8sAwsV1alpha1GroupStatusConditionsItems0]

    createDate?: str

    groupID?: str


schema IamServicesK8sAwsV1alpha1GroupStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema IamServicesK8sAwsV1alpha1GroupStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


