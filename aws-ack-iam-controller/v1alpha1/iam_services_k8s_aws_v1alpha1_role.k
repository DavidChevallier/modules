"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Role:
    """
    Role is the Schema for the Roles API

    Attributes
    ----------
    apiVersion : str, default is "iam.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Role", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IamServicesK8sAwsV1alpha1RoleSpec, default is Undefined, optional
        spec
    status : IamServicesK8sAwsV1alpha1RoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "iam.services.k8s.aws/v1alpha1" = "iam.services.k8s.aws/v1alpha1"

    kind: "Role" = "Role"

    metadata?: v1.ObjectMeta

    spec?: IamServicesK8sAwsV1alpha1RoleSpec

    status?: IamServicesK8sAwsV1alpha1RoleStatus


schema IamServicesK8sAwsV1alpha1RoleSpec:
    """
    RoleSpec defines the desired state of Role. 
     Contains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.

    Attributes
    ----------
    assumeRolePolicyDocument : str, default is Undefined, required
        The trust relationship policy document that grants an entity permission to assume the role. 
         In IAM, you must provide a JSON policy that has been converted to a string. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM. 
         The regex pattern (http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following: 
         - Any printable ASCII character ranging from the space character (\u0020) through the end of the ASCII character range 
         - The printable characters in the Basic Latin and Latin-1 Supplement character set (through \u00FF) 
         - The special characters tab (\u0009), line feed (\u000A), and carriage return (\u000D) 
         Upon success, the response includes the same trust policy in JSON format.
    description : str, default is Undefined, optional
        A description of the role.
    inlinePolicies : {str:str}, default is Undefined, optional
        inline policies
    maxSessionDuration : int, default is Undefined, optional
        The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours. 
         Anyone who assumes the role from the or API can use the DurationSeconds API parameter or the duration-seconds CLI parameter to request a longer session. The MaxSessionDuration setting determines the maximum duration that can be requested using the DurationSeconds parameter. If users don't specify a value for the DurationSeconds parameter, their security credentials are valid for one hour by default. This applies when you use the AssumeRole* API operations or the assume-role* CLI operations but does not apply when you use those operations to create a console URL. For more information, see Using IAM roles (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the IAM User Guide.
    name : str, default is Undefined, required
        The name of the role to create. 
         IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both "MyResource" and "myresource".
    path : str, default is Undefined, optional
        The path to the role. For more information about paths, see IAM Identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the IAM User Guide. 
         This parameter is optional. If it is not included, it defaults to a slash (/). 
         This parameter allows (through its regex pattern (http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (\u0021) through the DEL character (\u007F), including most punctuation characters, digits, and upper and lowercased letters.
    permissionsBoundary : str, default is Undefined, optional
        The ARN of the policy that is used to set the permissions boundary for the role.
    permissionsBoundaryRef : IamServicesK8sAwsV1alpha1RoleSpecPermissionsBoundaryRef, default is Undefined, optional
        permissions boundary ref
    policies : [str], default is Undefined, optional
        policies
    policyRefs : [IamServicesK8sAwsV1alpha1RoleSpecPolicyRefsItems0], default is Undefined, optional
        policy refs
    tags : [IamServicesK8sAwsV1alpha1RoleSpecTagsItems0], default is Undefined, optional
        A list of tags that you want to attach to the new role. Each tag consists of a key name and an associated value. For more information about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide. 
         If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
    """


    assumeRolePolicyDocument: str

    description?: str

    inlinePolicies?: {str:str}

    maxSessionDuration?: int

    name: str

    path?: str

    permissionsBoundary?: str

    permissionsBoundaryRef?: IamServicesK8sAwsV1alpha1RoleSpecPermissionsBoundaryRef

    policies?: [str]

    policyRefs?: [IamServicesK8sAwsV1alpha1RoleSpecPolicyRefsItems0]

    tags?: [IamServicesK8sAwsV1alpha1RoleSpecTagsItems0]


schema IamServicesK8sAwsV1alpha1RoleSpecPermissionsBoundaryRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : IamServicesK8sAwsV1alpha1RoleSpecPermissionsBoundaryRefFrom, default is Undefined, optional
        from
    """


    from?: IamServicesK8sAwsV1alpha1RoleSpecPermissionsBoundaryRefFrom


schema IamServicesK8sAwsV1alpha1RoleSpecPermissionsBoundaryRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema IamServicesK8sAwsV1alpha1RoleSpecPolicyRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : IamServicesK8sAwsV1alpha1RoleSpecPolicyRefsItems0From, default is Undefined, optional
        from
    """


    from?: IamServicesK8sAwsV1alpha1RoleSpecPolicyRefsItems0From


schema IamServicesK8sAwsV1alpha1RoleSpecPolicyRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema IamServicesK8sAwsV1alpha1RoleSpecTagsItems0:
    """
    A structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see Tagging IAM resources (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema IamServicesK8sAwsV1alpha1RoleStatus:
    """
    RoleStatus defines the observed state of Role

    Attributes
    ----------
    ackResourceMetadata : IamServicesK8sAwsV1alpha1RoleStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [IamServicesK8sAwsV1alpha1RoleStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    createDate : str, default is Undefined, optional
        The date and time, in ISO 8601 date-time format (http://www.iso.org/iso/iso8601), when the role was created.
    roleID : str, default is Undefined, optional
        The stable and unique string identifying the role. For more information about IDs, see IAM identifiers (https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the IAM User Guide.
    roleLastUsed : IamServicesK8sAwsV1alpha1RoleStatusRoleLastUsed, default is Undefined, optional
        role last used
    """


    ackResourceMetadata?: IamServicesK8sAwsV1alpha1RoleStatusAckResourceMetadata

    conditions?: [IamServicesK8sAwsV1alpha1RoleStatusConditionsItems0]

    createDate?: str

    roleID?: str

    roleLastUsed?: IamServicesK8sAwsV1alpha1RoleStatusRoleLastUsed


schema IamServicesK8sAwsV1alpha1RoleStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema IamServicesK8sAwsV1alpha1RoleStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema IamServicesK8sAwsV1alpha1RoleStatusRoleLastUsed:
    """
    Contains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see Regions where data is tracked (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period) in the IAM User Guide.

    Attributes
    ----------
    lastUsedDate : str, default is Undefined, optional
        last used date
    region : str, default is Undefined, optional
        region
    """


    lastUsedDate?: str

    region?: str


