apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigs.tf.upbound.io
spec:
  group: tf.upbound.io
  names:
    categories:
    - crossplane
    - provider
    - terraform
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentials.secretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfig configures a Terraform provider.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              configuration:
                description: Configuration that should be injected into all workspaces
                  that use this provider config, expressed as inline HCL. This can
                  be used to automatically inject Terraform provider configuration
                  blocks.
                type: string
              credentials:
                description: Credentials required to authenticate to this provider.
                items:
                  description: ProviderCredentials required to authenticate.
                  properties:
                    env:
                      description: Env is a reference to an environment variable that
                        contains credentials that must be used to connect to the provider.
                      properties:
                        name:
                          description: Name is the name of an environment variable.
                          type: string
                      required:
                      - name
                      type: object
                    filename:
                      description: Filename (relative to main.tf) to which these provider
                        credentials should be written.
                      type: string
                    fs:
                      description: Fs is a reference to a filesystem location that
                        contains credentials that must be used to connect to the provider.
                      properties:
                        path:
                          description: Path is a filesystem path.
                          type: string
                      required:
                      - path
                      type: object
                    secretRef:
                      description: A SecretRef is a reference to a secret key that
                        contains the credentials that must be used to connect to the
                        provider.
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          description: Name of the secret.
                          type: string
                        namespace:
                          description: Namespace of the secret.
                          type: string
                      required:
                      - key
                      - name
                      - namespace
                      type: object
                    source:
                      description: Source of the provider credentials.
                      enum:
                      - None
                      - Secret
                      - Environment
                      - Filesystem
                      type: string
                  required:
                  - filename
                  - source
                  type: object
                type: array
              pluginCache:
                default: true
                description: PluginCache enables terraform provider plugin caching
                  mechanism https://developer.hashicorp.com/terraform/cli/config/config-file#provider-plugin-cache
                type: boolean
            type: object
          status:
            description: A ProviderConfigStatus reflects the observed state of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigusages.tf.upbound.io
spec:
  group: tf.upbound.io
  names:
    categories:
    - crossplane
    - provider
    - terraform
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
              policy:
                description: Policies for referencing.
                properties:
                  resolution:
                    default: Required
                    description: Resolution specifies whether resolution of this reference
                      is required. The default is 'Required', which means the reconcile
                      will fail if the reference cannot be resolved. 'Optional' means
                      this reference will be a no-op if it cannot be resolved.
                    enum:
                    - Required
                    - Optional
                    type: string
                  resolve:
                    description: Resolve specifies when this reference should be resolved.
                      The default is 'IfNotPresent', which will attempt to resolve
                      the reference only when the corresponding field is not present.
                      Use 'Always' to resolve the reference on every reconcile.
                    enum:
                    - Always
                    - IfNotPresent
                    type: string
                type: object
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: storeconfigs.tf.upbound.io
spec:
  group: tf.upbound.io
  names:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how GCP controller should store connection
          details.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            properties:
              defaultScope:
                description: DefaultScope used for scoping secrets for "cluster-scoped"
                  resources. If store type is "Kubernetes", this would mean the default
                  namespace to store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: Kubernetes configures a Kubernetes secret store. If the
                  "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              type:
                default: Kubernetes
                description: Type configures which secret store to be used. Only the
                  configuration block for this store will be used and others will
                  be ignored if provided. Default is Kubernetes.
                enum:
                - Kubernetes
                - Vault
                type: string
              vault:
                description: Vault configures a Vault secret store.
                properties:
                  auth:
                    description: Auth configures an authentication method for Vault.
                    properties:
                      method:
                        description: Method configures which auth method will be used.
                        type: string
                      token:
                        description: Token configures Token Auth for Vault.
                        properties:
                          env:
                            description: Env is a reference to an environment variable
                              that contains credentials that must be used to connect
                              to the provider.
                            properties:
                              name:
                                description: Name is the name of an environment variable.
                                type: string
                            required:
                            - name
                            type: object
                          fs:
                            description: Fs is a reference to a filesystem location
                              that contains credentials that must be used to connect
                              to the provider.
                            properties:
                              path:
                                description: Path is a filesystem path.
                                type: string
                            required:
                            - path
                            type: object
                          secretRef:
                            description: A SecretRef is a reference to a secret key
                              that contains the credentials that must be used to connect
                              to the provider.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          source:
                            description: Source of the credentials.
                            enum:
                            - None
                            - Secret
                            - Environment
                            - Filesystem
                            type: string
                        required:
                        - source
                        type: object
                    required:
                    - method
                    type: object
                  caBundle:
                    description: CABundle configures CA bundle for Vault Server.
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                  mountPath:
                    description: MountPath is the mount path of the KV secrets engine.
                    type: string
                  server:
                    description: Server is the url of the Vault server, e.g. "https://vault.acme.org"
                    type: string
                  version:
                    default: v2
                    description: Version of the KV Secrets engine of Vault. https://www.vaultproject.io/docs/secrets/kv
                    type: string
                required:
                - auth
                - mountPath
                - server
                type: object
            required:
            - defaultScope
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: workspaces.tf.upbound.io
spec:
  group: tf.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - terraform
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Workspace of Terraform Configuration.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A WorkspaceSpec defines the desired state of a Workspace.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: WorkspaceParameters are the configurable fields of a
                  Workspace.
                properties:
                  applyArgs:
                    description: Arguments to be included in the terraform apply CLI
                      command
                    items:
                      type: string
                    type: array
                  destroyArgs:
                    description: Arguments to be included in the terraform destroy
                      CLI command
                    items:
                      type: string
                    type: array
                  entrypoint:
                    default: ""
                    description: Entrypoint for `terraform init` within the module
                    type: string
                  initArgs:
                    description: Arguments to be included in the terraform init CLI
                      command
                    items:
                      type: string
                    type: array
                  module:
                    description: The root module of this workspace; i.e. the module
                      containing its main.tf file. When the workspace's source is
                      'Remote' (the default) this can be any address supported by
                      terraform init -from-module, for example a git repository or
                      an S3 bucket. When the workspace's source is 'Inline' the content
                      of a simple main.tf file may be written inline.
                    type: string
                  planArgs:
                    description: Arguments to be included in the terraform plan CLI
                      command
                    items:
                      type: string
                    type: array
                  source:
                    description: Source of the root module of this workspace.
                    enum:
                    - Remote
                    - Inline
                    type: string
                  varFiles:
                    description: Files of configuration variables. Explicitly declared
                      vars take precedence.
                    items:
                      description: A VarFile is a file containing many Terraform variables.
                      properties:
                        configMapKeyRef:
                          description: A ConfigMap key containing the vars file.
                          properties:
                            key:
                              description: Key within the referenced resource.
                              type: string
                            name:
                              description: Name of the referenced resource.
                              type: string
                            namespace:
                              description: Namespace of the referenced resource.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        format:
                          default: HCL
                          description: Format of this vars file.
                          enum:
                          - HCL
                          - JSON
                          type: string
                        secretKeyRef:
                          description: A Secret key containing the vars file.
                          properties:
                            key:
                              description: Key within the referenced resource.
                              type: string
                            name:
                              description: Name of the referenced resource.
                              type: string
                            namespace:
                              description: Namespace of the referenced resource.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        source:
                          description: Source of this vars file.
                          enum:
                          - ConfigMapKey
                          - SecretKey
                          type: string
                      required:
                      - source
                      type: object
                    type: array
                  varmap:
                    description: Terraform Variable Map. Should be a valid JSON representation
                      of the input vars
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  vars:
                    description: Configuration variables.
                    items:
                      description: A Var represents a Terraform configuration variable.
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                required:
                - module
                - source
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A WorkspaceStatus represents the observed state of a Workspace.
            properties:
              atProvider:
                description: WorkspaceObservation are the observable fields of a Workspace.
                properties:
                  checksum:
                    type: string
                  outputs:
                    additionalProperties:
                      x-kubernetes-preserve-unknown-fields: true
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
