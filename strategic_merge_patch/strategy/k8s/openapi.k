"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""

definitions = {
    "io.k8s.api.admissionregistration.v1.MutatingWebhook" = {
        properties = {
            matchConditions = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration" = {
        properties = {
            webhooks = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1.RuleWithOperations" = {
        properties = {
            apiGroups = {
                "x-kubernetes-list-type" = "atomic"
            }
            apiVersions = {
                "x-kubernetes-list-type" = "atomic"
            }
            operations = {
                "x-kubernetes-list-type" = "atomic"
            }
            resources = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1.ValidatingWebhook" = {
        properties = {
            matchConditions = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration" = {
        properties = {
            webhooks = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1alpha1.MatchResources" = {
        properties = {
            excludeResourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
            resourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1alpha1.NamedRuleWithOperations" = {
        properties = {
            apiGroups = {
                "x-kubernetes-list-type" = "atomic"
            }
            apiVersions = {
                "x-kubernetes-list-type" = "atomic"
            }
            operations = {
                "x-kubernetes-list-type" = "atomic"
            }
            resourceNames = {
                "x-kubernetes-list-type" = "atomic"
            }
            resources = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1alpha1.TypeChecking" = {
        properties = {
            expressionWarnings = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyBindingSpec" = {
        properties = {
            validationActions = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicySpec" = {
        properties = {
            auditAnnotations = {
                "x-kubernetes-list-type" = "atomic"
            }
            matchConditions = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            validations = {
                "x-kubernetes-list-type" = "atomic"
            }
            variables = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1alpha1.ValidatingAdmissionPolicyStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1beta1.MatchResources" = {
        properties = {
            excludeResourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
            resourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1beta1.NamedRuleWithOperations" = {
        properties = {
            apiGroups = {
                "x-kubernetes-list-type" = "atomic"
            }
            apiVersions = {
                "x-kubernetes-list-type" = "atomic"
            }
            operations = {
                "x-kubernetes-list-type" = "atomic"
            }
            resourceNames = {
                "x-kubernetes-list-type" = "atomic"
            }
            resources = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1beta1.TypeChecking" = {
        properties = {
            expressionWarnings = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyBindingSpec" = {
        properties = {
            validationActions = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicySpec" = {
        properties = {
            auditAnnotations = {
                "x-kubernetes-list-type" = "atomic"
            }
            matchConditions = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            validations = {
                "x-kubernetes-list-type" = "atomic"
            }
            variables = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.admissionregistration.v1beta1.ValidatingAdmissionPolicyStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.apiserverinternal.v1alpha1.ServerStorageVersion" = {
        properties = {
            decodableVersions = {
                "x-kubernetes-list-type" = "set"
            }
            servedVersions = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.apiserverinternal.v1alpha1.StorageVersionStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
            }
            storageVersions = {
                "x-kubernetes-list-map-keys" = [
                    "apiServerID"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.apps.v1.DaemonSetStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.apps.v1.DeploymentSpec" = {
        properties = {
            strategy = {
                "x-kubernetes-patch-strategy" = "retainKeys"
            }
        }
    }
    "io.k8s.api.apps.v1.DeploymentStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.apps.v1.ReplicaSetStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.apps.v1.StatefulSetStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.autoscaling.v2.HPAScalingRules" = {
        properties = {
            policies = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerSpec" = {
        properties = {
            metrics = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.autoscaling.v2.HorizontalPodAutoscalerStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
            currentMetrics = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.batch.v1.CronJobStatus" = {
        properties = {
            active = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.batch.v1.JobStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-type" = "atomic"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.batch.v1.PodFailurePolicy" = {
        properties = {
            rules = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.batch.v1.PodFailurePolicyOnExitCodesRequirement" = {
        properties = {
            values = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.batch.v1.PodFailurePolicyRule" = {
        properties = {
            onPodConditions = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.batch.v1.UncountedTerminatedPods" = {
        properties = {
            failed = {
                "x-kubernetes-list-type" = "set"
            }
            succeeded = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.certificates.v1.CertificateSigningRequestSpec" = {
        properties = {
            groups = {
                "x-kubernetes-list-type" = "atomic"
            }
            request = {
                "x-kubernetes-list-type" = "atomic"
            }
            usages = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.certificates.v1.CertificateSigningRequestStatus" = {
        properties = {
            certificate = {
                "x-kubernetes-list-type" = "atomic"
            }
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.core.v1.ComponentStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.Container" = {
        properties = {
            env = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            ports = {
                "x-kubernetes-list-map-keys" = [
                    "containerPort"
                    "protocol"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "containerPort"
                "x-kubernetes-patch-strategy" = "merge"
            }
            resizePolicy = {
                "x-kubernetes-list-type" = "atomic"
            }
            volumeDevices = {
                "x-kubernetes-patch-merge-key" = "devicePath"
                "x-kubernetes-patch-strategy" = "merge"
            }
            volumeMounts = {
                "x-kubernetes-patch-merge-key" = "mountPath"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.EphemeralContainer" = {
        properties = {
            env = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            ports = {
                "x-kubernetes-list-map-keys" = [
                    "containerPort"
                    "protocol"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "containerPort"
                "x-kubernetes-patch-strategy" = "merge"
            }
            resizePolicy = {
                "x-kubernetes-list-type" = "atomic"
            }
            volumeDevices = {
                "x-kubernetes-patch-merge-key" = "devicePath"
                "x-kubernetes-patch-strategy" = "merge"
            }
            volumeMounts = {
                "x-kubernetes-patch-merge-key" = "mountPath"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.LoadBalancerIngress" = {
        properties = {
            ports = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.core.v1.NamespaceStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.NodeSpec" = {
        properties = {
            podCIDRs = {
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.NodeStatus" = {
        properties = {
            addresses = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.PersistentVolumeClaimStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.PodAffinityTerm" = {
        properties = {
            matchLabelKeys = {
                "x-kubernetes-list-type" = "atomic"
            }
            mismatchLabelKeys = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.core.v1.PodSpec" = {
        properties = {
            containers = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            ephemeralContainers = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            hostAliases = {
                "x-kubernetes-patch-merge-key" = "ip"
                "x-kubernetes-patch-strategy" = "merge"
            }
            imagePullSecrets = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            initContainers = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            resourceClaims = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge,retainKeys"
            }
            schedulingGates = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
            topologySpreadConstraints = {
                "x-kubernetes-list-map-keys" = [
                    "topologyKey"
                    "whenUnsatisfiable"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "topologyKey"
                "x-kubernetes-patch-strategy" = "merge"
            }
            volumes = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge,retainKeys"
            }
        }
    }
    "io.k8s.api.core.v1.PodStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
            hostIPs = {
                "x-kubernetes-list-type" = "atomic"
                "x-kubernetes-patch-merge-key" = "ip"
                "x-kubernetes-patch-strategy" = "merge"
            }
            podIPs = {
                "x-kubernetes-patch-merge-key" = "ip"
                "x-kubernetes-patch-strategy" = "merge"
            }
            resourceClaimStatuses = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge,retainKeys"
            }
        }
    }
    "io.k8s.api.core.v1.ReplicationControllerStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.ResourceRequirements" = {
        properties = {
            claims = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.core.v1.ServiceAccount" = {
        properties = {
            secrets = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.ServiceSpec" = {
        properties = {
            clusterIPs = {
                "x-kubernetes-list-type" = "atomic"
            }
            ipFamilies = {
                "x-kubernetes-list-type" = "atomic"
            }
            ports = {
                "x-kubernetes-list-map-keys" = [
                    "port"
                    "protocol"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "port"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.ServiceStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.core.v1.TopologySpreadConstraint" = {
        properties = {
            matchLabelKeys = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.discovery.v1.Endpoint" = {
        properties = {
            addresses = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.discovery.v1.EndpointHints" = {
        properties = {
            forZones = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.discovery.v1.EndpointSlice" = {
        properties = {
            endpoints = {
                "x-kubernetes-list-type" = "atomic"
            }
            ports = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1.FlowSchemaSpec" = {
        properties = {
            rules = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1.FlowSchemaStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1.NonResourcePolicyRule" = {
        properties = {
            nonResourceURLs = {
                "x-kubernetes-list-type" = "set"
            }
            verbs = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1.PolicyRulesWithSubjects" = {
        properties = {
            nonResourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
            resourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
            subjects = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1.PriorityLevelConfigurationStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1.ResourcePolicyRule" = {
        properties = {
            apiGroups = {
                "x-kubernetes-list-type" = "set"
            }
            namespaces = {
                "x-kubernetes-list-type" = "set"
            }
            resources = {
                "x-kubernetes-list-type" = "set"
            }
            verbs = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaSpec" = {
        properties = {
            rules = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1beta3.FlowSchemaStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1beta3.NonResourcePolicyRule" = {
        properties = {
            nonResourceURLs = {
                "x-kubernetes-list-type" = "set"
            }
            verbs = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1beta3.PolicyRulesWithSubjects" = {
        properties = {
            nonResourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
            resourceRules = {
                "x-kubernetes-list-type" = "atomic"
            }
            subjects = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1beta3.PriorityLevelConfigurationStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.flowcontrol.v1beta3.ResourcePolicyRule" = {
        properties = {
            apiGroups = {
                "x-kubernetes-list-type" = "set"
            }
            namespaces = {
                "x-kubernetes-list-type" = "set"
            }
            resources = {
                "x-kubernetes-list-type" = "set"
            }
            verbs = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.networking.v1.HTTPIngressRuleValue" = {
        properties = {
            paths = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.networking.v1.IngressLoadBalancerIngress" = {
        properties = {
            ports = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.networking.v1.IngressSpec" = {
        properties = {
            rules = {
                "x-kubernetes-list-type" = "atomic"
            }
            tls = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.networking.v1.IngressTLS" = {
        properties = {
            hosts = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.networking.v1alpha1.ServiceCIDRStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.node.v1.Scheduling" = {
        properties = {
            tolerations = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.policy.v1.PodDisruptionBudgetSpec" = {
        properties = {
            selector = {
                "x-kubernetes-patch-strategy" = "replace"
            }
        }
    }
    "io.k8s.api.policy.v1.PodDisruptionBudgetStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.resource.v1alpha2.AllocationResult" = {
        properties = {
            resourceHandles = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.resource.v1alpha2.PodSchedulingContextSpec" = {
        properties = {
            potentialNodes = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.resource.v1alpha2.PodSchedulingContextStatus" = {
        properties = {
            resourceClaims = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.resource.v1alpha2.ResourceClaimSchedulingStatus" = {
        properties = {
            unsuitableNodes = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.api.resource.v1alpha2.ResourceClaimStatus" = {
        properties = {
            reservedFor = {
                "x-kubernetes-list-map-keys" = [
                    "uid"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.storage.v1.CSIDriverSpec" = {
        properties = {
            tokenRequests = {
                "x-kubernetes-list-type" = "atomic"
            }
            volumeLifecycleModes = {
                "x-kubernetes-list-type" = "set"
            }
        }
    }
    "io.k8s.api.storage.v1.CSINodeSpec" = {
        properties = {
            drivers = {
                "x-kubernetes-patch-merge-key" = "name"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.api.storage.v1.CSIStorageCapacityList" = {
        properties = {
            items = {
                "x-kubernetes-list-map-keys" = [
                    "name"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.api.storage.v1.StorageClass" = {
        properties = {
            allowedTopologies = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
            }
        }
    }
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps" = {
        properties = {
            "x-kubernetes-list-map-keys" = {
            }
            "x-kubernetes-list-type" = {
            }
            "x-kubernetes-validations" = {
                "x-kubernetes-list-map-keys" = [
                    "rule"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "rule"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta" = {
        properties = {
            finalizers = {
                "x-kubernetes-patch-strategy" = "merge"
            }
            ownerReferences = {
                "x-kubernetes-patch-merge-key" = "uid"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec" = {
        properties = {
            caBundle = {
                "x-kubernetes-list-type" = "atomic"
            }
        }
    }
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus" = {
        properties = {
            conditions = {
                "x-kubernetes-list-map-keys" = [
                    "type"
                ]
                "x-kubernetes-list-type" = "map"
                "x-kubernetes-patch-merge-key" = "type"
                "x-kubernetes-patch-strategy" = "merge"
            }
        }
    }
}
