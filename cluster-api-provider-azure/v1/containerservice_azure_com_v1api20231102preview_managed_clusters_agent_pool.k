"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ManagedClustersAgentPool:
    """
    Generator information: - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2023-11-02-preview/managedClusters.json - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}

    Attributes
    ----------
    apiVersion : str, default is "containerservice.azure.com/v1api20231102preview", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagedClustersAgentPool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpec, default is Undefined, optional
        spec
    status : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "containerservice.azure.com/v1api20231102preview" = "containerservice.azure.com/v1api20231102preview"

    kind: "ManagedClustersAgentPool" = "ManagedClustersAgentPool"

    metadata?: v1.ObjectMeta

    spec?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpec

    status?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatus


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpec:
    """
    containerservice azure com v1api20231102preview managed clusters agent pool spec

    Attributes
    ----------
    artifactStreamingProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecArtifactStreamingProfile, default is Undefined, optional
        artifact streaming profile
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    azureName : str, default is Undefined, optional
        AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn't have to be.
    capacityReservationGroupReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCapacityReservationGroupReference, default is Undefined, optional
        capacity reservation group reference
    count : int, default is Undefined, optional
        Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
    creationData : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCreationData, default is Undefined, optional
        creation data
    enableAutoScaling : bool, default is Undefined, optional
        EnableAutoScaling: Whether to enable auto-scaler
    enableCustomCATrust : bool, default is Undefined, optional
        EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false.
    enableEncryptionAtHost : bool, default is Undefined, optional
        EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
    enableFIPS : bool, default is Undefined, optional
        EnableFIPS: See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
    enableNodePublicIP : bool, default is Undefined, optional
        EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
    enableUltraSSD : bool, default is Undefined, optional
        EnableUltraSSD: Whether to enable UltraSSD
    gpuInstanceProfile : str, default is Undefined, optional
        GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
    gpuProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecGpuProfile, default is Undefined, optional
        gpu profile
    hostGroupReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecHostGroupReference, default is Undefined, optional
        host group reference
    kubeletConfig : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecKubeletConfig, default is Undefined, optional
        kubelet config
    kubeletDiskType : str, default is Undefined, optional
        KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
    linuxOSConfig : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecLinuxOSConfig, default is Undefined, optional
        linux o s config
    maxCount : int, default is Undefined, optional
        MaxCount: The maximum number of nodes for auto-scaling
    maxPods : int, default is Undefined, optional
        MaxPods: The maximum number of pods that can run on a node.
    messageOfTheDay : str, default is Undefined, optional
        MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
    minCount : int, default is Undefined, optional
        MinCount: The minimum number of nodes for auto-scaling
    mode : str, default is Undefined, optional
        Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
    networkProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfile, default is Undefined, optional
        network profile
    nodeInitializationTaints : [str], default is Undefined, optional
        NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`
    nodeLabels : {str:str}, default is Undefined, optional
        NodeLabels: The node labels to be persisted across all nodes in agent pool.
    nodePublicIPPrefixReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNodePublicIPPrefixReference, default is Undefined, optional
        node public IP prefix reference
    nodeTaints : [str], default is Undefined, optional
        NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
    orchestratorVersion : str, default is Undefined, optional
        OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
    osDiskSizeGB : int, default is Undefined, optional
        os disk size g b
    osDiskType : str, default is Undefined, optional
        OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
    osSKU : str, default is Undefined, optional
        OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
    osType : str, default is Undefined, optional
        OsType: The operating system type. The default is Linux.
    owner : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecOwner, default is Undefined, required
        owner
    podSubnetReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecPodSubnetReference, default is Undefined, optional
        pod subnet reference
    powerState : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecPowerState, default is Undefined, optional
        power state
    proximityPlacementGroupReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecProximityPlacementGroupReference, default is Undefined, optional
        proximity placement group reference
    scaleDownMode : str, default is Undefined, optional
        ScaleDownMode: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
    scaleSetEvictionPolicy : str, default is Undefined, optional
        ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
    scaleSetPriority : str, default is Undefined, optional
        ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
    securityProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecSecurityProfile, default is Undefined, optional
        security profile
    spotMaxPrice : float, default is Undefined, optional
        SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
    tags : {str:str}, default is Undefined, optional
        Tags: The tags to be persisted on the agent pool virtual machine scale set.
    $type : str, default is Undefined, optional
        Type: The type of Agent Pool.
    upgradeSettings : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecUpgradeSettings, default is Undefined, optional
        upgrade settings
    virtualMachineNodesStatus : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachineNodesStatusItems0], default is Undefined, optional
        virtual machine nodes status
    virtualMachinesProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfile, default is Undefined, optional
        virtual machines profile
    vmSize : str, default is Undefined, optional
        VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
    vnetSubnetReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVnetSubnetReference, default is Undefined, optional
        vnet subnet reference
    windowsProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecWindowsProfile, default is Undefined, optional
        windows profile
    workloadRuntime : str, default is Undefined, optional
        WorkloadRuntime: Determines the type of workload a node can run.
    """


    artifactStreamingProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecArtifactStreamingProfile

    availabilityZones?: [str]

    azureName?: str

    capacityReservationGroupReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCapacityReservationGroupReference

    count?: int

    creationData?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCreationData

    enableAutoScaling?: bool

    enableCustomCATrust?: bool

    enableEncryptionAtHost?: bool

    enableFIPS?: bool

    enableNodePublicIP?: bool

    enableUltraSSD?: bool

    gpuInstanceProfile?: "MIG1g" | "MIG2g" | "MIG3g" | "MIG4g" | "MIG7g"

    gpuProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecGpuProfile

    hostGroupReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecHostGroupReference

    kubeletConfig?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecKubeletConfig

    kubeletDiskType?: "OS" | "Temporary"

    linuxOSConfig?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecLinuxOSConfig

    maxCount?: int

    maxPods?: int

    messageOfTheDay?: str

    minCount?: int

    mode?: "System" | "User"

    networkProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfile

    nodeInitializationTaints?: [str]

    nodeLabels?: {str:str}

    nodePublicIPPrefixReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNodePublicIPPrefixReference

    nodeTaints?: [str]

    orchestratorVersion?: str

    osDiskSizeGB?: int

    osDiskType?: "Ephemeral" | "Managed"

    osSKU?: "AzureLinux" | "CBLMariner" | "Mariner" | "Ubuntu" | "Windows2019" | "Windows2022" | "WindowsAnnual"

    osType?: "Linux" | "Windows"

    owner: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecOwner

    podSubnetReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecPodSubnetReference

    powerState?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecPowerState

    proximityPlacementGroupReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecProximityPlacementGroupReference

    scaleDownMode?: "Deallocate" | "Delete"

    scaleSetEvictionPolicy?: "Deallocate" | "Delete"

    scaleSetPriority?: "Regular" | "Spot"

    securityProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecSecurityProfile

    spotMaxPrice?: float

    tags?: {str:str}

    $type?: "AvailabilitySet" | "VirtualMachineScaleSets" | "VirtualMachines"

    upgradeSettings?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecUpgradeSettings

    virtualMachineNodesStatus?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachineNodesStatusItems0]

    virtualMachinesProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfile

    vmSize?: str

    vnetSubnetReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVnetSubnetReference

    windowsProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecWindowsProfile

    workloadRuntime?: "KataMshvVmIsolation" | "OCIContainer" | "WasmWasi"


    check:
        len(azureName) <= 12
        len(azureName) >= 1
        _regex_match(str(azureName), r"^[a-z][a-z0-9]{0,11}$") if azureName
        osDiskSizeGB <= 2048
        osDiskSizeGB >= 0


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecArtifactStreamingProfile:
    """
    ArtifactStreamingProfile: Configuration for using artifact streaming on AKS.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled: Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false.
    """


    enabled?: bool


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCapacityReservationGroupReference:
    """
    CapacityReservationGroupReference: AKS will associate the specified agent pool with the Capacity Reservation Group.

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCreationData:
    """
    CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.

    Attributes
    ----------
    sourceResourceReference : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCreationDataSourceResourceReference, default is Undefined, optional
        source resource reference
    """


    sourceResourceReference?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCreationDataSourceResourceReference


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecCreationDataSourceResourceReference:
    """
    SourceResourceReference: This is the ARM ID of the source object to be used to create the target object.

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecGpuProfile:
    """
    GpuProfile: The GPU settings of an agent pool.

    Attributes
    ----------
    installGPUDriver : bool, default is Undefined, optional
        InstallGPUDriver: The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.
    """


    installGPUDriver?: bool


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecHostGroupReference:
    """
    HostGroupReference: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecKubeletConfig:
    """
    KubeletConfig: The Kubelet configuration on the agent pool nodes.

    Attributes
    ----------
    allowedUnsafeSysctls : [str], default is Undefined, optional
        AllowedUnsafeSysctls: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
    containerLogMaxFiles : int, default is Undefined, optional
        ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be ≥ 2.
    containerLogMaxSizeMB : int, default is Undefined, optional
        ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi) of container log file before it is rotated.
    cpuCfsQuota : bool, default is Undefined, optional
        CpuCfsQuota: The default is true.
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
    cpuManagerPolicy : str, default is Undefined, optional
        CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
    failSwapOn : bool, default is Undefined, optional
        FailSwapOn: If set to true it will make the Kubelet fail to start if swap is enabled on the node.
    imageGcHighThreshold : int, default is Undefined, optional
        ImageGcHighThreshold: To disable image garbage collection, set to 100. The default is 85%
    imageGcLowThreshold : int, default is Undefined, optional
        ImageGcLowThreshold: This cannot be set higher than imageGcHighThreshold. The default is 80%
    podMaxPids : int, default is Undefined, optional
        PodMaxPids: The maximum number of processes per pod.
    topologyManagerPolicy : str, default is Undefined, optional
        TopologyManagerPolicy: For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
    """


    allowedUnsafeSysctls?: [str]

    containerLogMaxFiles?: int

    containerLogMaxSizeMB?: int

    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    failSwapOn?: bool

    imageGcHighThreshold?: int

    imageGcLowThreshold?: int

    podMaxPids?: int

    topologyManagerPolicy?: str


    check:
        containerLogMaxFiles >= 2


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecLinuxOSConfig:
    """
    LinuxOSConfig: The OS configuration of Linux agent nodes.

    Attributes
    ----------
    swapFileSizeMB : int, default is Undefined, optional
        SwapFileSizeMB: The size in MB of a swap file that will be created on each node.
    sysctls : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecLinuxOSConfigSysctls, default is Undefined, optional
        sysctls
    transparentHugePageDefrag : str, default is Undefined, optional
        TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
    transparentHugePageEnabled : str, default is Undefined, optional
        TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
    """


    swapFileSizeMB?: int

    sysctls?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecLinuxOSConfigSysctls

    transparentHugePageDefrag?: str

    transparentHugePageEnabled?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecLinuxOSConfigSysctls:
    """
    Sysctls: Sysctl settings for Linux agent nodes.

    Attributes
    ----------
    fsAioMaxNr : int, default is Undefined, optional
        FsAioMaxNr: Sysctl setting fs.aio-max-nr.
    fsFileMax : int, default is Undefined, optional
        FsFileMax: Sysctl setting fs.file-max.
    fsInotifyMaxUserWatches : int, default is Undefined, optional
        FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.
    fsNrOpen : int, default is Undefined, optional
        FsNrOpen: Sysctl setting fs.nr_open.
    kernelThreadsMax : int, default is Undefined, optional
        KernelThreadsMax: Sysctl setting kernel.threads-max.
    netCoreNetdevMaxBacklog : int, default is Undefined, optional
        NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.
    netCoreOptmemMax : int, default is Undefined, optional
        NetCoreOptmemMax: Sysctl setting net.core.optmem_max.
    netCoreRmemDefault : int, default is Undefined, optional
        NetCoreRmemDefault: Sysctl setting net.core.rmem_default.
    netCoreRmemMax : int, default is Undefined, optional
        NetCoreRmemMax: Sysctl setting net.core.rmem_max.
    netCoreSomaxconn : int, default is Undefined, optional
        NetCoreSomaxconn: Sysctl setting net.core.somaxconn.
    netCoreWmemDefault : int, default is Undefined, optional
        NetCoreWmemDefault: Sysctl setting net.core.wmem_default.
    netCoreWmemMax : int, default is Undefined, optional
        NetCoreWmemMax: Sysctl setting net.core.wmem_max.
    netIpv4IpLocalPortRange : str, default is Undefined, optional
        NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.
    netIpv4NeighDefaultGcThresh1 : int, default is Undefined, optional
        NetIpv4NeighDefaultGcThresh1: Sysctl setting net.ipv4.neigh.default.gc_thresh1.
    netIpv4NeighDefaultGcThresh2 : int, default is Undefined, optional
        NetIpv4NeighDefaultGcThresh2: Sysctl setting net.ipv4.neigh.default.gc_thresh2.
    netIpv4NeighDefaultGcThresh3 : int, default is Undefined, optional
        NetIpv4NeighDefaultGcThresh3: Sysctl setting net.ipv4.neigh.default.gc_thresh3.
    netIpv4TcpFinTimeout : int, default is Undefined, optional
        NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.
    netIpv4TcpKeepaliveProbes : int, default is Undefined, optional
        NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.
    netIpv4TcpKeepaliveTime : int, default is Undefined, optional
        NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.
    netIpv4TcpMaxSynBacklog : int, default is Undefined, optional
        NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.
    netIpv4TcpMaxTwBuckets : int, default is Undefined, optional
        NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.
    netIpv4TcpTwReuse : bool, default is Undefined, optional
        NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.
    netIpv4TcpkeepaliveIntvl : int, default is Undefined, optional
        NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.
    netNetfilterNfConntrackBuckets : int, default is Undefined, optional
        NetNetfilterNfConntrackBuckets: Sysctl setting net.netfilter.nf_conntrack_buckets.
    netNetfilterNfConntrackMax : int, default is Undefined, optional
        NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.
    vmMaxMapCount : int, default is Undefined, optional
        VmMaxMapCount: Sysctl setting vm.max_map_count.
    vmSwappiness : int, default is Undefined, optional
        VmSwappiness: Sysctl setting vm.swappiness.
    vmVfsCachePressure : int, default is Undefined, optional
        VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.
    """


    fsAioMaxNr?: int

    fsFileMax?: int

    fsInotifyMaxUserWatches?: int

    fsNrOpen?: int

    kernelThreadsMax?: int

    netCoreNetdevMaxBacklog?: int

    netCoreOptmemMax?: int

    netCoreRmemDefault?: int

    netCoreRmemMax?: int

    netCoreSomaxconn?: int

    netCoreWmemDefault?: int

    netCoreWmemMax?: int

    netIpv4IpLocalPortRange?: str

    netIpv4NeighDefaultGcThresh1?: int

    netIpv4NeighDefaultGcThresh2?: int

    netIpv4NeighDefaultGcThresh3?: int

    netIpv4TcpFinTimeout?: int

    netIpv4TcpKeepaliveProbes?: int

    netIpv4TcpKeepaliveTime?: int

    netIpv4TcpMaxSynBacklog?: int

    netIpv4TcpMaxTwBuckets?: int

    netIpv4TcpTwReuse?: bool

    netIpv4TcpkeepaliveIntvl?: int

    netNetfilterNfConntrackBuckets?: int

    netNetfilterNfConntrackMax?: int

    vmMaxMapCount?: int

    vmSwappiness?: int

    vmVfsCachePressure?: int


    check:
        netIpv4TcpkeepaliveIntvl <= 90
        netIpv4TcpkeepaliveIntvl >= 10
        netNetfilterNfConntrackBuckets <= 524288
        netNetfilterNfConntrackBuckets >= 65536
        netNetfilterNfConntrackMax <= 2.097152e+06
        netNetfilterNfConntrackMax >= 131072


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfile:
    """
    NetworkProfile: Network-related settings of an agent pool.

    Attributes
    ----------
    allowedHostPorts : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileAllowedHostPortsItems0], default is Undefined, optional
        AllowedHostPorts: The port ranges that are allowed to access. The specified ranges are allowed to overlap.
    applicationSecurityGroupsReferences : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileApplicationSecurityGroupsReferencesItems0], default is Undefined, optional
        ApplicationSecurityGroupsReferences: The IDs of the application security groups which agent pool will associate when created.
    nodePublicIPTags : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileNodePublicIPTagsItems0], default is Undefined, optional
        NodePublicIPTags: IPTags of instance-level public IPs.
    """


    allowedHostPorts?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileAllowedHostPortsItems0]

    applicationSecurityGroupsReferences?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileApplicationSecurityGroupsReferencesItems0]

    nodePublicIPTags?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileNodePublicIPTagsItems0]


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileAllowedHostPortsItems0:
    """
    The port range.

    Attributes
    ----------
    portEnd : int, default is Undefined, optional
        PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or equal to portStart.
    portStart : int, default is Undefined, optional
        PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or equal to portEnd.
    $protocol : str, default is Undefined, optional
        Protocol: The network protocol of the port.
    """


    portEnd?: int

    portStart?: int

    $protocol?: "TCP" | "UDP"


    check:
        portEnd <= 65535
        portEnd >= 1
        portStart <= 65535
        portStart >= 1


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileApplicationSecurityGroupsReferencesItems0:
    """
    ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNetworkProfileNodePublicIPTagsItems0:
    """
    Contains the IPTag associated with the object.

    Attributes
    ----------
    ipTagType : str, default is Undefined, optional
        IpTagType: The IP tag type. Example: RoutingPreference.
    tag : str, default is Undefined, optional
        Tag: The value of the IP tag associated with the public IP. Example: Internet.
    """


    ipTagType?: str

    tag?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecNodePublicIPPrefixReference:
    """
    NodePublicIPPrefixReference: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecOwner:
    """
    Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a reference to a containerservice.azure.com/ManagedCluster resource

    Attributes
    ----------
    armId : str, default is Undefined, optional
        arm Id
    name : str, default is Undefined, optional
        This is the name of the Kubernetes resource to reference.
    """


    armId?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecPodSubnetReference:
    """
    PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecPowerState:
    """
    PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded

    Attributes
    ----------
    code : str, default is Undefined, optional
        Code: Tells whether the cluster is Running or Stopped
    """


    code?: "Running" | "Stopped"


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecProximityPlacementGroupReference:
    """
    ProximityPlacementGroupReference: The ID for Proximity Placement Group.

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecSecurityProfile:
    """
    SecurityProfile: The security settings of an agent pool.

    Attributes
    ----------
    enableSecureBoot : bool, default is Undefined, optional
        EnableSecureBoot: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
    enableVTPM : bool, default is Undefined, optional
        EnableVTPM: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
    sshAccess : str, default is Undefined, optional
        SshAccess: SSH access method of an agent pool.
    """


    enableSecureBoot?: bool

    enableVTPM?: bool

    sshAccess?: "Disabled" | "LocalUser"


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecUpgradeSettings:
    """
    UpgradeSettings: Settings for upgrading the agentpool

    Attributes
    ----------
    drainTimeoutInMinutes : int, default is Undefined, optional
        DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes.
    maxSurge : str, default is Undefined, optional
        MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
    nodeSoakDurationInMinutes : int, default is Undefined, optional
        NodeSoakDurationInMinutes: The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes.
    """


    drainTimeoutInMinutes?: int

    maxSurge?: str

    nodeSoakDurationInMinutes?: int


    check:
        drainTimeoutInMinutes <= 1440
        drainTimeoutInMinutes >= 1
        nodeSoakDurationInMinutes <= 30
        nodeSoakDurationInMinutes >= 0


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachineNodesStatusItems0:
    """
    Current status on a group of nodes of the same vm size.

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count: Number of nodes.
    size : str, default is Undefined, optional
        Size: The VM size of the agents used to host this group of nodes.
    """


    count?: int

    size?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfile:
    """
    VirtualMachinesProfile: Specifications on VirtualMachines agent pool.

    Attributes
    ----------
    scale : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfileScale, default is Undefined, optional
        scale
    """


    scale?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfileScale


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfileScale:
    """
    Scale: Specifications on how to scale a VirtualMachines agent pool.

    Attributes
    ----------
    manual : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfileScaleManualItems0], default is Undefined, optional
        Manual: Specifications on how to scale the VirtualMachines agent pool to a fixed size.
    """


    manual?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfileScaleManualItems0]


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVirtualMachinesProfileScaleManualItems0:
    """
    Specifications on number of machines.

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count: Number of nodes.
    sizes : [str], default is Undefined, optional
        Sizes: The list of allowed vm sizes. AKS will use the first available one when scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size.
    """


    count?: int

    sizes?: [str]


    check:
        count <= 1000
        count >= 0


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecVnetSubnetReference:
    """
    VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}

    Attributes
    ----------
    armId : str, default is Undefined, optional
        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level ARMID is mutually exclusive with Group, Kind, Namespace and Name.
    group : str, default is Undefined, optional
        Group is the Kubernetes group of the resource.
    kind : str, default is Undefined, optional
        Kind is the Kubernetes kind of the resource.
    name : str, default is Undefined, optional
        Name is the Kubernetes name of the resource.
    """


    armId?: str

    group?: str

    kind?: str

    name?: str


    check:
        _regex_match(str(armId), r"(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)") if armId


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolSpecWindowsProfile:
    """
    WindowsProfile: The Windows agent pool's specific profile.

    Attributes
    ----------
    disableOutboundNat : bool, default is Undefined, optional
        DisableOutboundNat: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows agent pool does not have node public IP enabled.
    """


    disableOutboundNat?: bool


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatus:
    """
    containerservice azure com v1api20231102preview managed clusters agent pool status

    Attributes
    ----------
    artifactStreamingProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusArtifactStreamingProfile, default is Undefined, optional
        artifact streaming profile
    availabilityZones : [str], default is Undefined, optional
        AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    capacityReservationGroupID : str, default is Undefined, optional
        CapacityReservationGroupID: AKS will associate the specified agent pool with the Capacity Reservation Group.
    conditions : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusConditionsItems0], default is Undefined, optional
        Conditions: The observed state of the resource
    count : int, default is Undefined, optional
        Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
    creationData : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusCreationData, default is Undefined, optional
        creation data
    currentOrchestratorVersion : str, default is Undefined, optional
        CurrentOrchestratorVersion: If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch> version being used.
    enableAutoScaling : bool, default is Undefined, optional
        EnableAutoScaling: Whether to enable auto-scaler
    enableCustomCATrust : bool, default is Undefined, optional
        EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded certificates into node trust stores. Defaults to false.
    enableEncryptionAtHost : bool, default is Undefined, optional
        EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption
    enableFIPS : bool, default is Undefined, optional
        EnableFIPS: See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.
    enableNodePublicIP : bool, default is Undefined, optional
        EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.
    enableUltraSSD : bool, default is Undefined, optional
        EnableUltraSSD: Whether to enable UltraSSD
    gpuInstanceProfile : str, default is Undefined, optional
        GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.
    gpuProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusGpuProfile, default is Undefined, optional
        gpu profile
    hostGroupID : str, default is Undefined, optional
        HostGroupID: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
    id : str, default is Undefined, optional
        Id: Resource ID.
    kubeletConfig : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusKubeletConfig, default is Undefined, optional
        kubelet config
    kubeletDiskType : str, default is Undefined, optional
        KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.
    linuxOSConfig : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusLinuxOSConfig, default is Undefined, optional
        linux o s config
    maxCount : int, default is Undefined, optional
        MaxCount: The maximum number of nodes for auto-scaling
    maxPods : int, default is Undefined, optional
        MaxPods: The maximum number of pods that can run on a node.
    messageOfTheDay : str, default is Undefined, optional
        MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).
    minCount : int, default is Undefined, optional
        MinCount: The minimum number of nodes for auto-scaling
    mode : str, default is Undefined, optional
        Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
    name : str, default is Undefined, optional
        Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.
    networkProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfile, default is Undefined, optional
        network profile
    nodeImageVersion : str, default is Undefined, optional
        NodeImageVersion: The version of node image
    nodeInitializationTaints : [str], default is Undefined, optional
        NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint nodes node1 key1=value1:NoSchedule-`
    nodeLabels : {str:str}, default is Undefined, optional
        NodeLabels: The node labels to be persisted across all nodes in agent pool.
    nodePublicIPPrefixID : str, default is Undefined, optional
        NodePublicIPPrefixID: This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
    nodeTaints : [str], default is Undefined, optional
        NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.
    orchestratorVersion : str, default is Undefined, optional
        OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
    osDiskSizeGB : int, default is Undefined, optional
        os disk size g b
    osDiskType : str, default is Undefined, optional
        OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
    osSKU : str, default is Undefined, optional
        OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is deprecated.
    osType : str, default is Undefined, optional
        OsType: The operating system type. The default is Linux.
    podSubnetID : str, default is Undefined, optional
        PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
    powerState : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusPowerState, default is Undefined, optional
        power state
    properties_type : str, default is Undefined, optional
        PropertiesType: The type of Agent Pool.
    provisioningState : str, default is Undefined, optional
        ProvisioningState: The current deployment or provisioning state.
    proximityPlacementGroupID : str, default is Undefined, optional
        ProximityPlacementGroupID: The ID for Proximity Placement Group.
    scaleDownMode : str, default is Undefined, optional
        ScaleDownMode: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.
    scaleSetEvictionPolicy : str, default is Undefined, optional
        ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.
    scaleSetPriority : str, default is Undefined, optional
        ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.
    securityProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusSecurityProfile, default is Undefined, optional
        security profile
    spotMaxPrice : float, default is Undefined, optional
        SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
    tags : {str:str}, default is Undefined, optional
        Tags: The tags to be persisted on the agent pool virtual machine scale set.
    $type : str, default is Undefined, optional
        Type: Resource type
    upgradeSettings : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusUpgradeSettings, default is Undefined, optional
        upgrade settings
    virtualMachineNodesStatus : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachineNodesStatusItems0], default is Undefined, optional
        virtual machine nodes status
    virtualMachinesProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfile, default is Undefined, optional
        virtual machines profile
    vmSize : str, default is Undefined, optional
        VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions
    vnetSubnetID : str, default is Undefined, optional
        VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
    windowsProfile : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusWindowsProfile, default is Undefined, optional
        windows profile
    workloadRuntime : str, default is Undefined, optional
        WorkloadRuntime: Determines the type of workload a node can run.
    """


    artifactStreamingProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusArtifactStreamingProfile

    availabilityZones?: [str]

    capacityReservationGroupID?: str

    conditions?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusConditionsItems0]

    count?: int

    creationData?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusCreationData

    currentOrchestratorVersion?: str

    enableAutoScaling?: bool

    enableCustomCATrust?: bool

    enableEncryptionAtHost?: bool

    enableFIPS?: bool

    enableNodePublicIP?: bool

    enableUltraSSD?: bool

    gpuInstanceProfile?: str

    gpuProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusGpuProfile

    hostGroupID?: str

    id?: str

    kubeletConfig?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusKubeletConfig

    kubeletDiskType?: str

    linuxOSConfig?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusLinuxOSConfig

    maxCount?: int

    maxPods?: int

    messageOfTheDay?: str

    minCount?: int

    mode?: str

    name?: str

    networkProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfile

    nodeImageVersion?: str

    nodeInitializationTaints?: [str]

    nodeLabels?: {str:str}

    nodePublicIPPrefixID?: str

    nodeTaints?: [str]

    orchestratorVersion?: str

    osDiskSizeGB?: int

    osDiskType?: str

    osSKU?: str

    osType?: str

    podSubnetID?: str

    powerState?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusPowerState

    properties_type?: str

    provisioningState?: str

    proximityPlacementGroupID?: str

    scaleDownMode?: str

    scaleSetEvictionPolicy?: str

    scaleSetPriority?: str

    securityProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusSecurityProfile

    spotMaxPrice?: float

    tags?: {str:str}

    $type?: str

    upgradeSettings?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusUpgradeSettings

    virtualMachineNodesStatus?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachineNodesStatusItems0]

    virtualMachinesProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfile

    vmSize?: str

    vnetSubnetID?: str

    windowsProfile?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusWindowsProfile

    workloadRuntime?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusArtifactStreamingProfile:
    """
    ArtifactStreamingProfile: Configuration for using artifact streaming on AKS.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled: Artifact streaming speeds up the cold-start of containers on a node through on-demand image loading. To use this feature, container images must also enable artifact streaming on ACR. If not specified, the default is false.
    """


    enabled?: bool


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusConditionsItems0:
    """
    Condition defines an extension to status (an observation) of a resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Message is a human readable message indicating details about the transition. This field may be empty.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
    severity : str, default is Undefined, optional
        Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown
    status : str, default is Undefined, required
        Status of the condition, one of True, False, or Unknown.
    $type : str, default is Undefined, required
        Type of condition.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    severity?: str

    status: str

    $type: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusCreationData:
    """
    CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.

    Attributes
    ----------
    sourceResourceId : str, default is Undefined, optional
        SourceResourceId: This is the ARM ID of the source object to be used to create the target object.
    """


    sourceResourceId?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusGpuProfile:
    """
    GpuProfile: The GPU settings of an agent pool.

    Attributes
    ----------
    installGPUDriver : bool, default is Undefined, optional
        InstallGPUDriver: The default value is true when the vmSize of the agent pool contains a GPU, false otherwise. GPU Driver Installation can only be set true when VM has an associated GPU resource. Setting this field to false prevents automatic GPU driver installation. In that case, in order for the GPU to be usable, the user must perform GPU driver installation themselves.
    """


    installGPUDriver?: bool


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusKubeletConfig:
    """
    KubeletConfig: The Kubelet configuration on the agent pool nodes.

    Attributes
    ----------
    allowedUnsafeSysctls : [str], default is Undefined, optional
        AllowedUnsafeSysctls: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).
    containerLogMaxFiles : int, default is Undefined, optional
        ContainerLogMaxFiles: The maximum number of container log files that can be present for a container. The number must be ≥ 2.
    containerLogMaxSizeMB : int, default is Undefined, optional
        ContainerLogMaxSizeMB: The maximum size (e.g. 10Mi) of container log file before it is rotated.
    cpuCfsQuota : bool, default is Undefined, optional
        CpuCfsQuota: The default is true.
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        CpuCfsQuotaPeriod: The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.
    cpuManagerPolicy : str, default is Undefined, optional
        CpuManagerPolicy: The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.
    failSwapOn : bool, default is Undefined, optional
        FailSwapOn: If set to true it will make the Kubelet fail to start if swap is enabled on the node.
    imageGcHighThreshold : int, default is Undefined, optional
        ImageGcHighThreshold: To disable image garbage collection, set to 100. The default is 85%
    imageGcLowThreshold : int, default is Undefined, optional
        ImageGcLowThreshold: This cannot be set higher than imageGcHighThreshold. The default is 80%
    podMaxPids : int, default is Undefined, optional
        PodMaxPids: The maximum number of processes per pod.
    topologyManagerPolicy : str, default is Undefined, optional
        TopologyManagerPolicy: For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.
    """


    allowedUnsafeSysctls?: [str]

    containerLogMaxFiles?: int

    containerLogMaxSizeMB?: int

    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy?: str

    failSwapOn?: bool

    imageGcHighThreshold?: int

    imageGcLowThreshold?: int

    podMaxPids?: int

    topologyManagerPolicy?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusLinuxOSConfig:
    """
    LinuxOSConfig: The OS configuration of Linux agent nodes.

    Attributes
    ----------
    swapFileSizeMB : int, default is Undefined, optional
        SwapFileSizeMB: The size in MB of a swap file that will be created on each node.
    sysctls : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusLinuxOSConfigSysctls, default is Undefined, optional
        sysctls
    transparentHugePageDefrag : str, default is Undefined, optional
        TransparentHugePageDefrag: Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
    transparentHugePageEnabled : str, default is Undefined, optional
        TransparentHugePageEnabled: Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).
    """


    swapFileSizeMB?: int

    sysctls?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusLinuxOSConfigSysctls

    transparentHugePageDefrag?: str

    transparentHugePageEnabled?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusLinuxOSConfigSysctls:
    """
    Sysctls: Sysctl settings for Linux agent nodes.

    Attributes
    ----------
    fsAioMaxNr : int, default is Undefined, optional
        FsAioMaxNr: Sysctl setting fs.aio-max-nr.
    fsFileMax : int, default is Undefined, optional
        FsFileMax: Sysctl setting fs.file-max.
    fsInotifyMaxUserWatches : int, default is Undefined, optional
        FsInotifyMaxUserWatches: Sysctl setting fs.inotify.max_user_watches.
    fsNrOpen : int, default is Undefined, optional
        FsNrOpen: Sysctl setting fs.nr_open.
    kernelThreadsMax : int, default is Undefined, optional
        KernelThreadsMax: Sysctl setting kernel.threads-max.
    netCoreNetdevMaxBacklog : int, default is Undefined, optional
        NetCoreNetdevMaxBacklog: Sysctl setting net.core.netdev_max_backlog.
    netCoreOptmemMax : int, default is Undefined, optional
        NetCoreOptmemMax: Sysctl setting net.core.optmem_max.
    netCoreRmemDefault : int, default is Undefined, optional
        NetCoreRmemDefault: Sysctl setting net.core.rmem_default.
    netCoreRmemMax : int, default is Undefined, optional
        NetCoreRmemMax: Sysctl setting net.core.rmem_max.
    netCoreSomaxconn : int, default is Undefined, optional
        NetCoreSomaxconn: Sysctl setting net.core.somaxconn.
    netCoreWmemDefault : int, default is Undefined, optional
        NetCoreWmemDefault: Sysctl setting net.core.wmem_default.
    netCoreWmemMax : int, default is Undefined, optional
        NetCoreWmemMax: Sysctl setting net.core.wmem_max.
    netIpv4IpLocalPortRange : str, default is Undefined, optional
        NetIpv4IpLocalPortRange: Sysctl setting net.ipv4.ip_local_port_range.
    netIpv4NeighDefaultGcThresh1 : int, default is Undefined, optional
        NetIpv4NeighDefaultGcThresh1: Sysctl setting net.ipv4.neigh.default.gc_thresh1.
    netIpv4NeighDefaultGcThresh2 : int, default is Undefined, optional
        NetIpv4NeighDefaultGcThresh2: Sysctl setting net.ipv4.neigh.default.gc_thresh2.
    netIpv4NeighDefaultGcThresh3 : int, default is Undefined, optional
        NetIpv4NeighDefaultGcThresh3: Sysctl setting net.ipv4.neigh.default.gc_thresh3.
    netIpv4TcpFinTimeout : int, default is Undefined, optional
        NetIpv4TcpFinTimeout: Sysctl setting net.ipv4.tcp_fin_timeout.
    netIpv4TcpKeepaliveProbes : int, default is Undefined, optional
        NetIpv4TcpKeepaliveProbes: Sysctl setting net.ipv4.tcp_keepalive_probes.
    netIpv4TcpKeepaliveTime : int, default is Undefined, optional
        NetIpv4TcpKeepaliveTime: Sysctl setting net.ipv4.tcp_keepalive_time.
    netIpv4TcpMaxSynBacklog : int, default is Undefined, optional
        NetIpv4TcpMaxSynBacklog: Sysctl setting net.ipv4.tcp_max_syn_backlog.
    netIpv4TcpMaxTwBuckets : int, default is Undefined, optional
        NetIpv4TcpMaxTwBuckets: Sysctl setting net.ipv4.tcp_max_tw_buckets.
    netIpv4TcpTwReuse : bool, default is Undefined, optional
        NetIpv4TcpTwReuse: Sysctl setting net.ipv4.tcp_tw_reuse.
    netIpv4TcpkeepaliveIntvl : int, default is Undefined, optional
        NetIpv4TcpkeepaliveIntvl: Sysctl setting net.ipv4.tcp_keepalive_intvl.
    netNetfilterNfConntrackBuckets : int, default is Undefined, optional
        NetNetfilterNfConntrackBuckets: Sysctl setting net.netfilter.nf_conntrack_buckets.
    netNetfilterNfConntrackMax : int, default is Undefined, optional
        NetNetfilterNfConntrackMax: Sysctl setting net.netfilter.nf_conntrack_max.
    vmMaxMapCount : int, default is Undefined, optional
        VmMaxMapCount: Sysctl setting vm.max_map_count.
    vmSwappiness : int, default is Undefined, optional
        VmSwappiness: Sysctl setting vm.swappiness.
    vmVfsCachePressure : int, default is Undefined, optional
        VmVfsCachePressure: Sysctl setting vm.vfs_cache_pressure.
    """


    fsAioMaxNr?: int

    fsFileMax?: int

    fsInotifyMaxUserWatches?: int

    fsNrOpen?: int

    kernelThreadsMax?: int

    netCoreNetdevMaxBacklog?: int

    netCoreOptmemMax?: int

    netCoreRmemDefault?: int

    netCoreRmemMax?: int

    netCoreSomaxconn?: int

    netCoreWmemDefault?: int

    netCoreWmemMax?: int

    netIpv4IpLocalPortRange?: str

    netIpv4NeighDefaultGcThresh1?: int

    netIpv4NeighDefaultGcThresh2?: int

    netIpv4NeighDefaultGcThresh3?: int

    netIpv4TcpFinTimeout?: int

    netIpv4TcpKeepaliveProbes?: int

    netIpv4TcpKeepaliveTime?: int

    netIpv4TcpMaxSynBacklog?: int

    netIpv4TcpMaxTwBuckets?: int

    netIpv4TcpTwReuse?: bool

    netIpv4TcpkeepaliveIntvl?: int

    netNetfilterNfConntrackBuckets?: int

    netNetfilterNfConntrackMax?: int

    vmMaxMapCount?: int

    vmSwappiness?: int

    vmVfsCachePressure?: int


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfile:
    """
    NetworkProfile: Network-related settings of an agent pool.

    Attributes
    ----------
    allowedHostPorts : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfileAllowedHostPortsItems0], default is Undefined, optional
        AllowedHostPorts: The port ranges that are allowed to access. The specified ranges are allowed to overlap.
    applicationSecurityGroups : [str], default is Undefined, optional
        ApplicationSecurityGroups: The IDs of the application security groups which agent pool will associate when created.
    nodePublicIPTags : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfileNodePublicIPTagsItems0], default is Undefined, optional
        NodePublicIPTags: IPTags of instance-level public IPs.
    """


    allowedHostPorts?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfileAllowedHostPortsItems0]

    applicationSecurityGroups?: [str]

    nodePublicIPTags?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfileNodePublicIPTagsItems0]


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfileAllowedHostPortsItems0:
    """
    The port range.

    Attributes
    ----------
    portEnd : int, default is Undefined, optional
        PortEnd: The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or equal to portStart.
    portStart : int, default is Undefined, optional
        PortStart: The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or equal to portEnd.
    $protocol : str, default is Undefined, optional
        Protocol: The network protocol of the port.
    """


    portEnd?: int

    portStart?: int

    $protocol?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusNetworkProfileNodePublicIPTagsItems0:
    """
    Contains the IPTag associated with the object.

    Attributes
    ----------
    ipTagType : str, default is Undefined, optional
        IpTagType: The IP tag type. Example: RoutingPreference.
    tag : str, default is Undefined, optional
        Tag: The value of the IP tag associated with the public IP. Example: Internet.
    """


    ipTagType?: str

    tag?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusPowerState:
    """
    PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded

    Attributes
    ----------
    code : str, default is Undefined, optional
        Code: Tells whether the cluster is Running or Stopped
    """


    code?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusSecurityProfile:
    """
    SecurityProfile: The security settings of an agent pool.

    Attributes
    ----------
    enableSecureBoot : bool, default is Undefined, optional
        EnableSecureBoot: Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.
    enableVTPM : bool, default is Undefined, optional
        EnableVTPM: vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.
    sshAccess : str, default is Undefined, optional
        SshAccess: SSH access method of an agent pool.
    """


    enableSecureBoot?: bool

    enableVTPM?: bool

    sshAccess?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusUpgradeSettings:
    """
    UpgradeSettings: Settings for upgrading the agentpool

    Attributes
    ----------
    drainTimeoutInMinutes : int, default is Undefined, optional
        DrainTimeoutInMinutes: The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes.
    maxSurge : str, default is Undefined, optional
        MaxSurge: This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
    nodeSoakDurationInMinutes : int, default is Undefined, optional
        NodeSoakDurationInMinutes: The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes.
    """


    drainTimeoutInMinutes?: int

    maxSurge?: str

    nodeSoakDurationInMinutes?: int


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachineNodesStatusItems0:
    """
    Current status on a group of nodes of the same vm size.

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count: Number of nodes.
    size : str, default is Undefined, optional
        Size: The VM size of the agents used to host this group of nodes.
    """


    count?: int

    size?: str


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfile:
    """
    VirtualMachinesProfile: Specifications on VirtualMachines agent pool.

    Attributes
    ----------
    scale : ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfileScale, default is Undefined, optional
        scale
    """


    scale?: ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfileScale


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfileScale:
    """
    Scale: Specifications on how to scale a VirtualMachines agent pool.

    Attributes
    ----------
    manual : [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfileScaleManualItems0], default is Undefined, optional
        Manual: Specifications on how to scale the VirtualMachines agent pool to a fixed size.
    """


    manual?: [ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfileScaleManualItems0]


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusVirtualMachinesProfileScaleManualItems0:
    """
    Specifications on number of machines.

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count: Number of nodes.
    sizes : [str], default is Undefined, optional
        Sizes: The list of allowed vm sizes. AKS will use the first available one when scaling. If a VM size is unavailable (e.g. due to quota or regional capacity reasons), AKS will use the next size.
    """


    count?: int

    sizes?: [str]


schema ContainerserviceAzureComV1api20231102previewManagedClustersAgentPoolStatusWindowsProfile:
    """
    WindowsProfile: The Windows agent pool's specific profile.

    Attributes
    ----------
    disableOutboundNat : bool, default is Undefined, optional
        DisableOutboundNat: The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows agent pool does not have node public IP enabled.
    """


    disableOutboundNat?: bool


