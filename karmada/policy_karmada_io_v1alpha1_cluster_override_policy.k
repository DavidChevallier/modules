"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ClusterOverridePolicy:
    """
    ClusterOverridePolicy represents the cluster-wide policy that overrides a group of resources to one or more clusters.

    Attributes
    ----------
    apiVersion : str, default is "policy.karmada.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterOverridePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpec, default is Undefined, required
        spec
    """


    apiVersion: "policy.karmada.io/v1alpha1" = "policy.karmada.io/v1alpha1"

    kind: "ClusterOverridePolicy" = "ClusterOverridePolicy"

    metadata?: v1.ObjectMeta

    spec: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpec


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpec:
    """
    Spec represents the desired behavior of ClusterOverridePolicy.

    Attributes
    ----------
    overrideRules : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0], default is Undefined, optional
        OverrideRules defines a collection of override rules on target clusters.
    resourceSelectors : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0], default is Undefined, optional
        ResourceSelectors restricts resource types that this override policy applies to. nil means matching all resources.
    overriders : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverriders, default is Undefined, optional
        overriders
    targetCluster : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetCluster, default is Undefined, optional
        target cluster
    """


    overrideRules?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0]

    resourceSelectors?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0]

    overriders?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverriders

    targetCluster?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetCluster


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0:
    """
    RuleWithCluster defines the override rules on clusters.

    Attributes
    ----------
    overriders : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0Overriders, default is Undefined, required
        overriders
    targetCluster : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetCluster, default is Undefined, optional
        target cluster
    """


    overriders: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0Overriders

    targetCluster?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetCluster


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0Overriders:
    """
    Overriders represents the override rules that would apply on resources

    Attributes
    ----------
    annotationsOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersAnnotationsOverriderItems0], default is Undefined, optional
        AnnotationsOverrider represents the rules dedicated to handling workload annotations
    argsOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersArgsOverriderItems0], default is Undefined, optional
        ArgsOverrider represents the rules dedicated to handling container args
    commandOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersCommandOverriderItems0], default is Undefined, optional
        CommandOverrider represents the rules dedicated to handling container command
    imageOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersImageOverriderItems0], default is Undefined, optional
        ImageOverrider represents the rules dedicated to handling image overrides.
    labelsOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersLabelsOverriderItems0], default is Undefined, optional
        LabelsOverrider represents the rules dedicated to handling workload labels
    plaintext : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersPlaintextItems0], default is Undefined, optional
        Plaintext represents override rules defined with plaintext overriders.
    """


    annotationsOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersAnnotationsOverriderItems0]

    argsOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersArgsOverriderItems0]

    commandOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersCommandOverriderItems0]

    imageOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersImageOverriderItems0]

    labelsOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersLabelsOverriderItems0]

    plaintext?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersPlaintextItems0]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersAnnotationsOverriderItems0:
    """
    LabelAnnotationOverrider represents the rules dedicated to handling workload labels/annotations

    Attributes
    ----------
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the workload.
    value : {str:str}, default is Undefined, optional
        Value to be applied to annotations/labels of workload. Items in Value which will be appended after annotations/labels when Operator is 'add'. Items in Value which match in annotations/labels will be deleted when Operator is 'remove'. Items in Value which match in annotations/labels will be replaced when Operator is 'replace'.
    """


    operator: "add" | "remove" | "replace"

    value?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersArgsOverriderItems0:
    """
    CommandArgsOverrider represents the rules dedicated to handling command/args overrides.

    Attributes
    ----------
    containerName : str, default is Undefined, required
        The name of container
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the command/args.
    value : [str], default is Undefined, optional
        Value to be applied to command/args. Items in Value which will be appended after command/args when Operator is 'add'. Items in Value which match in command/args will be deleted when Operator is 'remove'. If Value is empty, then the command/args will remain the same.
    """


    containerName: str

    operator: "add" | "remove"

    value?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersCommandOverriderItems0:
    """
    CommandArgsOverrider represents the rules dedicated to handling command/args overrides.

    Attributes
    ----------
    containerName : str, default is Undefined, required
        The name of container
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the command/args.
    value : [str], default is Undefined, optional
        Value to be applied to command/args. Items in Value which will be appended after command/args when Operator is 'add'. Items in Value which match in command/args will be deleted when Operator is 'remove'. If Value is empty, then the command/args will remain the same.
    """


    containerName: str

    operator: "add" | "remove"

    value?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersImageOverriderItems0:
    """
    ImageOverrider represents the rules dedicated to handling image overrides.

    Attributes
    ----------
    component : str, default is Undefined, required
        Component is part of image name. Basically we presume an image can be made of '[registry/]repository[:tag]'. The registry could be: - registry.k8s.io - fictional.registry.example:10443 The repository could be: - kube-apiserver - fictional/nginx The tag cloud be: - latest - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the image.
    predicate : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersImageOverriderItems0Predicate, default is Undefined, optional
        predicate
    value : str, default is Undefined, optional
        Value to be applied to image. Must not be empty when operator is 'add' or 'replace'. Defaults to empty and ignored when operator is 'remove'.
    """


    component: "Registry" | "Repository" | "Tag"

    operator: "add" | "remove" | "replace"

    predicate?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersImageOverriderItems0Predicate

    value?: str


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersImageOverriderItems0Predicate:
    """
    Predicate filters images before applying the rule. 
     Defaults to nil, in that case, the system will automatically detect image fields if the resource type is Pod, ReplicaSet, Deployment, StatefulSet, DaemonSet or Job by following rule: - Pod: /spec/containers/<N>/image - ReplicaSet: /spec/template/spec/containers/<N>/image - Deployment: /spec/template/spec/containers/<N>/image - DaemonSet: /spec/template/spec/containers/<N>/image - StatefulSet: /spec/template/spec/containers/<N>/image - Job: /spec/template/spec/containers/<N>/image In addition, all images will be processed if the resource object has more than one container. 
     If not nil, only images matches the filters will be processed.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path indicates the path of target field
    """


    path: str


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersLabelsOverriderItems0:
    """
    LabelAnnotationOverrider represents the rules dedicated to handling workload labels/annotations

    Attributes
    ----------
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the workload.
    value : {str:str}, default is Undefined, optional
        Value to be applied to annotations/labels of workload. Items in Value which will be appended after annotations/labels when Operator is 'add'. Items in Value which match in annotations/labels will be deleted when Operator is 'remove'. Items in Value which match in annotations/labels will be replaced when Operator is 'replace'.
    """


    operator: "add" | "remove" | "replace"

    value?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0OverridersPlaintextItems0:
    """
    PlaintextOverrider is a simple overrider that overrides target fields according to path, operator and value.

    Attributes
    ----------
    operator : str, default is Undefined, required
        Operator indicates the operation on target field. Available operators are: add, replace and remove.
    path : str, default is Undefined, required
        Path indicates the path of target field
    value : any, default is Undefined, optional
        Value to be applied to target field. Must be empty when operator is Remove.
    """


    operator: "add" | "remove" | "replace"

    path: str

    value?: any


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetCluster:
    """
    TargetCluster defines restrictions on this override policy that only applies to resources propagated to the matching clusters. nil means matching all clusters.

    Attributes
    ----------
    clusterNames : [str], default is Undefined, optional
        ClusterNames is the list of clusters to be selected.
    exclude : [str], default is Undefined, optional
        ExcludedClusters is the list of clusters to be ignored.
    fieldSelector : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterFieldSelector, default is Undefined, optional
        field selector
    labelSelector : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterLabelSelector, default is Undefined, optional
        label selector
    """


    clusterNames?: [str]

    exclude?: [str]

    fieldSelector?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterFieldSelector

    labelSelector?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterLabelSelector


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterFieldSelector:
    """
    FieldSelector is a filter to select member clusters by fields. The key(field) of the match expression should be 'provider', 'region', or 'zone', and the operator of the match expression should be 'In' or 'NotIn'. If non-nil and non-empty, only the clusters match this filter will be selected.

    Attributes
    ----------
    matchExpressions : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterFieldSelectorMatchExpressionsItems0], default is Undefined, optional
        A list of field selector requirements.
    """


    matchExpressions?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterFieldSelectorMatchExpressionsItems0]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterFieldSelectorMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterLabelSelector:
    """
    LabelSelector is a filter to select member clusters by labels. If non-nil and non-empty, only the clusters match this filter will be selected.

    Attributes
    ----------
    matchExpressions : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverrideRulesItems0TargetClusterLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverriders:
    """
    Overriders represents the override rules that would apply on resources 
     Deprecated: This filed is deprecated in v1.0 and please use the OverrideRules instead.

    Attributes
    ----------
    annotationsOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersAnnotationsOverriderItems0], default is Undefined, optional
        AnnotationsOverrider represents the rules dedicated to handling workload annotations
    argsOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersArgsOverriderItems0], default is Undefined, optional
        ArgsOverrider represents the rules dedicated to handling container args
    commandOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersCommandOverriderItems0], default is Undefined, optional
        CommandOverrider represents the rules dedicated to handling container command
    imageOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersImageOverriderItems0], default is Undefined, optional
        ImageOverrider represents the rules dedicated to handling image overrides.
    labelsOverrider : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersLabelsOverriderItems0], default is Undefined, optional
        LabelsOverrider represents the rules dedicated to handling workload labels
    plaintext : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersPlaintextItems0], default is Undefined, optional
        Plaintext represents override rules defined with plaintext overriders.
    """


    annotationsOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersAnnotationsOverriderItems0]

    argsOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersArgsOverriderItems0]

    commandOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersCommandOverriderItems0]

    imageOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersImageOverriderItems0]

    labelsOverrider?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersLabelsOverriderItems0]

    plaintext?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersPlaintextItems0]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersAnnotationsOverriderItems0:
    """
    LabelAnnotationOverrider represents the rules dedicated to handling workload labels/annotations

    Attributes
    ----------
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the workload.
    value : {str:str}, default is Undefined, optional
        Value to be applied to annotations/labels of workload. Items in Value which will be appended after annotations/labels when Operator is 'add'. Items in Value which match in annotations/labels will be deleted when Operator is 'remove'. Items in Value which match in annotations/labels will be replaced when Operator is 'replace'.
    """


    operator: "add" | "remove" | "replace"

    value?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersArgsOverriderItems0:
    """
    CommandArgsOverrider represents the rules dedicated to handling command/args overrides.

    Attributes
    ----------
    containerName : str, default is Undefined, required
        The name of container
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the command/args.
    value : [str], default is Undefined, optional
        Value to be applied to command/args. Items in Value which will be appended after command/args when Operator is 'add'. Items in Value which match in command/args will be deleted when Operator is 'remove'. If Value is empty, then the command/args will remain the same.
    """


    containerName: str

    operator: "add" | "remove"

    value?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersCommandOverriderItems0:
    """
    CommandArgsOverrider represents the rules dedicated to handling command/args overrides.

    Attributes
    ----------
    containerName : str, default is Undefined, required
        The name of container
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the command/args.
    value : [str], default is Undefined, optional
        Value to be applied to command/args. Items in Value which will be appended after command/args when Operator is 'add'. Items in Value which match in command/args will be deleted when Operator is 'remove'. If Value is empty, then the command/args will remain the same.
    """


    containerName: str

    operator: "add" | "remove"

    value?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersImageOverriderItems0:
    """
    ImageOverrider represents the rules dedicated to handling image overrides.

    Attributes
    ----------
    component : str, default is Undefined, required
        Component is part of image name. Basically we presume an image can be made of '[registry/]repository[:tag]'. The registry could be: - registry.k8s.io - fictional.registry.example:10443 The repository could be: - kube-apiserver - fictional/nginx The tag cloud be: - latest - v1.19.1 - @sha256:dbcc1c35ac38df41fd2f5e4130b32ffdb93ebae8b3dbe638c23575912276fc9c
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the image.
    predicate : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersImageOverriderItems0Predicate, default is Undefined, optional
        predicate
    value : str, default is Undefined, optional
        Value to be applied to image. Must not be empty when operator is 'add' or 'replace'. Defaults to empty and ignored when operator is 'remove'.
    """


    component: "Registry" | "Repository" | "Tag"

    operator: "add" | "remove" | "replace"

    predicate?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersImageOverriderItems0Predicate

    value?: str


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersImageOverriderItems0Predicate:
    """
    Predicate filters images before applying the rule. 
     Defaults to nil, in that case, the system will automatically detect image fields if the resource type is Pod, ReplicaSet, Deployment, StatefulSet, DaemonSet or Job by following rule: - Pod: /spec/containers/<N>/image - ReplicaSet: /spec/template/spec/containers/<N>/image - Deployment: /spec/template/spec/containers/<N>/image - DaemonSet: /spec/template/spec/containers/<N>/image - StatefulSet: /spec/template/spec/containers/<N>/image - Job: /spec/template/spec/containers/<N>/image In addition, all images will be processed if the resource object has more than one container. 
     If not nil, only images matches the filters will be processed.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path indicates the path of target field
    """


    path: str


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersLabelsOverriderItems0:
    """
    LabelAnnotationOverrider represents the rules dedicated to handling workload labels/annotations

    Attributes
    ----------
    operator : str, default is Undefined, required
        Operator represents the operator which will apply on the workload.
    value : {str:str}, default is Undefined, optional
        Value to be applied to annotations/labels of workload. Items in Value which will be appended after annotations/labels when Operator is 'add'. Items in Value which match in annotations/labels will be deleted when Operator is 'remove'. Items in Value which match in annotations/labels will be replaced when Operator is 'replace'.
    """


    operator: "add" | "remove" | "replace"

    value?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecOverridersPlaintextItems0:
    """
    PlaintextOverrider is a simple overrider that overrides target fields according to path, operator and value.

    Attributes
    ----------
    operator : str, default is Undefined, required
        Operator indicates the operation on target field. Available operators are: add, replace and remove.
    path : str, default is Undefined, required
        Path indicates the path of target field
    value : any, default is Undefined, optional
        Value to be applied to target field. Must be empty when operator is Remove.
    """


    operator: "add" | "remove" | "replace"

    path: str

    value?: any


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0:
    """
    ResourceSelector the resources will be selected.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        APIVersion represents the API version of the target resources.
    kind : str, default is Undefined, required
        Kind represents the Kind of the target resources.
    labelSelector : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0LabelSelector, default is Undefined, optional
        label selector
    name : str, default is Undefined, optional
        Name of the target resource. Default is empty, which means selecting all resources.
    namespace : str, default is Undefined, optional
        Namespace of the target resource. Default is empty, which means inherit from the parent object scope.
    """


    apiVersion: str

    kind: str

    labelSelector?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0LabelSelector

    name?: str

    namespace?: str


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0LabelSelector:
    """
    A label query over a set of resources. If name is not empty, labelSelector will be ignored.

    Attributes
    ----------
    matchExpressions : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecResourceSelectorsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetCluster:
    """
    TargetCluster defines restrictions on this override policy that only applies to resources propagated to the matching clusters. nil means matching all clusters. 
     Deprecated: This filed is deprecated in v1.0 and please use the OverrideRules instead.

    Attributes
    ----------
    clusterNames : [str], default is Undefined, optional
        ClusterNames is the list of clusters to be selected.
    exclude : [str], default is Undefined, optional
        ExcludedClusters is the list of clusters to be ignored.
    fieldSelector : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterFieldSelector, default is Undefined, optional
        field selector
    labelSelector : PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterLabelSelector, default is Undefined, optional
        label selector
    """


    clusterNames?: [str]

    exclude?: [str]

    fieldSelector?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterFieldSelector

    labelSelector?: PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterLabelSelector


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterFieldSelector:
    """
    FieldSelector is a filter to select member clusters by fields. The key(field) of the match expression should be 'provider', 'region', or 'zone', and the operator of the match expression should be 'In' or 'NotIn'. If non-nil and non-empty, only the clusters match this filter will be selected.

    Attributes
    ----------
    matchExpressions : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterFieldSelectorMatchExpressionsItems0], default is Undefined, optional
        A list of field selector requirements.
    """


    matchExpressions?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterFieldSelectorMatchExpressionsItems0]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterFieldSelectorMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterLabelSelector:
    """
    LabelSelector is a filter to select member clusters by labels. If non-nil and non-empty, only the clusters match this filter will be selected.

    Attributes
    ----------
    matchExpressions : [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema PolicyKarmadaIoV1alpha1ClusterOverridePolicySpecTargetClusterLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


