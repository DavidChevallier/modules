"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ClusterPolicy:
    """
    ClusterPolicy is the Schema for the clusterpolicies API

    Attributes
    ----------
    apiVersion : str, default is "nvidia.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ClusterPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NvidiaComV1ClusterPolicySpec, default is Undefined, optional
        spec
    status : NvidiaComV1ClusterPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "nvidia.com/v1" = "nvidia.com/v1"

    kind: "ClusterPolicy" = "ClusterPolicy"

    metadata?: v1.ObjectMeta

    spec?: NvidiaComV1ClusterPolicySpec

    status?: NvidiaComV1ClusterPolicyStatus


schema NvidiaComV1ClusterPolicySpec:
    """
    ClusterPolicySpec defines the desired state of ClusterPolicy

    Attributes
    ----------
    daemonsets : NvidiaComV1ClusterPolicySpecDaemonsets, default is Undefined, required
        daemonsets
    dcgm : NvidiaComV1ClusterPolicySpecDcgm, default is Undefined, required
        dcgm
    dcgmExporter : NvidiaComV1ClusterPolicySpecDcgmExporter, default is Undefined, required
        dcgm exporter
    devicePlugin : NvidiaComV1ClusterPolicySpecDevicePlugin, default is Undefined, required
        device plugin
    driver : NvidiaComV1ClusterPolicySpecDriver, default is Undefined, required
        driver
    gds : NvidiaComV1ClusterPolicySpecGds, default is Undefined, optional
        gds
    gfd : NvidiaComV1ClusterPolicySpecGfd, default is Undefined, required
        gfd
    mig : NvidiaComV1ClusterPolicySpecMig, default is Undefined, optional
        mig
    migManager : NvidiaComV1ClusterPolicySpecMigManager, default is Undefined, optional
        mig manager
    nodeStatusExporter : NvidiaComV1ClusterPolicySpecNodeStatusExporter, default is Undefined, required
        node status exporter
    operator : NvidiaComV1ClusterPolicySpecOperator, default is Undefined, required
        operator
    psp : NvidiaComV1ClusterPolicySpecPsp, default is Undefined, optional
        psp
    sandboxDevicePlugin : NvidiaComV1ClusterPolicySpecSandboxDevicePlugin, default is Undefined, optional
        sandbox device plugin
    sandboxWorkloads : NvidiaComV1ClusterPolicySpecSandboxWorkloads, default is Undefined, optional
        sandbox workloads
    toolkit : NvidiaComV1ClusterPolicySpecToolkit, default is Undefined, required
        toolkit
    validator : NvidiaComV1ClusterPolicySpecValidator, default is Undefined, optional
        validator
    vfioManager : NvidiaComV1ClusterPolicySpecVfioManager, default is Undefined, optional
        vfio manager
    vgpuDeviceManager : NvidiaComV1ClusterPolicySpecVgpuDeviceManager, default is Undefined, optional
        vgpu device manager
    vgpuManager : NvidiaComV1ClusterPolicySpecVgpuManager, default is Undefined, optional
        vgpu manager
    """


    daemonsets: NvidiaComV1ClusterPolicySpecDaemonsets

    dcgm: NvidiaComV1ClusterPolicySpecDcgm

    dcgmExporter: NvidiaComV1ClusterPolicySpecDcgmExporter

    devicePlugin: NvidiaComV1ClusterPolicySpecDevicePlugin

    driver: NvidiaComV1ClusterPolicySpecDriver

    gds?: NvidiaComV1ClusterPolicySpecGds

    gfd: NvidiaComV1ClusterPolicySpecGfd

    mig?: NvidiaComV1ClusterPolicySpecMig

    migManager?: NvidiaComV1ClusterPolicySpecMigManager

    nodeStatusExporter: NvidiaComV1ClusterPolicySpecNodeStatusExporter

    operator: NvidiaComV1ClusterPolicySpecOperator

    psp?: NvidiaComV1ClusterPolicySpecPsp

    sandboxDevicePlugin?: NvidiaComV1ClusterPolicySpecSandboxDevicePlugin

    sandboxWorkloads?: NvidiaComV1ClusterPolicySpecSandboxWorkloads

    toolkit: NvidiaComV1ClusterPolicySpecToolkit

    validator?: NvidiaComV1ClusterPolicySpecValidator

    vfioManager?: NvidiaComV1ClusterPolicySpecVfioManager

    vgpuDeviceManager?: NvidiaComV1ClusterPolicySpecVgpuDeviceManager

    vgpuManager?: NvidiaComV1ClusterPolicySpecVgpuManager


schema NvidiaComV1ClusterPolicySpecDaemonsets:
    """
    Daemonset defines common configuration for all Daemonsets

    Attributes
    ----------
    priorityClassName : str, default is Undefined, optional
        priority class name
    rollingUpdate : NvidiaComV1ClusterPolicySpecDaemonsetsRollingUpdate, default is Undefined, optional
        rolling update
    tolerations : [NvidiaComV1ClusterPolicySpecDaemonsetsTolerationsItems0], default is Undefined, optional
        Optional: Set tolerations
    updateStrategy : str, default is "RollingUpdate", optional
        update strategy
    """


    priorityClassName?: str

    rollingUpdate?: NvidiaComV1ClusterPolicySpecDaemonsetsRollingUpdate

    tolerations?: [NvidiaComV1ClusterPolicySpecDaemonsetsTolerationsItems0]

    updateStrategy?: "RollingUpdate" | "OnDelete" = "RollingUpdate"


schema NvidiaComV1ClusterPolicySpecDaemonsetsRollingUpdate:
    """
    Optional: Configuration for rolling update of NVIDIA Driver DaemonSet pods

    Attributes
    ----------
    maxUnavailable : str, default is Undefined, optional
        max unavailable
    """


    maxUnavailable?: str


schema NvidiaComV1ClusterPolicySpecDaemonsetsTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema NvidiaComV1ClusterPolicySpecDcgm:
    """
    DCGM component spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA DCGM Hostengine as a separate pod is enabled.
    env : [NvidiaComV1ClusterPolicySpecDcgmEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    hostPort : int, default is Undefined, optional
        HostPort represents host port that needs to be bound for DCGM engine (Default: 5555)
    image : str, default is Undefined, optional
        NVIDIA DCGM image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA DCGM image repository
    resources : NvidiaComV1ClusterPolicySpecDcgmResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA DCGM image tag
    """


    args?: [str]

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecDcgmEnvItems0]

    hostPort?: int

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecDcgmResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecDcgmEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecDcgmEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDcgmExporter:
    """
    DCGMExporter spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    config : NvidiaComV1ClusterPolicySpecDcgmExporterConfig, default is Undefined, optional
        config
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA DCGM Exporter through operator is enabled
    env : [NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA DCGM Exporter image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA DCGM Exporter image repository
    resources : NvidiaComV1ClusterPolicySpecDcgmExporterResources, default is Undefined, optional
        resources
    serviceMonitor : NvidiaComV1ClusterPolicySpecDcgmExporterServiceMonitor, default is Undefined, optional
        service monitor
    version : str, default is Undefined, optional
        NVIDIA DCGM Exporter image tag
    """


    args?: [str]

    config?: NvidiaComV1ClusterPolicySpecDcgmExporterConfig

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecDcgmExporterResources

    serviceMonitor?: NvidiaComV1ClusterPolicySpecDcgmExporterServiceMonitor

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecDcgmExporterConfig:
    """
    Optional: Custom metrics configuration for NVIDIA DCGM Exporter

    Attributes
    ----------
    name : str, default is Undefined, optional
        ConfigMap name with file dcgm-metrics.csv for metrics to be collected by NVIDIA DCGM Exporter
    """


    name?: str


schema NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecDcgmExporterEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDcgmExporterResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecDcgmExporterServiceMonitor:
    """
    Optional: ServiceMonitor configuration for NVIDIA DCGM Exporter

    Attributes
    ----------
    additionalLabels : {str:str}, default is Undefined, optional
        AdditionalLabels to add to ServiceMonitor instance for NVIDIA DCGM Exporter
    enabled : bool, default is Undefined, optional
        Enabled indicates if ServiceMonitor is deployed for NVIDIA DCGM Exporter
    honorLabels : bool, default is Undefined, optional
        HonorLabels chooses the metric’s labels on collisions with target labels.
    interval : str, default is Undefined, optional
        Interval which metrics should be scraped from NVIDIA DCGM Exporter. If not specified Prometheus’ global scrape interval is used. Supported units: y, w, d, h, m, s, ms
    """


    additionalLabels?: {str:str}

    enabled?: bool

    honorLabels?: bool

    interval?: str


    check:
        _regex_match(str(interval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if interval


schema NvidiaComV1ClusterPolicySpecDcgmResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecDevicePlugin:
    """
    DevicePlugin component spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    config : NvidiaComV1ClusterPolicySpecDevicePluginConfig, default is Undefined, optional
        config
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA Device Plugin through operator is enabled
    env : [NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA Device Plugin image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA Device Plugin image repository
    resources : NvidiaComV1ClusterPolicySpecDevicePluginResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA Device Plugin image tag
    """


    args?: [str]

    config?: NvidiaComV1ClusterPolicySpecDevicePluginConfig

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecDevicePluginResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecDevicePluginConfig:
    """
    Optional: Configuration for the NVIDIA Device Plugin via the ConfigMap

    Attributes
    ----------
    default : str, default is Undefined, optional
        Default config name within the ConfigMap for the NVIDIA Device Plugin  config
    name : str, default is Undefined, optional
        ConfigMap name for NVIDIA Device Plugin config including shared config between plugin and GFD
    """


    default?: str

    name?: str


schema NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecDevicePluginEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDevicePluginResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecDriver:
    """
    Driver component spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    certConfig : NvidiaComV1ClusterPolicySpecDriverCertConfig, default is Undefined, optional
        cert config
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA Driver through operator is enabled
    env : [NvidiaComV1ClusterPolicySpecDriverEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA Driver image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    kernelModuleConfig : NvidiaComV1ClusterPolicySpecDriverKernelModuleConfig, default is Undefined, optional
        kernel module config
    licensingConfig : NvidiaComV1ClusterPolicySpecDriverLicensingConfig, default is Undefined, optional
        licensing config
    manager : NvidiaComV1ClusterPolicySpecDriverManager, default is Undefined, optional
        manager
    rdma : NvidiaComV1ClusterPolicySpecDriverRdma, default is Undefined, optional
        rdma
    repoConfig : NvidiaComV1ClusterPolicySpecDriverRepoConfig, default is Undefined, optional
        repo config
    repository : str, default is Undefined, optional
        NVIDIA Driver image repository
    resources : NvidiaComV1ClusterPolicySpecDriverResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA Driver image tag
    virtualTopology : NvidiaComV1ClusterPolicySpecDriverVirtualTopology, default is Undefined, optional
        virtual topology
    """


    args?: [str]

    certConfig?: NvidiaComV1ClusterPolicySpecDriverCertConfig

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecDriverEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    kernelModuleConfig?: NvidiaComV1ClusterPolicySpecDriverKernelModuleConfig

    licensingConfig?: NvidiaComV1ClusterPolicySpecDriverLicensingConfig

    manager?: NvidiaComV1ClusterPolicySpecDriverManager

    rdma?: NvidiaComV1ClusterPolicySpecDriverRdma

    repoConfig?: NvidiaComV1ClusterPolicySpecDriverRepoConfig

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecDriverResources

    version?: str

    virtualTopology?: NvidiaComV1ClusterPolicySpecDriverVirtualTopology


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecDriverCertConfig:
    """
    Optional: Custom certificates configuration for NVIDIA Driver container

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema NvidiaComV1ClusterPolicySpecDriverEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecDriverEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDriverKernelModuleConfig:
    """
    Optional: Kernel module configuration parameters for the NVIDIA Driver

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema NvidiaComV1ClusterPolicySpecDriverLicensingConfig:
    """
    Optional: Licensing configuration for NVIDIA vGPU licensing

    Attributes
    ----------
    configMapName : str, default is Undefined, optional
        config map name
    nlsEnabled : bool, default is Undefined, optional
        NLSEnabled indicates if NVIDIA Licensing System is used for licensing.
    """


    configMapName?: str

    nlsEnabled?: bool


schema NvidiaComV1ClusterPolicySpecDriverManager:
    """
    Manager represents configuration for NVIDIA Driver Manager initContainer

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        Image represents NVIDIA Driver Manager image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        Repository represents Driver Managerrepository path
    version : str, default is Undefined, optional
        Version represents NVIDIA Driver Manager image tag(version)
    """


    env?: [NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecDriverManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecDriverRdma:
    """
    GPUDirectRDMASpec defines the properties for nvidia-peermem deployment

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled indicates if GPUDirect RDMA is enabled through GPU operator
    useHostMofed : bool, default is Undefined, optional
        UseHostMOFED indicates to use MOFED drivers directly installed on the host to enable GPUDirect RDMA
    """


    enabled?: bool

    useHostMofed?: bool


schema NvidiaComV1ClusterPolicySpecDriverRepoConfig:
    """
    Optional: Custom repo configuration for NVIDIA Driver container

    Attributes
    ----------
    configMapName : str, default is Undefined, optional
        config map name
    """


    configMapName?: str


schema NvidiaComV1ClusterPolicySpecDriverResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecDriverVirtualTopology:
    """
    Optional: Virtual Topology Daemon configuration for NVIDIA vGPU drivers

    Attributes
    ----------
    config : str, default is Undefined, optional
        Optional: Config name representing virtual topology daemon configuration file nvidia-topologyd.conf
    """


    config?: str


schema NvidiaComV1ClusterPolicySpecGds:
    """
    GPUDirectStorage defines the spec for GDS components(Experimental)

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    enabled : bool, default is Undefined, optional
        Enabled indicates if GPUDirect Storage is enabled through GPU operator
    env : [NvidiaComV1ClusterPolicySpecGdsEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA GPUDirect Storage Driver image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA GPUDirect Storage Driver image repository
    version : str, default is Undefined, optional
        NVIDIA GPUDirect Storage Driver image tag
    """


    args?: [str]

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecGdsEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecGdsEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecGdsEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecGfd:
    """
    GPUFeatureDiscovery spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of GPU Feature Discovery Plugin is enabled.
    env : [NvidiaComV1ClusterPolicySpecGfdEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        GFD image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        GFD image repository
    resources : NvidiaComV1ClusterPolicySpecGfdResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        GFD image tag
    """


    args?: [str]

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecGfdEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecGfdResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecGfdEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecGfdEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecGfdResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecMig:
    """
    MIG spec

    Attributes
    ----------
    strategy : str, default is Undefined, optional
        Optional: MIGStrategy to apply for GFD and NVIDIA Device Plugin
    """


    strategy?: "none" | "single" | "mixed"


schema NvidiaComV1ClusterPolicySpecMigManager:
    """
    MIGManager for configuration to deploy MIG Manager

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    config : NvidiaComV1ClusterPolicySpecMigManagerConfig, default is Undefined, optional
        config
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA MIG Manager is enabled
    env : [NvidiaComV1ClusterPolicySpecMigManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    gpuClientsConfig : NvidiaComV1ClusterPolicySpecMigManagerGpuClientsConfig, default is Undefined, optional
        gpu clients config
    image : str, default is Undefined, optional
        NVIDIA MIG Manager image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA MIG Manager image repository
    resources : NvidiaComV1ClusterPolicySpecMigManagerResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA MIG Manager image tag
    """


    args?: [str]

    config?: NvidiaComV1ClusterPolicySpecMigManagerConfig

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecMigManagerEnvItems0]

    gpuClientsConfig?: NvidiaComV1ClusterPolicySpecMigManagerGpuClientsConfig

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecMigManagerResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecMigManagerConfig:
    """
    Optional: Custom mig-parted configuration for NVIDIA MIG Manager container

    Attributes
    ----------
    name : str, default is Undefined, optional
        ConfigMap name
    """


    name?: str


schema NvidiaComV1ClusterPolicySpecMigManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecMigManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecMigManagerGpuClientsConfig:
    """
    Optional: Custom gpu-clients configuration for NVIDIA MIG Manager container

    Attributes
    ----------
    name : str, default is Undefined, optional
        ConfigMap name
    """


    name?: str


schema NvidiaComV1ClusterPolicySpecMigManagerResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecNodeStatusExporter:
    """
    NodeStatusExporter spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of Node Status Exporter is enabled.
    env : [NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        Node Status Exporter image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        Node Status Exporterimage repository
    resources : NvidiaComV1ClusterPolicySpecNodeStatusExporterResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        Node Status Exporterimage tag
    """


    args?: [str]

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecNodeStatusExporterResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecNodeStatusExporterResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecOperator:
    """
    Operator component spec

    Attributes
    ----------
    defaultRuntime : str, default is "docker", required
        Runtime defines container runtime type
    initContainer : NvidiaComV1ClusterPolicySpecOperatorInitContainer, default is Undefined, optional
        init container
    runtimeClass : str, default is "nvidia", optional
        runtime class
    use_ocp_driver_toolkit : bool, default is Undefined, optional
        UseOpenShiftDriverToolkit indicates if DriverToolkit image should be used on OpenShift to build and install driver modules
    """


    defaultRuntime: "docker" | "crio" | "containerd" = "docker"

    initContainer?: NvidiaComV1ClusterPolicySpecOperatorInitContainer

    runtimeClass?: str = "nvidia"

    use_ocp_driver_toolkit?: bool


schema NvidiaComV1ClusterPolicySpecOperatorInitContainer:
    """
    InitContainerSpec describes configuration for initContainer image used with all components

    Attributes
    ----------
    image : str, default is Undefined, optional
        Image represents image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        Repository represents image repository path
    version : str, default is Undefined, optional
        Version represents image tag(version)
    """


    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecPsp:
    """
    PSP defines spec for handling PodSecurityPolicies

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled indicates if PodSecurityPolicies needs to be enabled for all Pods
    """


    enabled?: bool


schema NvidiaComV1ClusterPolicySpecSandboxDevicePlugin:
    """
    SandboxDevicePlugin component spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA Sandbox Device Plugin through operator is enabled
    env : [NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA Sandbox Device Plugin image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA Sandbox Device Plugin image repository
    resources : NvidiaComV1ClusterPolicySpecSandboxDevicePluginResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA Sandbox Device Plugin image tag
    """


    args?: [str]

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecSandboxDevicePluginResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecSandboxDevicePluginResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecSandboxWorkloads:
    """
    SandboxWorkloads defines the spec for handling sandbox workloads (i.e. Virtual Machines)

    Attributes
    ----------
    defaultWorkload : str, default is "container", optional
        DefaultWorkload indicates the default GPU workload type to configure worker nodes in the cluster for
    enabled : bool, default is Undefined, optional
        Enabled indicates if the GPU Operator should manage additional operands required for sandbox workloads (i.e. VFIO Manager, vGPU Manager, and additional device plugins)
    """


    defaultWorkload?: "container" | "vm-passthrough" | "vm-vgpu" = "container"

    enabled?: bool


schema NvidiaComV1ClusterPolicySpecToolkit:
    """
    Toolkit component spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA Container Toolkit through operator is enabled
    env : [NvidiaComV1ClusterPolicySpecToolkitEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA Container Toolkit image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    installDir : str, default is "/usr/local/nvidia", optional
        Toolkit install directory on the host
    repository : str, default is Undefined, optional
        NVIDIA Container Toolkit image repository
    resources : NvidiaComV1ClusterPolicySpecToolkitResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA Container Toolkit image tag
    """


    args?: [str]

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecToolkitEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    installDir?: str = "/usr/local/nvidia"

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecToolkitResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecToolkitEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecToolkitEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecToolkitResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecValidator:
    """
    Validator defines the spec for operator-validator daemonset

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    cuda : NvidiaComV1ClusterPolicySpecValidatorCuda, default is Undefined, optional
        cuda
    driver : NvidiaComV1ClusterPolicySpecValidatorDriver, default is Undefined, optional
        driver
    env : [NvidiaComV1ClusterPolicySpecValidatorEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        Validator image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    plugin : NvidiaComV1ClusterPolicySpecValidatorPlugin, default is Undefined, optional
        plugin
    repository : str, default is Undefined, optional
        Validator image repository
    resources : NvidiaComV1ClusterPolicySpecValidatorResources, default is Undefined, optional
        resources
    toolkit : NvidiaComV1ClusterPolicySpecValidatorToolkit, default is Undefined, optional
        toolkit
    version : str, default is Undefined, optional
        Validator image tag
    vfioPCI : NvidiaComV1ClusterPolicySpecValidatorVfioPCI, default is Undefined, optional
        vfio p c i
    vgpuDevices : NvidiaComV1ClusterPolicySpecValidatorVgpuDevices, default is Undefined, optional
        vgpu devices
    vgpuManager : NvidiaComV1ClusterPolicySpecValidatorVgpuManager, default is Undefined, optional
        vgpu manager
    """


    args?: [str]

    cuda?: NvidiaComV1ClusterPolicySpecValidatorCuda

    driver?: NvidiaComV1ClusterPolicySpecValidatorDriver

    env?: [NvidiaComV1ClusterPolicySpecValidatorEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    plugin?: NvidiaComV1ClusterPolicySpecValidatorPlugin

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecValidatorResources

    toolkit?: NvidiaComV1ClusterPolicySpecValidatorToolkit

    version?: str

    vfioPCI?: NvidiaComV1ClusterPolicySpecValidatorVfioPCI

    vgpuDevices?: NvidiaComV1ClusterPolicySpecValidatorVgpuDevices

    vgpuManager?: NvidiaComV1ClusterPolicySpecValidatorVgpuManager


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecValidatorCuda:
    """
    CUDA validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorCudaEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorDriver:
    """
    Toolkit validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorDriverEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorPlugin:
    """
    Plugin validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorPluginEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecValidatorToolkit:
    """
    Toolkit validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorToolkitEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCI:
    """
    VfioPCI validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorVfioPCIEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevices:
    """
    VGPUDevices validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorVgpuDevicesEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManager:
    """
    VGPUManager validator spec

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    """


    env?: [NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0]


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecValidatorVgpuManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVfioManager:
    """
    VFIOManager for configuration to deploy VFIO-PCI Manager

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    driverManager : NvidiaComV1ClusterPolicySpecVfioManagerDriverManager, default is Undefined, optional
        driver manager
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of VFIO Manager is enabled
    env : [NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        VFIO Manager image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        VFIO Manager image repository
    resources : NvidiaComV1ClusterPolicySpecVfioManagerResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        VFIO Manager image tag
    """


    args?: [str]

    driverManager?: NvidiaComV1ClusterPolicySpecVfioManagerDriverManager

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecVfioManagerResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManager:
    """
    DriverManager represents configuration for NVIDIA Driver Manager

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        Image represents NVIDIA Driver Manager image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        Repository represents Driver Managerrepository path
    version : str, default is Undefined, optional
        Version represents NVIDIA Driver Manager image tag(version)
    """


    env?: [NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecVfioManagerDriverManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecVfioManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVfioManagerResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManager:
    """
    VGPUDeviceManager spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    config : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerConfig, default is Undefined, optional
        config
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA vGPU Device Manager is enabled
    env : [NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA vGPU Device Manager image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA vGPU Device Manager image repository
    resources : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA vGPU Device Manager image tag
    """


    args?: [str]

    config?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerConfig

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerConfig:
    """
    NVIDIA vGPU devices configuration for NVIDIA vGPU Device Manager container

    Attributes
    ----------
    default : str, default is "default", optional
        Default config name within the ConfigMap
    name : str, default is Undefined, optional
        ConfigMap name
    """


    default?: str = "default"

    name?: str


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVgpuDeviceManagerResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicySpecVgpuManager:
    """
    VGPUManager component spec

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Optional: List of arguments
    driverManager : NvidiaComV1ClusterPolicySpecVgpuManagerDriverManager, default is Undefined, optional
        driver manager
    enabled : bool, default is Undefined, optional
        Enabled indicates if deployment of NVIDIA vGPU Manager through operator is enabled
    env : [NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        NVIDIA vGPU Manager  image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        NVIDIA vGPU Manager image repository
    resources : NvidiaComV1ClusterPolicySpecVgpuManagerResources, default is Undefined, optional
        resources
    version : str, default is Undefined, optional
        NVIDIA vGPU Manager image tag
    """


    args?: [str]

    driverManager?: NvidiaComV1ClusterPolicySpecVgpuManagerDriverManager

    enabled?: bool

    env?: [NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    resources?: NvidiaComV1ClusterPolicySpecVgpuManagerResources

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManager:
    """
    DriverManager represents configuration for NVIDIA Driver Manager initContainer

    Attributes
    ----------
    env : [NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0], default is Undefined, optional
        Optional: List of environment variables
    image : str, default is Undefined, optional
        Image represents NVIDIA Driver Manager image name
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy
    imagePullSecrets : [str], default is Undefined, optional
        Image pull secrets
    repository : str, default is Undefined, optional
        Repository represents Driver Managerrepository path
    version : str, default is Undefined, optional
        Version represents NVIDIA Driver Manager image tag(version)
    """


    env?: [NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0]

    image?: str

    imagePullPolicy?: str

    imagePullSecrets?: [str]

    repository?: str

    version?: str


    check:
        _regex_match(str(image), r"[a-zA-Z0-9\-]+") if image


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecVgpuManagerDriverManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFrom


schema NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromFieldRef

    resourceFieldRef?: NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromSecretKeyRef


schema NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema NvidiaComV1ClusterPolicySpecVgpuManagerEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema NvidiaComV1ClusterPolicySpecVgpuManagerResources:
    """
    Optional: Define resources requests and limits for each pod

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {_regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {_regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema NvidiaComV1ClusterPolicyStatus:
    """
    ClusterPolicyStatus defines the observed state of ClusterPolicy

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        Namespace indicates a namespace in which the operator is installed
    state : str, default is Undefined, required
        State indicates status of ClusterPolicy
    """


    namespace?: str

    state: "ignored" | "ready" | "notReady"


