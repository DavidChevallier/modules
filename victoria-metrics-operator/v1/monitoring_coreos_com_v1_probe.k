"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Probe:
    """
    Probe defines monitoring for a set of static targets or ingresses.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Probe", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1ProbeSpec, default is Undefined, required
        spec
    """


    apiVersion: "monitoring.coreos.com/v1" = "monitoring.coreos.com/v1"

    kind: "Probe" = "Probe"

    metadata?: v1.ObjectMeta

    spec: MonitoringCoreosComV1ProbeSpec


schema MonitoringCoreosComV1ProbeSpec:
    """
    Specification of desired Ingress selection for target discovery by Prometheus.

    Attributes
    ----------
    basicAuth : MonitoringCoreosComV1ProbeSpecBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1ProbeSpecBearerTokenSecret, default is Undefined, optional
        bearer token secret
    interval : str, default is Undefined, optional
        Interval at which targets are probed using the configured prober. If not specified Prometheus' global scrape interval is used.
    jobName : str, default is Undefined, optional
        The job name assigned to scraped metrics by default.
    module : str, default is Undefined, optional
        The module to use for probing specifying how to probe the target. Example module configuring in the blackbox exporter: https://github.com/prometheus/blackbox_exporter/blob/master/example.yml
    prober : MonitoringCoreosComV1ProbeSpecProber, default is Undefined, optional
        prober
    scrapeTimeout : str, default is Undefined, optional
        Timeout for scraping metrics from the Prometheus exporter.
    targets : MonitoringCoreosComV1ProbeSpecTargets, default is Undefined, optional
        targets
    tlsConfig : MonitoringCoreosComV1ProbeSpecTLSConfig, default is Undefined, optional
        tls config
    """


    basicAuth?: MonitoringCoreosComV1ProbeSpecBasicAuth

    bearerTokenSecret?: MonitoringCoreosComV1ProbeSpecBearerTokenSecret

    interval?: str

    jobName?: str

    module?: str

    prober?: MonitoringCoreosComV1ProbeSpecProber

    scrapeTimeout?: str

    targets?: MonitoringCoreosComV1ProbeSpecTargets

    tlsConfig?: MonitoringCoreosComV1ProbeSpecTLSConfig


schema MonitoringCoreosComV1ProbeSpecBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication. More info: https://prometheus.io/docs/operating/configuration/#endpoint

    Attributes
    ----------
    password : MonitoringCoreosComV1ProbeSpecBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1ProbeSpecBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1ProbeSpecBasicAuthPassword

    username?: MonitoringCoreosComV1ProbeSpecBasicAuthUsername


schema MonitoringCoreosComV1ProbeSpecBasicAuthPassword:
    """
    The secret in the service monitor namespace that contains the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecBasicAuthUsername:
    """
    The secret in the service monitor namespace that contains the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecBearerTokenSecret:
    """
    Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the probe and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecProber:
    """
    Specification for the prober to use for probing targets. The prober.URL parameter is required. Targets cannot be probed if left empty.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path to collect metrics from. Defaults to `/probe`.
    proxyUrl : str, default is Undefined, optional
        Optional ProxyURL.
    scheme : str, default is Undefined, optional
        HTTP scheme to use for scraping. Defaults to `http`.
    url : str, default is Undefined, required
        Mandatory URL of the prober.
    """


    path?: str

    proxyUrl?: str

    scheme?: str

    url: str


schema MonitoringCoreosComV1ProbeSpecTLSConfig:
    """
    TLS configuration to use when scraping the endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1ProbeSpecTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1ProbeSpecTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1ProbeSpecTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1ProbeSpecTLSConfigCa

    cert?: MonitoringCoreosComV1ProbeSpecTLSConfigCert

    insecureSkipVerify?: bool

    keySecret?: MonitoringCoreosComV1ProbeSpecTLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1ProbeSpecTLSConfigCa:
    """
    Struct containing the CA cert to use for the targets.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ProbeSpecTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ProbeSpecTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ProbeSpecTLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1ProbeSpecTLSConfigCaSecret


schema MonitoringCoreosComV1ProbeSpecTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigCert:
    """
    Struct containing the client cert file for the targets.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ProbeSpecTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ProbeSpecTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ProbeSpecTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1ProbeSpecTLSConfigCertSecret


schema MonitoringCoreosComV1ProbeSpecTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTargets:
    """
    Targets defines a set of static and/or dynamically discovered targets to be probed using the prober.

    Attributes
    ----------
    ingress : MonitoringCoreosComV1ProbeSpecTargetsIngress, default is Undefined, optional
        ingress
    staticConfig : MonitoringCoreosComV1ProbeSpecTargetsStaticConfig, default is Undefined, optional
        static config
    """


    ingress?: MonitoringCoreosComV1ProbeSpecTargetsIngress

    staticConfig?: MonitoringCoreosComV1ProbeSpecTargetsStaticConfig


schema MonitoringCoreosComV1ProbeSpecTargetsIngress:
    """
    Ingress defines the set of dynamically discovered ingress objects which hosts are considered for probing.

    Attributes
    ----------
    namespaceSelector : MonitoringCoreosComV1ProbeSpecTargetsIngressNamespaceSelector, default is Undefined, optional
        namespace selector
    relabelingConfigs : [MonitoringCoreosComV1ProbeSpecTargetsIngressRelabelingConfigsItems0], default is Undefined, optional
        RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    selector : MonitoringCoreosComV1ProbeSpecTargetsIngressSelector, default is Undefined, optional
        selector
    """


    namespaceSelector?: MonitoringCoreosComV1ProbeSpecTargetsIngressNamespaceSelector

    relabelingConfigs?: [MonitoringCoreosComV1ProbeSpecTargetsIngressRelabelingConfigsItems0]

    selector?: MonitoringCoreosComV1ProbeSpecTargetsIngressSelector


schema MonitoringCoreosComV1ProbeSpecTargetsIngressNamespaceSelector:
    """
    Select Ingress objects by namespace.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names.
    """


    any?: bool

    matchNames?: [str]


schema MonitoringCoreosComV1ProbeSpecTargetsIngressRelabelingConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


schema MonitoringCoreosComV1ProbeSpecTargetsIngressSelector:
    """
    Select Ingress objects by labels.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1ProbeSpecTargetsIngressSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1ProbeSpecTargetsIngressSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1ProbeSpecTargetsIngressSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1ProbeSpecTargetsStaticConfig:
    """
    StaticConfig defines static targets which are considers for probing. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Labels assigned to all metrics scraped from the targets.
    relabelingConfigs : [MonitoringCoreosComV1ProbeSpecTargetsStaticConfigRelabelingConfigsItems0], default is Undefined, optional
        RelabelConfigs to apply to samples before ingestion. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    static : [str], default is Undefined, optional
        Targets is a list of URLs to probe using the configured prober.
    """


    labels?: {str:str}

    relabelingConfigs?: [MonitoringCoreosComV1ProbeSpecTargetsStaticConfigRelabelingConfigsItems0]

    static?: [str]


schema MonitoringCoreosComV1ProbeSpecTargetsStaticConfigRelabelingConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: str

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


