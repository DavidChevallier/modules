"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VMProbe:
    """
    VMProbe defines a probe for targets, that will be executed with prober,
    like blackbox exporter.
    It helps to monitor reachability of target with various checks.

    Attributes
    ----------
    apiVersion : str, default is "operator.victoriametrics.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VMProbe", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorVictoriametricsComV1beta1VMProbeSpec, default is Undefined, required
        spec
    status : any, default is Undefined, optional
        VMProbeStatus defines the observed state of VMProbe
    """


    apiVersion: "operator.victoriametrics.com/v1beta1" = "operator.victoriametrics.com/v1beta1"

    kind: "VMProbe" = "VMProbe"

    metadata?: v1.ObjectMeta

    spec: OperatorVictoriametricsComV1beta1VMProbeSpec

    status?: any


schema OperatorVictoriametricsComV1beta1VMProbeSpec:
    """
    VMProbeSpec contains specification parameters for a Probe.

    Attributes
    ----------
    authorization : OperatorVictoriametricsComV1beta1VMProbeSpecAuthorization, default is Undefined, optional
        authorization
    basicAuth : OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        File to read bearer token for scraping targets.
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMProbeSpecBearerTokenSecret, default is Undefined, optional
        bearer token secret
    follow_redirects : bool, default is Undefined, optional
        FollowRedirects controls redirects for scraping.
    interval : str, default is Undefined, optional
        Interval at which targets are probed using the configured prober.
        If not specified Prometheus' global scrape interval is used.
    jobName : str, default is Undefined, optional
        The job name assigned to scraped metrics by default.
    module : str, default is Undefined, optional
        The module to use for probing specifying how to probe the target.
        Example module configuring in the blackbox exporter:
        https://github.com/prometheus/blackbox_exporter/blob/master/example.yml
    oauth2 : OperatorVictoriametricsComV1beta1VMProbeSpecOauth2, default is Undefined, optional
        oauth2
    params : {str:[str]}, default is Undefined, optional
        Optional HTTP URL parameters
    proxyURL : str, default is Undefined, optional
        ProxyURL eg http://proxyserver:2195 Directs scrapes to proxy through this endpoint.
    sampleLimit : int, default is Undefined, optional
        SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
    scrapeTimeout : str, default is Undefined, optional
        Timeout for scraping metrics from the Prometheus exporter.
    scrape_interval : str, default is Undefined, optional
        ScrapeInterval is the same as Interval and has priority over it.
        one of scrape_interval or interval can be used
    seriesLimit : int, default is Undefined, optional
        SeriesLimit defines per-scrape limit on number of unique time series
        a single target can expose during all the scrapes on the time window of 24h.
    targets : OperatorVictoriametricsComV1beta1VMProbeSpecTargets, default is Undefined, optional
        targets
    tlsConfig : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfig, default is Undefined, optional
        tls config
    vmProberSpec : OperatorVictoriametricsComV1beta1VMProbeSpecVMProberSpec, default is Undefined, required
        vm prober spec
    vm_scrape_params : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParams, default is Undefined, optional
        vm scrape params
    """


    authorization?: OperatorVictoriametricsComV1beta1VMProbeSpecAuthorization

    basicAuth?: OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMProbeSpecBearerTokenSecret

    follow_redirects?: bool

    interval?: str

    jobName?: str

    module?: str

    oauth2?: OperatorVictoriametricsComV1beta1VMProbeSpecOauth2

    params?: {str:[str]}

    proxyURL?: str

    sampleLimit?: int

    scrapeTimeout?: str

    scrape_interval?: str

    seriesLimit?: int

    targets?: OperatorVictoriametricsComV1beta1VMProbeSpecTargets

    tlsConfig?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfig

    vmProberSpec: OperatorVictoriametricsComV1beta1VMProbeSpecVMProberSpec

    vm_scrape_params?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParams


schema OperatorVictoriametricsComV1beta1VMProbeSpecAuthorization:
    """
    Authorization with http header Authorization

    Attributes
    ----------
    credentials : OperatorVictoriametricsComV1beta1VMProbeSpecAuthorizationCredentials, default is Undefined, optional
        credentials
    credentialsFile : str, default is Undefined, optional
        File with value for authorization
    $type : str, default is Undefined, optional
        Type of authorization, default to bearer
    """


    credentials?: OperatorVictoriametricsComV1beta1VMProbeSpecAuthorizationCredentials

    credentialsFile?: str

    $type?: str


schema OperatorVictoriametricsComV1beta1VMProbeSpecAuthorizationCredentials:
    """
    Reference to the secret with value for authorization

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication
    More info: https://prometheus.io/docs/operating/configuration/#endpoints

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecBearerTokenSecret:
    """
    Secret to mount to read bearer token for scraping targets. The secret
    needs to be in the same namespace as the service scrape and accessible by
    the victoria-metrics operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecOauth2:
    """
    OAuth2 defines auth configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecOauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfig:
    """
    TLSConfig configuration to use when scraping the endpoint

    Attributes
    ----------
    ca : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the container to use for the targets.
    cert : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the container for the targets.
    keySecret : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCa

    caFile?: str

    cert?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigKeySecret

    serverName?: str


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCa:
    """
    Stuct containing the CA cert to use for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCaConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCaSecret


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCert:
    """
    Struct containing the client cert file for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCertConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCertSecret


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargets:
    """
    Targets defines a set of static and/or dynamically discovered targets to be probed using the prober.

    Attributes
    ----------
    ingress : OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngress, default is Undefined, optional
        ingress
    staticConfig : OperatorVictoriametricsComV1beta1VMProbeSpecTargetsStaticConfig, default is Undefined, optional
        static config
    """


    ingress?: OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngress

    staticConfig?: OperatorVictoriametricsComV1beta1VMProbeSpecTargetsStaticConfig


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngress:
    """
    Ingress defines the set of dynamically discovered ingress objects which hosts are considered for probing.

    Attributes
    ----------
    namespaceSelector : OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressNamespaceSelector, default is Undefined, optional
        namespace selector
    relabelingConfigs : [OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressRelabelingConfigsItems0], default is Undefined, optional
        RelabelConfigs to apply to samples before ingestion.
        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    selector : OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressSelector, default is Undefined, optional
        selector
    """


    namespaceSelector?: OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressNamespaceSelector

    relabelingConfigs?: [OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressRelabelingConfigsItems0]

    selector?: OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressSelector


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressNamespaceSelector:
    """
    Select Ingress objects by namespace.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a
        list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names.
    """


    any?: bool

    matchNames?: [str]


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressRelabelingConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.
    It defines `<metric_relabel_configs>`-section of configuration.
    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : any, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
        victoriaMetrics supports multiline regex joined with |
        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the
        regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated
        using the configured separator and matched against the configured regular expression
        for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels
        for compatibility with original relabel config.
        if set  both sourceLabels and source_labels, sourceLabels has priority.
        for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action.
        It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label
        for compatibility with original relabel config.
        if set  both targetLabel and target_label, targetLabel has priority.
        for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: any

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressSelector:
    """
    Select Ingress objects by labels.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsIngressSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsStaticConfig:
    """
    StaticConfig defines static targets which are considers for probing.
    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Labels assigned to all metrics scraped from the targets.
    relabelingConfigs : [OperatorVictoriametricsComV1beta1VMProbeSpecTargetsStaticConfigRelabelingConfigsItems0], default is Undefined, optional
        More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    targets : [str], default is Undefined, required
        Targets is a list of URLs to probe using the configured prober.
    """


    labels?: {str:str}

    relabelingConfigs?: [OperatorVictoriametricsComV1beta1VMProbeSpecTargetsStaticConfigRelabelingConfigsItems0]

    targets: [str]


schema OperatorVictoriametricsComV1beta1VMProbeSpecTargetsStaticConfigRelabelingConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.
    It defines `<metric_relabel_configs>`-section of configuration.
    More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to perform based on regex matching. Default is 'replace'
    $if : any, default is Undefined, optional
        If represents metricsQL match expression (or list of expressions): '{__name__=~"foo_.*"}'
    labels : {str:str}, default is Undefined, optional
        Labels is used together with Match for `action: graphite`
    match : str, default is Undefined, optional
        Match is used together with Labels for `action: graphite`
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : any, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
        victoriaMetrics supports multiline regex joined with |
        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the
        regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated
        using the configured separator and matched against the configured regular expression
        for the replace, keep, and drop actions.
    source_labels : [str], default is Undefined, optional
        UnderScoreSourceLabels - additional form of source labels source_labels
        for compatibility with original relabel config.
        if set  both sourceLabels and source_labels, sourceLabels has priority.
        for details https://github.com/VictoriaMetrics/operator/issues/131
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action.
        It is mandatory for replace actions. Regex capture groups are available.
    target_label : str, default is Undefined, optional
        UnderScoreTargetLabel - additional form of target label - target_label
        for compatibility with original relabel config.
        if set  both targetLabel and target_label, targetLabel has priority.
        for details https://github.com/VictoriaMetrics/operator/issues/131
    """


    action?: str

    $if?: any

    labels?: {str:str}

    match?: str

    modulus?: int

    regex?: any

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    source_labels?: [str]

    targetLabel?: str

    target_label?: str


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMProberSpec:
    """
    Specification for the prober to use for probing targets.
    The prober.URL parameter is required. Targets cannot be probed if left empty.

    Attributes
    ----------
    path : str, default is Undefined, optional
        Path to collect metrics from.
        Defaults to `/probe`.
    scheme : str, default is Undefined, optional
        HTTP scheme to use for scraping.
        Defaults to `http`.
    url : str, default is Undefined, required
        Mandatory URL of the prober.
    """


    path?: str

    scheme?: "http" | "https"

    url: str


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParams:
    """
    VMScrapeParams defines VictoriaMetrics specific scrape parameters

    Attributes
    ----------
    disable_compression : bool, default is Undefined, optional
        disable compression
    disable_keep_alive : bool, default is Undefined, optional
        disable_keepalive allows disabling HTTP keep-alive when scraping targets.
        By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
        could be re-used.
        See https://docs.victoriametrics.com/vmagent.html#scrape_config-enhancements
    headers : [str], default is Undefined, optional
        Headers allows sending custom headers to scrape targets
        must be in of semicolon separated header with it's value
        eg:
        headerName: headerValue
        vmagent supports since 1.79.0 version
    metric_relabel_debug : bool, default is Undefined, optional
        deprecated since [v1.85](https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.85.0), will be removed in next release
    no_stale_markers : bool, default is Undefined, optional
        no stale markers
    proxy_client_config : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfig, default is Undefined, optional
        proxy client config
    relabel_debug : bool, default is Undefined, optional
        deprecated since [v1.85](https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/v1.85.0), will be removed in next release
    scrape_align_interval : str, default is Undefined, optional
        scrape align interval
    scrape_offset : str, default is Undefined, optional
        scrape offset
    stream_parse : bool, default is Undefined, optional
        stream parse
    """


    disable_compression?: bool

    disable_keep_alive?: bool

    headers?: [str]

    metric_relabel_debug?: bool

    no_stale_markers?: bool

    proxy_client_config?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfig

    relabel_debug?: bool

    scrape_align_interval?: str

    scrape_offset?: str

    stream_parse?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfig:
    """
    ProxyClientConfig configures proxy auth settings for scraping
    See feature description https://docs.victoriametrics.com/vmagent.html#scraping-targets-via-a-proxy

    Attributes
    ----------
    basic_auth : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuth, default is Undefined, optional
        basic auth
    bearer_token : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBearerToken, default is Undefined, optional
        bearer token
    bearer_token_file : str, default is Undefined, optional
        bearer token file
    tls_config : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfig, default is Undefined, optional
        tls config
    """


    basic_auth?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuth

    bearer_token?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBearerToken

    bearer_token_file?: str

    tls_config?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfig


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigBearerToken:
    """
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfig:
    """
    TLSConfig specifies TLSConfig configuration parameters.

    Attributes
    ----------
    ca : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the container to use for the targets.
    cert : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the container for the targets.
    keySecret : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCa

    caFile?: str

    cert?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigKeySecret

    serverName?: str


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCa:
    """
    Stuct containing the CA cert to use for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCaConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCaSecret


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCert:
    """
    Struct containing the client cert file for the targets.

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCertConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCertSecret


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMProbeSpecVMScrapeParamsProxyClientConfigTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


