"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema VMAlert:
    """
    VMAlert  executes a list of given alerting or recording rules against configured address.

    Attributes
    ----------
    apiVersion : str, default is "operator.victoriametrics.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VMAlert", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorVictoriametricsComV1beta1VMAlertSpec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMAlertStatus, default is Undefined, optional
        status
    """


    apiVersion: "operator.victoriametrics.com/v1beta1" = "operator.victoriametrics.com/v1beta1"

    kind: "VMAlert" = "VMAlert"

    metadata?: v1.ObjectMeta

    spec?: OperatorVictoriametricsComV1beta1VMAlertSpec

    status?: OperatorVictoriametricsComV1beta1VMAlertStatus


schema OperatorVictoriametricsComV1beta1VMAlertSpec:
    """
    VMAlertSpec defines the desired state of VMAlert

    Attributes
    ----------
    affinity : any, default is Undefined, optional
        Affinity If specified, the pod's scheduling constraints.
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the VMAlert
        object, which shall be mounted into the VMAlert Pods.
        The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
    configReloaderExtraArgs : {str:str}, default is Undefined, optional
        ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container
        for example resyncInterval: "30s"
    containers : [any], default is Undefined, optional
        Containers property allows to inject additions sidecars or to patch existing containers.
        It can be useful for proxies, backup, etc.
    datasource : OperatorVictoriametricsComV1beta1VMAlertSpecDatasource, default is Undefined, required
        datasource
    dnsConfig : OperatorVictoriametricsComV1beta1VMAlertSpecDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        DNSPolicy sets DNS policy for the pod
    enforcedNamespaceLabel : str, default is Undefined, optional
        EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert
        and metric that is user created. The label value will always be the namespace of the object that is
        being created.
    evaluationInterval : str, default is Undefined, optional
        EvaluationInterval defines how often to evaluate rules by default
    externalLabels : {str:str}, default is Undefined, optional
        ExternalLabels in the form 'name: value' to add to all generated recording rules and alerts.
    extraArgs : {str:str}, default is Undefined, optional
        ExtraArgs that will be passed to  VMAlert pod
        for example -remoteWrite.tmpDataPath=/tmp
    extraEnvs : [OperatorVictoriametricsComV1beta1VMAlertSpecExtraEnvsItems0], default is Undefined, optional
        ExtraEnvs that will be added to VMAlert pod
    hostNetwork : bool, default is Undefined, optional
        HostNetwork controls whether the pod may use the node network namespace
    image : OperatorVictoriametricsComV1beta1VMAlertSpecImage, default is Undefined, optional
        image
    imagePullSecrets : [OperatorVictoriametricsComV1beta1VMAlertSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets An optional list of references to secrets in the same namespace
        to use for pulling images from registries
        see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
    initContainers : [any], default is Undefined, optional
        InitContainers allows adding initContainers to the pod definition. Those can be used to e.g.
        fetch secrets for injection into the VMAlert configuration from external sources. Any
        errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
        Using initContainers for any use case other then secret fetching is entirely outside the scope
        of what the maintainers will support and by doing so, you accept that this behaviour may break
        at any time without notice.
    license : OperatorVictoriametricsComV1beta1VMAlertSpecLicense, default is Undefined, optional
        license
    livenessProbe : any, default is Undefined, optional
        LivenessProbe that will be added CRD pod
    logFormat : str, default is Undefined, optional
        LogFormat for VMAlert to be configured with.
        default or json
    logLevel : str, default is Undefined, optional
        LogLevel for VMAlert to be configured with.
    minReadySeconds : int, default is Undefined, optional
        MinReadySeconds defines a minim number os seconds to wait before starting update next pod
        if previous in healthy state
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector Define which Nodes the Pods are scheduled on.
    notifier : OperatorVictoriametricsComV1beta1VMAlertSpecNotifier, default is Undefined, optional
        notifier
    notifierConfigRef : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierConfigRef, default is Undefined, optional
        notifier config ref
    notifiers : [OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0], default is Undefined, optional
        Notifiers prometheus alertmanager endpoints. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093
        If specified both notifier and notifiers, notifier will be added as last element to notifiers.
        only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier
    paused : bool, default is Undefined, optional
        Paused If set to true all actions on the underlying managed objects are not
        going to be performed, except for delete actions.
    podDisruptionBudget : OperatorVictoriametricsComV1beta1VMAlertSpecPodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    podMetadata : OperatorVictoriametricsComV1beta1VMAlertSpecPodMetadata, default is Undefined, optional
        pod metadata
    port : str, default is Undefined, optional
        Port for listen
    priorityClassName : str, default is Undefined, optional
        Priority class assigned to the Pods
    readinessGates : [OperatorVictoriametricsComV1beta1VMAlertSpecReadinessGatesItems0], default is Undefined, optional
        ReadinessGates defines pod readiness gates
    readinessProbe : any, default is Undefined, optional
        ReadinessProbe that will be added CRD pod
    remoteRead : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteRead, default is Undefined, optional
        remote read
    remoteWrite : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWrite, default is Undefined, optional
        remote write
    replicaCount : int, default is Undefined, optional
        ReplicaCount is the expected size of the VMAlert cluster. The controller will
        eventually make the size of the running cluster equal to the expected
        size.
    resources : OperatorVictoriametricsComV1beta1VMAlertSpecResources, default is Undefined, optional
        resources
    revisionHistoryLimitCount : int, default is Undefined, optional
        The number of old ReplicaSets to retain to allow rollback in deployment or
        maximum number of revisions that will be maintained in the StatefulSet's revision history.
        Defaults to 10.
    rollingUpdate : OperatorVictoriametricsComV1beta1VMAlertSpecRollingUpdate, default is Undefined, optional
        rolling update
    ruleNamespaceSelector : OperatorVictoriametricsComV1beta1VMAlertSpecRuleNamespaceSelector, default is Undefined, optional
        rule namespace selector
    rulePath : [str], default is Undefined, optional
        RulePath to the file with alert rules.
        Supports patterns. Flag can be specified multiple times.
        Examples:
        -rule /path/to/file. Path to a single file with alerting rules
        -rule dir/*.yaml -rule /*.yaml. Relative path to all .yaml files in folder,
        absolute path to all .yaml files in root.
        by default operator adds /etc/vmalert/configs/base/vmalert.yaml
    ruleSelector : OperatorVictoriametricsComV1beta1VMAlertSpecRuleSelector, default is Undefined, optional
        rule selector
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName - defines runtime class for kubernetes pod.
        https://kubernetes.io/docs/concepts/containers/runtime-class/
    schedulerName : str, default is Undefined, optional
        SchedulerName - defines kubernetes scheduler name
    secrets : [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the VMAlert
        object, which shall be mounted into the VMAlert Pods.
        The Secrets are mounted into /etc/vm/secrets/<secret-name>.
    securityContext : any, default is Undefined, optional
        SecurityContext holds pod-level security attributes and common container settings.
        This defaults to the default PodSecurityContext.
    selectAllByDefault : bool, default is Undefined, optional
        SelectAllByDefault changes default behavior for empty CRD selectors, such RuleSelector.
        with selectAllByDefault: true and empty serviceScrapeSelector and RuleNamespaceSelector
        Operator selects all exist serviceScrapes
        with selectAllByDefault: false - selects nothing
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run the
        VMAlert Pods.
    serviceScrapeSpec : any, default is Undefined, optional
        ServiceScrapeSpec that will be added to vmalert VMServiceScrape spec
    serviceSpec : OperatorVictoriametricsComV1beta1VMAlertSpecServiceSpec, default is Undefined, optional
        service spec
    startupProbe : any, default is Undefined, optional
        StartupProbe that will be added to CRD pod
    terminationGracePeriodSeconds : int, default is Undefined, optional
        TerminationGracePeriodSeconds period for container graceful termination
    tolerations : [OperatorVictoriametricsComV1beta1VMAlertSpecTolerationsItems0], default is Undefined, optional
        Tolerations If specified, the pod's tolerations.
    topologySpreadConstraints : [any], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option,
        controls how pods are spread across your cluster among failure-domains
        such as regions, zones, nodes, and other user-defined topology domains
        https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    updateStrategy : str, default is Undefined, optional
        UpdateStrategy - overrides default update strategy.
    useStrictSecurity : bool, default is Undefined, optional
        UseStrictSecurity enables strict security mode for component
        it restricts disk writes access
        uses non-root user out of the box
        drops not needed security permissions
    volumeMounts : [OperatorVictoriametricsComV1beta1VMAlertSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
        VolumeMounts specified will be appended to other VolumeMounts in the VMAlert container,
        that are generated as a result of StorageSpec objects.
    volumes : [any], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output Deployment definition.
        Volumes specified will be appended to other volumes that are generated as a result of
        StorageSpec objects.
    """


    affinity?: any

    configMaps?: [str]

    configReloaderExtraArgs?: {str:str}

    containers?: [any]

    datasource: OperatorVictoriametricsComV1beta1VMAlertSpecDatasource

    dnsConfig?: OperatorVictoriametricsComV1beta1VMAlertSpecDNSConfig

    dnsPolicy?: str

    enforcedNamespaceLabel?: str

    evaluationInterval?: str

    externalLabels?: {str:str}

    extraArgs?: {str:str}

    extraEnvs?: [OperatorVictoriametricsComV1beta1VMAlertSpecExtraEnvsItems0]

    hostNetwork?: bool

    image?: OperatorVictoriametricsComV1beta1VMAlertSpecImage

    imagePullSecrets?: [OperatorVictoriametricsComV1beta1VMAlertSpecImagePullSecretsItems0]

    initContainers?: [any]

    license?: OperatorVictoriametricsComV1beta1VMAlertSpecLicense

    livenessProbe?: any

    logFormat?: "default" | "json"

    logLevel?: "INFO" | "WARN" | "ERROR" | "FATAL" | "PANIC"

    minReadySeconds?: int

    nodeSelector?: {str:str}

    notifier?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifier

    notifierConfigRef?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierConfigRef

    notifiers?: [OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0]

    paused?: bool

    podDisruptionBudget?: OperatorVictoriametricsComV1beta1VMAlertSpecPodDisruptionBudget

    podMetadata?: OperatorVictoriametricsComV1beta1VMAlertSpecPodMetadata

    port?: str

    priorityClassName?: str

    readinessGates?: [OperatorVictoriametricsComV1beta1VMAlertSpecReadinessGatesItems0]

    readinessProbe?: any

    remoteRead?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteRead

    remoteWrite?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWrite

    replicaCount?: int

    resources?: OperatorVictoriametricsComV1beta1VMAlertSpecResources

    revisionHistoryLimitCount?: int

    rollingUpdate?: OperatorVictoriametricsComV1beta1VMAlertSpecRollingUpdate

    ruleNamespaceSelector?: OperatorVictoriametricsComV1beta1VMAlertSpecRuleNamespaceSelector

    rulePath?: [str]

    ruleSelector?: OperatorVictoriametricsComV1beta1VMAlertSpecRuleSelector

    runtimeClassName?: str

    schedulerName?: str

    secrets?: [str]

    securityContext?: any

    selectAllByDefault?: bool

    serviceAccountName?: str

    serviceScrapeSpec?: any

    serviceSpec?: OperatorVictoriametricsComV1beta1VMAlertSpecServiceSpec

    startupProbe?: any

    terminationGracePeriodSeconds?: int

    tolerations?: [OperatorVictoriametricsComV1beta1VMAlertSpecTolerationsItems0]

    topologySpreadConstraints?: [any]

    updateStrategy?: "Recreate" | "RollingUpdate"

    useStrictSecurity?: bool

    volumeMounts?: [OperatorVictoriametricsComV1beta1VMAlertSpecVolumeMountsItems0]

    volumes?: [any]


    check:
        regex.match(str(evaluationInterval), r"[0-9]+(ms|s|m|h)") if evaluationInterval


schema OperatorVictoriametricsComV1beta1VMAlertSpecDNSConfig:
    """
    Specifies the DNS parameters of a pod.
    Parameters specified here will be merged to the generated DNS
    configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses.
        This will be appended to the base nameservers generated from DNSPolicy.
        Duplicated nameservers will be removed.
    options : [OperatorVictoriametricsComV1beta1VMAlertSpecDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options.
        This will be merged with the base options generated from DNSPolicy.
        Duplicated entries will be removed. Resolution options given in Options
        will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup.
        This will be appended to the base search paths generated from DNSPolicy.
        Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [OperatorVictoriametricsComV1beta1VMAlertSpecDNSConfigOptionsItems0]

    searches?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecDNSConfigOptionsItems0:
    """
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasource:
    """
    Datasource Victoria Metrics or VMSelect url. Required parameter. e.g. http://127.0.0.1:8428

    Attributes
    ----------
    OAuth2 : any, default is Undefined, optional
        o auth2
    basicAuth : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        Path to bearer token file
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBearerTokenSecret, default is Undefined, optional
        bearer token secret
    headers : [str], default is Undefined, optional
        Headers allow configuring custom http headers
        Must be in form of semicolon separated header with value
        e.g.
        headerName:headerValue
        vmalert supports it since 1.79.0 version
    oauth2 : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2, default is Undefined, optional
        oauth2
    tlsConfig : any, default is Undefined, optional
        TLSConfig specifies TLSConfig configuration parameters.
    url : str, default is Undefined, required
        Victoria Metrics or VMSelect url. Required parameter. E.g. http://127.0.0.1:8428
    """


    OAuth2?: any

    basicAuth?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBearerTokenSecret

    headers?: [str]

    oauth2?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2

    tlsConfig?: any

    url: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceBearerTokenSecret:
    """
    Optional bearer auth token to use for -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2:
    """
    OAuth2 defines OAuth2 configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecDatasourceOauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecExtraEnvsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded
        using the previously defined environment variables in the container and
        any service environment variables. If a variable cannot be resolved,
        the reference in the input string will be unchanged. Double $$ are reduced
        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
        Escaped references will never be expanded, regardless of whether the variable
        exists or not.
        Defaults to "".
    """


    name: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecImage:
    """
    Image - docker image settings for VMAlert
    if no specified operator uses default config version

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        PullPolicy describes how to pull docker image
    repository : str, default is Undefined, optional
        Repository contains name of docker image + it's repository if needed
    tag : str, default is Undefined, optional
        Tag contains desired docker image version
    """


    pullPolicy?: str

    repository?: str

    tag?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecImagePullSecretsItems0:
    """
    LocalObjectReference contains enough information to let you locate the
    referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecLicense:
    """
    License allows to configure license key to be used for enterprise features.
    Using license key is supported starting from VictoriaMetrics v1.94.0.
    See: https://docs.victoriametrics.com/enterprise.html

    Attributes
    ----------
    key : str, default is Undefined, optional
        Enterprise license key. This flag is available only in VictoriaMetrics enterprise.
        Documentation - https://docs.victoriametrics.com/enterprise.html
        for more information, visit https://victoriametrics.com/products/enterprise/ .
        To request a trial license, go to https://victoriametrics.com/products/enterprise/trial/
    keyRef : OperatorVictoriametricsComV1beta1VMAlertSpecLicenseKeyRef, default is Undefined, optional
        key ref
    """


    key?: str

    keyRef?: OperatorVictoriametricsComV1beta1VMAlertSpecLicenseKeyRef


schema OperatorVictoriametricsComV1beta1VMAlertSpecLicenseKeyRef:
    """
    KeyRef is reference to secret with license key for enterprise features.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifier:
    """
    Notifier prometheus alertmanager endpoint spec. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093
    If specified both notifier and notifiers, notifier will be added as last element to notifiers.
    only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier

    Attributes
    ----------
    OAuth2 : any, default is Undefined, optional
        o auth2
    basicAuth : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        Path to bearer token file
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBearerTokenSecret, default is Undefined, optional
        bearer token secret
    headers : [str], default is Undefined, optional
        Headers allow configuring custom http headers
        Must be in form of semicolon separated header with value
        e.g.
        headerName:headerValue
        vmalert supports it since 1.79.0 version
    oauth2 : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2, default is Undefined, optional
        oauth2
    selector : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelector, default is Undefined, optional
        selector
    tlsConfig : any, default is Undefined, optional
        TLSConfig specifies TLSConfig configuration parameters.
    url : str, default is Undefined, optional
        AlertManager url.  E.g. http://127.0.0.1:9093
    """


    OAuth2?: any

    basicAuth?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBearerTokenSecret

    headers?: [str]

    oauth2?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2

    selector?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelector

    tlsConfig?: any

    url?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierBearerTokenSecret:
    """
    Optional bearer auth token to use for -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierConfigRef:
    """
    NotifierConfigRef reference for secret with notifier configuration for vmalert
    only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2:
    """
    OAuth2 defines OAuth2 configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierOauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelector:
    """
    Selector allows service discovery for alertmanager
    in this case all matched vmalertmanager replicas will be added into vmalert notifier.url
    as statefulset pod.fqdn

    Attributes
    ----------
    labelSelector : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorNamespaceSelector, default is Undefined, optional
        namespace selector
    """


    labelSelector?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorLabelSelector

    namespaceSelector?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorNamespaceSelector


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorLabelSelector:
    """
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifierSelectorNamespaceSelector:
    """
    NamespaceSelector is a selector for selecting either all namespaces or a
    list of namespaces.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a
        list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names.
    """


    any?: bool

    matchNames?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0:
    """
    VMAlertNotifierSpec defines the notifier url for sending information about alerts

    Attributes
    ----------
    OAuth2 : any, default is Undefined, optional
        o auth2
    basicAuth : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        Path to bearer token file
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BearerTokenSecret, default is Undefined, optional
        bearer token secret
    headers : [str], default is Undefined, optional
        Headers allow configuring custom http headers
        Must be in form of semicolon separated header with value
        e.g.
        headerName:headerValue
        vmalert supports it since 1.79.0 version
    oauth2 : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2, default is Undefined, optional
        oauth2
    selector : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Selector, default is Undefined, optional
        selector
    tlsConfig : any, default is Undefined, optional
        TLSConfig specifies TLSConfig configuration parameters.
    url : str, default is Undefined, optional
        AlertManager url.  E.g. http://127.0.0.1:9093
    """


    OAuth2?: any

    basicAuth?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BearerTokenSecret

    headers?: [str]

    oauth2?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2

    selector?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Selector

    tlsConfig?: any

    url?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0BearerTokenSecret:
    """
    Optional bearer auth token to use for -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2:
    """
    OAuth2 defines OAuth2 configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Oauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0Selector:
    """
    Selector allows service discovery for alertmanager
    in this case all matched vmalertmanager replicas will be added into vmalert notifier.url
    as statefulset pod.fqdn

    Attributes
    ----------
    labelSelector : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorNamespaceSelector, default is Undefined, optional
        namespace selector
    """


    labelSelector?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorLabelSelector

    namespaceSelector?: OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorNamespaceSelector


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorLabelSelector:
    """
    A label selector is a label query over a set of resources. The result of matchLabels and
    matchExpressions are ANDed. An empty label selector matches all objects. A null
    label selector matches no objects.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecNotifiersItems0SelectorNamespaceSelector:
    """
    NamespaceSelector is a selector for selecting either all namespaces or a
    list of namespaces.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a
        list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names.
    """


    any?: bool

    matchNames?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecPodDisruptionBudget:
    """
    PodDisruptionBudget created by operator

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by
        "selector" are unavailable after the eviction, i.e. even in absence of
        the evicted pod. For example, one can prevent all voluntary evictions
        by specifying 0. This is a mutually exclusive setting with "minAvailable".
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by
        "selector" will still be available after the eviction, i.e. even in the
        absence of the evicted pod.  So for example you can prevent all voluntary
        evictions by specifying "100%".
    selectorLabels : {str:str}, default is Undefined, optional
        replaces default labels selector generated by operator
        it's useful when you need to create custom budget
    """


    maxUnavailable?: int | str

    minAvailable?: int | str

    selectorLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAlertSpecPodMetadata:
    """
    PodMetadata configures Labels and Annotations which are propagated to the VMAlert pods.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although
        some resources may allow a client to request the generation of an appropriate name
        automatically. Name is primarily intended for creation idempotence and configuration
        definition.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecReadinessGatesItems0:
    """
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """


    conditionType: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteRead:
    """
    RemoteRead Optional URL to read vmalert state (persisted via RemoteWrite)
    This configuration only makes sense if alerts state has been successfully
    persisted (via RemoteWrite) before.
    see -remoteRead.url docs in vmalerts for details.
    E.g. http://127.0.0.1:8428

    Attributes
    ----------
    OAuth2 : any, default is Undefined, optional
        o auth2
    basicAuth : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        Path to bearer token file
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBearerTokenSecret, default is Undefined, optional
        bearer token secret
    headers : [str], default is Undefined, optional
        Headers allow configuring custom http headers
        Must be in form of semicolon separated header with value
        e.g.
        headerName:headerValue
        vmalert supports it since 1.79.0 version
    lookback : str, default is Undefined, optional
        Lookback defines how far to look into past for alerts timeseries. For example, if lookback=1h then range from now() to now()-1h will be scanned. (default 1h0m0s)
        Applied only to RemoteReadSpec
    oauth2 : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2, default is Undefined, optional
        oauth2
    tlsConfig : any, default is Undefined, optional
        TLSConfig specifies TLSConfig configuration parameters.
    url : str, default is Undefined, required
        URL of the endpoint to send samples to.
    """


    OAuth2?: any

    basicAuth?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBearerTokenSecret

    headers?: [str]

    lookback?: str

    oauth2?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2

    tlsConfig?: any

    url: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadBearerTokenSecret:
    """
    Optional bearer auth token to use for -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2:
    """
    OAuth2 defines OAuth2 configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteReadOauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWrite:
    """
    RemoteWrite Optional URL to remote-write compatible storage to persist
    vmalert state and rule results to.
    Rule results will be persisted according to each rule.
    Alerts state will be persisted in the form of time series named ALERTS and ALERTS_FOR_STATE
    see -remoteWrite.url docs in vmalerts for details.
    E.g. http://127.0.0.1:8428

    Attributes
    ----------
    OAuth2 : any, default is Undefined, optional
        o auth2
    basicAuth : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenFile : str, default is Undefined, optional
        Path to bearer token file
    bearerTokenSecret : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBearerTokenSecret, default is Undefined, optional
        bearer token secret
    concurrency : int, default is Undefined, optional
        Defines number of readers that concurrently write into remote storage (default 1)
    flushInterval : str, default is Undefined, optional
        Defines interval of flushes to remote write endpoint (default 5s)
    headers : [str], default is Undefined, optional
        Headers allow configuring custom http headers
        Must be in form of semicolon separated header with value
        e.g.
        headerName:headerValue
        vmalert supports it since 1.79.0 version
    maxBatchSize : int, default is Undefined, optional
        Defines defines max number of timeseries to be flushed at once (default 1000)
    maxQueueSize : int, default is Undefined, optional
        Defines the max number of pending datapoints to remote write endpoint (default 100000)
    oauth2 : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2, default is Undefined, optional
        oauth2
    tlsConfig : any, default is Undefined, optional
        TLSConfig specifies TLSConfig configuration parameters.
    url : str, default is Undefined, required
        URL of the endpoint to send samples to.
    """


    OAuth2?: any

    basicAuth?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuth

    bearerTokenFile?: str

    bearerTokenSecret?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBearerTokenSecret

    concurrency?: int

    flushInterval?: str

    headers?: [str]

    maxBatchSize?: int

    maxQueueSize?: int

    oauth2?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2

    tlsConfig?: any

    url: str


    check:
        regex.match(str(flushInterval), r"[0-9]+(ms|s|m|h)") if flushInterval


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuthPassword, default is Undefined, optional
        password
    password_file : str, default is Undefined, optional
        PasswordFile defines path to password file at disk
    username : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuthPassword

    password_file?: str

    username?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuthUsername


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuthPassword:
    """
    The secret in the service scrape namespace that contains the password
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBasicAuthUsername:
    """
    The secret in the service scrape namespace that contains the username
    for authentication.
    It must be at them same namespace as CRD

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteBearerTokenSecret:
    """
    Optional bearer auth token to use for -remoteWrite.url

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2:
    """
    OAuth2 defines OAuth2 configuration

    Attributes
    ----------
    client_id : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientID, default is Undefined, required
        client id
    client_secret : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientSecret, default is Undefined, optional
        client secret
    client_secret_file : str, default is Undefined, optional
        ClientSecretFile defines path for client secret file.
    endpoint_params : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    token_url : str, default is Undefined, required
        The URL to fetch the token from
    """


    client_id: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientID

    client_secret?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientSecret

    client_secret_file?: str

    endpoint_params?: {str:str}

    scopes?: [str]

    token_url: str


    check:
        len(token_url) >= 1


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientIDConfigMap

    secret?: OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientIDSecret


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecRemoteWriteOauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecResources:
    """
    Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [OperatorVictoriametricsComV1beta1VMAlertSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims,
        that are used by this container.


        This is an alpha field and requires enabling the
        DynamicResourceAllocation feature gate.


        This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
        otherwise to an implementation-defined value. Requests cannot exceed Limits.
        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [OperatorVictoriametricsComV1beta1VMAlertSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits {regex.match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests {regex.match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema OperatorVictoriametricsComV1beta1VMAlertSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of
        the Pod where this field is used. It makes that resource available
        inside a container.
    """


    name: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecRollingUpdate:
    """
    RollingUpdate - overrides deployment update params.

    Attributes
    ----------
    maxSurge : int | str, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of
        pods.
        Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
        This can not be 0 if MaxUnavailable is 0.
        Absolute number is calculated from percentage by rounding up.
        Defaults to 25%.
        Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
        the rolling update starts, such that the total number of old and new pods do not exceed
        130% of desired pods. Once old pods have been killed,
        new ReplicaSet can be scaled up further, ensuring that total number of pods running
        at any time during the update is at most 130% of desired pods.
    maxUnavailable : int | str, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update.
        Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
        Absolute number is calculated from percentage by rounding down.
        This can not be 0 if MaxSurge is 0.
        Defaults to 25%.
        Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
        immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
        can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
        that the total number of pods available at all times during the update is at
        least 70% of desired pods.
    """


    maxSurge?: int | str

    maxUnavailable?: int | str


schema OperatorVictoriametricsComV1beta1VMAlertSpecRuleNamespaceSelector:
    """
    RuleNamespaceSelector to be selected for VMRules discovery.
    Works in combination with Selector.
    If both nil - behaviour controlled by selectAllByDefault
    NamespaceSelector nil - only objects at VMAlert namespace.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAlertSpecRuleNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAlertSpecRuleNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAlertSpecRuleNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecRuleSelector:
    """
    RuleSelector selector to select which VMRules to mount for loading alerting
    rules from.
    Works in combination with NamespaceSelector.
    If both nil - behaviour controlled by selectAllByDefault
    NamespaceSelector nil - only objects at VMAlert namespace.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMAlertSpecRuleSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMAlertSpecRuleSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMAlertSpecRuleSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMAlertSpecServiceSpec:
    """
    ServiceSpec that will be added to vmalert service spec

    Attributes
    ----------
    metadata : OperatorVictoriametricsComV1beta1VMAlertSpecServiceSpecMetadata, default is Undefined, optional
        metadata
    spec : any, default is Undefined, required
        ServiceSpec describes the attributes that a user creates on a service.
        More info: https://kubernetes.io/docs/concepts/services-networking/service/
    useAsDefault : bool, default is Undefined, optional
        UseAsDefault applies changes from given service definition to the main object Service
        Changing from headless service to clusterIP or loadbalancer may break cross-component communication
    """


    metadata?: OperatorVictoriametricsComV1beta1VMAlertSpecServiceSpecMetadata

    spec: any

    useAsDefault?: bool


schema OperatorVictoriametricsComV1beta1VMAlertSpecServiceSpecMetadata:
    """
    EmbeddedObjectMetadata defines objectMeta for additional service.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be
        set by external tools to store and retrieve arbitrary metadata. They are not
        queryable and should be preserved when modifying objects.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and services.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although
        some resources may allow a client to request the generation of an appropriate name
        automatically. Name is primarily intended for creation idempotence and configuration
        definition.
        Cannot be updated.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches
    the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects.
        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys.
        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value.
        Valid operators are Exists and Equal. Defaults to Equal.
        Exists is equivalent to wildcard for value, so that a pod can
        tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be
        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
        it is not set, which means tolerate the taint forever (do not evict). Zero and
        negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to.
        If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OperatorVictoriametricsComV1beta1VMAlertSpecVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must
        not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host
        to container and the other way around.
        When not set, MountPropagationNone is used.
        This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified).
        Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted.
        Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
        Defaults to "" (volume's root).
        SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OperatorVictoriametricsComV1beta1VMAlertStatus:
    """
    VMAlertStatus defines the observed state of VMAlert

    Attributes
    ----------
    availableReplicas : int, default is Undefined, optional
        AvailableReplicas Total number of available pods (ready for at least minReadySeconds)
        targeted by this VMAlert cluster.
    reason : str, default is Undefined, optional
        Reason defines fail reason for update process, effective only for statefulMode
    replicas : int, default is Undefined, optional
        ReplicaCount Total number of non-terminated pods targeted by this VMAlert
        cluster (their labels match the selector).
    unavailableReplicas : int, default is Undefined, optional
        UnavailableReplicas Total number of unavailable pods targeted by this VMAlert cluster.
    updateStatus : str, default is Undefined, optional
        UpdateStatus defines a status for update rollout, effective only for statefulMode
    updatedReplicas : int, default is Undefined, optional
        UpdatedReplicas Total number of non-terminated pods targeted by this VMAlert
        cluster that have the desired version spec.
    """


    availableReplicas?: int

    reason?: str

    replicas?: int

    unavailableReplicas?: int

    updateStatus?: str

    updatedReplicas?: int


