"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema VMCluster:
    """
    VMCluster is fast, cost-effective and scalable time-series database. Cluster version with

    Attributes
    ----------
    apiVersion : str, default is "operator.victoriametrics.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VMCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OperatorVictoriametricsComV1beta1VMClusterSpec, default is Undefined, required
        spec
    status : OperatorVictoriametricsComV1beta1VMClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "operator.victoriametrics.com/v1beta1" = "operator.victoriametrics.com/v1beta1"

    kind: "VMCluster" = "VMCluster"

    metadata?: v1.ObjectMeta

    spec: OperatorVictoriametricsComV1beta1VMClusterSpec

    status?: OperatorVictoriametricsComV1beta1VMClusterStatus


schema OperatorVictoriametricsComV1beta1VMClusterSpec:
    """
    VMClusterSpec defines the desired state of VMCluster

    Attributes
    ----------
    _ : str, default is Undefined, optional
        ParsingError contents error with context if operator was failed to parse json object from kubernetes api server
    clusterVersion : str, default is Undefined, optional
        ClusterVersion defines default images tag for all components. it can be overwritten with component specific image.tag value.
    imagePullSecrets : [OperatorVictoriametricsComV1beta1VMClusterSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets An optional list of references to secrets in the same namespace to use for pulling images from registries see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
    podSecurityPolicyName : str, default is Undefined, optional
        PodSecurityPolicyName - defines name for podSecurityPolicy in case of empty value, prefixedName will be used.
    replicationFactor : int, default is Undefined, optional
        ReplicationFactor defines how many copies of data make among distinct storage nodes
    retentionPeriod : str, default is Undefined, required
        RetentionPeriod for the stored metrics Note VictoriaMetrics has data/ and indexdb/ folders metrics from data/ removed eventually as soon as partition leaves retention period reverse index data at indexdb rotates once at the half of configured retention period https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#retention
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run the VMSelect, VMStorage and VMInsert Pods.
    vminsert : OperatorVictoriametricsComV1beta1VMClusterSpecVminsert, default is Undefined, optional
        vminsert
    vmselect : OperatorVictoriametricsComV1beta1VMClusterSpecVmselect, default is Undefined, optional
        vmselect
    vmstorage : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorage, default is Undefined, optional
        vmstorage
    """


    _?: str

    clusterVersion?: str

    imagePullSecrets?: [OperatorVictoriametricsComV1beta1VMClusterSpecImagePullSecretsItems0]

    podSecurityPolicyName?: str

    replicationFactor?: int

    retentionPeriod: str

    serviceAccountName?: str

    vminsert?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsert

    vmselect?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselect

    vmstorage?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorage


schema OperatorVictoriametricsComV1beta1VMClusterSpecImagePullSecretsItems0:
    """
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsert:
    """
    operator victoriametrics com v1beta1 VM cluster spec vminsert

    Attributes
    ----------
    affinity : any, default is Undefined, optional
        Affinity If specified, the pod's scheduling constraints.
    clusterNativeListenPort : str, default is Undefined, optional
        ClusterNativePort for multi-level cluster setup. More details: https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#multi-level-cluster-setup
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
    containers : [any], default is Undefined, optional
        Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.
    dnsConfig : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        DNSPolicy sets DNS policy for the pod
    extraArgs : {str:str}, default is Undefined, optional
        extra args
    extraEnvs : [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertExtraEnvsItems0], default is Undefined, optional
        ExtraEnvs that will be added to VMSelect pod
    hostNetwork : bool, default is Undefined, optional
        HostNetwork controls whether the pod may use the node network namespace
    hpa : any, default is Undefined, optional
        HPA defines kubernetes PodAutoScaling configuration version 2.
    image : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertImage, default is Undefined, optional
        image
    initContainers : [any], default is Undefined, optional
        InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the VMSelect configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    insertPorts : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertInsertPorts, default is Undefined, optional
        insert ports
    livenessProbe : any, default is Undefined, optional
        LivenessProbe that will be added CRD pod
    logFormat : str, default is Undefined, optional
        LogFormat for VMSelect to be configured with. default or json
    logLevel : str, default is Undefined, optional
        LogLevel for VMSelect to be configured with.
    name : str, default is Undefined, optional
        Name is deprecated and will be removed at 0.22.0 release
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector Define which Nodes the Pods are scheduled on.
    podDisruptionBudget : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertPodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    podMetadata : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertPodMetadata, default is Undefined, optional
        pod metadata
    port : str, default is Undefined, optional
        Port listen port
    priorityClassName : str, default is Undefined, optional
        Priority class assigned to the Pods
    readinessGates : [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertReadinessGatesItems0], default is Undefined, optional
        ReadinessGates defines pod readiness gates
    readinessProbe : any, default is Undefined, optional
        ReadinessProbe that will be added CRD pod
    replicaCount : int, default is Undefined, required
        ReplicaCount is the expected size of the VMInsert cluster. The controller will eventually make the size of the running cluster equal to the expected size.
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertResources, default is Undefined, optional
        resources
    rollingUpdate : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertRollingUpdate, default is Undefined, optional
        rolling update
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/
    schedulerName : str, default is Undefined, optional
        SchedulerName - defines kubernetes scheduler name
    secrets : [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The Secrets are mounted into /etc/vm/secrets/<secret-name>.
    securityContext : any, default is Undefined, optional
        SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
    serviceScrapeSpec : any, default is Undefined, optional
        ServiceScrapeSpec that will be added to vminsert VMServiceScrape spec
    serviceSpec : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertServiceSpec, default is Undefined, optional
        service spec
    startupProbe : any, default is Undefined, optional
        StartupProbe that will be added to CRD pod
    terminationGracePeriodSeconds : int, default is Undefined, optional
        TerminationGracePeriodSeconds period for container graceful termination
    tolerations : [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertTolerationsItems0], default is Undefined, optional
        Tolerations If specified, the pod's tolerations.
    topologySpreadConstraints : [any], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    updateStrategy : str, default is Undefined, optional
        UpdateStrategy - overrides default update strategy.
    volumeMounts : [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container, that are generated as a result of StorageSpec objects.
    volumes : [any], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output Deployment definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    """


    affinity?: any

    clusterNativeListenPort?: str

    configMaps?: [str]

    containers?: [any]

    dnsConfig?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertDNSConfig

    dnsPolicy?: str

    extraArgs?: {str:str}

    extraEnvs?: [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertExtraEnvsItems0]

    hostNetwork?: bool

    hpa?: any

    image?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertImage

    initContainers?: [any]

    insertPorts?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertInsertPorts

    livenessProbe?: any

    logFormat?: "default" | "json"

    logLevel?: "INFO" | "WARN" | "ERROR" | "FATAL" | "PANIC"

    name?: str

    nodeSelector?: {str:str}

    podDisruptionBudget?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertPodDisruptionBudget

    podMetadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertPodMetadata

    port?: str

    priorityClassName?: str

    readinessGates?: [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertReadinessGatesItems0]

    readinessProbe?: any

    replicaCount: int

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertResources

    rollingUpdate?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertRollingUpdate

    runtimeClassName?: str

    schedulerName?: str

    secrets?: [str]

    securityContext?: any

    serviceScrapeSpec?: any

    serviceSpec?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertServiceSpec

    startupProbe?: any

    terminationGracePeriodSeconds?: int

    tolerations?: [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertTolerationsItems0]

    topologySpreadConstraints?: [any]

    updateStrategy?: "Recreate" | "RollingUpdate"

    volumeMounts?: [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertVolumeMountsItems0]

    volumes?: [any]


schema [any]:
    """
    Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [OperatorVictoriametricsComV1beta1VMClusterSpecVminsertDNSConfigOptionsItems0]

    searches?: [str]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertDNSConfigOptionsItems0:
    """
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertExtraEnvsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    """


    name: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertImage:
    """
    Image - docker image settings for VMInsert

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        PullPolicy describes how to pull docker image
    repository : str, default is Undefined, optional
        Repository contains name of docker image + it's repository if needed
    tag : str, default is Undefined, optional
        Tag contains desired docker image version
    """


    pullPolicy?: str

    repository?: str

    tag?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertInsertPorts:
    """
    InsertPorts - additional listen ports for data ingestion.

    Attributes
    ----------
    graphitePort : str, default is Undefined, optional
        GraphitePort listen port
    influxPort : str, default is Undefined, optional
        InfluxPort listen port
    openTSDBHTTPPort : str, default is Undefined, optional
        OpenTSDBHTTPPort for http connections.
    openTSDBPort : str, default is Undefined, optional
        OpenTSDBPort for tcp and udp listen
    """


    graphitePort?: str

    influxPort?: str

    openTSDBHTTPPort?: str

    openTSDBPort?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertPodDisruptionBudget:
    """
    PodDisruptionBudget created by operator

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
    selectorLabels : {str:str}, default is Undefined, optional
        replaces default labels selector generated by operator it's useful when you need to create custom budget
    """


    maxUnavailable?: int | str

    minAvailable?: int | str

    selectorLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertPodMetadata:
    """
    PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertReadinessGatesItems0:
    """
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """


    conditionType: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertResources:
    """
    Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertRollingUpdate:
    """
    RollingUpdate - overrides deployment update params.

    Attributes
    ----------
    maxSurge : int | str, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new ReplicaSet can be scaled up further, ensuring that total number of pods running at any time during the update is at most 130% of desired pods.
    maxUnavailable : int | str, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old ReplicaSet can be scaled down further, followed by scaling up the new ReplicaSet, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
    """


    maxSurge?: int | str

    maxUnavailable?: int | str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertServiceSpec:
    """
    ServiceSpec that will be added to vminsert service spec

    Attributes
    ----------
    metadata : OperatorVictoriametricsComV1beta1VMClusterSpecVminsertServiceSpecMetadata, default is Undefined, optional
        metadata
    spec : any, default is Undefined, required
        ServiceSpec describes the attributes that a user creates on a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/
    """


    metadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVminsertServiceSpecMetadata

    spec: any


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertServiceSpecMetadata:
    """
    EmbeddedObjectMetadata defines objectMeta for additional service.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVminsertVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselect:
    """
    operator victoriametrics com v1beta1 VM cluster spec vmselect

    Attributes
    ----------
    affinity : any, default is Undefined, optional
        Affinity If specified, the pod's scheduling constraints.
    cacheMountPath : str, default is Undefined, optional
        CacheMountPath allows to add cache persistent for VMSelect, will use "/cache" as default if not specified.
    claimTemplates : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0], default is Undefined, optional
        ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet
    clusterNativeListenPort : str, default is Undefined, optional
        ClusterNativePort for multi-level cluster setup. More details: https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#multi-level-cluster-setup
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
    containers : [any], default is Undefined, optional
        Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.
    dnsConfig : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        DNSPolicy sets DNS policy for the pod
    extraArgs : {str:str}, default is Undefined, optional
        extra args
    extraEnvs : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectExtraEnvsItems0], default is Undefined, optional
        ExtraEnvs that will be added to VMSelect pod
    hostNetwork : bool, default is Undefined, optional
        HostNetwork controls whether the pod may use the node network namespace
    hpa : any, default is Undefined, optional
        Configures horizontal pod autoscaling. Note, enabling this option disables vmselect to vmselect communication. In most cases it's not an issue.
    image : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectImage, default is Undefined, optional
        image
    initContainers : [any], default is Undefined, optional
        InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the VMSelect configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    livenessProbe : any, default is Undefined, optional
        LivenessProbe that will be added CRD pod
    logFormat : str, default is Undefined, optional
        LogFormat for VMSelect to be configured with. default or json
    logLevel : str, default is Undefined, optional
        LogLevel for VMSelect to be configured with.
    name : str, default is Undefined, optional
        Name is deprecated and will be removed at 0.22.0 release
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector Define which Nodes the Pods are scheduled on.
    persistentVolume : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPersistentVolume, default is Undefined, optional
        persistent volume
    podDisruptionBudget : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    podMetadata : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPodMetadata, default is Undefined, optional
        pod metadata
    port : str, default is Undefined, optional
        Port listen port
    priorityClassName : str, default is Undefined, optional
        Priority class assigned to the Pods
    readinessGates : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectReadinessGatesItems0], default is Undefined, optional
        ReadinessGates defines pod readiness gates
    readinessProbe : any, default is Undefined, optional
        ReadinessProbe that will be added CRD pod
    replicaCount : int, default is Undefined, required
        ReplicaCount is the expected size of the VMSelect cluster. The controller will eventually make the size of the running cluster equal to the expected size.
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectResources, default is Undefined, optional
        resources
    rollingUpdateStrategy : str, default is Undefined, optional
        RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/
    schedulerName : str, default is Undefined, optional
        SchedulerName - defines kubernetes scheduler name
    secrets : [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The Secrets are mounted into /etc/vm/secrets/<secret-name>.
    securityContext : any, default is Undefined, optional
        SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
    serviceScrapeSpec : any, default is Undefined, optional
        ServiceScrapeSpec that will be added to vmselect VMServiceScrape spec
    serviceSpec : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectServiceSpec, default is Undefined, optional
        service spec
    startupProbe : any, default is Undefined, optional
        StartupProbe that will be added to CRD pod
    storage : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorage, default is Undefined, optional
        storage
    terminationGracePeriodSeconds : int, default is Undefined, optional
        TerminationGracePeriodSeconds period for container graceful termination
    tolerations : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectTolerationsItems0], default is Undefined, optional
        Tolerations If specified, the pod's tolerations.
    topologySpreadConstraints : [any], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    volumeMounts : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container, that are generated as a result of StorageSpec objects.
    volumes : [any], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output Deployment definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    """


    affinity?: any

    cacheMountPath?: str

    claimTemplates?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0]

    clusterNativeListenPort?: str

    configMaps?: [str]

    containers?: [any]

    dnsConfig?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectDNSConfig

    dnsPolicy?: str

    extraArgs?: {str:str}

    extraEnvs?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectExtraEnvsItems0]

    hostNetwork?: bool

    hpa?: any

    image?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectImage

    initContainers?: [any]

    livenessProbe?: any

    logFormat?: "default" | "json"

    logLevel?: "INFO" | "WARN" | "ERROR" | "FATAL" | "PANIC"

    name?: str

    nodeSelector?: {str:str}

    persistentVolume?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPersistentVolume

    podDisruptionBudget?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPodDisruptionBudget

    podMetadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPodMetadata

    port?: str

    priorityClassName?: str

    readinessGates?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectReadinessGatesItems0]

    readinessProbe?: any

    replicaCount: int

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectResources

    rollingUpdateStrategy?: str

    runtimeClassName?: str

    schedulerName?: str

    secrets?: [str]

    securityContext?: any

    serviceScrapeSpec?: any

    serviceSpec?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectServiceSpec

    startupProbe?: any

    storage?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorage

    terminationGracePeriodSeconds?: int

    tolerations?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectTolerationsItems0]

    topologySpreadConstraints?: [any]

    volumeMounts?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectVolumeMountsItems0]

    volumes?: [any]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0:
    """
    PersistentVolumeClaim is a user's request for and claim to a persistent volume

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    spec : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0Spec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0Status, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0Spec

    status?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0Status


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0Spec:
    """
    spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecResources, default is Undefined, optional
        resources
    selector : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecDataSource

    dataSourceRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecDataSourceRef

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecResources

    selector?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0SpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0Status:
    """
    status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0StatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        resizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0StatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, n in allocatedResources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectClaimTemplatesItems0StatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contails details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema [any]:
    """
    Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectDNSConfigOptionsItems0]

    searches?: [str]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectDNSConfigOptionsItems0:
    """
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectExtraEnvsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    """


    name: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectImage:
    """
    Image - docker image settings for VMSelect

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        PullPolicy describes how to pull docker image
    repository : str, default is Undefined, optional
        Repository contains name of docker image + it's repository if needed
    tag : str, default is Undefined, optional
        Tag contains desired docker image version
    """


    pullPolicy?: str

    repository?: str

    tag?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPersistentVolume:
    """
    Storage - add persistent volume for cacheMounthPath its useful for persistent cache use storage instead of persistentVolume.

    Attributes
    ----------
    disableMountSubPath : bool, default is Undefined, optional
        Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.
    emptyDir : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPersistentVolumeEmptyDir, default is Undefined, optional
        empty dir
    volumeClaimTemplate : any, default is Undefined, optional
        A PVC spec to be used by the VMAlertManager StatefulSets.
    """


    disableMountSubPath?: bool

    emptyDir?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPersistentVolumeEmptyDir

    volumeClaimTemplate?: any


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPersistentVolumeEmptyDir:
    """
    EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPodDisruptionBudget:
    """
    PodDisruptionBudget created by operator

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
    selectorLabels : {str:str}, default is Undefined, optional
        replaces default labels selector generated by operator it's useful when you need to create custom budget
    """


    maxUnavailable?: int | str

    minAvailable?: int | str

    selectorLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectPodMetadata:
    """
    PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectReadinessGatesItems0:
    """
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """


    conditionType: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectResources:
    """
    Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectServiceSpec:
    """
    ServiceSpec that will be added to vmselect service spec

    Attributes
    ----------
    metadata : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectServiceSpecMetadata, default is Undefined, optional
        metadata
    spec : any, default is Undefined, required
        ServiceSpec describes the attributes that a user creates on a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/
    """


    metadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectServiceSpecMetadata

    spec: any


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectServiceSpecMetadata:
    """
    EmbeddedObjectMetadata defines objectMeta for additional service.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorage:
    """
    StorageSpec - add persistent volume claim for cacheMountPath its needed for persistent cache

    Attributes
    ----------
    disableMountSubPath : bool, default is Undefined, optional
        Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.
    emptyDir : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageEmptyDir, default is Undefined, optional
        empty dir
    volumeClaimTemplate : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    disableMountSubPath?: bool

    emptyDir?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageEmptyDir

    volumeClaimTemplate?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplate


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageEmptyDir:
    """
    EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplate:
    """
    A PVC spec to be used by the VMAlertManager StatefulSets.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateMetadata, default is Undefined, optional
        metadata
    spec : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateMetadata

    spec?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpec

    status?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateStatus


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateMetadata:
    """
    EmbeddedMetadata contains metadata relevant to an EmbeddedResource.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpec:
    """
    Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecDataSource

    dataSourceRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecDataSourceRef

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecResources

    selector?: OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateStatus:
    """
    Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateStatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        resizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateStatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, n in allocatedResources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectStorageVolumeClaimTemplateStatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contails details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmselectVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorage:
    """
    operator victoriametrics com v1beta1 VM cluster spec vmstorage

    Attributes
    ----------
    affinity : any, default is Undefined, optional
        Affinity If specified, the pod's scheduling constraints.
    claimTemplates : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0], default is Undefined, optional
        ClaimTemplates allows adding additional VolumeClaimTemplates for StatefulSet
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The ConfigMaps are mounted into /etc/vm/configs/<configmap-name>.
    containers : [any], default is Undefined, optional
        Containers property allows to inject additions sidecars or to patch existing containers. It can be useful for proxies, backup, etc.
    dnsConfig : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        DNSPolicy sets DNS policy for the pod
    extraArgs : {str:str}, default is Undefined, optional
        extra args
    extraEnvs : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageExtraEnvsItems0], default is Undefined, optional
        ExtraEnvs that will be added to VMSelect pod
    hostNetwork : bool, default is Undefined, optional
        HostNetwork controls whether the pod may use the node network namespace
    image : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageImage, default is Undefined, optional
        image
    initContainers : [any], default is Undefined, optional
        InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the VMSelect configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other then secret fetching is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    livenessProbe : any, default is Undefined, optional
        LivenessProbe that will be added CRD pod
    logFormat : str, default is Undefined, optional
        LogFormat for VMSelect to be configured with. default or json
    logLevel : str, default is Undefined, optional
        LogLevel for VMSelect to be configured with.
    maintenanceInsertNodeIDs : [int], default is Undefined, optional
        MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when you want to rebalance some data at cluster.
    maintenanceSelectNodeIDs : [int], default is Undefined, optional
        MaintenanceInsertNodeIDs - excludes given node ids from select requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.
    name : str, default is Undefined, optional
        Name is deprecated and will be removed at 0.22.0 release
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector Define which Nodes the Pods are scheduled on.
    podDisruptionBudget : OperatorVictoriametricsComV1beta1VMClusterSpecVmstoragePodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    podMetadata : OperatorVictoriametricsComV1beta1VMClusterSpecVmstoragePodMetadata, default is Undefined, optional
        pod metadata
    port : str, default is Undefined, optional
        Port for health check connetions
    priorityClassName : str, default is Undefined, optional
        Priority class assigned to the Pods
    readinessGates : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageReadinessGatesItems0], default is Undefined, optional
        ReadinessGates defines pod readiness gates
    readinessProbe : any, default is Undefined, optional
        ReadinessProbe that will be added CRD pod
    replicaCount : int, default is Undefined, required
        ReplicaCount is the expected size of the VMStorage cluster. The controller will eventually make the size of the running cluster equal to the expected size.
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageResources, default is Undefined, optional
        resources
    rollingUpdateStrategy : str, default is Undefined, optional
        RollingUpdateStrategy defines strategy for application updates Default is OnDelete, in this case operator handles update process Can be changed for RollingUpdate
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName - defines runtime class for kubernetes pod. https://kubernetes.io/docs/concepts/containers/runtime-class/
    schedulerName : str, default is Undefined, optional
        SchedulerName - defines kubernetes scheduler name
    secrets : [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the VMSelect object, which shall be mounted into the VMSelect Pods. The Secrets are mounted into /etc/vm/secrets/<secret-name>.
    securityContext : any, default is Undefined, optional
        SecurityContext holds pod-level security attributes and common container settings. This defaults to the default PodSecurityContext.
    serviceScrapeSpec : any, default is Undefined, optional
        ServiceScrapeSpec that will be added to vmstorage VMServiceScrape spec
    serviceSpec : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageServiceSpec, default is Undefined, optional
        service spec
    startupProbe : any, default is Undefined, optional
        StartupProbe that will be added to CRD pod
    storage : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageStorage, default is Undefined, optional
        storage
    storageDataPath : str, default is Undefined, optional
        StorageDataPath - path to storage data
    terminationGracePeriodSeconds : int, default is Undefined, optional
        TerminationGracePeriodSeconds period for container graceful termination
    tolerations : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageTolerationsItems0], default is Undefined, optional
        Tolerations If specified, the pod's tolerations.
    topologySpreadConstraints : [any], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined topology domains https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    vmBackup : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackup, default is Undefined, optional
        vm backup
    vmInsertPort : str, default is Undefined, optional
        VMInsertPort for VMInsert connections
    vmSelectPort : str, default is Undefined, optional
        VMSelectPort for VMSelect connections
    volumeMounts : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the VMSelect container, that are generated as a result of StorageSpec objects.
    volumes : [any], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output Deployment definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    """


    affinity?: any

    claimTemplates?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0]

    configMaps?: [str]

    containers?: [any]

    dnsConfig?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageDNSConfig

    dnsPolicy?: str

    extraArgs?: {str:str}

    extraEnvs?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageExtraEnvsItems0]

    hostNetwork?: bool

    image?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageImage

    initContainers?: [any]

    livenessProbe?: any

    logFormat?: "default" | "json"

    logLevel?: "INFO" | "WARN" | "ERROR" | "FATAL" | "PANIC"

    maintenanceInsertNodeIDs?: [int]

    maintenanceSelectNodeIDs?: [int]

    name?: str

    nodeSelector?: {str:str}

    podDisruptionBudget?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstoragePodDisruptionBudget

    podMetadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstoragePodMetadata

    port?: str

    priorityClassName?: str

    readinessGates?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageReadinessGatesItems0]

    readinessProbe?: any

    replicaCount: int

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageResources

    rollingUpdateStrategy?: str

    runtimeClassName?: str

    schedulerName?: str

    secrets?: [str]

    securityContext?: any

    serviceScrapeSpec?: any

    serviceSpec?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageServiceSpec

    startupProbe?: any

    storage?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageStorage

    storageDataPath?: str

    terminationGracePeriodSeconds?: int

    tolerations?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageTolerationsItems0]

    topologySpreadConstraints?: [any]

    vmBackup?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackup

    vmInsertPort?: str

    vmSelectPort?: str

    volumeMounts?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVolumeMountsItems0]

    volumes?: [any]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0:
    """
    PersistentVolumeClaim is a user's request for and claim to a persistent volume

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : any, default is Undefined, optional
        Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    spec : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0Spec, default is Undefined, optional
        spec
    status : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0Status, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: any

    spec?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0Spec

    status?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0Status


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0Spec:
    """
    spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecResources, default is Undefined, optional
        resources
    selector : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecDataSource

    dataSourceRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecDataSourceRef

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecResources

    selector?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0SpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0Status:
    """
    status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0StatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        resizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0StatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, n in allocatedResources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageClaimTemplatesItems0StatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contails details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema [any]:
    """
    Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageDNSConfigOptionsItems0]

    searches?: [str]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageDNSConfigOptionsItems0:
    """
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageExtraEnvsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    """


    name: str

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageImage:
    """
    Image - docker image settings for VMStorage

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        PullPolicy describes how to pull docker image
    repository : str, default is Undefined, optional
        Repository contains name of docker image + it's repository if needed
    tag : str, default is Undefined, optional
        Tag contains desired docker image version
    """


    pullPolicy?: str

    repository?: str

    tag?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstoragePodDisruptionBudget:
    """
    PodDisruptionBudget created by operator

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with "minAvailable".
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
    selectorLabels : {str:str}, default is Undefined, optional
        replaces default labels selector generated by operator it's useful when you need to create custom budget
    """


    maxUnavailable?: int | str

    minAvailable?: int | str

    selectorLabels?: {str:str}


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstoragePodMetadata:
    """
    PodMetadata configures Labels and Annotations which are propagated to the VMSelect pods.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageReadinessGatesItems0:
    """
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """


    conditionType: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageResources:
    """
    Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageServiceSpec:
    """
    ServiceSpec that will be create additional service for vmstorage

    Attributes
    ----------
    metadata : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageServiceSpecMetadata, default is Undefined, optional
        metadata
    spec : any, default is Undefined, required
        ServiceSpec describes the attributes that a user creates on a service. More info: https://kubernetes.io/docs/concepts/services-networking/service/
    """


    metadata?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageServiceSpecMetadata

    spec: any


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageServiceSpecMetadata:
    """
    EmbeddedObjectMetadata defines objectMeta for additional service.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Labels Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageStorage:
    """
    Storage - add persistent volume for StorageDataPath its useful for persistent cache

    Attributes
    ----------
    disableMountSubPath : bool, default is Undefined, optional
        Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary. DisableMountSubPath allows to remove any subPath usage in volume mounts.
    emptyDir : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageStorageEmptyDir, default is Undefined, optional
        empty dir
    volumeClaimTemplate : any, default is Undefined, optional
        A PVC spec to be used by the VMAlertManager StatefulSets.
    """


    disableMountSubPath?: bool

    emptyDir?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageStorageEmptyDir

    volumeClaimTemplate?: any


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageStorageEmptyDir:
    """
    EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackup:
    """
    VMBackup configuration for backup

    Attributes
    ----------
    acceptEULA : bool, default is Undefined, required
        AcceptEULA accepts enterprise feature usage, must be set to true. otherwise backupmanager cannot be added to single/cluster version. https://victoriametrics.com/legal/esa/
    concurrency : int, default is Undefined, optional
        Defines number of concurrent workers. Higher concurrency may reduce backup duration (default 10)
    credentialsSecret : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupCredentialsSecret, default is Undefined, optional
        credentials secret
    customS3Endpoint : str, default is Undefined, optional
        Custom S3 endpoint for use with S3-compatible storages (e.g. MinIO). S3 is used if not set
    destination : str, default is Undefined, optional
        Defines destination for backup
    destinationDisableSuffixAdd : bool, default is Undefined, optional
        DestinationDisableSuffixAdd - disables suffix adding for cluster version backups each vmstorage backup must have unique backup folder so operator adds POD_NAME as suffix for backup destination folder.
    disableDaily : bool, default is Undefined, optional
        Defines if daily backups disabled (default false)
    disableHourly : bool, default is Undefined, optional
        Defines if hourly backups disabled (default false)
    disableMonthly : bool, default is Undefined, optional
        Defines if monthly backups disabled (default false)
    disableWeekly : bool, default is Undefined, optional
        Defines if weekly backups disabled (default false)
    extraArgs : {str:str}, default is Undefined, optional
        extra args like maxBytesPerSecond default 0
    extraEnvs : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0], default is Undefined, optional
        extra envs
    image : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupImage, default is Undefined, optional
        image
    logFormat : str, default is Undefined, optional
        LogFormat for VMSelect to be configured with. default or json
    logLevel : str, default is Undefined, optional
        LogLevel for VMSelect to be configured with.
    port : str, default is Undefined, optional
        Port for health check connections
    resources : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupResources, default is Undefined, optional
        resources
    restore : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupRestore, default is Undefined, optional
        restore
    snapshotCreateURL : str, default is Undefined, optional
        SnapshotCreateURL overwrites url for snapshot create
    snapshotDeleteURL : str, default is Undefined, optional
        SnapShotDeleteURL overwrites url for snapshot delete
    volumeMounts : [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupVolumeMountsItems0], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition. VolumeMounts specified will be appended to other VolumeMounts in the vmbackupmanager container, that are generated as a result of StorageSpec objects.
    """


    acceptEULA: bool

    concurrency?: int

    credentialsSecret?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupCredentialsSecret

    customS3Endpoint?: str

    destination?: str

    destinationDisableSuffixAdd?: bool

    disableDaily?: bool

    disableHourly?: bool

    disableMonthly?: bool

    disableWeekly?: bool

    extraArgs?: {str:str}

    extraEnvs?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0]

    image?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupImage

    logFormat?: "default" | "json"

    logLevel?: "INFO" | "WARN" | "ERROR" | "FATAL" | "PANIC"

    port?: str

    resources?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupResources

    restore?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupRestore

    snapshotCreateURL?: str

    snapshotDeleteURL?: str

    volumeMounts?: [OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupVolumeMountsItems0]


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupCredentialsSecret:
    """
    CredentialsSecret is secret in the same namespace for access to remote storage The secret is mounted into /etc/vm/creds.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFrom


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromConfigMapKeyRef

    fieldRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromFieldRef

    resourceFieldRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromResourceFieldRef

    secretKeyRef?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromSecretKeyRef


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupExtraEnvsItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupImage:
    """
    Image - docker image settings for VMBackuper

    Attributes
    ----------
    pullPolicy : str, default is Undefined, optional
        PullPolicy describes how to pull docker image
    repository : str, default is Undefined, optional
        Repository contains name of docker image + it's repository if needed
    tag : str, default is Undefined, optional
        Tag contains desired docker image version
    """


    pullPolicy?: str

    repository?: str

    tag?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupResources:
    """
    Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ if not defined default resources from operator config will be used

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupRestore:
    """
    Restore Allows to enable restore options for pod Read more: https://docs.victoriametrics.com/vmbackupmanager.html#restore-commands

    Attributes
    ----------
    onStart : OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupRestoreOnStart, default is Undefined, optional
        on start
    """


    onStart?: OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupRestoreOnStart


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupRestoreOnStart:
    """
    OnStart defines configuration for restore on pod start

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled defines if restore on start enabled
    """


    enabled?: bool


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVMBackupVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OperatorVictoriametricsComV1beta1VMClusterSpecVmstorageVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OperatorVictoriametricsComV1beta1VMClusterStatus:
    """
    VMClusterStatus defines the observed state of VMCluster

    Attributes
    ----------
    clusterStatus : str, default is Undefined, required
        cluster status
    lastSync : str, default is Undefined, optional
        Deprecated.
    reason : str, default is Undefined, optional
        reason
    updateFailCount : int, default is Undefined, required
        Deprecated.
    """


    clusterStatus: str

    lastSync?: str

    reason?: str

    updateFailCount: int


