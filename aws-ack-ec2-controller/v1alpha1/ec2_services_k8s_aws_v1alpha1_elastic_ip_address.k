"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ElasticIPAddress:
    """
    ElasticIPAddress is the Schema for the ElasticIPAddresses API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ElasticIPAddress", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1ElasticIPAddressSpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "ElasticIPAddress" = "ElasticIPAddress"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1ElasticIPAddressSpec

    status?: Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatus


schema Ec2ServicesK8sAwsV1alpha1ElasticIPAddressSpec:
    """
    ElasticIPAddressSpec defines the desired state of ElasticIPAddress.

    Attributes
    ----------
    address : str, default is Undefined, optional
        [EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool.
    customerOwnedIPv4Pool : str, default is Undefined, optional
        The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.
    networkBorderGroup : str, default is Undefined, optional
        A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups. 
         Use DescribeAvailabilityZones (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html) to view the network border groups. 
         You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 Classic, you receive an InvalidParameterCombination error.
    publicIPv4Pool : str, default is Undefined, optional
        The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the Address parameter instead.
    tags : [Ec2ServicesK8sAwsV1alpha1ElasticIPAddressSpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    """


    address?: str

    customerOwnedIPv4Pool?: str

    networkBorderGroup?: str

    publicIPv4Pool?: str

    tags?: [Ec2ServicesK8sAwsV1alpha1ElasticIPAddressSpecTagsItems0]


schema Ec2ServicesK8sAwsV1alpha1ElasticIPAddressSpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatus:
    """
    ElasticIPAddressStatus defines the observed state of ElasticIPAddress

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    allocationID : str, default is Undefined, optional
        [EC2-VPC] The ID that Amazon Web Services assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.
    carrierIP : str, default is Undefined, optional
        The carrier IP address. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance).
    conditions : [Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    customerOwnedIP : str, default is Undefined, optional
        The customer-owned IP address.
    publicIP : str, default is Undefined, optional
        The Elastic IP address.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatusAckResourceMetadata

    allocationID?: str

    carrierIP?: str

    conditions?: [Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatusConditionsItems0]

    customerOwnedIP?: str

    publicIP?: str


schema Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1ElasticIPAddressStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


