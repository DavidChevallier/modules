"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1InstanceSpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1InstanceSpec

    status?: Ec2ServicesK8sAwsV1alpha1InstanceStatus


schema Ec2ServicesK8sAwsV1alpha1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance. 
     Describes an instance.

    Attributes
    ----------
    blockDeviceMappings : [Ec2ServicesK8sAwsV1alpha1InstanceSpecBlockDeviceMappingsItems0], default is Undefined, optional
        The block device mapping, which defines the EBS volumes and instance store volumes to attach to the instance at launch. For more information, see Block device mappings (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html) in the Amazon EC2 User Guide.
    capacityReservationSpecification : Ec2ServicesK8sAwsV1alpha1InstanceSpecCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecCPUOptions, default is Undefined, optional
        cpu options
    creditSpecification : Ec2ServicesK8sAwsV1alpha1InstanceSpecCreditSpecification, default is Undefined, optional
        credit specification
    disableAPIStop : bool, default is Undefined, optional
        Indicates whether an instance is enabled for stop protection. For more information, see Stop protection (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
    disableAPITermination : bool, default is Undefined, optional
        If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html). Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance. 
         Default: false
    ebsOptimized : bool, default is Undefined, optional
        Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance. 
         Default: false
    elasticGPUSpecification : [Ec2ServicesK8sAwsV1alpha1InstanceSpecElasticGPUSpecificationItems0], default is Undefined, optional
        An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the Amazon EC2 User Guide.
    elasticInferenceAccelerators : [Ec2ServicesK8sAwsV1alpha1InstanceSpecElasticInferenceAcceleratorsItems0], default is Undefined, optional
        An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads. 
         You cannot specify accelerators from different generations in the same request.
    enclaveOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecEnclaveOptions, default is Undefined, optional
        enclave options
    hibernationOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecHibernationOptions, default is Undefined, optional
        hibernation options
    iamInstanceProfile : Ec2ServicesK8sAwsV1alpha1InstanceSpecIamInstanceProfile, default is Undefined, optional
        iam instance profile
    imageID : str, default is Undefined, optional
        The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown). 
         Default: stop
    instanceMarketOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecInstanceMarketOptions, default is Undefined, optional
        instance market options
    instanceType : str, default is Undefined, optional
        The instance type. For more information, see Instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon EC2 User Guide. 
         Default: m1.small
    ipv6AddressCount : int, default is Undefined, optional
        [EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch. 
         You cannot specify this option and the network interfaces option in the same request.
    ipv6Addresses : [Ec2ServicesK8sAwsV1alpha1InstanceSpecIPV6AddressesItems0], default is Undefined, optional
        [EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch. 
         You cannot specify this option and the network interfaces option in the same request.
    kernelID : str, default is Undefined, optional
        The ID of the kernel. 
         We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon EC2 User Guide.
    keyName : str, default is Undefined, optional
        The name of the key pair. You can create a key pair using CreateKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or ImportKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html). 
         If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.
    launchTemplate : Ec2ServicesK8sAwsV1alpha1InstanceSpecLaunchTemplate, default is Undefined, optional
        launch template
    licenseSpecifications : [Ec2ServicesK8sAwsV1alpha1InstanceSpecLicenseSpecificationsItems0], default is Undefined, optional
        The license configurations.
    maintenanceOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecMaintenanceOptions, default is Undefined, optional
        maintenance options
    maxCount : int, default is Undefined, optional
        The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above MinCount. 
         Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 (http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2) in the Amazon EC2 FAQ.
    metadataOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecMetadataOptions, default is Undefined, optional
        metadata options
    minCount : int, default is Undefined, optional
        The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances. 
         Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see How many instances can I run in Amazon EC2 (http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2) in the Amazon EC2 General FAQ.
    monitoring : Ec2ServicesK8sAwsV1alpha1InstanceSpecMonitoring, default is Undefined, optional
        monitoring
    networkInterfaces : [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0], default is Undefined, optional
        The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
    placement : Ec2ServicesK8sAwsV1alpha1InstanceSpecPlacement, default is Undefined, optional
        placement
    privateDNSNameOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecPrivateDNSNameOptions, default is Undefined, optional
        private DNS name options
    privateIPAddress : str, default is Undefined, optional
        [EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet. 
         Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request. 
         You cannot specify this option and the network interfaces option in the same request.
    ramDiskID : str, default is Undefined, optional
        The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID. 
         We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon EC2 User Guide.
    securityGroupIDs : [str], default is Undefined, optional
        The IDs of the security groups. You can create a security group using CreateSecurityGroup (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html). 
         If you specify a network interface, you must specify any security groups as part of the network interface.
    securityGroups : [str], default is Undefined, optional
        [EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead. 
         If you specify a network interface, you must specify any security groups as part of the network interface. 
         Default: Amazon EC2 uses the default security group.
    subnetID : str, default is Undefined, optional
        [EC2-VPC] The ID of the subnet to launch the instance into. 
         If you specify a network interface, you must specify any subnets as part of the network interface.
    tags : [Ec2ServicesK8sAwsV1alpha1InstanceSpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    userData : str, default is Undefined, optional
        The user data script to make available to the instance. For more information, see Run commands on your Linux instance at launch (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) and Run commands on your Windows instance at launch (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
    """


    blockDeviceMappings?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecBlockDeviceMappingsItems0]

    capacityReservationSpecification?: Ec2ServicesK8sAwsV1alpha1InstanceSpecCapacityReservationSpecification

    cpuOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecCPUOptions

    creditSpecification?: Ec2ServicesK8sAwsV1alpha1InstanceSpecCreditSpecification

    disableAPIStop?: bool

    disableAPITermination?: bool

    ebsOptimized?: bool

    elasticGPUSpecification?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecElasticGPUSpecificationItems0]

    elasticInferenceAccelerators?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecElasticInferenceAcceleratorsItems0]

    enclaveOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecEnclaveOptions

    hibernationOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecHibernationOptions

    iamInstanceProfile?: Ec2ServicesK8sAwsV1alpha1InstanceSpecIamInstanceProfile

    imageID?: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecInstanceMarketOptions

    instanceType?: str

    ipv6AddressCount?: int

    ipv6Addresses?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecIPV6AddressesItems0]

    kernelID?: str

    keyName?: str

    launchTemplate?: Ec2ServicesK8sAwsV1alpha1InstanceSpecLaunchTemplate

    licenseSpecifications?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecLicenseSpecificationsItems0]

    maintenanceOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecMaintenanceOptions

    maxCount?: int

    metadataOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecMetadataOptions

    minCount?: int

    monitoring?: Ec2ServicesK8sAwsV1alpha1InstanceSpecMonitoring

    networkInterfaces?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0]

    placement?: Ec2ServicesK8sAwsV1alpha1InstanceSpecPlacement

    privateDNSNameOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecPrivateDNSNameOptions

    privateIPAddress?: str

    ramDiskID?: str

    securityGroupIDs?: [str]

    securityGroups?: [str]

    subnetID?: str

    tags?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecTagsItems0]

    userData?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecBlockDeviceMappingsItems0:
    """
    Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        device name
    ebs : Ec2ServicesK8sAwsV1alpha1InstanceSpecBlockDeviceMappingsItems0Ebs, default is Undefined, optional
        ebs
    noDevice : str, default is Undefined, optional
        no device
    virtualName : str, default is Undefined, optional
        virtual name
    """


    deviceName?: str

    ebs?: Ec2ServicesK8sAwsV1alpha1InstanceSpecBlockDeviceMappingsItems0Ebs

    noDevice?: str

    virtualName?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecBlockDeviceMappingsItems0Ebs:
    """
    Describes a block device for an EBS volume.

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : int, default is Undefined, optional
        iops
    kmsKeyID : str, default is Undefined, optional
        kms key ID
    outpostARN : str, default is Undefined, optional
        outpost a r n
    snapshotID : str, default is Undefined, optional
        snapshot ID
    throughput : int, default is Undefined, optional
        throughput
    volumeSize : int, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: int

    kmsKeyID?: str

    outpostARN?: str

    snapshotID?: str

    throughput?: int

    volumeSize?: int

    volumeType?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecCPUOptions:
    """
    The CPU options for the instance. For more information, see Optimize CPU options (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the Amazon EC2 User Guide.

    Attributes
    ----------
    coreCount : int, default is Undefined, optional
        core count
    threadsPerCore : int, default is Undefined, optional
        threads per core
    """


    coreCount?: int

    threadsPerCore?: int


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecCapacityReservationSpecification:
    """
    Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        capacity reservation preference
    capacityReservationTarget : Ec2ServicesK8sAwsV1alpha1InstanceSpecCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2ServicesK8sAwsV1alpha1InstanceSpecCapacityReservationSpecificationCapacityReservationTarget


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecCapacityReservationSpecificationCapacityReservationTarget:
    """
    Describes a target Capacity Reservation or Capacity Reservation group.

    Attributes
    ----------
    capacityReservationID : str, default is Undefined, optional
        capacity reservation ID
    capacityReservationResourceGroupARN : str, default is Undefined, optional
        capacity reservation resource group a r n
    """


    capacityReservationID?: str

    capacityReservationResourceGroupARN?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecCreditSpecification:
    """
    The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html). For more information, see Burstable performance instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the Amazon EC2 User Guide. 
     Default: standard (T2 instances) or unlimited (T3/T3a/T4g instances) 
     For T3 instances with host tenancy, only standard is supported.

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        cpu credits
    """


    cpuCredits?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecElasticGPUSpecificationItems0:
    """
    A specification for an Elastic Graphics accelerator.

    Attributes
    ----------
    type_ : str, default is Undefined, optional
        type
    """


    type_?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecElasticInferenceAcceleratorsItems0:
    """
    Describes an elastic inference accelerator.

    Attributes
    ----------
    count : int, default is Undefined, optional
        count
    type_ : str, default is Undefined, optional
        type
    """


    count?: int

    type_?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecEnclaveOptions:
    """
    Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see What is Amazon Web Services Nitro Enclaves? (https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html) in the Amazon Web Services Nitro Enclaves User Guide. 
     You can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    """


    enabled?: bool


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecHibernationOptions:
    """
    Indicates whether an instance is enabled for hibernation. For more information, see Hibernate your instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon EC2 User Guide. 
     You can't enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.

    Attributes
    ----------
    configured : bool, default is Undefined, optional
        configured
    """


    configured?: bool


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecIPV6AddressesItems0:
    """
    Describes an IPv6 address.

    Attributes
    ----------
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    """


    ipv6Address?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecIamInstanceProfile:
    """
    The name or Amazon Resource Name (ARN) of an IAM instance profile.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        arn
    name : str, default is Undefined, optional
        name
    """


    arn?: str

    name?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecInstanceMarketOptions:
    """
    The market (purchasing) option for the instances. 
     For RunInstances, persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop.

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        market type
    spotOptions : Ec2ServicesK8sAwsV1alpha1InstanceSpecInstanceMarketOptionsSpotOptions, default is Undefined, optional
        spot options
    """


    marketType?: str

    spotOptions?: Ec2ServicesK8sAwsV1alpha1InstanceSpecInstanceMarketOptionsSpotOptions


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecInstanceMarketOptionsSpotOptions:
    """
    The options for Spot Instances.

    Attributes
    ----------
    blockDurationMinutes : int, default is Undefined, optional
        block duration minutes
    instanceInterruptionBehavior : str, default is Undefined, optional
        instance interruption behavior
    maxPrice : str, default is Undefined, optional
        max price
    spotInstanceType : str, default is Undefined, optional
        spot instance type
    validUntil : str, default is Undefined, optional
        valid until
    """


    blockDurationMinutes?: int

    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecLaunchTemplate:
    """
    The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.

    Attributes
    ----------
    launchTemplateID : str, default is Undefined, optional
        launch template ID
    launchTemplateName : str, default is Undefined, optional
        launch template name
    version : str, default is Undefined, optional
        version
    """


    launchTemplateID?: str

    launchTemplateName?: str

    version?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecLicenseSpecificationsItems0:
    """
    Describes a license configuration.

    Attributes
    ----------
    licenseConfigurationARN : str, default is Undefined, optional
        license configuration a r n
    """


    licenseConfigurationARN?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecMaintenanceOptions:
    """
    The maintenance and recovery options for the instance.

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        auto recovery
    """


    autoRecovery?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecMetadataOptions:
    """
    The metadata options for the instance. For more information, see Instance metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        http endpoint
    httpProtocolIPv6 : str, default is Undefined, optional
        http protocol IPv6
    httpPutResponseHopLimit : int, default is Undefined, optional
        http put response hop limit
    httpTokens : str, default is Undefined, optional
        http tokens
    instanceMetadataTags : str, default is Undefined, optional
        instance metadata tags
    """


    httpEndpoint?: str

    httpProtocolIPv6?: str

    httpPutResponseHopLimit?: int

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecMonitoring:
    """
    Specifies whether detailed monitoring is enabled for the instance.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    """


    enabled?: bool


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0:
    """
    Describes a network interface.

    Attributes
    ----------
    associateCarrierIPAddress : bool, default is Undefined, optional
        associate carrier IP address
    associatePublicIPAddress : bool, default is Undefined, optional
        associate public IP address
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    description : str, default is Undefined, optional
        description
    deviceIndex : int, default is Undefined, optional
        device index
    interfaceType : str, default is Undefined, optional
        interface type
    ipv4PrefixCount : int, default is Undefined, optional
        ipv4 prefix count
    ipv4Prefixes : [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV4PrefixesItems0], default is Undefined, optional
        ipv4 prefixes
    ipv6AddressCount : int, default is Undefined, optional
        ipv6 address count
    ipv6Addresses : [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV6AddressesItems0], default is Undefined, optional
        ipv6 addresses
    ipv6PrefixCount : int, default is Undefined, optional
        ipv6 prefix count
    ipv6Prefixes : [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV6PrefixesItems0], default is Undefined, optional
        ipv6 prefixes
    networkCardIndex : int, default is Undefined, optional
        network card index
    networkInterfaceID : str, default is Undefined, optional
        network interface ID
    privateIPAddress : str, default is Undefined, optional
        private IP address
    privateIPAddresses : [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0PrivateIPAddressesItems0], default is Undefined, optional
        private IP addresses
    secondaryPrivateIPAddressCount : int, default is Undefined, optional
        secondary private IP address count
    subnetID : str, default is Undefined, optional
        subnet ID
    """


    associateCarrierIPAddress?: bool

    associatePublicIPAddress?: bool

    deleteOnTermination?: bool

    description?: str

    deviceIndex?: int

    interfaceType?: str

    ipv4PrefixCount?: int

    ipv4Prefixes?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV4PrefixesItems0]

    ipv6AddressCount?: int

    ipv6Addresses?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV6AddressesItems0]

    ipv6PrefixCount?: int

    ipv6Prefixes?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV6PrefixesItems0]

    networkCardIndex?: int

    networkInterfaceID?: str

    privateIPAddress?: str

    privateIPAddresses?: [Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0PrivateIPAddressesItems0]

    secondaryPrivateIPAddressCount?: int

    subnetID?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV4PrefixesItems0:
    """
    Describes the IPv4 prefix option for a network interface.

    Attributes
    ----------
    ipv4Prefix : str, default is Undefined, optional
        ipv4 prefix
    """


    ipv4Prefix?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV6AddressesItems0:
    """
    Describes an IPv6 address.

    Attributes
    ----------
    ipv6Address : str, default is Undefined, optional
        ipv6 address
    """


    ipv6Address?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0IPV6PrefixesItems0:
    """
    Describes the IPv4 prefix option for a network interface.

    Attributes
    ----------
    ipv6Prefix : str, default is Undefined, optional
        ipv6 prefix
    """


    ipv6Prefix?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecNetworkInterfacesItems0PrivateIPAddressesItems0:
    """
    Describes a secondary private IPv4 address for a network interface.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        primary
    privateIPAddress : str, default is Undefined, optional
        private IP address
    """


    primary?: bool

    privateIPAddress?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecPlacement:
    """
    The placement for the instance.

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        affinity
    availabilityZone : str, default is Undefined, optional
        availability zone
    groupName : str, default is Undefined, optional
        group name
    hostID : str, default is Undefined, optional
        host ID
    hostResourceGroupARN : str, default is Undefined, optional
        host resource group a r n
    partitionNumber : int, default is Undefined, optional
        partition number
    spreadDomain : str, default is Undefined, optional
        spread domain
    tenancy : str, default is Undefined, optional
        tenancy
    """


    affinity?: str

    availabilityZone?: str

    groupName?: str

    hostID?: str

    hostResourceGroupARN?: str

    partitionNumber?: int

    spreadDomain?: str

    tenancy?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecPrivateDNSNameOptions:
    """
    The options for the instance hostname. The default values are inherited from the subnet.

    Attributes
    ----------
    enableResourceNameDNSAAAARecord : bool, default is Undefined, optional
        enable resource name DNS a a a a record
    enableResourceNameDNSARecord : bool, default is Undefined, optional
        enable resource name DNS a record
    hostnameType : str, default is Undefined, optional
        hostname type
    """


    enableResourceNameDNSAAAARecord?: bool

    enableResourceNameDNSARecord?: bool

    hostnameType?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceSpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1InstanceStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    amiLaunchIndex : int, default is Undefined, optional
        The AMI launch index, which can be used to find this instance in the launch group.
    architecture : str, default is Undefined, optional
        The architecture of the image.
    bootMode : str, default is Undefined, optional
        The boot mode of the instance. For more information, see Boot modes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon EC2 User Guide.
    capacityReservationID : str, default is Undefined, optional
        The ID of the Capacity Reservation.
    conditions : [Ec2ServicesK8sAwsV1alpha1InstanceStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    elasticGPUAssociations : [Ec2ServicesK8sAwsV1alpha1InstanceStatusElasticGPUAssociationsItems0], default is Undefined, optional
        The Elastic GPU associated with the instance.
    elasticInferenceAcceleratorAssociations : [Ec2ServicesK8sAwsV1alpha1InstanceStatusElasticInferenceAcceleratorAssociationsItems0], default is Undefined, optional
        The elastic inference accelerator associated with the instance.
    enaSupport : bool, default is Undefined, optional
        Specifies whether enhanced networking with ENA is enabled.
    hypervisor : str, default is Undefined, optional
        The hypervisor type of the instance. The value xen is used for both Xen and Nitro hypervisors.
    instanceID : str, default is Undefined, optional
        The ID of the instance.
    instanceLifecycle : str, default is Undefined, optional
        Indicates whether this is a Spot Instance or a Scheduled Instance.
    ipv6Address : str, default is Undefined, optional
        The IPv6 address assigned to the instance.
    launchTime : str, default is Undefined, optional
        The time the instance was launched.
    licenses : [Ec2ServicesK8sAwsV1alpha1InstanceStatusLicensesItems0], default is Undefined, optional
        The license configurations for the instance.
    outpostARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Outpost.
    platform : str, default is Undefined, optional
        The value is Windows for Windows instances; otherwise blank.
    platformDetails : str, default is Undefined, optional
        The platform details value for the instance. For more information, see AMI billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html) in the Amazon EC2 User Guide.
    privateDNSName : str, default is Undefined, optional
        (IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the running state. 
         [EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.
    productCodes : [Ec2ServicesK8sAwsV1alpha1InstanceStatusProductCodesItems0], default is Undefined, optional
        The product codes attached to this instance, if applicable.
    publicDNSName : str, default is Undefined, optional
        (IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the running state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.
    publicIPAddress : str, default is Undefined, optional
        The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable. 
         A Carrier IP address only applies to an instance launched in a subnet associated with a Wavelength Zone.
    rootDeviceName : str, default is Undefined, optional
        The device name of the root device volume (for example, /dev/sda1).
    rootDeviceType : str, default is Undefined, optional
        The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.
    sourceDestCheck : bool, default is Undefined, optional
        Indicates whether source/destination checking is enabled.
    spotInstanceRequestID : str, default is Undefined, optional
        If the request is a Spot Instance request, the ID of the request.
    sriovNetSupport : str, default is Undefined, optional
        Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
    state : Ec2ServicesK8sAwsV1alpha1InstanceStatusState, default is Undefined, optional
        state
    stateReason : Ec2ServicesK8sAwsV1alpha1InstanceStatusStateReason, default is Undefined, optional
        state reason
    stateTransitionReason : str, default is Undefined, optional
        The reason for the most recent state transition. This might be an empty string.
    tpmSupport : str, default is Undefined, optional
        If the instance is configured for NitroTPM support, the value is v2.0. For more information, see NitroTPM (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon EC2 User Guide.
    usageOperation : str, default is Undefined, optional
        The usage operation value for the instance. For more information, see AMI billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html) in the Amazon EC2 User Guide.
    usageOperationUpdateTime : str, default is Undefined, optional
        The time that the usage operation was last updated.
    virtualizationType : str, default is Undefined, optional
        The virtualization type of the instance.
    vpcID : str, default is Undefined, optional
        [EC2-VPC] The ID of the VPC in which the instance is running.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1InstanceStatusAckResourceMetadata

    amiLaunchIndex?: int

    architecture?: str

    bootMode?: str

    capacityReservationID?: str

    conditions?: [Ec2ServicesK8sAwsV1alpha1InstanceStatusConditionsItems0]

    elasticGPUAssociations?: [Ec2ServicesK8sAwsV1alpha1InstanceStatusElasticGPUAssociationsItems0]

    elasticInferenceAcceleratorAssociations?: [Ec2ServicesK8sAwsV1alpha1InstanceStatusElasticInferenceAcceleratorAssociationsItems0]

    enaSupport?: bool

    hypervisor?: str

    instanceID?: str

    instanceLifecycle?: str

    ipv6Address?: str

    launchTime?: str

    licenses?: [Ec2ServicesK8sAwsV1alpha1InstanceStatusLicensesItems0]

    outpostARN?: str

    platform?: str

    platformDetails?: str

    privateDNSName?: str

    productCodes?: [Ec2ServicesK8sAwsV1alpha1InstanceStatusProductCodesItems0]

    publicDNSName?: str

    publicIPAddress?: str

    rootDeviceName?: str

    rootDeviceType?: str

    sourceDestCheck?: bool

    spotInstanceRequestID?: str

    sriovNetSupport?: str

    state?: Ec2ServicesK8sAwsV1alpha1InstanceStatusState

    stateReason?: Ec2ServicesK8sAwsV1alpha1InstanceStatusStateReason

    stateTransitionReason?: str

    tpmSupport?: str

    usageOperation?: str

    usageOperationUpdateTime?: str

    virtualizationType?: str

    vpcID?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusElasticGPUAssociationsItems0:
    """
    Describes the association between an instance and an Elastic Graphics accelerator.

    Attributes
    ----------
    elasticGPUAssociationID : str, default is Undefined, optional
        elastic g p u association ID
    elasticGPUAssociationState : str, default is Undefined, optional
        elastic g p u association state
    elasticGPUAssociationTime : str, default is Undefined, optional
        elastic g p u association time
    elasticGPUID : str, default is Undefined, optional
        elastic g p UID
    """


    elasticGPUAssociationID?: str

    elasticGPUAssociationState?: str

    elasticGPUAssociationTime?: str

    elasticGPUID?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusElasticInferenceAcceleratorAssociationsItems0:
    """
    Describes the association between an instance and an elastic inference accelerator.

    Attributes
    ----------
    elasticInferenceAcceleratorARN : str, default is Undefined, optional
        elastic inference accelerator a r n
    elasticInferenceAcceleratorAssociationID : str, default is Undefined, optional
        elastic inference accelerator association ID
    elasticInferenceAcceleratorAssociationState : str, default is Undefined, optional
        elastic inference accelerator association state
    elasticInferenceAcceleratorAssociationTime : str, default is Undefined, optional
        elastic inference accelerator association time
    """


    elasticInferenceAcceleratorARN?: str

    elasticInferenceAcceleratorAssociationID?: str

    elasticInferenceAcceleratorAssociationState?: str

    elasticInferenceAcceleratorAssociationTime?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusLicensesItems0:
    """
    Describes a license configuration.

    Attributes
    ----------
    licenseConfigurationARN : str, default is Undefined, optional
        license configuration a r n
    """


    licenseConfigurationARN?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusProductCodesItems0:
    """
    Describes a product code.

    Attributes
    ----------
    productCodeID : str, default is Undefined, optional
        product code ID
    productCodeType : str, default is Undefined, optional
        product code type
    """


    productCodeID?: str

    productCodeType?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusState:
    """
    The current state of the instance.

    Attributes
    ----------
    code : int, default is Undefined, optional
        code
    name : str, default is Undefined, optional
        name
    """


    code?: int

    name?: str


schema Ec2ServicesK8sAwsV1alpha1InstanceStatusStateReason:
    """
    The reason for the most recent state transition.

    Attributes
    ----------
    code : str, default is Undefined, optional
        code
    message : str, default is Undefined, optional
        message
    """


    code?: str

    message?: str


