"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecurityGroup:
    """
    SecurityGroup is the Schema for the SecurityGroups API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecurityGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1SecurityGroupSpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1SecurityGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "SecurityGroup" = "SecurityGroup"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1SecurityGroupSpec

    status?: Ec2ServicesK8sAwsV1alpha1SecurityGroupStatus


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpec:
    """
    SecurityGroupSpec defines the desired state of SecurityGroup. 
     Describes a security group.

    Attributes
    ----------
    description : str, default is Undefined, required
        A description for the security group. This is informational only. 
         Constraints: Up to 255 characters in length 
         Constraints for EC2-Classic: ASCII characters 
         Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
    egressRules : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0], default is Undefined, optional
        egress rules
    ingressRules : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0], default is Undefined, optional
        ingress rules
    name : str, default is Undefined, required
        The name of the security group. 
         Constraints: Up to 255 characters in length. Cannot start with sg-. 
         Constraints for EC2-Classic: ASCII characters 
         Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
    tags : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    vpcID : str, default is Undefined, optional
        [EC2-VPC] The ID of the VPC. Required for EC2-VPC.
    vpcRef : Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecVpcRef, default is Undefined, optional
        vpc ref
    """


    description: str

    egressRules?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0]

    ingressRules?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0]

    name: str

    tags?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecTagsItems0]

    vpcID?: str

    vpcRef?: Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecVpcRef


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0:
    """
    Describes a set of permissions for a security group rule.

    Attributes
    ----------
    fromPort : int, default is Undefined, optional
        from port
    ipProtocol : str, default is Undefined, optional
        ip protocol
    ipRanges : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0IPRangesItems0], default is Undefined, optional
        ip ranges
    ipv6Ranges : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0IPV6RangesItems0], default is Undefined, optional
        ipv6 ranges
    prefixListIDs : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0PrefixListIDsItems0], default is Undefined, optional
        prefix list i ds
    toPort : int, default is Undefined, optional
        to port
    userIDGroupPairs : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0UserIDGroupPairsItems0], default is Undefined, optional
        user ID group pairs
    """


    fromPort?: int

    ipProtocol?: str

    ipRanges?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0IPRangesItems0]

    ipv6Ranges?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0IPV6RangesItems0]

    prefixListIDs?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0PrefixListIDsItems0]

    toPort?: int

    userIDGroupPairs?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0UserIDGroupPairsItems0]


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0IPRangesItems0:
    """
    Describes an IPv4 range.

    Attributes
    ----------
    cidrIP : str, default is Undefined, optional
        cidr IP
    description : str, default is Undefined, optional
        description
    """


    cidrIP?: str

    description?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0IPV6RangesItems0:
    """
    [EC2-VPC only] Describes an IPv6 range.

    Attributes
    ----------
    cidrIPv6 : str, default is Undefined, optional
        cidr IPv6
    description : str, default is Undefined, optional
        description
    """


    cidrIPv6?: str

    description?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0PrefixListIDsItems0:
    """
    Describes a prefix list ID.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    prefixListID : str, default is Undefined, optional
        prefix list ID
    """


    description?: str

    prefixListID?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecEgressRulesItems0UserIDGroupPairsItems0:
    """
    Describes a security group and Amazon Web Services account ID pair. 
     We are retiring EC2-Classic on August 15, 2022. We recommend that you migrate from EC2-Classic to a VPC. For more information, see Migrate from EC2-Classic to a VPC (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html) in the Amazon Elastic Compute Cloud User Guide.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    groupID : str, default is Undefined, optional
        group ID
    groupName : str, default is Undefined, optional
        group name
    peeringStatus : str, default is Undefined, optional
        peering status
    userID : str, default is Undefined, optional
        user ID
    vpcID : str, default is Undefined, optional
        vpc ID
    vpcPeeringConnectionID : str, default is Undefined, optional
        vpc peering connection ID
    """


    description?: str

    groupID?: str

    groupName?: str

    peeringStatus?: str

    userID?: str

    vpcID?: str

    vpcPeeringConnectionID?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0:
    """
    Describes a set of permissions for a security group rule.

    Attributes
    ----------
    fromPort : int, default is Undefined, optional
        from port
    ipProtocol : str, default is Undefined, optional
        ip protocol
    ipRanges : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0IPRangesItems0], default is Undefined, optional
        ip ranges
    ipv6Ranges : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0IPV6RangesItems0], default is Undefined, optional
        ipv6 ranges
    prefixListIDs : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0PrefixListIDsItems0], default is Undefined, optional
        prefix list i ds
    toPort : int, default is Undefined, optional
        to port
    userIDGroupPairs : [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0UserIDGroupPairsItems0], default is Undefined, optional
        user ID group pairs
    """


    fromPort?: int

    ipProtocol?: str

    ipRanges?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0IPRangesItems0]

    ipv6Ranges?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0IPV6RangesItems0]

    prefixListIDs?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0PrefixListIDsItems0]

    toPort?: int

    userIDGroupPairs?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0UserIDGroupPairsItems0]


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0IPRangesItems0:
    """
    Describes an IPv4 range.

    Attributes
    ----------
    cidrIP : str, default is Undefined, optional
        cidr IP
    description : str, default is Undefined, optional
        description
    """


    cidrIP?: str

    description?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0IPV6RangesItems0:
    """
    [EC2-VPC only] Describes an IPv6 range.

    Attributes
    ----------
    cidrIPv6 : str, default is Undefined, optional
        cidr IPv6
    description : str, default is Undefined, optional
        description
    """


    cidrIPv6?: str

    description?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0PrefixListIDsItems0:
    """
    Describes a prefix list ID.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    prefixListID : str, default is Undefined, optional
        prefix list ID
    """


    description?: str

    prefixListID?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecIngressRulesItems0UserIDGroupPairsItems0:
    """
    Describes a security group and Amazon Web Services account ID pair. 
     We are retiring EC2-Classic on August 15, 2022. We recommend that you migrate from EC2-Classic to a VPC. For more information, see Migrate from EC2-Classic to a VPC (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html) in the Amazon Elastic Compute Cloud User Guide.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    groupID : str, default is Undefined, optional
        group ID
    groupName : str, default is Undefined, optional
        group name
    peeringStatus : str, default is Undefined, optional
        peering status
    userID : str, default is Undefined, optional
        user ID
    vpcID : str, default is Undefined, optional
        vpc ID
    vpcPeeringConnectionID : str, default is Undefined, optional
        vpc peering connection ID
    """


    description?: str

    groupID?: str

    groupName?: str

    peeringStatus?: str

    userID?: str

    vpcID?: str

    vpcPeeringConnectionID?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecVpcRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecVpcRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecVpcRefFrom


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupSpecVpcRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupStatus:
    """
    SecurityGroupStatus defines the observed state of SecurityGroup

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    id : str, default is Undefined, optional
        The ID of the security group.
    rules : [Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusRulesItems0], default is Undefined, optional
        Information about security group rules.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusAckResourceMetadata

    conditions?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusConditionsItems0]

    id?: str

    rules?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusRulesItems0]


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusRulesItems0:
    """
    Describes a security group rule.

    Attributes
    ----------
    cidrIPv4 : str, default is Undefined, optional
        cidr IPv4
    cidrIPv6 : str, default is Undefined, optional
        cidr IPv6
    description : str, default is Undefined, optional
        description
    fromPort : int, default is Undefined, optional
        from port
    ipProtocol : str, default is Undefined, optional
        ip protocol
    isEgress : bool, default is Undefined, optional
        is egress
    prefixListID : str, default is Undefined, optional
        prefix list ID
    securityGroupRuleID : str, default is Undefined, optional
        security group rule ID
    tags : [Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusRulesItems0TagsItems0], default is Undefined, optional
        tags
    toPort : int, default is Undefined, optional
        to port
    """


    cidrIPv4?: str

    cidrIPv6?: str

    description?: str

    fromPort?: int

    ipProtocol?: str

    isEgress?: bool

    prefixListID?: str

    securityGroupRuleID?: str

    tags?: [Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusRulesItems0TagsItems0]

    toPort?: int


schema Ec2ServicesK8sAwsV1alpha1SecurityGroupStatusRulesItems0TagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


