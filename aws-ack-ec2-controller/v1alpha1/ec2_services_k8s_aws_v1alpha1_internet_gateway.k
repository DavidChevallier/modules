"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InternetGateway:
    """
    InternetGateway is the Schema for the InternetGateways API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InternetGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1InternetGatewaySpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1InternetGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "InternetGateway" = "InternetGateway"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1InternetGatewaySpec

    status?: Ec2ServicesK8sAwsV1alpha1InternetGatewayStatus


schema Ec2ServicesK8sAwsV1alpha1InternetGatewaySpec:
    """
    InternetGatewaySpec defines the desired state of InternetGateway. 
     Describes an internet gateway.

    Attributes
    ----------
    tags : [Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    vpc : str, default is Undefined, optional
        The ID of the VPC.
    vpcRef : Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecVpcRef, default is Undefined, optional
        vpc ref
    """


    tags?: [Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecTagsItems0]

    vpc?: str

    vpcRef?: Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecVpcRef


schema Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecVpcRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecVpcRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecVpcRefFrom


schema Ec2ServicesK8sAwsV1alpha1InternetGatewaySpecVpcRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1InternetGatewayStatus:
    """
    InternetGatewayStatus defines the observed state of InternetGateway

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    attachments : [Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusAttachmentsItems0], default is Undefined, optional
        Any VPCs attached to the internet gateway.
    conditions : [Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    internetGatewayID : str, default is Undefined, optional
        The ID of the internet gateway.
    ownerID : str, default is Undefined, optional
        The ID of the Amazon Web Services account that owns the internet gateway.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusAckResourceMetadata

    attachments?: [Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusAttachmentsItems0]

    conditions?: [Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusConditionsItems0]

    internetGatewayID?: str

    ownerID?: str


schema Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusAttachmentsItems0:
    """
    Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.

    Attributes
    ----------
    state : str, default is Undefined, optional
        state
    vpcID : str, default is Undefined, optional
        vpc ID
    """


    state?: str

    vpcID?: str


schema Ec2ServicesK8sAwsV1alpha1InternetGatewayStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


