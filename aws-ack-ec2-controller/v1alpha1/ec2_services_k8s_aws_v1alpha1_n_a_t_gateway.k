"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NATGateway:
    """
    NATGateway is the Schema for the NATGateways API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NATGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1NATGatewaySpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1NATGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "NATGateway" = "NATGateway"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1NATGatewaySpec

    status?: Ec2ServicesK8sAwsV1alpha1NATGatewayStatus


schema Ec2ServicesK8sAwsV1alpha1NATGatewaySpec:
    """
    NatGatewaySpec defines the desired state of NatGateway. 
     Describes a NAT gateway.

    Attributes
    ----------
    allocationID : str, default is Undefined, optional
        [Public NAT gateways only] The allocation ID of an Elastic IP address to associate with the NAT gateway. You cannot specify an Elastic IP address with a private NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it.
    allocationRef : Ec2ServicesK8sAwsV1alpha1NATGatewaySpecAllocationRef, default is Undefined, optional
        allocation ref
    connectivityType : str, default is Undefined, optional
        Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.
    subnetID : str, default is Undefined, optional
        The subnet in which to create the NAT gateway.
    subnetRef : Ec2ServicesK8sAwsV1alpha1NATGatewaySpecSubnetRef, default is Undefined, optional
        subnet ref
    tags : [Ec2ServicesK8sAwsV1alpha1NATGatewaySpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    """


    allocationID?: str

    allocationRef?: Ec2ServicesK8sAwsV1alpha1NATGatewaySpecAllocationRef

    connectivityType?: str

    subnetID?: str

    subnetRef?: Ec2ServicesK8sAwsV1alpha1NATGatewaySpecSubnetRef

    tags?: [Ec2ServicesK8sAwsV1alpha1NATGatewaySpecTagsItems0]


schema Ec2ServicesK8sAwsV1alpha1NATGatewaySpecAllocationRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1NATGatewaySpecAllocationRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1NATGatewaySpecAllocationRefFrom


schema Ec2ServicesK8sAwsV1alpha1NATGatewaySpecAllocationRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewaySpecSubnetRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1NATGatewaySpecSubnetRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1NATGatewaySpecSubnetRefFrom


schema Ec2ServicesK8sAwsV1alpha1NATGatewaySpecSubnetRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewaySpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewayStatus:
    """
    NATGatewayStatus defines the observed state of NATGateway

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1NATGatewayStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [Ec2ServicesK8sAwsV1alpha1NATGatewayStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    createTime : str, default is Undefined, optional
        The date and time the NAT gateway was created.
    deleteTime : str, default is Undefined, optional
        The date and time the NAT gateway was deleted, if applicable.
    failureCode : str, default is Undefined, optional
        If the NAT gateway could not be created, specifies the error code for the failure. (InsufficientFreeAddressesInSubnet | Gateway.NotAttached | InvalidAllocationID.NotFound | Resource.AlreadyAssociated | InternalError | InvalidSubnetID.NotFound)
    failureMessage : str, default is Undefined, optional
        If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code. 
         * For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway" 
         * For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached" 
         * For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway" 
         * For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated" 
         * For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again." 
         * For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."
    natGatewayAddresses : [Ec2ServicesK8sAwsV1alpha1NATGatewayStatusNatGatewayAddressesItems0], default is Undefined, optional
        Information about the IP addresses and network interface associated with the NAT gateway.
    natGatewayID : str, default is Undefined, optional
        The ID of the NAT gateway.
    provisionedBandwidth : Ec2ServicesK8sAwsV1alpha1NATGatewayStatusProvisionedBandwidth, default is Undefined, optional
        provisioned bandwidth
    state : str, default is Undefined, optional
        The state of the NAT gateway. 
         * pending: The NAT gateway is being created and is not ready to process traffic. 
         * failed: The NAT gateway could not be created. Check the failureCode and failureMessage fields for the reason. 
         * available: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway. 
         * deleting: The NAT gateway is in the process of being terminated and may still be processing traffic. 
         * deleted: The NAT gateway has been terminated and is no longer processing traffic.
    vpcID : str, default is Undefined, optional
        The ID of the VPC in which the NAT gateway is located.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1NATGatewayStatusAckResourceMetadata

    conditions?: [Ec2ServicesK8sAwsV1alpha1NATGatewayStatusConditionsItems0]

    createTime?: str

    deleteTime?: str

    failureCode?: str

    failureMessage?: str

    natGatewayAddresses?: [Ec2ServicesK8sAwsV1alpha1NATGatewayStatusNatGatewayAddressesItems0]

    natGatewayID?: str

    provisionedBandwidth?: Ec2ServicesK8sAwsV1alpha1NATGatewayStatusProvisionedBandwidth

    state?: str

    vpcID?: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewayStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewayStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewayStatusNatGatewayAddressesItems0:
    """
    Describes the IP addresses and network interface associated with a NAT gateway.

    Attributes
    ----------
    allocationID : str, default is Undefined, optional
        allocation ID
    networkInterfaceID : str, default is Undefined, optional
        network interface ID
    privateIP : str, default is Undefined, optional
        private IP
    publicIP : str, default is Undefined, optional
        public IP
    """


    allocationID?: str

    networkInterfaceID?: str

    privateIP?: str

    publicIP?: str


schema Ec2ServicesK8sAwsV1alpha1NATGatewayStatusProvisionedBandwidth:
    """
    Reserved. If you need to sustain traffic greater than the documented limits (https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html), contact us through the Support Center (https://console.aws.amazon.com/support/home?).

    Attributes
    ----------
    provisionTime : str, default is Undefined, optional
        provision time
    provisioned : str, default is Undefined, optional
        provisioned
    requestTime : str, default is Undefined, optional
        request time
    requested : str, default is Undefined, optional
        requested
    status : str, default is Undefined, optional
        status
    """


    provisionTime?: str

    provisioned?: str

    requestTime?: str

    requested?: str

    status?: str


