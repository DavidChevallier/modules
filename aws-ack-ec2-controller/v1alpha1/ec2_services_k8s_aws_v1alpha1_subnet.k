"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Subnet:
    """
    Subnet is the Schema for the Subnets API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Subnet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1SubnetSpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1SubnetStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "Subnet" = "Subnet"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1SubnetSpec

    status?: Ec2ServicesK8sAwsV1alpha1SubnetStatus


schema Ec2ServicesK8sAwsV1alpha1SubnetSpec:
    """
    SubnetSpec defines the desired state of Subnet. 
     Describes a subnet.

    Attributes
    ----------
    assignIPv6AddressOnCreation : bool, default is Undefined, optional
        assign IPv6 address on creation
    availabilityZone : str, default is Undefined, optional
        The Availability Zone or Local Zone for the subnet. 
         Default: Amazon Web Services selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet. 
         To create a subnet in a Local Zone, set this value to the Local Zone ID, for example us-west-2-lax-1a. For information about the Regions that support Local Zones, see Available Regions (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions) in the Amazon Elastic Compute Cloud User Guide. 
         To create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.
    availabilityZoneID : str, default is Undefined, optional
        The AZ ID or the Local Zone ID of the subnet.
    cidrBlock : str, default is Undefined, optional
        The IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18. 
         This parameter is not supported for an IPv6 only subnet.
    customerOwnedIPv4Pool : str, default is Undefined, optional
        customer owned IPv4 pool
    enableDNS64 : bool, default is Undefined, optional
        enable DNS 64
    enableResourceNameDNSAAAARecord : bool, default is Undefined, optional
        enable resource name DNS a a a a record
    enableResourceNameDNSARecord : bool, default is Undefined, optional
        enable resource name DNS a record
    hostnameType : str, default is Undefined, optional
        hostname type
    ipv6CIDRBlock : str, default is Undefined, optional
        The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length. 
         This parameter is required for an IPv6 only subnet.
    ipv6Native : bool, default is Undefined, optional
        Indicates whether to create an IPv6 only subnet.
    mapPublicIPOnLaunch : bool, default is Undefined, optional
        map public IP on launch
    outpostARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.
    routeTableRefs : [Ec2ServicesK8sAwsV1alpha1SubnetSpecRouteTableRefsItems0], default is Undefined, optional
        route table refs
    routeTables : [str], default is Undefined, optional
        route tables
    tags : [Ec2ServicesK8sAwsV1alpha1SubnetSpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    vpcID : str, default is Undefined, optional
        The ID of the VPC.
    vpcRef : Ec2ServicesK8sAwsV1alpha1SubnetSpecVpcRef, default is Undefined, optional
        vpc ref
    """


    assignIPv6AddressOnCreation?: bool

    availabilityZone?: str

    availabilityZoneID?: str

    cidrBlock?: str

    customerOwnedIPv4Pool?: str

    enableDNS64?: bool

    enableResourceNameDNSAAAARecord?: bool

    enableResourceNameDNSARecord?: bool

    hostnameType?: str

    ipv6CIDRBlock?: str

    ipv6Native?: bool

    mapPublicIPOnLaunch?: bool

    outpostARN?: str

    routeTableRefs?: [Ec2ServicesK8sAwsV1alpha1SubnetSpecRouteTableRefsItems0]

    routeTables?: [str]

    tags?: [Ec2ServicesK8sAwsV1alpha1SubnetSpecTagsItems0]

    vpcID?: str

    vpcRef?: Ec2ServicesK8sAwsV1alpha1SubnetSpecVpcRef


schema Ec2ServicesK8sAwsV1alpha1SubnetSpecRouteTableRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1SubnetSpecRouteTableRefsItems0From, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1SubnetSpecRouteTableRefsItems0From


schema Ec2ServicesK8sAwsV1alpha1SubnetSpecRouteTableRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1SubnetSpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1SubnetSpecVpcRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1SubnetSpecVpcRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1SubnetSpecVpcRefFrom


schema Ec2ServicesK8sAwsV1alpha1SubnetSpecVpcRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1SubnetStatus:
    """
    SubnetStatus defines the observed state of Subnet

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1SubnetStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    availableIPAddressCount : int, default is Undefined, optional
        The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.
    conditions : [Ec2ServicesK8sAwsV1alpha1SubnetStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    defaultForAZ : bool, default is Undefined, optional
        Indicates whether this is the default subnet for the Availability Zone.
    enableLniAtDeviceIndex : int, default is Undefined, optional
        Indicates the device position for local network interfaces in this subnet. For example, 1 indicates local network interfaces in this subnet are the secondary network interface (eth1).
    ipv6CIDRBlockAssociationSet : [Ec2ServicesK8sAwsV1alpha1SubnetStatusIPV6CIDRBlockAssociationSetItems0], default is Undefined, optional
        Information about the IPv6 CIDR blocks associated with the subnet.
    mapCustomerOwnedIPOnLaunch : bool, default is Undefined, optional
        Indicates whether a network interface created in this subnet (including a network interface created by RunInstances) receives a customer-owned IPv4 address.
    ownerID : str, default is Undefined, optional
        The ID of the Amazon Web Services account that owns the subnet.
    privateDNSNameOptionsOnLaunch : Ec2ServicesK8sAwsV1alpha1SubnetStatusPrivateDNSNameOptionsOnLaunch, default is Undefined, optional
        private DNS name options on launch
    state : str, default is Undefined, optional
        The current state of the subnet.
    subnetID : str, default is Undefined, optional
        The ID of the subnet.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1SubnetStatusAckResourceMetadata

    availableIPAddressCount?: int

    conditions?: [Ec2ServicesK8sAwsV1alpha1SubnetStatusConditionsItems0]

    defaultForAZ?: bool

    enableLniAtDeviceIndex?: int

    ipv6CIDRBlockAssociationSet?: [Ec2ServicesK8sAwsV1alpha1SubnetStatusIPV6CIDRBlockAssociationSetItems0]

    mapCustomerOwnedIPOnLaunch?: bool

    ownerID?: str

    privateDNSNameOptionsOnLaunch?: Ec2ServicesK8sAwsV1alpha1SubnetStatusPrivateDNSNameOptionsOnLaunch

    state?: str

    subnetID?: str


schema Ec2ServicesK8sAwsV1alpha1SubnetStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1SubnetStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema Ec2ServicesK8sAwsV1alpha1SubnetStatusIPV6CIDRBlockAssociationSetItems0:
    """
    Describes an association between a subnet and an IPv6 CIDR block.

    Attributes
    ----------
    associationID : str, default is Undefined, optional
        association ID
    ipv6CIDRBlock : str, default is Undefined, optional
        ipv6 c ID r block
    ipv6CIDRBlockState : Ec2ServicesK8sAwsV1alpha1SubnetStatusIPV6CIDRBlockAssociationSetItems0IPV6CIDRBlockState, default is Undefined, optional
        ipv6 c ID r block state
    """


    associationID?: str

    ipv6CIDRBlock?: str

    ipv6CIDRBlockState?: Ec2ServicesK8sAwsV1alpha1SubnetStatusIPV6CIDRBlockAssociationSetItems0IPV6CIDRBlockState


schema Ec2ServicesK8sAwsV1alpha1SubnetStatusIPV6CIDRBlockAssociationSetItems0IPV6CIDRBlockState:
    """
    Describes the state of a CIDR block.

    Attributes
    ----------
    state : str, default is Undefined, optional
        state
    statusMessage : str, default is Undefined, optional
        status message
    """


    state?: str

    statusMessage?: str


schema Ec2ServicesK8sAwsV1alpha1SubnetStatusPrivateDNSNameOptionsOnLaunch:
    """
    The type of hostnames to assign to instances in the subnet at launch. An instance hostname is based on the IPv4 address or ID of the instance.

    Attributes
    ----------
    enableResourceNameDNSAAAARecord : bool, default is Undefined, optional
        enable resource name DNS a a a a record
    enableResourceNameDNSARecord : bool, default is Undefined, optional
        enable resource name DNS a record
    hostnameType : str, default is Undefined, optional
        hostname type
    """


    enableResourceNameDNSAAAARecord?: bool

    enableResourceNameDNSARecord?: bool

    hostnameType?: str


