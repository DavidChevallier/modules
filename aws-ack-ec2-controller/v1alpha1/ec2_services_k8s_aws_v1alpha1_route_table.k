"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouteTable:
    """
    RouteTable is the Schema for the RouteTables API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouteTable", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1RouteTableSpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1RouteTableStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "RouteTable" = "RouteTable"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1RouteTableSpec

    status?: Ec2ServicesK8sAwsV1alpha1RouteTableStatus


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpec:
    """
    RouteTableSpec defines the desired state of RouteTable. 
     Describes a route table.

    Attributes
    ----------
    routes : [Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0], default is Undefined, optional
        routes
    tags : [Ec2ServicesK8sAwsV1alpha1RouteTableSpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    vpcID : str, default is Undefined, optional
        The ID of the VPC.
    vpcRef : Ec2ServicesK8sAwsV1alpha1RouteTableSpecVpcRef, default is Undefined, optional
        vpc ref
    """


    routes?: [Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0]

    tags?: [Ec2ServicesK8sAwsV1alpha1RouteTableSpecTagsItems0]

    vpcID?: str

    vpcRef?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecVpcRef


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0:
    """
    ec2 services k8s aws v1alpha1 route table spec routes items0

    Attributes
    ----------
    carrierGatewayID : str, default is Undefined, optional
        carrier gateway ID
    coreNetworkARN : str, default is Undefined, optional
        core network a r n
    destinationCIDRBlock : str, default is Undefined, optional
        destination c ID r block
    destinationIPv6CIDRBlock : str, default is Undefined, optional
        destination IPv6 c ID r block
    destinationPrefixListID : str, default is Undefined, optional
        destination prefix list ID
    egressOnlyInternetGatewayID : str, default is Undefined, optional
        egress only internet gateway ID
    gatewayID : str, default is Undefined, optional
        gateway ID
    gatewayRef : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0GatewayRef, default is Undefined, optional
        gateway ref
    instanceID : str, default is Undefined, optional
        instance ID
    localGatewayID : str, default is Undefined, optional
        local gateway ID
    natGatewayID : str, default is Undefined, optional
        nat gateway ID
    natGatewayRef : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0NatGatewayRef, default is Undefined, optional
        nat gateway ref
    networkInterfaceID : str, default is Undefined, optional
        network interface ID
    transitGatewayID : str, default is Undefined, optional
        transit gateway ID
    transitGatewayRef : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0TransitGatewayRef, default is Undefined, optional
        transit gateway ref
    vpcEndpointID : str, default is Undefined, optional
        vpc endpoint ID
    vpcEndpointRef : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0VpcEndpointRef, default is Undefined, optional
        vpc endpoint ref
    vpcPeeringConnectionID : str, default is Undefined, optional
        vpc peering connection ID
    """


    carrierGatewayID?: str

    coreNetworkARN?: str

    destinationCIDRBlock?: str

    destinationIPv6CIDRBlock?: str

    destinationPrefixListID?: str

    egressOnlyInternetGatewayID?: str

    gatewayID?: str

    gatewayRef?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0GatewayRef

    instanceID?: str

    localGatewayID?: str

    natGatewayID?: str

    natGatewayRef?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0NatGatewayRef

    networkInterfaceID?: str

    transitGatewayID?: str

    transitGatewayRef?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0TransitGatewayRef

    vpcEndpointID?: str

    vpcEndpointRef?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0VpcEndpointRef

    vpcPeeringConnectionID?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0GatewayRef:
    """
    Reference field for GatewayID

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0GatewayRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0GatewayRefFrom


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0GatewayRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0NatGatewayRef:
    """
    Reference field for NATGatewayID

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0NatGatewayRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0NatGatewayRefFrom


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0NatGatewayRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0TransitGatewayRef:
    """
    Reference field for TransitGatewayID

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0TransitGatewayRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0TransitGatewayRefFrom


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0TransitGatewayRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0VpcEndpointRef:
    """
    Reference field for VPCEndpointID

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0VpcEndpointRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0VpcEndpointRefFrom


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecRoutesItems0VpcEndpointRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecVpcRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1RouteTableSpecVpcRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1RouteTableSpecVpcRefFrom


schema Ec2ServicesK8sAwsV1alpha1RouteTableSpecVpcRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatus:
    """
    RouteTableStatus defines the observed state of RouteTable

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1RouteTableStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    associations : [Ec2ServicesK8sAwsV1alpha1RouteTableStatusAssociationsItems0], default is Undefined, optional
        The associations between the route table and one or more subnets or a gateway.
    conditions : [Ec2ServicesK8sAwsV1alpha1RouteTableStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    ownerID : str, default is Undefined, optional
        The ID of the Amazon Web Services account that owns the route table.
    propagatingVGWs : [Ec2ServicesK8sAwsV1alpha1RouteTableStatusPropagatingVGWsItems0], default is Undefined, optional
        Any virtual private gateway (VGW) propagating routes.
    routeStatuses : [Ec2ServicesK8sAwsV1alpha1RouteTableStatusRouteStatusesItems0], default is Undefined, optional
        The routes in the route table.
    routeTableID : str, default is Undefined, optional
        The ID of the route table.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1RouteTableStatusAckResourceMetadata

    associations?: [Ec2ServicesK8sAwsV1alpha1RouteTableStatusAssociationsItems0]

    conditions?: [Ec2ServicesK8sAwsV1alpha1RouteTableStatusConditionsItems0]

    ownerID?: str

    propagatingVGWs?: [Ec2ServicesK8sAwsV1alpha1RouteTableStatusPropagatingVGWsItems0]

    routeStatuses?: [Ec2ServicesK8sAwsV1alpha1RouteTableStatusRouteStatusesItems0]

    routeTableID?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatusAssociationsItems0:
    """
    Describes an association between a route table and a subnet or gateway.

    Attributes
    ----------
    associationState : Ec2ServicesK8sAwsV1alpha1RouteTableStatusAssociationsItems0AssociationState, default is Undefined, optional
        association state
    gatewayID : str, default is Undefined, optional
        gateway ID
    main : bool, default is Undefined, optional
        main
    routeTableAssociationID : str, default is Undefined, optional
        route table association ID
    routeTableID : str, default is Undefined, optional
        route table ID
    subnetID : str, default is Undefined, optional
        subnet ID
    """


    associationState?: Ec2ServicesK8sAwsV1alpha1RouteTableStatusAssociationsItems0AssociationState

    gatewayID?: str

    main?: bool

    routeTableAssociationID?: str

    routeTableID?: str

    subnetID?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatusAssociationsItems0AssociationState:
    """
    Describes the state of an association between a route table and a subnet or gateway.

    Attributes
    ----------
    state : str, default is Undefined, optional
        state
    statusMessage : str, default is Undefined, optional
        status message
    """


    state?: str

    statusMessage?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatusPropagatingVGWsItems0:
    """
    Describes a virtual private gateway propagating route.

    Attributes
    ----------
    gatewayID : str, default is Undefined, optional
        gateway ID
    """


    gatewayID?: str


schema Ec2ServicesK8sAwsV1alpha1RouteTableStatusRouteStatusesItems0:
    """
    Describes a route in a route table.

    Attributes
    ----------
    carrierGatewayID : str, default is Undefined, optional
        carrier gateway ID
    coreNetworkARN : str, default is Undefined, optional
        core network a r n
    destinationCIDRBlock : str, default is Undefined, optional
        destination c ID r block
    destinationIPv6CIDRBlock : str, default is Undefined, optional
        destination IPv6 c ID r block
    destinationPrefixListID : str, default is Undefined, optional
        destination prefix list ID
    egressOnlyInternetGatewayID : str, default is Undefined, optional
        egress only internet gateway ID
    gatewayID : str, default is Undefined, optional
        gateway ID
    instanceID : str, default is Undefined, optional
        instance ID
    instanceOwnerID : str, default is Undefined, optional
        instance owner ID
    localGatewayID : str, default is Undefined, optional
        local gateway ID
    natGatewayID : str, default is Undefined, optional
        nat gateway ID
    networkInterfaceID : str, default is Undefined, optional
        network interface ID
    origin : str, default is Undefined, optional
        origin
    state : str, default is Undefined, optional
        state
    transitGatewayID : str, default is Undefined, optional
        transit gateway ID
    vpcPeeringConnectionID : str, default is Undefined, optional
        vpc peering connection ID
    """


    carrierGatewayID?: str

    coreNetworkARN?: str

    destinationCIDRBlock?: str

    destinationIPv6CIDRBlock?: str

    destinationPrefixListID?: str

    egressOnlyInternetGatewayID?: str

    gatewayID?: str

    instanceID?: str

    instanceOwnerID?: str

    localGatewayID?: str

    natGatewayID?: str

    networkInterfaceID?: str

    origin?: str

    state?: str

    transitGatewayID?: str

    vpcPeeringConnectionID?: str


