"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPCEndpoint:
    """
    VPCEndpoint is the Schema for the VPCEndpoints API

    Attributes
    ----------
    apiVersion : str, default is "ec2.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPCEndpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpec, default is Undefined, optional
        spec
    status : Ec2ServicesK8sAwsV1alpha1VPCEndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.services.k8s.aws/v1alpha1" = "ec2.services.k8s.aws/v1alpha1"

    kind: "VPCEndpoint" = "VPCEndpoint"

    metadata?: v1.ObjectMeta

    spec?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpec

    status?: Ec2ServicesK8sAwsV1alpha1VPCEndpointStatus


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpec:
    """
    VpcEndpointSpec defines the desired state of VpcEndpoint. 
     Describes a VPC endpoint.

    Attributes
    ----------
    dnsOptions : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecDNSOptions, default is Undefined, optional
        dns options
    ipAddressType : str, default is Undefined, optional
        The IP address type for the endpoint.
    policyDocument : str, default is Undefined, optional
        (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.
    privateDNSEnabled : bool, default is Undefined, optional
        (Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, kinesis.us-east-1.amazonaws.com), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service. 
         To use a private hosted zone, you must set the following VPC attributes to true: enableDnsHostnames and enableDnsSupport. Use ModifyVpcAttribute to set the VPC attributes. 
         Default: true
    routeTableIDs : [str], default is Undefined, optional
        (Gateway endpoint) One or more route table IDs.
    routeTableRefs : [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecRouteTableRefsItems0], default is Undefined, optional
        route table refs
    securityGroupIDs : [str], default is Undefined, optional
        (Interface endpoint) The ID of one or more security groups to associate with the endpoint network interface.
    securityGroupRefs : [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSecurityGroupRefsItems0], default is Undefined, optional
        security group refs
    serviceName : str, default is Undefined, required
        The service name. To get a list of available services, use the DescribeVpcEndpointServices request, or get the name from the service provider.
    subnetIDs : [str], default is Undefined, optional
        (Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an endpoint network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.
    subnetRefs : [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSubnetRefsItems0], default is Undefined, optional
        subnet refs
    tags : [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecTagsItems0], default is Undefined, optional
        The tags. The value parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    vpcEndpointType : str, default is Undefined, optional
        The type of endpoint. 
         Default: Gateway
    vpcID : str, default is Undefined, optional
        The ID of the VPC in which the endpoint will be used.
    vpcRef : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecVpcRef, default is Undefined, optional
        vpc ref
    """


    dnsOptions?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecDNSOptions

    ipAddressType?: str

    policyDocument?: str

    privateDNSEnabled?: bool

    routeTableIDs?: [str]

    routeTableRefs?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecRouteTableRefsItems0]

    securityGroupIDs?: [str]

    securityGroupRefs?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSecurityGroupRefsItems0]

    serviceName: str

    subnetIDs?: [str]

    subnetRefs?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSubnetRefsItems0]

    tags?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecTagsItems0]

    vpcEndpointType?: str

    vpcID?: str

    vpcRef?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecVpcRef


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecDNSOptions:
    """
    The DNS options for the endpoint.

    Attributes
    ----------
    dnsRecordIPType : str, default is Undefined, optional
        dns record IP type
    """


    dnsRecordIPType?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecRouteTableRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecRouteTableRefsItems0From, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecRouteTableRefsItems0From


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecRouteTableRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSecurityGroupRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSecurityGroupRefsItems0From, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSecurityGroupRefsItems0From


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSecurityGroupRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSubnetRefsItems0:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSubnetRefsItems0From, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSubnetRefsItems0From


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecSubnetRefsItems0From:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecTagsItems0:
    """
    Describes a tag.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecVpcRef:
    """
    AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: 
     from: name: my-api

    Attributes
    ----------
    from : Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecVpcRefFrom, default is Undefined, optional
        from
    """


    from?: Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecVpcRefFrom


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointSpecVpcRefFrom:
    """
    AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointStatus:
    """
    VPCEndpointStatus defines the observed state of VPCEndpoint

    Attributes
    ----------
    ackResourceMetadata : Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    creationTimestamp : str, default is Undefined, optional
        The date and time that the endpoint was created.
    dnsEntries : [Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusDNSEntriesItems0], default is Undefined, optional
        (Interface endpoint) The DNS entries for the endpoint.
    groups : [Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusGroupsItems0], default is Undefined, optional
        (Interface endpoint) Information about the security groups that are associated with the network interface.
    lastError : Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusLastError, default is Undefined, optional
        last error
    networkInterfaceIDs : [str], default is Undefined, optional
        (Interface endpoint) One or more network interfaces for the endpoint.
    ownerID : str, default is Undefined, optional
        The ID of the Amazon Web Services account that owns the endpoint.
    requesterManaged : bool, default is Undefined, optional
        Indicates whether the endpoint is being managed by its service.
    state : str, default is Undefined, optional
        The state of the endpoint.
    vpcEndpointID : str, default is Undefined, optional
        The ID of the endpoint.
    """


    ackResourceMetadata?: Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusAckResourceMetadata

    conditions?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusConditionsItems0]

    creationTimestamp?: str

    dnsEntries?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusDNSEntriesItems0]

    groups?: [Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusGroupsItems0]

    lastError?: Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusLastError

    networkInterfaceIDs?: [str]

    ownerID?: str

    requesterManaged?: bool

    state?: str

    vpcEndpointID?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusDNSEntriesItems0:
    """
    Describes a DNS entry.

    Attributes
    ----------
    dnsName : str, default is Undefined, optional
        dns name
    hostedZoneID : str, default is Undefined, optional
        hosted zone ID
    """


    dnsName?: str

    hostedZoneID?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusGroupsItems0:
    """
    Describes a security group.

    Attributes
    ----------
    groupID : str, default is Undefined, optional
        group ID
    groupName : str, default is Undefined, optional
        group name
    """


    groupID?: str

    groupName?: str


schema Ec2ServicesK8sAwsV1alpha1VPCEndpointStatusLastError:
    """
    The last error that occurred for endpoint.

    Attributes
    ----------
    code : str, default is Undefined, optional
        code
    message : str, default is Undefined, optional
        message
    """


    code?: str

    message?: str


