"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema postgresql:
    """
    acid zalan do v1 postgresql

    Attributes
    ----------
    apiVersion : str, default is "acid.zalan.do/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "postgresql", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AcidZalanDoV1PostgresqlSpec, default is Undefined, required
        spec
    status : {str:str}, default is Undefined, optional
        status
    """


    apiVersion: "acid.zalan.do/v1" = "acid.zalan.do/v1"

    kind: "postgresql" = "postgresql"

    metadata?: v1.ObjectMeta

    spec: AcidZalanDoV1PostgresqlSpec

    status?: {str:str}


schema AcidZalanDoV1PostgresqlSpec:
    """
    acid zalan do v1 postgresql spec

    Attributes
    ----------
    additionalVolumes : [AcidZalanDoV1PostgresqlSpecAdditionalVolumesItems0], default is Undefined, optional
        additional volumes
    allowedSourceRanges : [str], default is Undefined, optional
        allowed source ranges
    clone : AcidZalanDoV1PostgresqlSpecClone, default is Undefined, optional
        clone
    connectionPooler : AcidZalanDoV1PostgresqlSpecConnectionPooler, default is Undefined, optional
        connection pooler
    databases : {str:str}, default is Undefined, optional
        databases
    dockerImage : str, default is Undefined, optional
        docker image
    enableConnectionPooler : bool, default is Undefined, optional
        enable connection pooler
    enableLogicalBackup : bool, default is Undefined, optional
        enable logical backup
    enableMasterLoadBalancer : bool, default is Undefined, optional
        enable master load balancer
    enableMasterPoolerLoadBalancer : bool, default is Undefined, optional
        enable master pooler load balancer
    enableReplicaConnectionPooler : bool, default is Undefined, optional
        enable replica connection pooler
    enableReplicaLoadBalancer : bool, default is Undefined, optional
        enable replica load balancer
    enableReplicaPoolerLoadBalancer : bool, default is Undefined, optional
        enable replica pooler load balancer
    enableShmVolume : bool, default is Undefined, optional
        enable shm volume
    env : [any], default is Undefined, optional
        env
    initContainers : [any], default is Undefined, optional
        init containers
    init_containers : [any], default is Undefined, optional
        deprecated
    logicalBackupSchedule : str, default is Undefined, optional
        logical backup schedule
    maintenanceWindows : [str], default is Undefined, optional
        maintenance windows
    masterServiceAnnotations : {str:str}, default is Undefined, optional
        master service annotations
    nodeAffinity : AcidZalanDoV1PostgresqlSpecNodeAffinity, default is Undefined, optional
        node affinity
    numberOfInstances : int, default is Undefined, required
        number of instances
    patroni : AcidZalanDoV1PostgresqlSpecPatroni, default is Undefined, optional
        patroni
    podAnnotations : {str:str}, default is Undefined, optional
        pod annotations
    podPriorityClassName : str, default is Undefined, optional
        pod priority class name
    pod_priority_class_name : str, default is Undefined, optional
        deprecated
    postgresql : AcidZalanDoV1PostgresqlSpecPostgresql, default is Undefined, required
        postgresql
    preparedDatabases : {str:AcidZalanDoV1PostgresqlSpecPreparedDatabasesAnon}, default is Undefined, optional
        prepared databases
    replicaLoadBalancer : bool, default is Undefined, optional
        deprecated
    replicaServiceAnnotations : {str:str}, default is Undefined, optional
        replica service annotations
    resources : AcidZalanDoV1PostgresqlSpecResources, default is Undefined, optional
        resources
    schedulerName : str, default is Undefined, optional
        scheduler name
    serviceAnnotations : {str:str}, default is Undefined, optional
        service annotations
    sidecars : [any], default is Undefined, optional
        sidecars
    spiloFSGroup : int, default is Undefined, optional
        spilo f s group
    spiloRunAsGroup : int, default is Undefined, optional
        spilo run as group
    spiloRunAsUser : int, default is Undefined, optional
        spilo run as user
    standby : AcidZalanDoV1PostgresqlSpecStandby, default is Undefined, optional
        standby
    streams : [AcidZalanDoV1PostgresqlSpecStreamsItems0], default is Undefined, optional
        streams
    teamId : str, default is Undefined, required
        team Id
    tls : AcidZalanDoV1PostgresqlSpecTLS, default is Undefined, optional
        tls
    tolerations : [AcidZalanDoV1PostgresqlSpecTolerationsItems0], default is Undefined, optional
        tolerations
    useLoadBalancer : bool, default is Undefined, optional
        deprecated
    users : {str:[str]}, default is Undefined, optional
        users
    usersWithInPlaceSecretRotation : [str], default is Undefined, optional
        users with in place secret rotation
    usersWithSecretRotation : [str], default is Undefined, optional
        users with secret rotation
    volume : AcidZalanDoV1PostgresqlSpecVolume, default is Undefined, required
        volume
    """


    additionalVolumes?: [AcidZalanDoV1PostgresqlSpecAdditionalVolumesItems0]

    allowedSourceRanges?: [str]

    clone?: AcidZalanDoV1PostgresqlSpecClone

    connectionPooler?: AcidZalanDoV1PostgresqlSpecConnectionPooler

    databases?: {str:str}

    dockerImage?: str

    enableConnectionPooler?: bool

    enableLogicalBackup?: bool

    enableMasterLoadBalancer?: bool

    enableMasterPoolerLoadBalancer?: bool

    enableReplicaConnectionPooler?: bool

    enableReplicaLoadBalancer?: bool

    enableReplicaPoolerLoadBalancer?: bool

    enableShmVolume?: bool

    env?: [any]

    initContainers?: [any]

    init_containers?: [any]

    logicalBackupSchedule?: str

    maintenanceWindows?: [str]

    masterServiceAnnotations?: {str:str}

    nodeAffinity?: AcidZalanDoV1PostgresqlSpecNodeAffinity

    numberOfInstances: int

    patroni?: AcidZalanDoV1PostgresqlSpecPatroni

    podAnnotations?: {str:str}

    podPriorityClassName?: str

    pod_priority_class_name?: str

    postgresql: AcidZalanDoV1PostgresqlSpecPostgresql

    preparedDatabases?: {str:AcidZalanDoV1PostgresqlSpecPreparedDatabasesAnon}

    replicaLoadBalancer?: bool

    replicaServiceAnnotations?: {str:str}

    resources?: AcidZalanDoV1PostgresqlSpecResources

    schedulerName?: str

    serviceAnnotations?: {str:str}

    sidecars?: [any]

    spiloFSGroup?: int

    spiloRunAsGroup?: int

    spiloRunAsUser?: int

    standby?: AcidZalanDoV1PostgresqlSpecStandby

    streams?: [AcidZalanDoV1PostgresqlSpecStreamsItems0]

    teamId: str

    tls?: AcidZalanDoV1PostgresqlSpecTLS

    tolerations?: [AcidZalanDoV1PostgresqlSpecTolerationsItems0]

    useLoadBalancer?: bool

    users?: {str:[str]}

    usersWithInPlaceSecretRotation?: [str]

    usersWithSecretRotation?: [str]

    volume: AcidZalanDoV1PostgresqlSpecVolume


    check:
        regex.match(str(logicalBackupSchedule), r"^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$") if logicalBackupSchedule
        numberOfInstances >= 0


schema AcidZalanDoV1PostgresqlSpecAdditionalVolumesItems0:
    """
    acid zalan do v1 postgresql spec additional volumes items0

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        mount path
    name : str, default is Undefined, required
        name
    subPath : str, default is Undefined, optional
        sub path
    targetContainers : [str], default is Undefined, optional
        target containers
    volumeSource : any, default is Undefined, required
        volume source
    """


    mountPath: str

    name: str

    subPath?: str

    targetContainers?: [str]

    volumeSource: any


schema AcidZalanDoV1PostgresqlSpecClone:
    """
    acid zalan do v1 postgresql spec clone

    Attributes
    ----------
    cluster : str, default is Undefined, required
        cluster
    s3_access_key_id : str, default is Undefined, optional
        s3 access key id
    s3_endpoint : str, default is Undefined, optional
        s3 endpoint
    s3_force_path_style : bool, default is Undefined, optional
        s3 force path style
    s3_secret_access_key : str, default is Undefined, optional
        s3 secret access key
    s3_wal_path : str, default is Undefined, optional
        s3 wal path
    timestamp : str, default is Undefined, optional
        timestamp
    uid : str, default is Undefined, optional
        uid
    """


    cluster: str

    s3_access_key_id?: str

    s3_endpoint?: str

    s3_force_path_style?: bool

    s3_secret_access_key?: str

    s3_wal_path?: str

    timestamp?: str

    uid?: str


    check:
        regex.match(str(timestamp), r"^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$") if timestamp


schema AcidZalanDoV1PostgresqlSpecConnectionPooler:
    """
    acid zalan do v1 postgresql spec connection pooler

    Attributes
    ----------
    dockerImage : str, default is Undefined, optional
        docker image
    maxDBConnections : int, default is Undefined, optional
        max d b connections
    mode : str, default is Undefined, optional
        mode
    numberOfInstances : int, default is Undefined, optional
        number of instances
    resources : AcidZalanDoV1PostgresqlSpecConnectionPoolerResources, default is Undefined, optional
        resources
    $schema : str, default is Undefined, optional
        schema
    user : str, default is Undefined, optional
        user
    """


    dockerImage?: str

    maxDBConnections?: int

    mode?: "session" | "transaction"

    numberOfInstances?: int

    resources?: AcidZalanDoV1PostgresqlSpecConnectionPoolerResources

    $schema?: str

    user?: str


    check:
        numberOfInstances >= 1


schema AcidZalanDoV1PostgresqlSpecConnectionPoolerResources:
    """
    acid zalan do v1 postgresql spec connection pooler resources

    Attributes
    ----------
    limits : AcidZalanDoV1PostgresqlSpecConnectionPoolerResourcesLimits, default is Undefined, optional
        limits
    requests : AcidZalanDoV1PostgresqlSpecConnectionPoolerResourcesRequests, default is Undefined, optional
        requests
    """


    limits?: AcidZalanDoV1PostgresqlSpecConnectionPoolerResourcesLimits

    requests?: AcidZalanDoV1PostgresqlSpecConnectionPoolerResourcesRequests


schema AcidZalanDoV1PostgresqlSpecConnectionPoolerResourcesLimits:
    """
    acid zalan do v1 postgresql spec connection pooler resources limits

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        cpu
    memory : str, default is Undefined, optional
        memory
    """


    cpu?: str

    memory?: str


    check:
        regex.match(str(cpu), r"^(\d+m|\d+(\.\d{1,3})?)$") if cpu
        regex.match(str(memory), r"^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$") if memory


schema AcidZalanDoV1PostgresqlSpecConnectionPoolerResourcesRequests:
    """
    acid zalan do v1 postgresql spec connection pooler resources requests

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        cpu
    memory : str, default is Undefined, optional
        memory
    """


    cpu?: str

    memory?: str


    check:
        regex.match(str(cpu), r"^(\d+m|\d+(\.\d{1,3})?)$") if cpu
        regex.match(str(memory), r"^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$") if memory


schema AcidZalanDoV1PostgresqlSpecNodeAffinity:
    """
    acid zalan do v1 postgresql spec node affinity

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        preferred during scheduling ignored during execution
    requiredDuringSchedulingIgnoredDuringExecution : AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    acid zalan do v1 postgresql spec node affinity preferred during scheduling ignored during execution items0

    Attributes
    ----------
    preference : AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        weight
    """


    preference: AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    acid zalan do v1 postgresql spec node affinity preferred during scheduling ignored during execution items0 preference

    Attributes
    ----------
    matchExpressions : [AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchFields : [AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        match fields
    """


    matchExpressions?: [AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    acid zalan do v1 postgresql spec node affinity preferred during scheduling ignored during execution items0 preference match expressions items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        operator
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema AcidZalanDoV1PostgresqlSpecNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    acid zalan do v1 postgresql spec node affinity preferred during scheduling ignored during execution items0 preference match fields items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        operator
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    acid zalan do v1 postgresql spec node affinity required during scheduling ignored during execution

    Attributes
    ----------
    nodeSelectorTerms : [AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        node selector terms
    """


    nodeSelectorTerms: [AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    acid zalan do v1 postgresql spec node affinity required during scheduling ignored during execution node selector terms items0

    Attributes
    ----------
    matchExpressions : [AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchFields : [AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        match fields
    """


    matchExpressions?: [AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    acid zalan do v1 postgresql spec node affinity required during scheduling ignored during execution node selector terms items0 match expressions items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        operator
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema AcidZalanDoV1PostgresqlSpecNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    acid zalan do v1 postgresql spec node affinity required during scheduling ignored during execution node selector terms items0 match fields items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        operator
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: str

    values?: [str]


schema AcidZalanDoV1PostgresqlSpecPatroni:
    """
    acid zalan do v1 postgresql spec patroni

    Attributes
    ----------
    failsafe_mode : bool, default is Undefined, optional
        failsafe mode
    initdb : {str:str}, default is Undefined, optional
        initdb
    loop_wait : int, default is Undefined, optional
        loop wait
    maximum_lag_on_failover : int, default is Undefined, optional
        maximum lag on failover
    pg_hba : [str], default is Undefined, optional
        pg hba
    retry_timeout : int, default is Undefined, optional
        retry timeout
    slots : {str:{str:str}}, default is Undefined, optional
        slots
    synchronous_mode : bool, default is Undefined, optional
        synchronous mode
    synchronous_mode_strict : bool, default is Undefined, optional
        synchronous mode strict
    synchronous_node_count : int, default is Undefined, optional
        synchronous node count
    ttl : int, default is Undefined, optional
        ttl
    """


    failsafe_mode?: bool

    initdb?: {str:str}

    loop_wait?: int

    maximum_lag_on_failover?: int

    pg_hba?: [str]

    retry_timeout?: int

    slots?: {str:{str:str}}

    synchronous_mode?: bool

    synchronous_mode_strict?: bool

    synchronous_node_count?: int

    ttl?: int


schema AcidZalanDoV1PostgresqlSpecPostgresql:
    """
    acid zalan do v1 postgresql spec postgresql

    Attributes
    ----------
    parameters : {str:str}, default is Undefined, optional
        parameters
    version : str, default is Undefined, required
        version
    """


    parameters?: {str:str}

    version: "10" | "11" | "12" | "13" | "14" | "15"


schema AcidZalanDoV1PostgresqlSpecPreparedDatabasesAnon:
    """
    acid zalan do v1 postgresql spec prepared databases anon

    Attributes
    ----------
    defaultUsers : bool, default is Undefined, optional
        default users
    extensions : {str:str}, default is Undefined, optional
        extensions
    schemas : {str:AcidZalanDoV1PostgresqlSpecPreparedDatabasesAnonSchemasAnon}, default is Undefined, optional
        schemas
    secretNamespace : str, default is Undefined, optional
        secret namespace
    """


    defaultUsers?: bool

    extensions?: {str:str}

    schemas?: {str:AcidZalanDoV1PostgresqlSpecPreparedDatabasesAnonSchemasAnon}

    secretNamespace?: str


schema AcidZalanDoV1PostgresqlSpecPreparedDatabasesAnonSchemasAnon:
    """
    acid zalan do v1 postgresql spec prepared databases anon schemas anon

    Attributes
    ----------
    defaultRoles : bool, default is Undefined, optional
        default roles
    defaultUsers : bool, default is Undefined, optional
        default users
    """


    defaultRoles?: bool

    defaultUsers?: bool


schema AcidZalanDoV1PostgresqlSpecResources:
    """
    acid zalan do v1 postgresql spec resources

    Attributes
    ----------
    limits : AcidZalanDoV1PostgresqlSpecResourcesLimits, default is Undefined, optional
        limits
    requests : AcidZalanDoV1PostgresqlSpecResourcesRequests, default is Undefined, optional
        requests
    """


    limits?: AcidZalanDoV1PostgresqlSpecResourcesLimits

    requests?: AcidZalanDoV1PostgresqlSpecResourcesRequests


schema AcidZalanDoV1PostgresqlSpecResourcesLimits:
    """
    acid zalan do v1 postgresql spec resources limits

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        cpu
    memory : str, default is Undefined, optional
        memory
    """


    cpu?: str

    memory?: str


    check:
        regex.match(str(cpu), r"^(\d+m|\d+(\.\d{1,3})?)$") if cpu
        regex.match(str(memory), r"^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$") if memory


schema AcidZalanDoV1PostgresqlSpecResourcesRequests:
    """
    acid zalan do v1 postgresql spec resources requests

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        cpu
    memory : str, default is Undefined, optional
        memory
    """


    cpu?: str

    memory?: str


    check:
        regex.match(str(cpu), r"^(\d+m|\d+(\.\d{1,3})?)$") if cpu
        regex.match(str(memory), r"^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$") if memory


schema AcidZalanDoV1PostgresqlSpecStandby:
    """
    acid zalan do v1 postgresql spec standby

    Attributes
    ----------
    gs_wal_path : str, default is Undefined, optional
        gs wal path
    s3_wal_path : str, default is Undefined, optional
        s3 wal path
    standby_host : str, default is Undefined, optional
        standby host
    standby_port : str, default is Undefined, optional
        standby port
    """


    gs_wal_path?: str

    s3_wal_path?: str

    standby_host?: str

    standby_port?: str


schema AcidZalanDoV1PostgresqlSpecStreamsItems0:
    """
    acid zalan do v1 postgresql spec streams items0

    Attributes
    ----------
    applicationId : str, default is Undefined, required
        application Id
    batchSize : int, default is Undefined, optional
        batch size
    database : str, default is Undefined, required
        database
    $filter : {str:str}, default is Undefined, optional
        filter
    tables : {str:AcidZalanDoV1PostgresqlSpecStreamsItems0TablesAnon}, default is Undefined, required
        tables
    """


    applicationId: str

    batchSize?: int

    database: str

    $filter?: {str:str}

    tables: {str:AcidZalanDoV1PostgresqlSpecStreamsItems0TablesAnon}


schema AcidZalanDoV1PostgresqlSpecStreamsItems0TablesAnon:
    """
    acid zalan do v1 postgresql spec streams items0 tables anon

    Attributes
    ----------
    eventType : str, default is Undefined, required
        event type
    idColumn : str, default is Undefined, optional
        id column
    payloadColumn : str, default is Undefined, optional
        payload column
    """


    eventType: str

    idColumn?: str

    payloadColumn?: str


schema AcidZalanDoV1PostgresqlSpecTLS:
    """
    acid zalan do v1 postgresql spec TLS

    Attributes
    ----------
    caFile : str, default is Undefined, optional
        ca file
    caSecretName : str, default is Undefined, optional
        ca secret name
    certificateFile : str, default is Undefined, optional
        certificate file
    privateKeyFile : str, default is Undefined, optional
        private key file
    secretName : str, default is Undefined, required
        secret name
    """


    caFile?: str

    caSecretName?: str

    certificateFile?: str

    privateKeyFile?: str

    secretName: str


schema AcidZalanDoV1PostgresqlSpecTolerationsItems0:
    """
    acid zalan do v1 postgresql spec tolerations items0

    Attributes
    ----------
    effect : str, default is Undefined, optional
        effect
    key : str, default is Undefined, optional
        key
    operator : str, default is Undefined, optional
        operator
    tolerationSeconds : int, default is Undefined, optional
        toleration seconds
    value : str, default is Undefined, optional
        value
    """


    effect?: "NoExecute" | "NoSchedule" | "PreferNoSchedule"

    key?: str

    operator?: "Equal" | "Exists"

    tolerationSeconds?: int

    value?: str


schema AcidZalanDoV1PostgresqlSpecVolume:
    """
    acid zalan do v1 postgresql spec volume

    Attributes
    ----------
    iops : int, default is Undefined, optional
        iops
    selector : AcidZalanDoV1PostgresqlSpecVolumeSelector, default is Undefined, optional
        selector
    size : str, default is Undefined, required
        size
    storageClass : str, default is Undefined, optional
        storage class
    subPath : str, default is Undefined, optional
        sub path
    throughput : int, default is Undefined, optional
        throughput
    """


    iops?: int

    selector?: AcidZalanDoV1PostgresqlSpecVolumeSelector

    size: str

    storageClass?: str

    subPath?: str

    throughput?: int


    check:
        regex.match(str(size), r"^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$")


schema AcidZalanDoV1PostgresqlSpecVolumeSelector:
    """
    acid zalan do v1 postgresql spec volume selector

    Attributes
    ----------
    matchExpressions : [AcidZalanDoV1PostgresqlSpecVolumeSelectorMatchExpressionsItems0], default is Undefined, optional
        match expressions
    matchLabels : any, default is Undefined, optional
        match labels
    """


    matchExpressions?: [AcidZalanDoV1PostgresqlSpecVolumeSelectorMatchExpressionsItems0]

    matchLabels?: any


schema AcidZalanDoV1PostgresqlSpecVolumeSelectorMatchExpressionsItems0:
    """
    acid zalan do v1 postgresql spec volume selector match expressions items0

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    operator : str, default is Undefined, required
        operator
    values : [str], default is Undefined, optional
        values
    """


    key: str

    operator: "DoesNotExist" | "Exists" | "In" | "NotIn"

    values?: [str]


