"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Queue:
    """
    Queue is the Schema for the Queues API

    Attributes
    ----------
    apiVersion : str, default is "sqs.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Queue", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SqsServicesK8sAwsV1alpha1QueueSpec, default is Undefined, optional
        spec
    status : SqsServicesK8sAwsV1alpha1QueueStatus, default is Undefined, optional
        status
    """


    apiVersion: "sqs.services.k8s.aws/v1alpha1" = "sqs.services.k8s.aws/v1alpha1"

    kind: "Queue" = "Queue"

    metadata?: v1.ObjectMeta

    spec?: SqsServicesK8sAwsV1alpha1QueueSpec

    status?: SqsServicesK8sAwsV1alpha1QueueStatus


schema SqsServicesK8sAwsV1alpha1QueueSpec:
    """
    QueueSpec defines the desired state of Queue.

    Attributes
    ----------
    contentBasedDeduplication : str, default is Undefined, optional
        content based deduplication
    delaySeconds : str, default is Undefined, optional
        delay seconds
    fifoQueue : str, default is Undefined, optional
        fifo queue
    kmsDataKeyReusePeriodSeconds : str, default is Undefined, optional
        kms data key reuse period seconds
    kmsMasterKeyID : str, default is Undefined, optional
        kms master key ID
    maximumMessageSize : str, default is Undefined, optional
        maximum message size
    messageRetentionPeriod : str, default is Undefined, optional
        message retention period
    policy : str, default is Undefined, optional
        policy
    queueName : str, default is Undefined, required
        queue name
    receiveMessageWaitTimeSeconds : str, default is Undefined, optional
        receive message wait time seconds
    redrivePolicy : str, default is Undefined, optional
        redrive policy
    tags : {str:str}, default is Undefined, optional
        Add cost allocation tags to the specified Amazon SQS queue. For an overview, see Tagging Your Amazon SQS Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-tags.html) in the Amazon SQS Developer Guide. 
         When you use queue tags, keep the following guidelines in mind: 
         * Adding more than 50 tags to a queue isn't recommended. 
         * Tags don't have any semantic meaning. Amazon SQS interprets tags as character strings. 
         * Tags are case-sensitive. 
         * A new tag with a key identical to that of an existing tag overwrites the existing tag. 
         For a full list of tag restrictions, see Quotas related to queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-limits.html#limits-queues) in the Amazon SQS Developer Guide. 
         To be able to tag a queue on creation, you must have the sqs:CreateQueue and sqs:TagQueue permissions. 
         Cross-account permissions don't apply to this action. For more information, see Grant cross-account permissions to a role and a user name (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-customer-managed-policy-examples.html#grant-cross-account-permissions-to-role-and-user-name) in the Amazon SQS Developer Guide.
    visibilityTimeout : str, default is Undefined, optional
        visibility timeout
    """


    contentBasedDeduplication?: str

    delaySeconds?: str

    fifoQueue?: str

    kmsDataKeyReusePeriodSeconds?: str

    kmsMasterKeyID?: str

    maximumMessageSize?: str

    messageRetentionPeriod?: str

    policy?: str

    queueName: str

    receiveMessageWaitTimeSeconds?: str

    redrivePolicy?: str

    tags?: {str:str}

    visibilityTimeout?: str


schema SqsServicesK8sAwsV1alpha1QueueStatus:
    """
    QueueStatus defines the observed state of Queue

    Attributes
    ----------
    ackResourceMetadata : SqsServicesK8sAwsV1alpha1QueueStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [SqsServicesK8sAwsV1alpha1QueueStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    queueURL : str, default is Undefined, optional
        The URL of the created Amazon SQS queue.
    """


    ackResourceMetadata?: SqsServicesK8sAwsV1alpha1QueueStatusAckResourceMetadata

    conditions?: [SqsServicesK8sAwsV1alpha1QueueStatusConditionsItems0]

    queueURL?: str


schema SqsServicesK8sAwsV1alpha1QueueStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema SqsServicesK8sAwsV1alpha1QueueStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


