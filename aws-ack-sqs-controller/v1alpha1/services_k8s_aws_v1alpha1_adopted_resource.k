"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AdoptedResource:
    """
    AdoptedResource is the schema for the AdoptedResource API.

    Attributes
    ----------
    apiVersion : str, default is "services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AdoptedResource", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServicesK8sAwsV1alpha1AdoptedResourceSpec, default is Undefined, optional
        spec
    status : ServicesK8sAwsV1alpha1AdoptedResourceStatus, default is Undefined, optional
        status
    """


    apiVersion: "services.k8s.aws/v1alpha1" = "services.k8s.aws/v1alpha1"

    kind: "AdoptedResource" = "AdoptedResource"

    metadata?: v1.ObjectMeta

    spec?: ServicesK8sAwsV1alpha1AdoptedResourceSpec

    status?: ServicesK8sAwsV1alpha1AdoptedResourceStatus


schema ServicesK8sAwsV1alpha1AdoptedResourceSpec:
    """
    AdoptedResourceSpec defines the desired state of the AdoptedResource.

    Attributes
    ----------
    aws : ServicesK8sAwsV1alpha1AdoptedResourceSpecAws, default is Undefined, required
        aws
    kubernetes : ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetes, default is Undefined, required
        kubernetes
    """


    aws: ServicesK8sAwsV1alpha1AdoptedResourceSpecAws

    kubernetes: ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetes


schema ServicesK8sAwsV1alpha1AdoptedResourceSpecAws:
    """
    AWSIdentifiers provide all unique ways to reference an AWS resource.

    Attributes
    ----------
    additionalKeys : {str:str}, default is Undefined, optional
        AdditionalKeys represents any additional arbitrary identifiers used when describing the target resource.
    arn : str, default is Undefined, optional
        ARN is the AWS Resource Name for the resource. It is a globally unique identifier.
    nameOrID : str, default is Undefined, optional
        NameOrId is a user-supplied string identifier for the resource. It may or may not be globally unique, depending on the type of resource.
    """


    additionalKeys?: {str:str}

    arn?: str

    nameOrID?: str


schema ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetes:
    """
    ResourceWithMetadata provides the values necessary to create a Kubernetes resource and override any of its metadata values.

    Attributes
    ----------
    group : str, default is Undefined, required
        group
    kind : str, default is Undefined, required
        kind
    metadata : ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetesMetadata, default is Undefined, optional
        metadata
    """


    group: str

    kind: str

    metadata?: ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetesMetadata


schema ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetesMetadata:
    """
    ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create. It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen automatically converts this to an arbitrary string-string map. https://github.com/kubernetes-sigs/controller-tools/issues/385 
     Active discussion about inclusion of this field in the spec is happening in this PR: https://github.com/kubernetes-sigs/controller-tools/pull/395 
     Until this is allowed, or if it never is, we will produce a subset of the object meta that contains only the fields which the user is allowed to modify in the metadata.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    generateName : str, default is Undefined, optional
        GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. 
         If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). 
         Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    namespace : str, default is Undefined, optional
        Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. 
         Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
    ownerReferences : [ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetesMetadataOwnerReferencesItems0], default is Undefined, optional
        List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
    """


    annotations?: {str:str}

    generateName?: str

    labels?: {str:str}

    name?: str

    namespace?: str

    ownerReferences?: [ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetesMetadataOwnerReferencesItems0]


schema ServicesK8sAwsV1alpha1AdoptedResourceSpecKubernetesMetadataOwnerReferencesItems0:
    """
    OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        API version of the referent.
    blockOwnerDeletion : bool, default is Undefined, optional
        If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
    controller : bool, default is Undefined, optional
        If true, this reference points to the managing controller.
    kind : str, default is Undefined, required
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, required
        Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    uid : str, default is Undefined, required
        UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
    """


    apiVersion: str

    blockOwnerDeletion?: bool

    controller?: bool

    kind: str

    name: str

    uid: str


schema ServicesK8sAwsV1alpha1AdoptedResourceStatus:
    """
    AdoptedResourceStatus defines the observed status of the AdoptedResource.

    Attributes
    ----------
    conditions : [ServicesK8sAwsV1alpha1AdoptedResourceStatusConditionsItems0], default is Undefined, required
        A collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the adopted resource CR and its target custom resource
    """


    conditions: [ServicesK8sAwsV1alpha1AdoptedResourceStatusConditionsItems0]


schema ServicesK8sAwsV1alpha1AdoptedResourceStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


