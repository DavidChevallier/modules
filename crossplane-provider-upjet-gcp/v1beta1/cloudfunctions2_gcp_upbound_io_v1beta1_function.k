"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Function:
    """
    Function is the Schema for the Functions API. A Cloud Function that contains user computation executed in response to an event.

    Attributes
    ----------
    apiVersion : str, default is "cloudfunctions2.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Function", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpec, default is Undefined, required
        spec
    status : Cloudfunctions2GcpUpboundIoV1beta1FunctionStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudfunctions2.gcp.upbound.io/v1beta1" = "cloudfunctions2.gcp.upbound.io/v1beta1"

    kind: "Function" = "Function"

    metadata?: v1.ObjectMeta

    spec: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpec

    status?: Cloudfunctions2GcpUpboundIoV1beta1FunctionStatus


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpec:
    """
    FunctionSpec defines the desired state of Function

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProvider, default is Undefined, required
        for provider
    initProvider : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProvider

    initProvider?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecProviderConfigRef

    publishConnectionDetailsTo?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecWriteConnectionSecretToRef


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProvider:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider

    Attributes
    ----------
    buildConfig : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0], default is Undefined, optional
        Describes the Build step of the function that builds a container
        from the given source.
        Structure is documented below.
    description : str, default is Undefined, optional
        User-provided description of a function.
    eventTrigger : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0], default is Undefined, optional
        An Eventarc trigger managed by Google Cloud Functions that fires events in
        response to a condition in another service.
        Structure is documented below.
    kmsKeyName : str, default is Undefined, optional
        Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs associated with this Cloud Function.
    location : str, default is Undefined, required
        The location of this cloud function.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serviceConfig : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0], default is Undefined, optional
        Describes the Service being deployed.
        Structure is documented below.
    """


    buildConfig?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0]

    description?: str

    eventTrigger?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0]

    kmsKeyName?: str

    labels?: {str:str}

    location: str

    project?: str

    serviceConfig?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider build config items0

    Attributes
    ----------
    dockerRepository : str, default is Undefined, optional
        User managed repository created in Artifact Registry optionally with a customer managed encryption key.
    dockerRepositoryRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositoryRef, default is Undefined, optional
        docker repository ref
    dockerRepositorySelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositorySelector, default is Undefined, optional
        docker repository selector
    entryPoint : str, default is Undefined, optional
        The name of the function (as defined in source code) that will be executed.
        Defaults to the resource name suffix, if not specified. For backward
        compatibility, if function with given name is not found, then the system
        will try to use function named "function". For Node.js this is name of a
        function exported by the module specified in source_location.
    environmentVariables : {str:str}, default is Undefined, optional
        User-provided build-time environment variables for the function.
    runtime : str, default is Undefined, optional
        The runtime in which to run the function. Required when deploying a new
        function, optional when updating an existing function.
    source : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0], default is Undefined, optional
        The location of the function source code.
        Structure is documented below.
    workerPool : str, default is Undefined, optional
        Name of the Cloud Build Custom Worker Pool that should be used to build the function.
    workerPoolRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolRef, default is Undefined, optional
        worker pool ref
    workerPoolSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolSelector, default is Undefined, optional
        worker pool selector
    """


    dockerRepository?: str

    dockerRepositoryRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositoryRef

    dockerRepositorySelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositorySelector

    entryPoint?: str

    environmentVariables?: {str:str}

    runtime?: str

    source?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0]

    workerPool?: str

    workerPoolRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolRef

    workerPoolSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolSelector


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositoryRef:
    """
    Reference to a RegistryRepository in artifact to populate dockerRepository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositoryRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositoryRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositorySelector:
    """
    Selector for a RegistryRepository in artifact to populate dockerRepository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositorySelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0DockerRepositorySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider build config items0 source items0

    Attributes
    ----------
    repoSource : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0RepoSourceItems0], default is Undefined, optional
        If provided, get the source from this location in a Cloud Source Repository.
        Structure is documented below.
    storageSource : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0], default is Undefined, optional
        If provided, get the source from this location in Google Cloud Storage.
        Structure is documented below.
    """


    repoSource?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0RepoSourceItems0]

    storageSource?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0RepoSourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider build config items0 source items0 repo source items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Regex matching branches to build.
    commitSha : str, default is Undefined, optional
        Regex matching tags to build.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does
        NOT match the revision regex.
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository.
    tagName : str, default is Undefined, optional
        Regex matching tags to build.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider build config items0 source items0 storage source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source
    bucketRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelector, default is Undefined, optional
        bucket selector
    generation : float, default is Undefined, optional
        Google Cloud Storage generation for the object. If the generation
        is omitted, the latest generation will be used.
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
    objectRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRef, default is Undefined, optional
        object ref
    objectSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelector, default is Undefined, optional
        object selector
    """


    bucket?: str

    bucketRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRef

    bucketSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelector

    generation?: float

    object?: str

    objectRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRef

    objectSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelector


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRef:
    """
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelector:
    """
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRef:
    """
    Reference to a BucketObject in storage to populate object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelector:
    """
    Selector for a BucketObject in storage to populate object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolRef:
    """
    Reference to a WorkerPool in cloudbuild to populate workerPool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolSelector:
    """
    Selector for a WorkerPool in cloudbuild to populate workerPool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderBuildConfigItems0WorkerPoolSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider event trigger items0

    Attributes
    ----------
    eventFilters : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0], default is Undefined, optional
        Criteria used to filter events.
        Structure is documented below.
    eventType : str, default is Undefined, optional
        Required. The type of event to observe.
    pubsubTopic : str, default is Undefined, optional
        The name of a Pub/Sub topic in the same project that will be used
        as the transport topic for the event delivery.
    pubsubTopicRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicRef, default is Undefined, optional
        pubsub topic ref
    pubsubTopicSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicSelector, default is Undefined, optional
        pubsub topic selector
    retryPolicy : str, default is Undefined, optional
        Describes the retry policy in case of function's execution failure.
        Retried execution is charged as any other execution.
        Possible values are: RETRY_POLICY_UNSPECIFIED, RETRY_POLICY_DO_NOT_RETRY, RETRY_POLICY_RETRY.
    serviceAccountEmail : str, default is Undefined, optional
        Optional. The email of the trigger's service account. The service account
        must have permission to invoke Cloud Run services. If empty, defaults to the
        Compute Engine default service account: {project_number}-compute@developer.gserviceaccount.com.
    serviceAccountEmailRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailRef, default is Undefined, optional
        service account email ref
    serviceAccountEmailSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailSelector, default is Undefined, optional
        service account email selector
    triggerRegion : str, default is Undefined, optional
        The region that the trigger will be in. The trigger will only receive
        events originating in this region. It can be the same
        region as the function, a different region or multi-region, or the global
        region. If not provided, defaults to the same region as the function.
    """


    eventFilters?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0]

    eventType?: str

    pubsubTopic?: str

    pubsubTopicRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicRef

    pubsubTopicSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicSelector

    retryPolicy?: str

    serviceAccountEmail?: str

    serviceAccountEmailRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailRef

    serviceAccountEmailSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailSelector

    triggerRegion?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider event trigger items0 event filters items0

    Attributes
    ----------
    attribute : str, default is Undefined, optional
        'Required. The name of a CloudEvents attribute.
        Currently, only a subset of attributes are supported for filtering. Use the gcloud eventarc providers describe command to learn more about events and their attributes.
        Do not filter for the 'type' attribute here, as this is already achieved by the resource's event_type attribute.
    operator : str, default is Undefined, optional
        Optional. The operator used for matching the events with the value of
        the filter. If not specified, only events that have an exact key-value
        pair specified in the filter are matched.
        The only allowed value is match-path-pattern.
        See documentation on path patterns here'
    value : str, default is Undefined, optional
        Required. The value for the attribute.
        If the operator field is set as match-path-pattern, this value can be a path pattern instead of an exact value.
    valueRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueRef, default is Undefined, optional
        value ref
    valueSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueSelector, default is Undefined, optional
        value selector
    """


    attribute?: str

    operator?: str

    value?: str

    valueRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueRef

    valueSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueSelector


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueRef:
    """
    Reference to a Bucket in storage to populate value.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueSelector:
    """
    Selector for a Bucket in storage to populate value.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0EventFiltersItems0ValueSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicRef:
    """
    Reference to a Topic in pubsub to populate pubsubTopic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicSelector:
    """
    Selector for a Topic in pubsub to populate pubsubTopic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0PubsubTopicSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderEventTriggerItems0ServiceAccountEmailSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider service config items0

    Attributes
    ----------
    allTrafficOnLatestRevision : bool, default is Undefined, optional
        Whether 100% of traffic is routed to the latest revision. Defaults to true.
    availableCpu : str, default is Undefined, optional
        The number of CPUs used in a single container instance. Default value is calculated from available memory.
    availableMemory : str, default is Undefined, optional
        The amount of memory available for a function.
        Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
        supplied the value is interpreted as bytes.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables that shall be available during function execution.
    ingressSettings : str, default is Undefined, optional
        Available ingress settings. Defaults to "ALLOW_ALL" if unspecified.
        Default value is ALLOW_ALL.
        Possible values are: ALLOW_ALL, ALLOW_INTERNAL_ONLY, ALLOW_INTERNAL_AND_GCLB.
    maxInstanceCount : float, default is Undefined, optional
        The limit on the maximum number of function instances that may coexist at a
        given time.
    maxInstanceRequestConcurrency : float, default is Undefined, optional
        Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.
    minInstanceCount : float, default is Undefined, optional
        The limit on the minimum number of function instances that may coexist at a
        given time.
    secretEnvironmentVariables : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0], default is Undefined, optional
        Secret environment variables configuration.
        Structure is documented below.
    secretVolumes : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0], default is Undefined, optional
        Secret volumes configuration.
        Structure is documented below.
    service : str, default is Undefined, optional
        Name of the service associated with a Function.
    serviceAccountEmail : str, default is Undefined, optional
        The email of the service account for this function.
    serviceAccountEmailRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailRef, default is Undefined, optional
        service account email ref
    serviceAccountEmailSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailSelector, default is Undefined, optional
        service account email selector
    timeoutSeconds : float, default is Undefined, optional
        The function execution timeout. Execution is considered failed and
        can be terminated if the function is not completed at the end of the
        timeout period. Defaults to 60 seconds.
    vpcConnector : str, default is Undefined, optional
        The Serverless VPC Access connector that this cloud function can connect to.
    vpcConnectorEgressSettings : str, default is Undefined, optional
        Available egress settings.
        Possible values are: VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED, PRIVATE_RANGES_ONLY, ALL_TRAFFIC.
    """


    allTrafficOnLatestRevision?: bool

    availableCpu?: str

    availableMemory?: str

    environmentVariables?: {str:str}

    ingressSettings?: str

    maxInstanceCount?: float

    maxInstanceRequestConcurrency?: float

    minInstanceCount?: float

    secretEnvironmentVariables?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0]

    secretVolumes?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0]

    service?: str

    serviceAccountEmail?: str

    serviceAccountEmailRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailRef

    serviceAccountEmailSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailSelector

    timeoutSeconds?: float

    vpcConnector?: str

    vpcConnectorEgressSettings?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider service config items0 secret environment variables items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Name of the environment variable.
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, optional
        Name of the secret in secret manager (not the full resource name).
    secretRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelector, default is Undefined, optional
        secret selector
    version : str, default is Undefined, optional
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    key?: str

    projectId?: str

    secret?: str

    secretRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRef

    secretSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelector

    version?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider service config items0 secret volumes items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        The path within the container to mount the secret volume. For example, setting the mountPath as /etc/secrets would mount the secret value files under the /etc/secrets directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount path: /etc/secrets
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, optional
        Name of the secret in secret manager (not the full resource name).
    secretRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretSelector, default is Undefined, optional
        secret selector
    versions : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0VersionsItems0], default is Undefined, optional
        List of secret versions to mount for this secret. If empty, the latest version of the secret will be made available in a file named after the secret under the mount point.'
        Structure is documented below.
    """


    mountPath?: str

    projectId?: str

    secret?: str

    secretRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretRef

    secretSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretSelector

    versions?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0VersionsItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0SecretVolumesItems0VersionsItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec for provider service config items0 secret volumes items0 versions items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as '/etc/secrets' and path as secret_foo would mount the secret value file at /etc/secrets/secret_foo.
    version : str, default is Undefined, optional
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    path?: str

    version?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecForProviderServiceConfigItems0ServiceAccountEmailSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    buildConfig : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0], default is Undefined, optional
        Describes the Build step of the function that builds a container
        from the given source.
        Structure is documented below.
    description : str, default is Undefined, optional
        User-provided description of a function.
    eventTrigger : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0], default is Undefined, optional
        An Eventarc trigger managed by Google Cloud Functions that fires events in
        response to a condition in another service.
        Structure is documented below.
    kmsKeyName : str, default is Undefined, optional
        Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs associated with this Cloud Function.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serviceConfig : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0], default is Undefined, optional
        Describes the Service being deployed.
        Structure is documented below.
    """


    buildConfig?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0]

    description?: str

    eventTrigger?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0]

    kmsKeyName?: str

    labels?: {str:str}

    project?: str

    serviceConfig?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider build config items0

    Attributes
    ----------
    dockerRepository : str, default is Undefined, optional
        User managed repository created in Artifact Registry optionally with a customer managed encryption key.
    dockerRepositoryRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositoryRef, default is Undefined, optional
        docker repository ref
    dockerRepositorySelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositorySelector, default is Undefined, optional
        docker repository selector
    entryPoint : str, default is Undefined, optional
        The name of the function (as defined in source code) that will be executed.
        Defaults to the resource name suffix, if not specified. For backward
        compatibility, if function with given name is not found, then the system
        will try to use function named "function". For Node.js this is name of a
        function exported by the module specified in source_location.
    environmentVariables : {str:str}, default is Undefined, optional
        User-provided build-time environment variables for the function.
    runtime : str, default is Undefined, optional
        The runtime in which to run the function. Required when deploying a new
        function, optional when updating an existing function.
    source : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0], default is Undefined, optional
        The location of the function source code.
        Structure is documented below.
    workerPool : str, default is Undefined, optional
        Name of the Cloud Build Custom Worker Pool that should be used to build the function.
    workerPoolRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolRef, default is Undefined, optional
        worker pool ref
    workerPoolSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolSelector, default is Undefined, optional
        worker pool selector
    """


    dockerRepository?: str

    dockerRepositoryRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositoryRef

    dockerRepositorySelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositorySelector

    entryPoint?: str

    environmentVariables?: {str:str}

    runtime?: str

    source?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0]

    workerPool?: str

    workerPoolRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolRef

    workerPoolSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolSelector


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositoryRef:
    """
    Reference to a RegistryRepository in artifact to populate dockerRepository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositoryRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositoryRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositorySelector:
    """
    Selector for a RegistryRepository in artifact to populate dockerRepository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositorySelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0DockerRepositorySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider build config items0 source items0

    Attributes
    ----------
    repoSource : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0RepoSourceItems0], default is Undefined, optional
        If provided, get the source from this location in a Cloud Source Repository.
        Structure is documented below.
    storageSource : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0], default is Undefined, optional
        If provided, get the source from this location in Google Cloud Storage.
        Structure is documented below.
    """


    repoSource?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0RepoSourceItems0]

    storageSource?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0RepoSourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider build config items0 source items0 repo source items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Regex matching branches to build.
    commitSha : str, default is Undefined, optional
        Regex matching tags to build.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does
        NOT match the revision regex.
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository.
    tagName : str, default is Undefined, optional
        Regex matching tags to build.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider build config items0 source items0 storage source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source
    bucketRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelector, default is Undefined, optional
        bucket selector
    generation : float, default is Undefined, optional
        Google Cloud Storage generation for the object. If the generation
        is omitted, the latest generation will be used.
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
    objectRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRef, default is Undefined, optional
        object ref
    objectSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelector, default is Undefined, optional
        object selector
    """


    bucket?: str

    bucketRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRef

    bucketSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelector

    generation?: float

    object?: str

    objectRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRef

    objectSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelector


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRef:
    """
    Reference to a Bucket in storage to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelector:
    """
    Selector for a Bucket in storage to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0BucketSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRef:
    """
    Reference to a BucketObject in storage to populate object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelector:
    """
    Selector for a BucketObject in storage to populate object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0SourceItems0StorageSourceItems0ObjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolRef:
    """
    Reference to a WorkerPool in cloudbuild to populate workerPool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolSelector:
    """
    Selector for a WorkerPool in cloudbuild to populate workerPool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderBuildConfigItems0WorkerPoolSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider event trigger items0

    Attributes
    ----------
    eventFilters : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0], default is Undefined, optional
        Criteria used to filter events.
        Structure is documented below.
    eventType : str, default is Undefined, optional
        Required. The type of event to observe.
    pubsubTopic : str, default is Undefined, optional
        The name of a Pub/Sub topic in the same project that will be used
        as the transport topic for the event delivery.
    pubsubTopicRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicRef, default is Undefined, optional
        pubsub topic ref
    pubsubTopicSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicSelector, default is Undefined, optional
        pubsub topic selector
    retryPolicy : str, default is Undefined, optional
        Describes the retry policy in case of function's execution failure.
        Retried execution is charged as any other execution.
        Possible values are: RETRY_POLICY_UNSPECIFIED, RETRY_POLICY_DO_NOT_RETRY, RETRY_POLICY_RETRY.
    serviceAccountEmail : str, default is Undefined, optional
        Optional. The email of the trigger's service account. The service account
        must have permission to invoke Cloud Run services. If empty, defaults to the
        Compute Engine default service account: {project_number}-compute@developer.gserviceaccount.com.
    serviceAccountEmailRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailRef, default is Undefined, optional
        service account email ref
    serviceAccountEmailSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailSelector, default is Undefined, optional
        service account email selector
    triggerRegion : str, default is Undefined, optional
        The region that the trigger will be in. The trigger will only receive
        events originating in this region. It can be the same
        region as the function, a different region or multi-region, or the global
        region. If not provided, defaults to the same region as the function.
    """


    eventFilters?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0]

    eventType?: str

    pubsubTopic?: str

    pubsubTopicRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicRef

    pubsubTopicSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicSelector

    retryPolicy?: str

    serviceAccountEmail?: str

    serviceAccountEmailRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailRef

    serviceAccountEmailSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailSelector

    triggerRegion?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider event trigger items0 event filters items0

    Attributes
    ----------
    attribute : str, default is Undefined, optional
        'Required. The name of a CloudEvents attribute.
        Currently, only a subset of attributes are supported for filtering. Use the gcloud eventarc providers describe command to learn more about events and their attributes.
        Do not filter for the 'type' attribute here, as this is already achieved by the resource's event_type attribute.
    operator : str, default is Undefined, optional
        Optional. The operator used for matching the events with the value of
        the filter. If not specified, only events that have an exact key-value
        pair specified in the filter are matched.
        The only allowed value is match-path-pattern.
        See documentation on path patterns here'
    value : str, default is Undefined, optional
        Required. The value for the attribute.
        If the operator field is set as match-path-pattern, this value can be a path pattern instead of an exact value.
    valueRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueRef, default is Undefined, optional
        value ref
    valueSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueSelector, default is Undefined, optional
        value selector
    """


    attribute?: str

    operator?: str

    value?: str

    valueRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueRef

    valueSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueSelector


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueRef:
    """
    Reference to a Bucket in storage to populate value.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueSelector:
    """
    Selector for a Bucket in storage to populate value.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0EventFiltersItems0ValueSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicRef:
    """
    Reference to a Topic in pubsub to populate pubsubTopic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicSelector:
    """
    Selector for a Topic in pubsub to populate pubsubTopic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0PubsubTopicSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderEventTriggerItems0ServiceAccountEmailSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider service config items0

    Attributes
    ----------
    allTrafficOnLatestRevision : bool, default is Undefined, optional
        Whether 100% of traffic is routed to the latest revision. Defaults to true.
    availableCpu : str, default is Undefined, optional
        The number of CPUs used in a single container instance. Default value is calculated from available memory.
    availableMemory : str, default is Undefined, optional
        The amount of memory available for a function.
        Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
        supplied the value is interpreted as bytes.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables that shall be available during function execution.
    ingressSettings : str, default is Undefined, optional
        Available ingress settings. Defaults to "ALLOW_ALL" if unspecified.
        Default value is ALLOW_ALL.
        Possible values are: ALLOW_ALL, ALLOW_INTERNAL_ONLY, ALLOW_INTERNAL_AND_GCLB.
    maxInstanceCount : float, default is Undefined, optional
        The limit on the maximum number of function instances that may coexist at a
        given time.
    maxInstanceRequestConcurrency : float, default is Undefined, optional
        Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.
    minInstanceCount : float, default is Undefined, optional
        The limit on the minimum number of function instances that may coexist at a
        given time.
    secretEnvironmentVariables : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0], default is Undefined, optional
        Secret environment variables configuration.
        Structure is documented below.
    secretVolumes : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0], default is Undefined, optional
        Secret volumes configuration.
        Structure is documented below.
    service : str, default is Undefined, optional
        Name of the service associated with a Function.
    serviceAccountEmail : str, default is Undefined, optional
        The email of the service account for this function.
    serviceAccountEmailRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailRef, default is Undefined, optional
        service account email ref
    serviceAccountEmailSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailSelector, default is Undefined, optional
        service account email selector
    timeoutSeconds : float, default is Undefined, optional
        The function execution timeout. Execution is considered failed and
        can be terminated if the function is not completed at the end of the
        timeout period. Defaults to 60 seconds.
    vpcConnector : str, default is Undefined, optional
        The Serverless VPC Access connector that this cloud function can connect to.
    vpcConnectorEgressSettings : str, default is Undefined, optional
        Available egress settings.
        Possible values are: VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED, PRIVATE_RANGES_ONLY, ALL_TRAFFIC.
    """


    allTrafficOnLatestRevision?: bool

    availableCpu?: str

    availableMemory?: str

    environmentVariables?: {str:str}

    ingressSettings?: str

    maxInstanceCount?: float

    maxInstanceRequestConcurrency?: float

    minInstanceCount?: float

    secretEnvironmentVariables?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0]

    secretVolumes?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0]

    service?: str

    serviceAccountEmail?: str

    serviceAccountEmailRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailRef

    serviceAccountEmailSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailSelector

    timeoutSeconds?: float

    vpcConnector?: str

    vpcConnectorEgressSettings?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider service config items0 secret environment variables items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Name of the environment variable.
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, optional
        Name of the secret in secret manager (not the full resource name).
    secretRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelector, default is Undefined, optional
        secret selector
    version : str, default is Undefined, optional
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    key?: str

    projectId?: str

    secret?: str

    secretRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRef

    secretSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelector

    version?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretEnvironmentVariablesItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider service config items0 secret volumes items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        The path within the container to mount the secret volume. For example, setting the mountPath as /etc/secrets would mount the secret value files under the /etc/secrets directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount path: /etc/secrets
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, optional
        Name of the secret in secret manager (not the full resource name).
    secretRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretSelector, default is Undefined, optional
        secret selector
    versions : [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0VersionsItems0], default is Undefined, optional
        List of secret versions to mount for this secret. If empty, the latest version of the secret will be made available in a file named after the secret under the mount point.'
        Structure is documented below.
    """


    mountPath?: str

    projectId?: str

    secret?: str

    secretRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretRef

    secretSelector?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretSelector

    versions?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0VersionsItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0SecretVolumesItems0VersionsItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function spec init provider service config items0 secret volumes items0 versions items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as '/etc/secrets' and path as secret_foo would mount the secret value file at /etc/secrets/secret_foo.
    version : str, default is Undefined, optional
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    path?: str

    version?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccountEmail.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailSelectorPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecInitProviderServiceConfigItems0ServiceAccountEmailSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecProviderConfigRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRef

    metadata?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToMetadata

    name: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRefPolicy


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatus:
    """
    FunctionStatus defines the observed state of Function.

    Attributes
    ----------
    atProvider : Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProvider

    conditions?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusConditionsItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProvider:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider

    Attributes
    ----------
    buildConfig : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0], default is Undefined, optional
        Describes the Build step of the function that builds a container
        from the given source.
        Structure is documented below.
    description : str, default is Undefined, optional
        User-provided description of a function.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    environment : str, default is Undefined, optional
        The environment the function is hosted on.
    eventTrigger : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderEventTriggerItems0], default is Undefined, optional
        An Eventarc trigger managed by Google Cloud Functions that fires events in
        response to a condition in another service.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/functions/{{name}}
    kmsKeyName : str, default is Undefined, optional
        Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs associated with this Cloud Function.
    location : str, default is Undefined, optional
        The location of this cloud function.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    serviceConfig : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0], default is Undefined, optional
        Describes the Service being deployed.
        Structure is documented below.
    state : str, default is Undefined, optional
        Describes the current state of the function.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        The last update timestamp of a Cloud Function.
    url : str, default is Undefined, optional
        Output only. The deployed url for the function.
    """


    buildConfig?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0]

    description?: str

    effectiveLabels?: {str:str}

    environment?: str

    eventTrigger?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderEventTriggerItems0]

    id?: str

    kmsKeyName?: str

    labels?: {str:str}

    location?: str

    project?: str

    serviceConfig?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0]

    state?: str

    terraformLabels?: {str:str}

    updateTime?: str

    url?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider build config items0

    Attributes
    ----------
    build : str, default is Undefined, optional
        (Output)
        The Cloud Build name of the latest successful
        deployment of the function.
    dockerRepository : str, default is Undefined, optional
        User managed repository created in Artifact Registry optionally with a customer managed encryption key.
    entryPoint : str, default is Undefined, optional
        The name of the function (as defined in source code) that will be executed.
        Defaults to the resource name suffix, if not specified. For backward
        compatibility, if function with given name is not found, then the system
        will try to use function named "function". For Node.js this is name of a
        function exported by the module specified in source_location.
    environmentVariables : {str:str}, default is Undefined, optional
        User-provided build-time environment variables for the function.
    runtime : str, default is Undefined, optional
        The runtime in which to run the function. Required when deploying a new
        function, optional when updating an existing function.
    source : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0], default is Undefined, optional
        The location of the function source code.
        Structure is documented below.
    workerPool : str, default is Undefined, optional
        Name of the Cloud Build Custom Worker Pool that should be used to build the function.
    """


    build?: str

    dockerRepository?: str

    entryPoint?: str

    environmentVariables?: {str:str}

    runtime?: str

    source?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0]

    workerPool?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider build config items0 source items0

    Attributes
    ----------
    repoSource : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0RepoSourceItems0], default is Undefined, optional
        If provided, get the source from this location in a Cloud Source Repository.
        Structure is documented below.
    storageSource : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0StorageSourceItems0], default is Undefined, optional
        If provided, get the source from this location in Google Cloud Storage.
        Structure is documented below.
    """


    repoSource?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0RepoSourceItems0]

    storageSource?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0StorageSourceItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0RepoSourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider build config items0 source items0 repo source items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Regex matching branches to build.
    commitSha : str, default is Undefined, optional
        Regex matching tags to build.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does
        NOT match the revision regex.
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository.
    tagName : str, default is Undefined, optional
        Regex matching tags to build.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderBuildConfigItems0SourceItems0StorageSourceItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider build config items0 source items0 storage source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source
    generation : float, default is Undefined, optional
        Google Cloud Storage generation for the object. If the generation
        is omitted, the latest generation will be used.
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
    """


    bucket?: str

    generation?: float

    object?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderEventTriggerItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider event trigger items0

    Attributes
    ----------
    eventFilters : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderEventTriggerItems0EventFiltersItems0], default is Undefined, optional
        Criteria used to filter events.
        Structure is documented below.
    eventType : str, default is Undefined, optional
        Required. The type of event to observe.
    pubsubTopic : str, default is Undefined, optional
        The name of a Pub/Sub topic in the same project that will be used
        as the transport topic for the event delivery.
    retryPolicy : str, default is Undefined, optional
        Describes the retry policy in case of function's execution failure.
        Retried execution is charged as any other execution.
        Possible values are: RETRY_POLICY_UNSPECIFIED, RETRY_POLICY_DO_NOT_RETRY, RETRY_POLICY_RETRY.
    serviceAccountEmail : str, default is Undefined, optional
        Optional. The email of the trigger's service account. The service account
        must have permission to invoke Cloud Run services. If empty, defaults to the
        Compute Engine default service account: {project_number}-compute@developer.gserviceaccount.com.
    trigger : str, default is Undefined, optional
        (Output)
        Output only. The resource name of the Eventarc trigger.
    triggerRegion : str, default is Undefined, optional
        The region that the trigger will be in. The trigger will only receive
        events originating in this region. It can be the same
        region as the function, a different region or multi-region, or the global
        region. If not provided, defaults to the same region as the function.
    """


    eventFilters?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderEventTriggerItems0EventFiltersItems0]

    eventType?: str

    pubsubTopic?: str

    retryPolicy?: str

    serviceAccountEmail?: str

    trigger?: str

    triggerRegion?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderEventTriggerItems0EventFiltersItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider event trigger items0 event filters items0

    Attributes
    ----------
    attribute : str, default is Undefined, optional
        'Required. The name of a CloudEvents attribute.
        Currently, only a subset of attributes are supported for filtering. Use the gcloud eventarc providers describe command to learn more about events and their attributes.
        Do not filter for the 'type' attribute here, as this is already achieved by the resource's event_type attribute.
    operator : str, default is Undefined, optional
        Optional. The operator used for matching the events with the value of
        the filter. If not specified, only events that have an exact key-value
        pair specified in the filter are matched.
        The only allowed value is match-path-pattern.
        See documentation on path patterns here'
    value : str, default is Undefined, optional
        Required. The value for the attribute.
        If the operator field is set as match-path-pattern, this value can be a path pattern instead of an exact value.
    """


    attribute?: str

    operator?: str

    value?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider service config items0

    Attributes
    ----------
    allTrafficOnLatestRevision : bool, default is Undefined, optional
        Whether 100% of traffic is routed to the latest revision. Defaults to true.
    availableCpu : str, default is Undefined, optional
        The number of CPUs used in a single container instance. Default value is calculated from available memory.
    availableMemory : str, default is Undefined, optional
        The amount of memory available for a function.
        Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
        supplied the value is interpreted as bytes.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables that shall be available during function execution.
    gcfUri : str, default is Undefined, optional
        (Output)
        URIs of the Service deployed
    ingressSettings : str, default is Undefined, optional
        Available ingress settings. Defaults to "ALLOW_ALL" if unspecified.
        Default value is ALLOW_ALL.
        Possible values are: ALLOW_ALL, ALLOW_INTERNAL_ONLY, ALLOW_INTERNAL_AND_GCLB.
    maxInstanceCount : float, default is Undefined, optional
        The limit on the maximum number of function instances that may coexist at a
        given time.
    maxInstanceRequestConcurrency : float, default is Undefined, optional
        Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.
    minInstanceCount : float, default is Undefined, optional
        The limit on the minimum number of function instances that may coexist at a
        given time.
    secretEnvironmentVariables : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretEnvironmentVariablesItems0], default is Undefined, optional
        Secret environment variables configuration.
        Structure is documented below.
    secretVolumes : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretVolumesItems0], default is Undefined, optional
        Secret volumes configuration.
        Structure is documented below.
    service : str, default is Undefined, optional
        Name of the service associated with a Function.
    serviceAccountEmail : str, default is Undefined, optional
        The email of the service account for this function.
    timeoutSeconds : float, default is Undefined, optional
        The function execution timeout. Execution is considered failed and
        can be terminated if the function is not completed at the end of the
        timeout period. Defaults to 60 seconds.
    uri : str, default is Undefined, optional
        (Output)
        URI of the Service deployed.
    vpcConnector : str, default is Undefined, optional
        The Serverless VPC Access connector that this cloud function can connect to.
    vpcConnectorEgressSettings : str, default is Undefined, optional
        Available egress settings.
        Possible values are: VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED, PRIVATE_RANGES_ONLY, ALL_TRAFFIC.
    """


    allTrafficOnLatestRevision?: bool

    availableCpu?: str

    availableMemory?: str

    environmentVariables?: {str:str}

    gcfUri?: str

    ingressSettings?: str

    maxInstanceCount?: float

    maxInstanceRequestConcurrency?: float

    minInstanceCount?: float

    secretEnvironmentVariables?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretEnvironmentVariablesItems0]

    secretVolumes?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretVolumesItems0]

    service?: str

    serviceAccountEmail?: str

    timeoutSeconds?: float

    uri?: str

    vpcConnector?: str

    vpcConnectorEgressSettings?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretEnvironmentVariablesItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider service config items0 secret environment variables items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Name of the environment variable.
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, optional
        Name of the secret in secret manager (not the full resource name).
    version : str, default is Undefined, optional
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    key?: str

    projectId?: str

    secret?: str

    version?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretVolumesItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider service config items0 secret volumes items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        The path within the container to mount the secret volume. For example, setting the mountPath as /etc/secrets would mount the secret value files under the /etc/secrets directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount path: /etc/secrets
    projectId : str, default is Undefined, optional
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, optional
        Name of the secret in secret manager (not the full resource name).
    versions : [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretVolumesItems0VersionsItems0], default is Undefined, optional
        List of secret versions to mount for this secret. If empty, the latest version of the secret will be made available in a file named after the secret under the mount point.'
        Structure is documented below.
    """


    mountPath?: str

    projectId?: str

    secret?: str

    versions?: [Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretVolumesItems0VersionsItems0]


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusAtProviderServiceConfigItems0SecretVolumesItems0VersionsItems0:
    """
    cloudfunctions2 gcp upbound io v1beta1 function status at provider service config items0 secret volumes items0 versions items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as '/etc/secrets' and path as secret_foo would mount the secret value file at /etc/secrets/secret_foo.
    version : str, default is Undefined, optional
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    path?: str

    version?: str


schema Cloudfunctions2GcpUpboundIoV1beta1FunctionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


