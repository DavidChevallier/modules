"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Connection:
    """
    Connection is the Schema for the Connections API. Manages creating a private VPC connection to a service provider.

    Attributes
    ----------
    apiVersion : str, default is "servicenetworking.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Connection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpec, default is Undefined, required
        spec
    status : ServicenetworkingGcpUpboundIoV1beta1ConnectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "servicenetworking.gcp.upbound.io/v1beta1" = "servicenetworking.gcp.upbound.io/v1beta1"

    kind: "Connection" = "Connection"

    metadata?: v1.ObjectMeta

    spec: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpec

    status?: ServicenetworkingGcpUpboundIoV1beta1ConnectionStatus


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpec:
    """
    ConnectionSpec defines the desired state of Connection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProvider, default is Undefined, required
        for provider
    initProvider : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProvider

    initProvider?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecProviderConfigRef

    publishConnectionDetailsTo?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecWriteConnectionSecretToRef


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProvider:
    """
    servicenetworking gcp upbound io v1beta1 connection spec for provider

    Attributes
    ----------
    deletionPolicy : str, default is Undefined, optional
        The deletion policy for the service networking connection. Setting to ABANDON allows the resource to be abandoned rather than deleted. Use with care as it can lead to dangling resources.
    network : str, default is Undefined, optional
        Name of VPC network connected with service producers using VPC peering.
    networkRef : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    reservedPeeringRanges : [str], default is Undefined, optional
        Named IP address range(s) of PEERING type reserved for
        this service provider. Note that invoking this method with a different range when connection
        is already established will not reallocate already provisioned service producer subnetworks.
    reservedPeeringRangesRefs : [ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesRefsItems0], default is Undefined, optional
        References to GlobalAddress in compute to populate reservedPeeringRanges.
    reservedPeeringRangesSelector : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesSelector, default is Undefined, optional
        reserved peering ranges selector
    service : str, default is Undefined, optional
        Provider peering service that is managing peering connectivity for a
        service provider organization. For Google services that support this functionality it is
        'servicenetworking.googleapis.com'.
    """


    deletionPolicy?: str

    network?: str

    networkRef?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkRef

    networkSelector?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkSelector

    reservedPeeringRanges?: [str]

    reservedPeeringRangesRefs?: [ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesRefsItems0]

    reservedPeeringRangesSelector?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesSelector

    service?: str


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkRefPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkSelectorPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesRefsItems0Policy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesSelector:
    """
    Selector for a list of GlobalAddress in compute to populate reservedPeeringRanges.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesSelectorPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecForProviderReservedPeeringRangesSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    deletionPolicy : str, default is Undefined, optional
        The deletion policy for the service networking connection. Setting to ABANDON allows the resource to be abandoned rather than deleted. Use with care as it can lead to dangling resources.
    network : str, default is Undefined, optional
        Name of VPC network connected with service producers using VPC peering.
    networkRef : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    reservedPeeringRanges : [str], default is Undefined, optional
        Named IP address range(s) of PEERING type reserved for
        this service provider. Note that invoking this method with a different range when connection
        is already established will not reallocate already provisioned service producer subnetworks.
    reservedPeeringRangesRefs : [ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesRefsItems0], default is Undefined, optional
        References to GlobalAddress in compute to populate reservedPeeringRanges.
    reservedPeeringRangesSelector : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesSelector, default is Undefined, optional
        reserved peering ranges selector
    service : str, default is Undefined, optional
        Provider peering service that is managing peering connectivity for a
        service provider organization. For Google services that support this functionality it is
        'servicenetworking.googleapis.com'.
    """


    deletionPolicy?: str

    network?: str

    networkRef?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkRef

    networkSelector?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkSelector

    reservedPeeringRanges?: [str]

    reservedPeeringRangesRefs?: [ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesRefsItems0]

    reservedPeeringRangesSelector?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesSelector

    service?: str


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkRefPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkSelectorPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesRefsItems0Policy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesSelector:
    """
    Selector for a list of GlobalAddress in compute to populate reservedPeeringRanges.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesSelectorPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecInitProviderReservedPeeringRangesSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecProviderConfigRefPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToConfigRef

    metadata?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToMetadata

    name: str


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToConfigRefPolicy


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionStatus:
    """
    ConnectionStatus defines the observed state of Connection.

    Attributes
    ----------
    atProvider : ServicenetworkingGcpUpboundIoV1beta1ConnectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ServicenetworkingGcpUpboundIoV1beta1ConnectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ServicenetworkingGcpUpboundIoV1beta1ConnectionStatusAtProvider

    conditions?: [ServicenetworkingGcpUpboundIoV1beta1ConnectionStatusConditionsItems0]


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionStatusAtProvider:
    """
    servicenetworking gcp upbound io v1beta1 connection status at provider

    Attributes
    ----------
    deletionPolicy : str, default is Undefined, optional
        The deletion policy for the service networking connection. Setting to ABANDON allows the resource to be abandoned rather than deleted. Use with care as it can lead to dangling resources.
    id : str, default is Undefined, optional
        id
    network : str, default is Undefined, optional
        Name of VPC network connected with service producers using VPC peering.
    peering : str, default is Undefined, optional
        (Computed) The name of the VPC Network Peering connection that was created by the service producer.
    reservedPeeringRanges : [str], default is Undefined, optional
        Named IP address range(s) of PEERING type reserved for
        this service provider. Note that invoking this method with a different range when connection
        is already established will not reallocate already provisioned service producer subnetworks.
    service : str, default is Undefined, optional
        Provider peering service that is managing peering connectivity for a
        service provider organization. For Google services that support this functionality it is
        'servicenetworking.googleapis.com'.
    """


    deletionPolicy?: str

    id?: str

    network?: str

    peering?: str

    reservedPeeringRanges?: [str]

    service?: str


schema ServicenetworkingGcpUpboundIoV1beta1ConnectionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


