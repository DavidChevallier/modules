"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Snapshot:
    """
    Snapshot is the Schema for the Snapshots API. A Google Cloud Filestore snapshot.

    Attributes
    ----------
    apiVersion : str, default is "filestore.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Snapshot", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FilestoreGcpUpboundIoV1beta1SnapshotSpec, default is Undefined, required
        spec
    status : FilestoreGcpUpboundIoV1beta1SnapshotStatus, default is Undefined, optional
        status
    """


    apiVersion: "filestore.gcp.upbound.io/v1beta1" = "filestore.gcp.upbound.io/v1beta1"

    kind: "Snapshot" = "Snapshot"

    metadata?: v1.ObjectMeta

    spec: FilestoreGcpUpboundIoV1beta1SnapshotSpec

    status?: FilestoreGcpUpboundIoV1beta1SnapshotStatus


schema FilestoreGcpUpboundIoV1beta1SnapshotSpec:
    """
    SnapshotSpec defines the desired state of Snapshot

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FilestoreGcpUpboundIoV1beta1SnapshotSpecForProvider, default is Undefined, required
        for provider
    initProvider : FilestoreGcpUpboundIoV1beta1SnapshotSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FilestoreGcpUpboundIoV1beta1SnapshotSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FilestoreGcpUpboundIoV1beta1SnapshotSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FilestoreGcpUpboundIoV1beta1SnapshotSpecForProvider

    initProvider?: FilestoreGcpUpboundIoV1beta1SnapshotSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FilestoreGcpUpboundIoV1beta1SnapshotSpecProviderConfigRef

    publishConnectionDetailsTo?: FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FilestoreGcpUpboundIoV1beta1SnapshotSpecWriteConnectionSecretToRef


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecForProvider:
    """
    filestore gcp upbound io v1beta1 snapshot spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
    instance : str, default is Undefined, optional
        The resource name of the filestore instance.
    instanceRef : FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceSelector, default is Undefined, optional
        instance selector
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    location : str, default is Undefined, required
        The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    description?: str

    instance?: str

    instanceRef?: FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceRef

    instanceSelector?: FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceSelector

    labels?: {str:str}

    location: str

    project?: str


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceRef:
    """
    Reference to a Instance in filestore to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceRefPolicy


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceSelector:
    """
    Selector for a Instance in filestore to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceSelectorPolicy


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecForProviderInstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    description?: str

    labels?: {str:str}

    project?: str


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1SnapshotSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1SnapshotSpecProviderConfigRefPolicy


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToConfigRef

    metadata?: FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToMetadata

    name: str


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToConfigRefPolicy


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FilestoreGcpUpboundIoV1beta1SnapshotSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FilestoreGcpUpboundIoV1beta1SnapshotStatus:
    """
    SnapshotStatus defines the observed state of Snapshot.

    Attributes
    ----------
    atProvider : FilestoreGcpUpboundIoV1beta1SnapshotStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FilestoreGcpUpboundIoV1beta1SnapshotStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: FilestoreGcpUpboundIoV1beta1SnapshotStatusAtProvider

    conditions?: [FilestoreGcpUpboundIoV1beta1SnapshotStatusConditionsItems0]


schema FilestoreGcpUpboundIoV1beta1SnapshotStatusAtProvider:
    """
    filestore gcp upbound io v1beta1 snapshot status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        The time when the snapshot was created in RFC3339 text format.
    description : str, default is Undefined, optional
        A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    filesystemUsedBytes : str, default is Undefined, optional
        The amount of bytes needed to allocate a full copy of the snapshot content.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/instances/{{instance}}/snapshots/{{name}}
    instance : str, default is Undefined, optional
        The resource name of the filestore instance.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    location : str, default is Undefined, optional
        The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    state : str, default is Undefined, optional
        The snapshot state.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    createTime?: str

    description?: str

    effectiveLabels?: {str:str}

    filesystemUsedBytes?: str

    id?: str

    instance?: str

    labels?: {str:str}

    location?: str

    project?: str

    state?: str

    terraformLabels?: {str:str}


schema FilestoreGcpUpboundIoV1beta1SnapshotStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


