"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ManagedZone:
    """
    ManagedZone is the Schema for the ManagedZones API. A zone is a subtree of the DNS namespace under one administrative responsibility.

    Attributes
    ----------
    apiVersion : str, default is "dns.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagedZone", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DNSGcpUpboundIoV1beta1ManagedZoneSpec, default is Undefined, required
        spec
    status : DNSGcpUpboundIoV1beta1ManagedZoneStatus, default is Undefined, optional
        status
    """


    apiVersion: "dns.gcp.upbound.io/v1beta1" = "dns.gcp.upbound.io/v1beta1"

    kind: "ManagedZone" = "ManagedZone"

    metadata?: v1.ObjectMeta

    spec: DNSGcpUpboundIoV1beta1ManagedZoneSpec

    status?: DNSGcpUpboundIoV1beta1ManagedZoneStatus


schema DNSGcpUpboundIoV1beta1ManagedZoneSpec:
    """
    ManagedZoneSpec defines the desired state of ManagedZone

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProvider, default is Undefined, required
        for provider
    initProvider : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProvider

    initProvider?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecProviderConfigRef

    publishConnectionDetailsTo?: DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecWriteConnectionSecretToRef


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProvider:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider

    Attributes
    ----------
    cloudLoggingConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderCloudLoggingConfigItems0], default is Undefined, optional
        Cloud logging configuration
        Structure is documented below.
    description : str, default is Undefined, optional
        A textual description field.
    dnsName : str, default is Undefined, optional
        The DNS name of this managed zone, for instance "example.com.".
    dnssecConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderDnssecConfigItems0], default is Undefined, optional
        DNSSEC configuration
        Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        Set this true to delete all records in the zone.
    forwardingConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderForwardingConfigItems0], default is Undefined, optional
        The presence for this field indicates that outbound forwarding is enabled
        for this zone. The value of this field contains the set of destinations
        to forward to.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this ManagedZone.
    peeringConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0], default is Undefined, optional
        The presence of this field indicates that DNS Peering is enabled for this
        zone. The value of this field contains the network to peer with.
        Structure is documented below.
    privateVisibilityConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0], default is Undefined, optional
        For privately visible zones, the set of Virtual Private Cloud
        resources that the zone is visible from. At least one of gke_clusters or networks must be specified.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    visibility : str, default is Undefined, optional
        The zone's visibility: public zones are exposed to the Internet,
        while private zones are visible only to Virtual Private Cloud resources.
        Default value is public.
        Possible values are: private, public.
    """


    cloudLoggingConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderCloudLoggingConfigItems0]

    description?: str

    dnsName?: str

    dnssecConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderDnssecConfigItems0]

    forceDestroy?: bool

    forwardingConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderForwardingConfigItems0]

    labels?: {str:str}

    peeringConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0]

    privateVisibilityConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0]

    project?: str

    visibility?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderCloudLoggingConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider cloud logging config items0

    Attributes
    ----------
    enableLogging : bool, default is Undefined, optional
        If set, enable query logging for this ManagedZone. False by default, making logging opt-in.
    """


    enableLogging?: bool


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderDnssecConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider dnssec config items0

    Attributes
    ----------
    defaultKeySpecs : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderDnssecConfigItems0DefaultKeySpecsItems0], default is Undefined, optional
        Specifies parameters that will be used for generating initial DnsKeys
        for this ManagedZone. If you provide a spec for keySigning or zoneSigning,
        you must also provide one for the other.
        default_key_specs can only be updated when the state is off.
        Structure is documented below.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is
    nonExistence : str, default is Undefined, optional
        Specifies the mechanism used to provide authenticated denial-of-existence responses.
        non_existence can only be updated when the state is off.
        Possible values are: nsec, nsec3.
    state : str, default is Undefined, optional
        Specifies whether DNSSEC is enabled, and what mode it is in
        Possible values are: off, on, transfer.
    """


    defaultKeySpecs?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderDnssecConfigItems0DefaultKeySpecsItems0]

    kind?: str

    nonExistence?: str

    state?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderDnssecConfigItems0DefaultKeySpecsItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider dnssec config items0 default key specs items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        String mnemonic specifying the DNSSEC algorithm of this key
        Possible values are: ecdsap256sha256, ecdsap384sha384, rsasha1, rsasha256, rsasha512.
    keyLength : float, default is Undefined, optional
        Length of the keys in bits
    keyType : str, default is Undefined, optional
        Specifies whether this is a key signing key (KSK) or a zone
        signing key (ZSK). Key signing keys have the Secure Entry
        Point flag set and, when active, will only be used to sign
        resource record sets of type DNSKEY. Zone signing keys do
        not have the Secure Entry Point flag set and will be used
        to sign all other types of resource record sets.
        Possible values are: keySigning, zoneSigning.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is
    """


    algorithm?: str

    keyLength?: float

    keyType?: str

    kind?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderForwardingConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider forwarding config items0

    Attributes
    ----------
    targetNameServers : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderForwardingConfigItems0TargetNameServersItems0], default is Undefined, optional
        List of target name servers to forward to. Cloud DNS will
        select the best available name server if more than
        one target is given.
        Structure is documented below.
    """


    targetNameServers?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderForwardingConfigItems0TargetNameServersItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderForwardingConfigItems0TargetNameServersItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider forwarding config items0 target name servers items0

    Attributes
    ----------
    forwardingPath : str, default is Undefined, optional
        Forwarding path for this TargetNameServer. If unset or default Cloud DNS will make forwarding
        decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go
        to the Internet. When set to private, Cloud DNS will always send queries through VPC for this target
        Possible values are: default, private.
    ipv4Address : str, default is Undefined, optional
        IPv4 address of a target name server.
    """


    forwardingPath?: str

    ipv4Address?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider peering config items0

    Attributes
    ----------
    targetNetwork : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0], default is Undefined, optional
        The network with which to peer.
        Structure is documented below.
    """


    targetNetwork?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider peering config items0 target network items0

    Attributes
    ----------
    networkUrl : str, default is Undefined, optional
        The id or fully qualified URL of the VPC network to forward queries to.
        This should be formatted like projects/{project}/global/networks/{network} or
        https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    networkUrlRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    """


    networkUrl?: str

    networkUrlRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRef

    networkUrlSelector?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelector


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRef:
    """
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelector:
    """
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelectorPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider private visibility config items0

    Attributes
    ----------
    gkeClusters : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0], default is Undefined, optional
        The list of Google Kubernetes Engine clusters that can see this zone.
        Structure is documented below.
    networks : [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0], default is Undefined, optional
        The list of VPC networks that can see this zone.12 SDK in a future release, you
        may experience issues with this resource while updating. If you encounter this issue, remove all networks
        blocks in an update and then apply another update adding all of them back simultaneously.
        Structure is documented below.
    """


    gkeClusters?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0]

    networks?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider private visibility config items0 gke clusters items0

    Attributes
    ----------
    gkeClusterName : str, default is Undefined, optional
        The resource name of the cluster to bind this ManagedZone to.
        This should be specified in the format like
        projects/*/locations/*/clusters/*
    gkeClusterNameRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRef, default is Undefined, optional
        gke cluster name ref
    gkeClusterNameSelector : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelector, default is Undefined, optional
        gke cluster name selector
    """


    gkeClusterName?: str

    gkeClusterNameRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRef

    gkeClusterNameSelector?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelector


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRef:
    """
    Reference to a Cluster in container to populate gkeClusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelector:
    """
    Selector for a Cluster in container to populate gkeClusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelectorPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec for provider private visibility config items0 networks items0

    Attributes
    ----------
    networkUrl : str, default is Undefined, optional
        The id or fully qualified URL of the VPC network to forward queries to.
        This should be formatted like projects/{project}/global/networks/{network} or
        https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    networkUrlRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    """


    networkUrl?: str

    networkUrlRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRef

    networkUrlSelector?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelector


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRef:
    """
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelector:
    """
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelectorPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecForProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cloudLoggingConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderCloudLoggingConfigItems0], default is Undefined, optional
        Cloud logging configuration
        Structure is documented below.
    description : str, default is Undefined, optional
        A textual description field.
    dnsName : str, default is Undefined, optional
        The DNS name of this managed zone, for instance "example.com.".
    dnssecConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderDnssecConfigItems0], default is Undefined, optional
        DNSSEC configuration
        Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        Set this true to delete all records in the zone.
    forwardingConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderForwardingConfigItems0], default is Undefined, optional
        The presence for this field indicates that outbound forwarding is enabled
        for this zone. The value of this field contains the set of destinations
        to forward to.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this ManagedZone.
    peeringConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0], default is Undefined, optional
        The presence of this field indicates that DNS Peering is enabled for this
        zone. The value of this field contains the network to peer with.
        Structure is documented below.
    privateVisibilityConfig : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0], default is Undefined, optional
        For privately visible zones, the set of Virtual Private Cloud
        resources that the zone is visible from. At least one of gke_clusters or networks must be specified.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    visibility : str, default is Undefined, optional
        The zone's visibility: public zones are exposed to the Internet,
        while private zones are visible only to Virtual Private Cloud resources.
        Default value is public.
        Possible values are: private, public.
    """


    cloudLoggingConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderCloudLoggingConfigItems0]

    description?: str

    dnsName?: str

    dnssecConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderDnssecConfigItems0]

    forceDestroy?: bool

    forwardingConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderForwardingConfigItems0]

    labels?: {str:str}

    peeringConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0]

    privateVisibilityConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0]

    project?: str

    visibility?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderCloudLoggingConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider cloud logging config items0

    Attributes
    ----------
    enableLogging : bool, default is Undefined, optional
        If set, enable query logging for this ManagedZone. False by default, making logging opt-in.
    """


    enableLogging?: bool


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderDnssecConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider dnssec config items0

    Attributes
    ----------
    defaultKeySpecs : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderDnssecConfigItems0DefaultKeySpecsItems0], default is Undefined, optional
        Specifies parameters that will be used for generating initial DnsKeys
        for this ManagedZone. If you provide a spec for keySigning or zoneSigning,
        you must also provide one for the other.
        default_key_specs can only be updated when the state is off.
        Structure is documented below.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is
    nonExistence : str, default is Undefined, optional
        Specifies the mechanism used to provide authenticated denial-of-existence responses.
        non_existence can only be updated when the state is off.
        Possible values are: nsec, nsec3.
    state : str, default is Undefined, optional
        Specifies whether DNSSEC is enabled, and what mode it is in
        Possible values are: off, on, transfer.
    """


    defaultKeySpecs?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderDnssecConfigItems0DefaultKeySpecsItems0]

    kind?: str

    nonExistence?: str

    state?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderDnssecConfigItems0DefaultKeySpecsItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider dnssec config items0 default key specs items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        String mnemonic specifying the DNSSEC algorithm of this key
        Possible values are: ecdsap256sha256, ecdsap384sha384, rsasha1, rsasha256, rsasha512.
    keyLength : float, default is Undefined, optional
        Length of the keys in bits
    keyType : str, default is Undefined, optional
        Specifies whether this is a key signing key (KSK) or a zone
        signing key (ZSK). Key signing keys have the Secure Entry
        Point flag set and, when active, will only be used to sign
        resource record sets of type DNSKEY. Zone signing keys do
        not have the Secure Entry Point flag set and will be used
        to sign all other types of resource record sets.
        Possible values are: keySigning, zoneSigning.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is
    """


    algorithm?: str

    keyLength?: float

    keyType?: str

    kind?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderForwardingConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider forwarding config items0

    Attributes
    ----------
    targetNameServers : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderForwardingConfigItems0TargetNameServersItems0], default is Undefined, optional
        List of target name servers to forward to. Cloud DNS will
        select the best available name server if more than
        one target is given.
        Structure is documented below.
    """


    targetNameServers?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderForwardingConfigItems0TargetNameServersItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderForwardingConfigItems0TargetNameServersItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider forwarding config items0 target name servers items0

    Attributes
    ----------
    forwardingPath : str, default is Undefined, optional
        Forwarding path for this TargetNameServer. If unset or default Cloud DNS will make forwarding
        decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go
        to the Internet. When set to private, Cloud DNS will always send queries through VPC for this target
        Possible values are: default, private.
    ipv4Address : str, default is Undefined, optional
        IPv4 address of a target name server.
    """


    forwardingPath?: str

    ipv4Address?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider peering config items0

    Attributes
    ----------
    targetNetwork : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0], default is Undefined, optional
        The network with which to peer.
        Structure is documented below.
    """


    targetNetwork?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider peering config items0 target network items0

    Attributes
    ----------
    networkUrl : str, default is Undefined, optional
        The id or fully qualified URL of the VPC network to forward queries to.
        This should be formatted like projects/{project}/global/networks/{network} or
        https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    networkUrlRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    """


    networkUrl?: str

    networkUrlRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRef

    networkUrlSelector?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelector


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRef:
    """
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelector:
    """
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelectorPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPeeringConfigItems0TargetNetworkItems0NetworkURLSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider private visibility config items0

    Attributes
    ----------
    gkeClusters : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0], default is Undefined, optional
        The list of Google Kubernetes Engine clusters that can see this zone.
        Structure is documented below.
    networks : [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0], default is Undefined, optional
        The list of VPC networks that can see this zone.12 SDK in a future release, you
        may experience issues with this resource while updating. If you encounter this issue, remove all networks
        blocks in an update and then apply another update adding all of them back simultaneously.
        Structure is documented below.
    """


    gkeClusters?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0]

    networks?: [DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider private visibility config items0 gke clusters items0

    Attributes
    ----------
    gkeClusterName : str, default is Undefined, optional
        The resource name of the cluster to bind this ManagedZone to.
        This should be specified in the format like
        projects/*/locations/*/clusters/*
    gkeClusterNameRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRef, default is Undefined, optional
        gke cluster name ref
    gkeClusterNameSelector : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelector, default is Undefined, optional
        gke cluster name selector
    """


    gkeClusterName?: str

    gkeClusterNameRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRef

    gkeClusterNameSelector?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelector


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRef:
    """
    Reference to a Cluster in container to populate gkeClusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelector:
    """
    Selector for a Cluster in container to populate gkeClusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelectorPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0GkeClustersItems0GkeClusterNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0:
    """
    DNS gcp upbound io v1beta1 managed zone spec init provider private visibility config items0 networks items0

    Attributes
    ----------
    networkUrl : str, default is Undefined, optional
        The id or fully qualified URL of the VPC network to forward queries to.
        This should be formatted like projects/{project}/global/networks/{network} or
        https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    networkUrlRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    """


    networkUrl?: str

    networkUrlRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRef

    networkUrlSelector?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelector


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRef:
    """
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelector:
    """
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelectorPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecInitProviderPrivateVisibilityConfigItems0NetworksItems0NetworkURLSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecProviderConfigRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToConfigRef

    metadata?: DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToMetadata

    name: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToConfigRefPolicy


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatus:
    """
    ManagedZoneStatus defines the observed state of ManagedZone.

    Attributes
    ----------
    atProvider : DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DNSGcpUpboundIoV1beta1ManagedZoneStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProvider

    conditions?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusConditionsItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProvider:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider

    Attributes
    ----------
    cloudLoggingConfig : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderCloudLoggingConfigItems0], default is Undefined, optional
        Cloud logging configuration
        Structure is documented below.
    creationTime : str, default is Undefined, optional
        The time that this resource was created on the server.
        This is in RFC3339 text format.
    description : str, default is Undefined, optional
        A textual description field.
    dnsName : str, default is Undefined, optional
        The DNS name of this managed zone, for instance "example.com.".
    dnssecConfig : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderDnssecConfigItems0], default is Undefined, optional
        DNSSEC configuration
        Structure is documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    forceDestroy : bool, default is Undefined, optional
        Set this true to delete all records in the zone.
    forwardingConfig : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderForwardingConfigItems0], default is Undefined, optional
        The presence for this field indicates that outbound forwarding is enabled
        for this zone. The value of this field contains the set of destinations
        to forward to.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/managedZones/{{name}}
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this ManagedZone.
    managedZoneId : float, default is Undefined, optional
        Unique identifier for the resource; defined by the server.
    nameServers : [str], default is Undefined, optional
        Delegate your managed_zone to these virtual name servers;
        defined by the server
    peeringConfig : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPeeringConfigItems0], default is Undefined, optional
        The presence of this field indicates that DNS Peering is enabled for this
        zone. The value of this field contains the network to peer with.
        Structure is documented below.
    privateVisibilityConfig : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0], default is Undefined, optional
        For privately visible zones, the set of Virtual Private Cloud
        resources that the zone is visible from. At least one of gke_clusters or networks must be specified.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    visibility : str, default is Undefined, optional
        The zone's visibility: public zones are exposed to the Internet,
        while private zones are visible only to Virtual Private Cloud resources.
        Default value is public.
        Possible values are: private, public.
    """


    cloudLoggingConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderCloudLoggingConfigItems0]

    creationTime?: str

    description?: str

    dnsName?: str

    dnssecConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderDnssecConfigItems0]

    effectiveLabels?: {str:str}

    forceDestroy?: bool

    forwardingConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderForwardingConfigItems0]

    id?: str

    labels?: {str:str}

    managedZoneId?: float

    nameServers?: [str]

    peeringConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPeeringConfigItems0]

    privateVisibilityConfig?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0]

    project?: str

    terraformLabels?: {str:str}

    visibility?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderCloudLoggingConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider cloud logging config items0

    Attributes
    ----------
    enableLogging : bool, default is Undefined, optional
        If set, enable query logging for this ManagedZone. False by default, making logging opt-in.
    """


    enableLogging?: bool


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderDnssecConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider dnssec config items0

    Attributes
    ----------
    defaultKeySpecs : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderDnssecConfigItems0DefaultKeySpecsItems0], default is Undefined, optional
        Specifies parameters that will be used for generating initial DnsKeys
        for this ManagedZone. If you provide a spec for keySigning or zoneSigning,
        you must also provide one for the other.
        default_key_specs can only be updated when the state is off.
        Structure is documented below.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is
    nonExistence : str, default is Undefined, optional
        Specifies the mechanism used to provide authenticated denial-of-existence responses.
        non_existence can only be updated when the state is off.
        Possible values are: nsec, nsec3.
    state : str, default is Undefined, optional
        Specifies whether DNSSEC is enabled, and what mode it is in
        Possible values are: off, on, transfer.
    """


    defaultKeySpecs?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderDnssecConfigItems0DefaultKeySpecsItems0]

    kind?: str

    nonExistence?: str

    state?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderDnssecConfigItems0DefaultKeySpecsItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider dnssec config items0 default key specs items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        String mnemonic specifying the DNSSEC algorithm of this key
        Possible values are: ecdsap256sha256, ecdsap384sha384, rsasha1, rsasha256, rsasha512.
    keyLength : float, default is Undefined, optional
        Length of the keys in bits
    keyType : str, default is Undefined, optional
        Specifies whether this is a key signing key (KSK) or a zone
        signing key (ZSK). Key signing keys have the Secure Entry
        Point flag set and, when active, will only be used to sign
        resource record sets of type DNSKEY. Zone signing keys do
        not have the Secure Entry Point flag set and will be used
        to sign all other types of resource record sets.
        Possible values are: keySigning, zoneSigning.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is
    """


    algorithm?: str

    keyLength?: float

    keyType?: str

    kind?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderForwardingConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider forwarding config items0

    Attributes
    ----------
    targetNameServers : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderForwardingConfigItems0TargetNameServersItems0], default is Undefined, optional
        List of target name servers to forward to. Cloud DNS will
        select the best available name server if more than
        one target is given.
        Structure is documented below.
    """


    targetNameServers?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderForwardingConfigItems0TargetNameServersItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderForwardingConfigItems0TargetNameServersItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider forwarding config items0 target name servers items0

    Attributes
    ----------
    forwardingPath : str, default is Undefined, optional
        Forwarding path for this TargetNameServer. If unset or default Cloud DNS will make forwarding
        decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go
        to the Internet. When set to private, Cloud DNS will always send queries through VPC for this target
        Possible values are: default, private.
    ipv4Address : str, default is Undefined, optional
        IPv4 address of a target name server.
    """


    forwardingPath?: str

    ipv4Address?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPeeringConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider peering config items0

    Attributes
    ----------
    targetNetwork : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPeeringConfigItems0TargetNetworkItems0], default is Undefined, optional
        The network with which to peer.
        Structure is documented below.
    """


    targetNetwork?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPeeringConfigItems0TargetNetworkItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPeeringConfigItems0TargetNetworkItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider peering config items0 target network items0

    Attributes
    ----------
    networkUrl : str, default is Undefined, optional
        The id or fully qualified URL of the VPC network to forward queries to.
        This should be formatted like projects/{project}/global/networks/{network} or
        https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    """


    networkUrl?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider private visibility config items0

    Attributes
    ----------
    gkeClusters : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0GkeClustersItems0], default is Undefined, optional
        The list of Google Kubernetes Engine clusters that can see this zone.
        Structure is documented below.
    networks : [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0NetworksItems0], default is Undefined, optional
        The list of VPC networks that can see this zone.12 SDK in a future release, you
        may experience issues with this resource while updating. If you encounter this issue, remove all networks
        blocks in an update and then apply another update adding all of them back simultaneously.
        Structure is documented below.
    """


    gkeClusters?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0GkeClustersItems0]

    networks?: [DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0NetworksItems0]


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0GkeClustersItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider private visibility config items0 gke clusters items0

    Attributes
    ----------
    gkeClusterName : str, default is Undefined, optional
        The resource name of the cluster to bind this ManagedZone to.
        This should be specified in the format like
        projects/*/locations/*/clusters/*
    """


    gkeClusterName?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusAtProviderPrivateVisibilityConfigItems0NetworksItems0:
    """
    DNS gcp upbound io v1beta1 managed zone status at provider private visibility config items0 networks items0

    Attributes
    ----------
    networkUrl : str, default is Undefined, optional
        The id or fully qualified URL of the VPC network to forward queries to.
        This should be formatted like projects/{project}/global/networks/{network} or
        https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
    """


    networkUrl?: str


schema DNSGcpUpboundIoV1beta1ManagedZoneStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


