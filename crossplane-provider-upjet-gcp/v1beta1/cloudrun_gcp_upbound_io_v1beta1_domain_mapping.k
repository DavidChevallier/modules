"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DomainMapping:
    """
    DomainMapping is the Schema for the DomainMappings API. Resource to hold the state and status of a user's domain mapping.

    Attributes
    ----------
    apiVersion : str, default is "cloudrun.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DomainMapping", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudrunGcpUpboundIoV1beta1DomainMappingSpec, default is Undefined, required
        spec
    status : CloudrunGcpUpboundIoV1beta1DomainMappingStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudrun.gcp.upbound.io/v1beta1" = "cloudrun.gcp.upbound.io/v1beta1"

    kind: "DomainMapping" = "DomainMapping"

    metadata?: v1.ObjectMeta

    spec: CloudrunGcpUpboundIoV1beta1DomainMappingSpec

    status?: CloudrunGcpUpboundIoV1beta1DomainMappingStatus


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpec:
    """
    DomainMappingSpec defines the desired state of DomainMapping

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProvider

    initProvider?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecWriteConnectionSecretToRef


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProvider:
    """
    cloudrun gcp upbound io v1beta1 domain mapping spec for provider

    Attributes
    ----------
    location : str, default is Undefined, optional
        The location of the cloud run instance. eg us-central1
    metadata : [CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0], default is Undefined, optional
        Metadata associated with this DomainMapping.
        Structure is documented below.
    name : str, default is Undefined, optional
        Name should be a verified domain
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    spec : [CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0], default is Undefined, optional
        The spec for this DomainMapping.
        Structure is documented below.
    """


    location?: str

    metadata?: [CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0]

    name?: str

    project?: str

    spec?: [CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0]


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping spec for provider metadata items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a key value map stored with a resource that
        may be set by external tools to store and retrieve arbitrary metadata. More
        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
        Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
        Note: This field is non-authoritative, and will only manage the annotations present in your configuration.
        Please refer to the field effective_annotations for all of the annotations present on the resource.
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and routes.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    namespace : str, default is Undefined, optional
        In Cloud Run the namespace must be equal to either the
        project ID or project number.
    namespaceRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceRef, default is Undefined, optional
        namespace ref
    namespaceSelector : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    """


    annotations?: {str:str}

    labels?: {str:str}

    namespace?: str

    namespaceRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceRef

    namespaceSelector?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceSelector


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceRef:
    """
    Reference to a Project in cloudplatform to populate namespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceRefPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceSelector:
    """
    Selector for a Project in cloudplatform to populate namespace.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderMetadataItems0NamespaceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping spec for provider spec items0

    Attributes
    ----------
    certificateMode : str, default is Undefined, optional
        The mode of the certificate.
        Default value is AUTOMATIC.
        Possible values are: NONE, AUTOMATIC.
    forceOverride : bool, default is Undefined, optional
        If set, the mapping will override any mapping set before this spec was set.
        It is recommended that the user leaves this empty to receive an error
        warning about a potential conflict and only set it once the respective UI
        has given such a warning.
    routeName : str, default is Undefined, optional
        The name of the Cloud Run Service that this DomainMapping applies to.
        The route must exist.
    routeNameRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameRef, default is Undefined, optional
        route name ref
    routeNameSelector : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameSelector, default is Undefined, optional
        route name selector
    """


    certificateMode?: str

    forceOverride?: bool

    routeName?: str

    routeNameRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameRef

    routeNameSelector?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameSelector


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameRef:
    """
    Reference to a Service to populate routeName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameRefPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameSelector:
    """
    Selector for a Service to populate routeName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecForProviderSpecItems0RouteNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    location : str, default is Undefined, optional
        The location of the cloud run instance. eg us-central1
    metadata : [CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0], default is Undefined, optional
        Metadata associated with this DomainMapping.
        Structure is documented below.
    name : str, default is Undefined, optional
        Name should be a verified domain
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    spec : [CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0], default is Undefined, optional
        The spec for this DomainMapping.
        Structure is documented below.
    """


    location?: str

    metadata?: [CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0]

    name?: str

    project?: str

    spec?: [CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0]


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping spec init provider metadata items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a key value map stored with a resource that
        may be set by external tools to store and retrieve arbitrary metadata. More
        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
        Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
        Note: This field is non-authoritative, and will only manage the annotations present in your configuration.
        Please refer to the field effective_annotations for all of the annotations present on the resource.
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and routes.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    namespace : str, default is Undefined, optional
        In Cloud Run the namespace must be equal to either the
        project ID or project number.
    namespaceRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceRef, default is Undefined, optional
        namespace ref
    namespaceSelector : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    """


    annotations?: {str:str}

    labels?: {str:str}

    namespace?: str

    namespaceRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceRef

    namespaceSelector?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceSelector


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceRef:
    """
    Reference to a Project in cloudplatform to populate namespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceRefPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceSelector:
    """
    Selector for a Project in cloudplatform to populate namespace.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderMetadataItems0NamespaceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping spec init provider spec items0

    Attributes
    ----------
    certificateMode : str, default is Undefined, optional
        The mode of the certificate.
        Default value is AUTOMATIC.
        Possible values are: NONE, AUTOMATIC.
    forceOverride : bool, default is Undefined, optional
        If set, the mapping will override any mapping set before this spec was set.
        It is recommended that the user leaves this empty to receive an error
        warning about a potential conflict and only set it once the respective UI
        has given such a warning.
    routeName : str, default is Undefined, optional
        The name of the Cloud Run Service that this DomainMapping applies to.
        The route must exist.
    routeNameRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameRef, default is Undefined, optional
        route name ref
    routeNameSelector : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameSelector, default is Undefined, optional
        route name selector
    """


    certificateMode?: str

    forceOverride?: bool

    routeName?: str

    routeNameRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameRef

    routeNameSelector?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameSelector


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameRef:
    """
    Reference to a Service to populate routeName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameRefPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameSelector:
    """
    Selector for a Service to populate routeName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecInitProviderSpecItems0RouteNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecProviderConfigRefPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatus:
    """
    DomainMappingStatus defines the observed state of DomainMapping.

    Attributes
    ----------
    atProvider : CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudrunGcpUpboundIoV1beta1DomainMappingStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProvider

    conditions?: [CloudrunGcpUpboundIoV1beta1DomainMappingStatusConditionsItems0]


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProvider:
    """
    cloudrun gcp upbound io v1beta1 domain mapping status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        an identifier for the resource with format locations/{{location}}/namespaces/{{project}}/domainmappings/{{name}}
    location : str, default is Undefined, optional
        The location of the cloud run instance. eg us-central1
    metadata : [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderMetadataItems0], default is Undefined, optional
        Metadata associated with this DomainMapping.
        Structure is documented below.
    name : str, default is Undefined, optional
        Name should be a verified domain
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    spec : [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderSpecItems0], default is Undefined, optional
        The spec for this DomainMapping.
        Structure is documented below.
    status : [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0], default is Undefined, optional
        The current status of the DomainMapping.
        Structure is documented below.
    """


    id?: str

    location?: str

    metadata?: [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderMetadataItems0]

    name?: str

    project?: str

    spec?: [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderSpecItems0]

    status?: [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0]


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderMetadataItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping status at provider metadata items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is a key value map stored with a resource that
        may be set by external tools to store and retrieve arbitrary metadata. More
        info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
        Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field.
        Note: This field is non-authoritative, and will only manage the annotations present in your configuration.
        Please refer to the field effective_annotations for all of the annotations present on the resource.
    effectiveAnnotations : {str:str}, default is Undefined, optional
        effective annotations
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    generation : float, default is Undefined, optional
        (Output)
        A sequence number representing a specific generation of the desired state.
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize
        (scope and select) objects. May match selectors of replication controllers
        and routes.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    namespace : str, default is Undefined, optional
        In Cloud Run the namespace must be equal to either the
        project ID or project number.
    resourceVersion : str, default is Undefined, optional
        (Output)
        An opaque value that represents the internal version of this object that
        can be used by clients to determine when objects have changed. May be used
        for optimistic concurrency, change detection, and the watch operation on a
        resource or set of resources. They may only be valid for a
        particular resource or set of resources.
        More info:
        https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
    selfLink : str, default is Undefined, optional
        (Output)
        SelfLink is a URL representing this object.
    terraformLabels : {str:str}, default is Undefined, optional
        (Output)
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    uid : str, default is Undefined, optional
        (Output)
        UID is a unique id generated by the server on successful creation of a resource and is not
        allowed to change on PUT operations.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
    """


    annotations?: {str:str}

    effectiveAnnotations?: {str:str}

    effectiveLabels?: {str:str}

    generation?: float

    labels?: {str:str}

    namespace?: str

    resourceVersion?: str

    selfLink?: str

    terraformLabels?: {str:str}

    uid?: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderSpecItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping status at provider spec items0

    Attributes
    ----------
    certificateMode : str, default is Undefined, optional
        The mode of the certificate.
        Default value is AUTOMATIC.
        Possible values are: NONE, AUTOMATIC.
    forceOverride : bool, default is Undefined, optional
        If set, the mapping will override any mapping set before this spec was set.
        It is recommended that the user leaves this empty to receive an error
        warning about a potential conflict and only set it once the respective UI
        has given such a warning.
    routeName : str, default is Undefined, optional
        The name of the Cloud Run Service that this DomainMapping applies to.
        The route must exist.
    """


    certificateMode?: str

    forceOverride?: bool

    routeName?: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping status at provider status items0

    Attributes
    ----------
    conditions : [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0ConditionsItems0], default is Undefined, optional
        (Output)
        Array of observed DomainMappingConditions, indicating the current state
        of the DomainMapping.
        Structure is documented below.
    mappedRouteName : str, default is Undefined, optional
        (Output)
        The name of the route that the mapping currently points to.
    observedGeneration : float, default is Undefined, optional
        (Output)
        ObservedGeneration is the 'Generation' of the DomainMapping that
        was last processed by the controller.
    resourceRecords : [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0ResourceRecordsItems0], default is Undefined, optional
        The resource records required to configure this domain mapping. These
        records must be added to the domain's DNS configuration in order to
        serve the application via this domain mapping.
        Structure is documented below.
    """


    conditions?: [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0ConditionsItems0]

    mappedRouteName?: str

    observedGeneration?: float

    resourceRecords?: [CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0ResourceRecordsItems0]


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0ConditionsItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping status at provider status items0 conditions items0

    Attributes
    ----------
    message : str, default is Undefined, optional
        (Output)
        Human readable message indicating details about the current status.
    reason : str, default is Undefined, optional
        (Output)
        One-word CamelCase reason for the condition's current status.
    status : str, default is Undefined, optional
        The current status of the DomainMapping.
        Structure is documented below.
    $type : str, default is Undefined, optional
        Resource record type. Example: AAAA.
        Possible values are: A, AAAA, CNAME.
    """


    message?: str

    reason?: str

    status?: str

    $type?: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusAtProviderStatusItems0ResourceRecordsItems0:
    """
    cloudrun gcp upbound io v1beta1 domain mapping status at provider status items0 resource records items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        (Output)
        Relative name of the object affected by this record. Only applicable for
        CNAME records. Example: 'www'.
    rrdata : str, default is Undefined, optional
        (Output)
        Data for this record. Values vary by record type, as defined in RFC 1035
        (section 5) and RFC 1034 (section 3.6.1).
    $type : str, default is Undefined, optional
        Resource record type. Example: AAAA.
        Possible values are: A, AAAA, CNAME.
    """


    name?: str

    rrdata?: str

    $type?: str


schema CloudrunGcpUpboundIoV1beta1DomainMappingStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


