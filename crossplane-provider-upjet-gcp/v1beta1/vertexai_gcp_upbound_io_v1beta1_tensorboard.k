"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Tensorboard:
    """
    Tensorboard is the Schema for the Tensorboards API. Tensorboard is a physical database that stores users' training metrics.

    Attributes
    ----------
    apiVersion : str, default is "vertexai.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Tensorboard", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VertexaiGcpUpboundIoV1beta1TensorboardSpec, default is Undefined, required
        spec
    status : VertexaiGcpUpboundIoV1beta1TensorboardStatus, default is Undefined, optional
        status
    """


    apiVersion: "vertexai.gcp.upbound.io/v1beta1" = "vertexai.gcp.upbound.io/v1beta1"

    kind: "Tensorboard" = "Tensorboard"

    metadata?: v1.ObjectMeta

    spec: VertexaiGcpUpboundIoV1beta1TensorboardSpec

    status?: VertexaiGcpUpboundIoV1beta1TensorboardStatus


schema VertexaiGcpUpboundIoV1beta1TensorboardSpec:
    """
    TensorboardSpec defines the desired state of Tensorboard

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : VertexaiGcpUpboundIoV1beta1TensorboardSpecForProvider, default is Undefined, required
        for provider
    initProvider : VertexaiGcpUpboundIoV1beta1TensorboardSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : VertexaiGcpUpboundIoV1beta1TensorboardSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : VertexaiGcpUpboundIoV1beta1TensorboardSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: VertexaiGcpUpboundIoV1beta1TensorboardSpecForProvider

    initProvider?: VertexaiGcpUpboundIoV1beta1TensorboardSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: VertexaiGcpUpboundIoV1beta1TensorboardSpecProviderConfigRef

    publishConnectionDetailsTo?: VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: VertexaiGcpUpboundIoV1beta1TensorboardSpecWriteConnectionSecretToRef


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecForProvider:
    """
    vertexai gcp upbound io v1beta1 tensorboard spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this Tensorboard.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1TensorboardSpecForProviderEncryptionSpecItems0], default is Undefined, optional
        Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        The labels with user-defined metadata to organize your Tensorboards.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        The region of the tensorboard. eg us-central1
    """


    description?: str

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1TensorboardSpecForProviderEncryptionSpecItems0]

    labels?: {str:str}

    project?: str

    region: str


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecForProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 tensorboard spec for provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
        Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of this Tensorboard.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1TensorboardSpecInitProviderEncryptionSpecItems0], default is Undefined, optional
        Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        The labels with user-defined metadata to organize your Tensorboards.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    description?: str

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1TensorboardSpecInitProviderEncryptionSpecItems0]

    labels?: {str:str}

    project?: str


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecInitProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 tensorboard spec init provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
        Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1TensorboardSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1TensorboardSpecProviderConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToConfigRef

    metadata?: VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToMetadata

    name: str


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema VertexaiGcpUpboundIoV1beta1TensorboardSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema VertexaiGcpUpboundIoV1beta1TensorboardStatus:
    """
    TensorboardStatus defines the observed state of Tensorboard.

    Attributes
    ----------
    atProvider : VertexaiGcpUpboundIoV1beta1TensorboardStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [VertexaiGcpUpboundIoV1beta1TensorboardStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: VertexaiGcpUpboundIoV1beta1TensorboardStatusAtProvider

    conditions?: [VertexaiGcpUpboundIoV1beta1TensorboardStatusConditionsItems0]


schema VertexaiGcpUpboundIoV1beta1TensorboardStatusAtProvider:
    """
    vertexai gcp upbound io v1beta1 tensorboard status at provider

    Attributes
    ----------
    blobStoragePathPrefix : str, default is Undefined, optional
        Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
    createTime : str, default is Undefined, optional
        The timestamp of when the Tensorboard was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    description : str, default is Undefined, optional
        Description of this Tensorboard.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1TensorboardStatusAtProviderEncryptionSpecItems0], default is Undefined, optional
        Customer-managed encryption key spec for a Tensorboard. If set, this Tensorboard and all sub-resources of this Tensorboard will be secured by this key.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    labels : {str:str}, default is Undefined, optional
        The labels with user-defined metadata to organize your Tensorboards.
    name : str, default is Undefined, optional
        Name of the Tensorboard.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the tensorboard. eg us-central1
    runCount : str, default is Undefined, optional
        The number of Runs stored in this Tensorboard.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        The timestamp of when the Tensorboard was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    """


    blobStoragePathPrefix?: str

    createTime?: str

    description?: str

    effectiveLabels?: {str:str}

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1TensorboardStatusAtProviderEncryptionSpecItems0]

    id?: str

    labels?: {str:str}

    name?: str

    project?: str

    region?: str

    runCount?: str

    terraformLabels?: {str:str}

    updateTime?: str


schema VertexaiGcpUpboundIoV1beta1TensorboardStatusAtProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 tensorboard status at provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
        Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1TensorboardStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


