"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FeaturestoreEntitytype:
    """
    FeaturestoreEntitytype is the Schema for the FeaturestoreEntitytypes API. An entity type is a type of object in a system that needs to be modeled and have stored information about.

    Attributes
    ----------
    apiVersion : str, default is "vertexai.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FeaturestoreEntitytype", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpec, default is Undefined, required
        spec
    status : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatus, default is Undefined, optional
        status
    """


    apiVersion: "vertexai.gcp.upbound.io/v1beta1" = "vertexai.gcp.upbound.io/v1beta1"

    kind: "FeaturestoreEntitytype" = "FeaturestoreEntitytype"

    metadata?: v1.ObjectMeta

    spec: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpec

    status?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatus


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpec:
    """
    FeaturestoreEntitytypeSpec defines the desired state of FeaturestoreEntitytype

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProvider, default is Undefined, required
        for provider
    initProvider : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProvider

    initProvider?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecProviderConfigRef

    publishConnectionDetailsTo?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecWriteConnectionSecretToRef


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProvider:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of the EntityType.
    featurestore : str, default is Undefined, optional
        The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
    featurestoreRef : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreRef, default is Undefined, optional
        featurestore ref
    featurestoreSelector : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreSelector, default is Undefined, optional
        featurestore selector
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this EntityType.
    monitoringConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0], default is Undefined, optional
        The default monitoring configuration for all Features under this EntityType.
        If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        Structure is documented below.
    name : str, default is Undefined, optional
        The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
    """


    description?: str

    featurestore?: str

    featurestoreRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreRef

    featurestoreSelector?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreSelector

    labels?: {str:str}

    monitoringConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0]

    name?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreRef:
    """
    Reference to a Featurestore in vertexai to populate featurestore.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreRefPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreSelector:
    """
    Selector for a Featurestore in vertexai to populate featurestore.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreSelectorPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderFeaturestoreSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec for provider monitoring config items0

    Attributes
    ----------
    categoricalThresholdConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0CategoricalThresholdConfigItems0], default is Undefined, optional
        Threshold for categorical features of anomaly detection. This is shared by all types of Featurestore Monitoring for categorical features (i.e. Features with type (Feature.ValueType) BOOL or STRING).
        Structure is documented below.
    importFeaturesAnalysis : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0], default is Undefined, optional
        The config for ImportFeatures Analysis Based Feature Monitoring.
        Structure is documented below.
    numericalThresholdConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0NumericalThresholdConfigItems0], default is Undefined, optional
        Threshold for numerical features of anomaly detection. This is shared by all objectives of Featurestore Monitoring for numerical features (i.e. Features with type (Feature.ValueType) DOUBLE or INT64).
        Structure is documented below.
    snapshotAnalysis : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0SnapshotAnalysisItems0], default is Undefined, optional
        The config for Snapshot Analysis Based Feature Monitoring.
        Structure is documented below.
    """


    categoricalThresholdConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0CategoricalThresholdConfigItems0]

    importFeaturesAnalysis?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0]

    numericalThresholdConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0NumericalThresholdConfigItems0]

    snapshotAnalysis?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0SnapshotAnalysisItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0CategoricalThresholdConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec for provider monitoring config items0 categorical threshold config items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
    """


    value?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec for provider monitoring config items0 import features analysis items0

    Attributes
    ----------
    anomalyDetectionBaseline : str, default is Undefined, optional
        Defines the baseline to do anomaly detection for feature values imported by each [entityTypes.importFeatureValues][] operation. The value must be one of the values below:
    state : str, default is Undefined, optional
        Whether to enable / disable / inherite default hebavior for import features analysis. The value must be one of the values below:
    """


    anomalyDetectionBaseline?: str

    state?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0NumericalThresholdConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec for provider monitoring config items0 numerical threshold config items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
    """


    value?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecForProviderMonitoringConfigItems0SnapshotAnalysisItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec for provider monitoring config items0 snapshot analysis items0

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
    monitoringIntervalDays : float, default is Undefined, optional
        Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days. The default value is 1.
        If both FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval_days and [FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval][] are set when creating/updating EntityTypes/Features, FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval_days will be used.
    stalenessDays : float, default is Undefined, optional
        Customized export features time window for snapshot analysis. Unit is one day. The default value is 21 days. Minimum value is 1 day. Maximum value is 4000 days.
    """


    disabled?: bool

    monitoringIntervalDays?: float

    stalenessDays?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of the EntityType.
    featurestore : str, default is Undefined, optional
        The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
    featurestoreRef : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreRef, default is Undefined, optional
        featurestore ref
    featurestoreSelector : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreSelector, default is Undefined, optional
        featurestore selector
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this EntityType.
    monitoringConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0], default is Undefined, optional
        The default monitoring configuration for all Features under this EntityType.
        If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        Structure is documented below.
    name : str, default is Undefined, optional
        The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
    """


    description?: str

    featurestore?: str

    featurestoreRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreRef

    featurestoreSelector?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreSelector

    labels?: {str:str}

    monitoringConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0]

    name?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreRef:
    """
    Reference to a Featurestore in vertexai to populate featurestore.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreRefPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreSelector:
    """
    Selector for a Featurestore in vertexai to populate featurestore.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreSelectorPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderFeaturestoreSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec init provider monitoring config items0

    Attributes
    ----------
    categoricalThresholdConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0CategoricalThresholdConfigItems0], default is Undefined, optional
        Threshold for categorical features of anomaly detection. This is shared by all types of Featurestore Monitoring for categorical features (i.e. Features with type (Feature.ValueType) BOOL or STRING).
        Structure is documented below.
    importFeaturesAnalysis : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0], default is Undefined, optional
        The config for ImportFeatures Analysis Based Feature Monitoring.
        Structure is documented below.
    numericalThresholdConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0NumericalThresholdConfigItems0], default is Undefined, optional
        Threshold for numerical features of anomaly detection. This is shared by all objectives of Featurestore Monitoring for numerical features (i.e. Features with type (Feature.ValueType) DOUBLE or INT64).
        Structure is documented below.
    snapshotAnalysis : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0SnapshotAnalysisItems0], default is Undefined, optional
        The config for Snapshot Analysis Based Feature Monitoring.
        Structure is documented below.
    """


    categoricalThresholdConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0CategoricalThresholdConfigItems0]

    importFeaturesAnalysis?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0]

    numericalThresholdConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0NumericalThresholdConfigItems0]

    snapshotAnalysis?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0SnapshotAnalysisItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0CategoricalThresholdConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec init provider monitoring config items0 categorical threshold config items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
    """


    value?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec init provider monitoring config items0 import features analysis items0

    Attributes
    ----------
    anomalyDetectionBaseline : str, default is Undefined, optional
        Defines the baseline to do anomaly detection for feature values imported by each [entityTypes.importFeatureValues][] operation. The value must be one of the values below:
    state : str, default is Undefined, optional
        Whether to enable / disable / inherite default hebavior for import features analysis. The value must be one of the values below:
    """


    anomalyDetectionBaseline?: str

    state?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0NumericalThresholdConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec init provider monitoring config items0 numerical threshold config items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
    """


    value?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecInitProviderMonitoringConfigItems0SnapshotAnalysisItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype spec init provider monitoring config items0 snapshot analysis items0

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
    monitoringIntervalDays : float, default is Undefined, optional
        Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days. The default value is 1.
        If both FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval_days and [FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval][] are set when creating/updating EntityTypes/Features, FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval_days will be used.
    stalenessDays : float, default is Undefined, optional
        Customized export features time window for snapshot analysis. Unit is one day. The default value is 21 days. Minimum value is 1 day. Maximum value is 4000 days.
    """


    disabled?: bool

    monitoringIntervalDays?: float

    stalenessDays?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecProviderConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToConfigRef

    metadata?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToMetadata

    name: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatus:
    """
    FeaturestoreEntitytypeStatus defines the observed state of FeaturestoreEntitytype.

    Attributes
    ----------
    atProvider : VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProvider

    conditions?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusConditionsItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProvider:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    description : str, default is Undefined, optional
        Optional. Description of the EntityType.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    etag : str, default is Undefined, optional
        Used to perform consistent read-modify-write updates.
    featurestore : str, default is Undefined, optional
        The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{featurestore}}/entityTypes/{{name}}
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this EntityType.
    monitoringConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0], default is Undefined, optional
        The default monitoring configuration for all Features under this EntityType.
        If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        Structure is documented below.
    name : str, default is Undefined, optional
        The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
    region : str, default is Undefined, optional
        region
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    """


    createTime?: str

    description?: str

    effectiveLabels?: {str:str}

    etag?: str

    featurestore?: str

    id?: str

    labels?: {str:str}

    monitoringConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0]

    name?: str

    region?: str

    terraformLabels?: {str:str}

    updateTime?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype status at provider monitoring config items0

    Attributes
    ----------
    categoricalThresholdConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0CategoricalThresholdConfigItems0], default is Undefined, optional
        Threshold for categorical features of anomaly detection. This is shared by all types of Featurestore Monitoring for categorical features (i.e. Features with type (Feature.ValueType) BOOL or STRING).
        Structure is documented below.
    importFeaturesAnalysis : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0], default is Undefined, optional
        The config for ImportFeatures Analysis Based Feature Monitoring.
        Structure is documented below.
    numericalThresholdConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0NumericalThresholdConfigItems0], default is Undefined, optional
        Threshold for numerical features of anomaly detection. This is shared by all objectives of Featurestore Monitoring for numerical features (i.e. Features with type (Feature.ValueType) DOUBLE or INT64).
        Structure is documented below.
    snapshotAnalysis : [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0SnapshotAnalysisItems0], default is Undefined, optional
        The config for Snapshot Analysis Based Feature Monitoring.
        Structure is documented below.
    """


    categoricalThresholdConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0CategoricalThresholdConfigItems0]

    importFeaturesAnalysis?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0]

    numericalThresholdConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0NumericalThresholdConfigItems0]

    snapshotAnalysis?: [VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0SnapshotAnalysisItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0CategoricalThresholdConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype status at provider monitoring config items0 categorical threshold config items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
    """


    value?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0ImportFeaturesAnalysisItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype status at provider monitoring config items0 import features analysis items0

    Attributes
    ----------
    anomalyDetectionBaseline : str, default is Undefined, optional
        Defines the baseline to do anomaly detection for feature values imported by each [entityTypes.importFeatureValues][] operation. The value must be one of the values below:
    state : str, default is Undefined, optional
        Whether to enable / disable / inherite default hebavior for import features analysis. The value must be one of the values below:
    """


    anomalyDetectionBaseline?: str

    state?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0NumericalThresholdConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype status at provider monitoring config items0 numerical threshold config items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
    """


    value?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusAtProviderMonitoringConfigItems0SnapshotAnalysisItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore entitytype status at provider monitoring config items0 snapshot analysis items0

    Attributes
    ----------
    disabled : bool, default is Undefined, optional
        The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
    monitoringIntervalDays : float, default is Undefined, optional
        Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days. The default value is 1.
        If both FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval_days and [FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval][] are set when creating/updating EntityTypes/Features, FeaturestoreMonitoringConfig.SnapshotAnalysis.monitoring_interval_days will be used.
    stalenessDays : float, default is Undefined, optional
        Customized export features time window for snapshot analysis. Unit is one day. The default value is 21 days. Minimum value is 1 day. Maximum value is 4000 days.
    """


    disabled?: bool

    monitoringIntervalDays?: float

    stalenessDays?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreEntitytypeStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


