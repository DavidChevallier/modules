"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProjectSink:
    """
    ProjectSink is the Schema for the ProjectSinks API. Manages a project-level logging sink.

    Attributes
    ----------
    apiVersion : str, default is "logging.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProjectSink", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LoggingGcpUpboundIoV1beta1ProjectSinkSpec, default is Undefined, required
        spec
    status : LoggingGcpUpboundIoV1beta1ProjectSinkStatus, default is Undefined, optional
        status
    """


    apiVersion: "logging.gcp.upbound.io/v1beta1" = "logging.gcp.upbound.io/v1beta1"

    kind: "ProjectSink" = "ProjectSink"

    metadata?: v1.ObjectMeta

    spec: LoggingGcpUpboundIoV1beta1ProjectSinkSpec

    status?: LoggingGcpUpboundIoV1beta1ProjectSinkStatus


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpec:
    """
    ProjectSinkSpec defines the desired state of ProjectSink

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProvider, default is Undefined, required
        for provider
    initProvider : LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LoggingGcpUpboundIoV1beta1ProjectSinkSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LoggingGcpUpboundIoV1beta1ProjectSinkSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProvider

    initProvider?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecProviderConfigRef

    publishConnectionDetailsTo?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecWriteConnectionSecretToRef


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProvider:
    """
    logging gcp upbound io v1beta1 project sink spec for provider

    Attributes
    ----------
    bigqueryOptions : [LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderBigqueryOptionsItems0], default is Undefined, optional
        Options that affect sinks exporting data to BigQuery. Structure documented below.
    customWriterIdentity : str, default is Undefined, optional
        A user managed service account that will be used to write
        the log entries. The format must be serviceAccount:some@email. This field can only be specified if you are
        routing logs to a destination outside this sink's project. If not specified, a Logging service account
        will automatically be generated.
    customWriterIdentityRef : LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentityRef, default is Undefined, optional
        custom writer identity ref
    customWriterIdentitySelector : LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentitySelector, default is Undefined, optional
        custom writer identity selector
    description : str, default is Undefined, optional
        A description of this sink. The maximum length of the description is 8000 characters.
    destination : str, default is Undefined, optional
        The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub topic, a BigQuery dataset, a Cloud Logging bucket, or a Google Cloud project. Examples:
    disabled : bool, default is Undefined, optional
        If set to True, then this sink is disabled and it does not export any log entries.
    exclusions : [LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderExclusionsItems0], default is Undefined, optional
        Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and one of exclusions.filter, it will not be exported.  Can be repeated multiple times for multiple exclusions. Structure is documented below.
    $filter : str, default is Undefined, optional
        The filter to apply when exporting logs. Only log entries that match the filter are exported.
        See Advanced Log Filters for information on how to
        write a filter.
    project : str, default is Undefined, optional
        The ID of the project to create the sink in. If omitted, the project associated with the provider is
        used.
    uniqueWriterIdentity : bool, default is Undefined, optional
        Whether or not to create a unique identity associated with this sink. If false, then the writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (the default),
        then a unique service account is created and used for this sink. If you wish to publish logs across projects or utilize
        bigquery_options, you must set unique_writer_identity to true.
    """


    bigqueryOptions?: [LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderBigqueryOptionsItems0]

    customWriterIdentity?: str

    customWriterIdentityRef?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentityRef

    customWriterIdentitySelector?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentitySelector

    description?: str

    destination?: str

    disabled?: bool

    exclusions?: [LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderExclusionsItems0]

    $filter?: str

    project?: str

    uniqueWriterIdentity?: bool


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderBigqueryOptionsItems0:
    """
    logging gcp upbound io v1beta1 project sink spec for provider bigquery options items0

    Attributes
    ----------
    usePartitionedTables : bool, default is Undefined, optional
        Whether to use BigQuery's partition tables.
        By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
        tables the date suffix is no longer present and special query syntax
        has to be used instead. In both cases, tables are sharded based on UTC timezone.
    """


    usePartitionedTables?: bool


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentityRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate customWriterIdentity.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentityRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentityRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentitySelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate customWriterIdentity.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentitySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentitySelectorPolicy


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderCustomWriterIdentitySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecForProviderExclusionsItems0:
    """
    logging gcp upbound io v1beta1 project sink spec for provider exclusions items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of this exclusion.
    disabled : bool, default is Undefined, optional
        If set to True, then this exclusion is disabled and it does not exclude any log entries.
    $filter : str, default is Undefined, optional
        An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See Advanced Log Filters for information on how to
        write a filter.
    name : str, default is Undefined, optional
        A client-assigned identifier, such as load-balancer-exclusion. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
    """


    description?: str

    disabled?: bool

    $filter?: str

    name?: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bigqueryOptions : [LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderBigqueryOptionsItems0], default is Undefined, optional
        Options that affect sinks exporting data to BigQuery. Structure documented below.
    customWriterIdentity : str, default is Undefined, optional
        A user managed service account that will be used to write
        the log entries. The format must be serviceAccount:some@email. This field can only be specified if you are
        routing logs to a destination outside this sink's project. If not specified, a Logging service account
        will automatically be generated.
    customWriterIdentityRef : LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentityRef, default is Undefined, optional
        custom writer identity ref
    customWriterIdentitySelector : LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentitySelector, default is Undefined, optional
        custom writer identity selector
    description : str, default is Undefined, optional
        A description of this sink. The maximum length of the description is 8000 characters.
    destination : str, default is Undefined, optional
        The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub topic, a BigQuery dataset, a Cloud Logging bucket, or a Google Cloud project. Examples:
    disabled : bool, default is Undefined, optional
        If set to True, then this sink is disabled and it does not export any log entries.
    exclusions : [LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderExclusionsItems0], default is Undefined, optional
        Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and one of exclusions.filter, it will not be exported.  Can be repeated multiple times for multiple exclusions. Structure is documented below.
    $filter : str, default is Undefined, optional
        The filter to apply when exporting logs. Only log entries that match the filter are exported.
        See Advanced Log Filters for information on how to
        write a filter.
    project : str, default is Undefined, optional
        The ID of the project to create the sink in. If omitted, the project associated with the provider is
        used.
    uniqueWriterIdentity : bool, default is Undefined, optional
        Whether or not to create a unique identity associated with this sink. If false, then the writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (the default),
        then a unique service account is created and used for this sink. If you wish to publish logs across projects or utilize
        bigquery_options, you must set unique_writer_identity to true.
    """


    bigqueryOptions?: [LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderBigqueryOptionsItems0]

    customWriterIdentity?: str

    customWriterIdentityRef?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentityRef

    customWriterIdentitySelector?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentitySelector

    description?: str

    destination?: str

    disabled?: bool

    exclusions?: [LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderExclusionsItems0]

    $filter?: str

    project?: str

    uniqueWriterIdentity?: bool


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderBigqueryOptionsItems0:
    """
    logging gcp upbound io v1beta1 project sink spec init provider bigquery options items0

    Attributes
    ----------
    usePartitionedTables : bool, default is Undefined, optional
        Whether to use BigQuery's partition tables.
        By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
        tables the date suffix is no longer present and special query syntax
        has to be used instead. In both cases, tables are sharded based on UTC timezone.
    """


    usePartitionedTables?: bool


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentityRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate customWriterIdentity.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentityRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentityRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentitySelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate customWriterIdentity.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentitySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentitySelectorPolicy


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderCustomWriterIdentitySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecInitProviderExclusionsItems0:
    """
    logging gcp upbound io v1beta1 project sink spec init provider exclusions items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of this exclusion.
    disabled : bool, default is Undefined, optional
        If set to True, then this exclusion is disabled and it does not exclude any log entries.
    $filter : str, default is Undefined, optional
        An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See Advanced Log Filters for information on how to
        write a filter.
    name : str, default is Undefined, optional
        A client-assigned identifier, such as load-balancer-exclusion. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
    """


    description?: str

    disabled?: bool

    $filter?: str

    name?: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectSinkSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecProviderConfigRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToConfigRef

    metadata?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToMetadata

    name: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToConfigRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkStatus:
    """
    ProjectSinkStatus defines the observed state of ProjectSink.

    Attributes
    ----------
    atProvider : LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LoggingGcpUpboundIoV1beta1ProjectSinkStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProvider

    conditions?: [LoggingGcpUpboundIoV1beta1ProjectSinkStatusConditionsItems0]


schema LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProvider:
    """
    logging gcp upbound io v1beta1 project sink status at provider

    Attributes
    ----------
    bigqueryOptions : [LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProviderBigqueryOptionsItems0], default is Undefined, optional
        Options that affect sinks exporting data to BigQuery. Structure documented below.
    customWriterIdentity : str, default is Undefined, optional
        A user managed service account that will be used to write
        the log entries. The format must be serviceAccount:some@email. This field can only be specified if you are
        routing logs to a destination outside this sink's project. If not specified, a Logging service account
        will automatically be generated.
    description : str, default is Undefined, optional
        A description of this sink. The maximum length of the description is 8000 characters.
    destination : str, default is Undefined, optional
        The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub topic, a BigQuery dataset, a Cloud Logging bucket, or a Google Cloud project. Examples:
    disabled : bool, default is Undefined, optional
        If set to True, then this sink is disabled and it does not export any log entries.
    exclusions : [LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProviderExclusionsItems0], default is Undefined, optional
        Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and one of exclusions.filter, it will not be exported.  Can be repeated multiple times for multiple exclusions. Structure is documented below.
    $filter : str, default is Undefined, optional
        The filter to apply when exporting logs. Only log entries that match the filter are exported.
        See Advanced Log Filters for information on how to
        write a filter.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/sinks/{{name}}
    project : str, default is Undefined, optional
        The ID of the project to create the sink in. If omitted, the project associated with the provider is
        used.
    uniqueWriterIdentity : bool, default is Undefined, optional
        Whether or not to create a unique identity associated with this sink. If false, then the writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (the default),
        then a unique service account is created and used for this sink. If you wish to publish logs across projects or utilize
        bigquery_options, you must set unique_writer_identity to true.
    writerIdentity : str, default is Undefined, optional
        The identity associated with this sink. This identity must be granted write access to the
        configured destination.
    """


    bigqueryOptions?: [LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProviderBigqueryOptionsItems0]

    customWriterIdentity?: str

    description?: str

    destination?: str

    disabled?: bool

    exclusions?: [LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProviderExclusionsItems0]

    $filter?: str

    id?: str

    project?: str

    uniqueWriterIdentity?: bool

    writerIdentity?: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProviderBigqueryOptionsItems0:
    """
    logging gcp upbound io v1beta1 project sink status at provider bigquery options items0

    Attributes
    ----------
    usePartitionedTables : bool, default is Undefined, optional
        Whether to use BigQuery's partition tables.
        By default, Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned
        tables the date suffix is no longer present and special query syntax
        has to be used instead. In both cases, tables are sharded based on UTC timezone.
    """


    usePartitionedTables?: bool


schema LoggingGcpUpboundIoV1beta1ProjectSinkStatusAtProviderExclusionsItems0:
    """
    logging gcp upbound io v1beta1 project sink status at provider exclusions items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of this exclusion.
    disabled : bool, default is Undefined, optional
        If set to True, then this exclusion is disabled and it does not exclude any log entries.
    $filter : str, default is Undefined, optional
        An advanced logs filter that matches the log entries to be excluded. By using the sample function, you can exclude less than 100% of the matching log entries. See Advanced Log Filters for information on how to
        write a filter.
    name : str, default is Undefined, optional
        A client-assigned identifier, such as load-balancer-exclusion. Identifiers are limited to 100 characters and can include only letters, digits, underscores, hyphens, and periods. First character has to be alphanumeric.
    """


    description?: str

    disabled?: bool

    $filter?: str

    name?: str


schema LoggingGcpUpboundIoV1beta1ProjectSinkStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


