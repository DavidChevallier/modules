"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AlertPolicy:
    """
    AlertPolicy is the Schema for the AlertPolicys API. A description of the conditions under which some aspect of your system is considered to be "unhealthy" and the ways to notify people or services about this state.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AlertPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGcpUpboundIoV1beta1AlertPolicySpec, default is Undefined, required
        spec
    status : MonitoringGcpUpboundIoV1beta1AlertPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.gcp.upbound.io/v1beta1" = "monitoring.gcp.upbound.io/v1beta1"

    kind: "AlertPolicy" = "AlertPolicy"

    metadata?: v1.ObjectMeta

    spec: MonitoringGcpUpboundIoV1beta1AlertPolicySpec

    status?: MonitoringGcpUpboundIoV1beta1AlertPolicyStatus


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpec:
    """
    AlertPolicySpec defines the desired state of AlertPolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MonitoringGcpUpboundIoV1beta1AlertPolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MonitoringGcpUpboundIoV1beta1AlertPolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProvider

    initProvider?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecProviderConfigRef

    publishConnectionDetailsTo?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecWriteConnectionSecretToRef


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProvider:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider

    Attributes
    ----------
    alertStrategy : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0], default is Undefined, optional
        Control over how this alert policy's notification channels are notified.
        Structure is documented below.
    combiner : str, default is Undefined, optional
        How to combine the results of multiple conditions to
        determine if an incident should be opened.
        Possible values are: AND, OR, AND_WITH_MATCHING_RESOURCE.
    conditions : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0], default is Undefined, optional
        A list of conditions for the policy. The conditions are combined by
        AND or OR according to the combiner field. If the combined conditions
        evaluate to true, then an incident is created. A policy can have from
        one to six conditions.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A short name or phrase used to identify the policy in
        dashboards, notifications, and incidents. To avoid confusion, don't use
        the same display name for multiple policies in the same project. The
        name is limited to 512 Unicode characters.
    documentation : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderDocumentationItems0], default is Undefined, optional
        Documentation that is included with notifications and incidents related
        to this policy. Best practice is for the documentation to include information
        to help responders understand, mitigate, escalate, and correct the underlying
        problems detected by the alerting policy. Notification channels that have
        limited capacity might not show this documentation.
        Structure is documented below.
    enabled : bool, default is Undefined, optional
        Whether or not the policy is enabled. The default is true.
    notificationChannels : [str], default is Undefined, optional
        Identifies the notification channels to which notifications should be
        sent when incidents are opened or closed or when new violations occur
        on an already opened incident. Each element of this array corresponds
        to the name field in each of the NotificationChannel objects that are
        returned from the notificationChannels.list method. The syntax of the
        entries in this field is
        projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    severity : str, default is Undefined, optional
        The severity of an alert policy indicates how important incidents generated
        by that policy are. The severity level will be displayed on the Incident
        detail page and in notifications.
        Possible values are: CRITICAL, ERROR, WARNING.
    userLabels : {str:str}, default is Undefined, optional
        This field is intended to be used for organizing and identifying the AlertPolicy
        objects.The field can contain up to 64 entries. Each key and value is limited
        to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values
        can contain only lowercase letters, numerals, underscores, and dashes. Keys
        must begin with a letter.
    """


    alertStrategy?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0]

    combiner?: str

    conditions?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0]

    displayName?: str

    documentation?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderDocumentationItems0]

    enabled?: bool

    notificationChannels?: [str]

    project?: str

    severity?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider alert strategy items0

    Attributes
    ----------
    autoClose : str, default is Undefined, optional
        If an alert policy that was active has no data for this long, any open incidents will close.
    notificationChannelStrategy : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0NotificationChannelStrategyItems0], default is Undefined, optional
        Control over how the notification channels in notification_channels
        are notified when this alert fires, on a per-channel basis.
        Structure is documented below.
    notificationRateLimit : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0NotificationRateLimitItems0], default is Undefined, optional
        Required for alert policies with a LogMatch condition.
        This limit is not implemented for alert policies that are not log-based.
        Structure is documented below.
    """


    autoClose?: str

    notificationChannelStrategy?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0NotificationChannelStrategyItems0]

    notificationRateLimit?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0NotificationRateLimitItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0NotificationChannelStrategyItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider alert strategy items0 notification channel strategy items0

    Attributes
    ----------
    notificationChannelNames : [str], default is Undefined, optional
        The notification channels that these settings apply to. Each of these
        correspond to the name field in one of the NotificationChannel objects
        referenced in the notification_channels field of this AlertPolicy. The format is
        projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
    renotifyInterval : str, default is Undefined, optional
        The frequency at which to send reminder notifications for open incidents.
    """


    notificationChannelNames?: [str]

    renotifyInterval?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderAlertStrategyItems0NotificationRateLimitItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider alert strategy items0 notification rate limit items0

    Attributes
    ----------
    period : str, default is Undefined, optional
        Not more than one notification per period.
    """


    period?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0

    Attributes
    ----------
    conditionAbsent : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0], default is Undefined, optional
        A condition that checks that a time series
        continues to receive new data points.
        Structure is documented below.
    conditionMatchedLog : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMatchedLogItems0], default is Undefined, optional
        A condition that checks for log messages matching given constraints.
        If set, no other conditions can be present.
        Structure is documented below.
    conditionMonitoringQueryLanguage : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMonitoringQueryLanguageItems0], default is Undefined, optional
        A Monitoring Query Language query that outputs a boolean stream
        Structure is documented below.
    conditionPrometheusQueryLanguage : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionPrometheusQueryLanguageItems0], default is Undefined, optional
        A condition type that allows alert policies to be defined using
        Prometheus Query Language (PromQL).
        The PrometheusQueryLanguageCondition message contains information
        from a Prometheus alerting rule and its associated rule group.
        Structure is documented below.
    conditionThreshold : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0], default is Undefined, optional
        A condition that compares a time series against a
        threshold.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A short name or phrase used to identify the
        condition in dashboards, notifications, and
        incidents. To avoid confusion, don't use the same
        display name for multiple conditions in the same
        policy.
    """


    conditionAbsent?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0]

    conditionMatchedLog?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMatchedLogItems0]

    conditionMonitoringQueryLanguage?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMonitoringQueryLanguageItems0]

    conditionPrometheusQueryLanguage?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionPrometheusQueryLanguageItems0]

    conditionThreshold?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0]

    displayName?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition absent items0

    Attributes
    ----------
    aggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0AggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
        Structure is documented below.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    aggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0AggregationsItems0]

    duration?: str

    $filter?: str

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0AggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition absent items0 aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionAbsentItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition absent items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMatchedLogItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition matched log items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key to an extractor expression, which is used to
        extract the value for this label key. Each entry in this map is
        a specification for how data should be extracted from log entries that
        match filter. Each combination of extracted values is treated as
        a separate rule for the purposes of triggering notifications.
        Label keys and corresponding values can be used in notifications
        generated by this condition.
    """


    $filter?: str

    labelExtractors?: {str:str}


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMonitoringQueryLanguageItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition monitoring query language items0

    Attributes
    ----------
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving.
        Possible values are: EVALUATION_MISSING_DATA_INACTIVE, EVALUATION_MISSING_DATA_ACTIVE, EVALUATION_MISSING_DATA_NO_OP.
    query : str, default is Undefined, optional
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    duration?: str

    evaluationMissingData?: str

    query?: str

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition monitoring query language items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionPrometheusQueryLanguageItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition prometheus query language items0

    Attributes
    ----------
    alertRule : str, default is Undefined, optional
        The alerting rule name of this alert in the corresponding Prometheus
        configuration file.
        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future.
        This field is optional. If this field is not empty, then it must be a
        valid Prometheus label name.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationInterval : str, default is Undefined, optional
        How often this rule should be evaluated. Must be a positive multiple
        of 30 seconds or missing. The default value is 30 seconds. If this
        PrometheusQueryLanguageCondition was generated from a Prometheus
        alerting rule, then this value should be taken from the enclosing
        rule group.
    labels : {str:str}, default is Undefined, optional
        Labels to add to or overwrite in the PromQL query result. Label names
        must be valid.
        Label values can be templatized by using variables. The only available
        variable names are the names of the labels in the PromQL result, including
        "name" and "value". "labels" may be empty. This field is intended to be
        used for organizing and identifying the AlertPolicy
    query : str, default is Undefined, optional
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    ruleGroup : str, default is Undefined, optional
        The rule group name of this alert in the corresponding Prometheus
        configuration file.
        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future. This field is optional.
    """


    alertRule?: str

    duration?: str

    evaluationInterval?: str

    labels?: {str:str}

    query?: str

    ruleGroup?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition threshold items0

    Attributes
    ----------
    aggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0AggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
        Structure is documented below.
    comparison : str, default is Undefined, optional
        The comparison to apply between the time
        series (indicated by filter and aggregation)
        and the threshold (indicated by
        threshold_value). The comparison is applied
        on each time series, with the time series on
        the left-hand side and the threshold on the
        right-hand side. Only COMPARISON_LT and
        COMPARISON_GT are supported currently.
        Possible values are: COMPARISON_GT, COMPARISON_GE, COMPARISON_LT, COMPARISON_LE, COMPARISON_EQ, COMPARISON_NE.
    denominatorAggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series selected by
        denominatorFilter as well as how to combine
        the retrieved time series together (such as
        when aggregating multiple streams on each
        resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).When
        computing ratios, the aggregations and
        denominator_aggregations fields must use the
        same alignment period and produce time
        series that have the same periodicity and
        labels.This field is similar to the one in
        the MetricService.ListTimeSeries request. It
        is advisable to use the ListTimeSeries
        method when debugging this field.
        Structure is documented below.
    denominatorFilter : str, default is Undefined, optional
        A filter that identifies a time series that
        should be used as the denominator of a ratio
        that will be compared with the threshold. If
        a denominator_filter is specified, the time
        series specified by the filter field will be
        used as the numerator.The filter is similar
        to the one that is specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving.
        Possible values are: EVALUATION_MISSING_DATA_INACTIVE, EVALUATION_MISSING_DATA_ACTIVE, EVALUATION_MISSING_DATA_NO_OP.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    forecastOptions : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0], default is Undefined, optional
        When this field is present, the MetricThreshold
        condition forecasts whether the time series is
        predicted to violate the threshold within the
        forecastHorizon. When this field is not set, the
        MetricThreshold tests the current value of the
        timeseries against the threshold.
        Structure is documented below.
    thresholdValue : float, default is Undefined, optional
        A value against which to compare the time
        series.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    aggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0AggregationsItems0]

    comparison?: str

    denominatorAggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0]

    denominatorFilter?: str

    duration?: str

    evaluationMissingData?: str

    $filter?: str

    forecastOptions?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0]

    thresholdValue?: float

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0AggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition threshold items0 aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition threshold items0 denominator aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition threshold items0 forecast options items0

    Attributes
    ----------
    forecastHorizon : str, default is Undefined, optional
        The length of time into the future to forecast
        whether a timeseries will violate the threshold.
        If the predicted value is found to violate the
        threshold, and the violation is observed in all
        forecasts made for the Configured duration,
        then the timeseries is considered to be failing.
    """


    forecastHorizon?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderConditionsItems0ConditionThresholdItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider conditions items0 condition threshold items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecForProviderDocumentationItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec for provider documentation items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the documentation, interpreted according to mimeType.
        The content may not exceed 8,192 Unicode characters and may not
        exceed more than 10,240 bytes when encoded in UTF-8 format,
        whichever is smaller.
    mimeType : str, default is Undefined, optional
        The format of the content field. Presently, only the value
        "text/markdown" is supported.
    subject : str, default is Undefined, optional
        The subject line of the notification. The subject line may not
        exceed 10,240 bytes. In notifications generated by this policy the contents
        of the subject line after variable expansion will be truncated to 255 bytes
        or shorter at the latest UTF-8 character boundary.
    """


    content?: str

    mimeType?: str

    subject?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alertStrategy : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0], default is Undefined, optional
        Control over how this alert policy's notification channels are notified.
        Structure is documented below.
    combiner : str, default is Undefined, optional
        How to combine the results of multiple conditions to
        determine if an incident should be opened.
        Possible values are: AND, OR, AND_WITH_MATCHING_RESOURCE.
    conditions : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0], default is Undefined, optional
        A list of conditions for the policy. The conditions are combined by
        AND or OR according to the combiner field. If the combined conditions
        evaluate to true, then an incident is created. A policy can have from
        one to six conditions.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A short name or phrase used to identify the policy in
        dashboards, notifications, and incidents. To avoid confusion, don't use
        the same display name for multiple policies in the same project. The
        name is limited to 512 Unicode characters.
    documentation : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderDocumentationItems0], default is Undefined, optional
        Documentation that is included with notifications and incidents related
        to this policy. Best practice is for the documentation to include information
        to help responders understand, mitigate, escalate, and correct the underlying
        problems detected by the alerting policy. Notification channels that have
        limited capacity might not show this documentation.
        Structure is documented below.
    enabled : bool, default is Undefined, optional
        Whether or not the policy is enabled. The default is true.
    notificationChannels : [str], default is Undefined, optional
        Identifies the notification channels to which notifications should be
        sent when incidents are opened or closed or when new violations occur
        on an already opened incident. Each element of this array corresponds
        to the name field in each of the NotificationChannel objects that are
        returned from the notificationChannels.list method. The syntax of the
        entries in this field is
        projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    severity : str, default is Undefined, optional
        The severity of an alert policy indicates how important incidents generated
        by that policy are. The severity level will be displayed on the Incident
        detail page and in notifications.
        Possible values are: CRITICAL, ERROR, WARNING.
    userLabels : {str:str}, default is Undefined, optional
        This field is intended to be used for organizing and identifying the AlertPolicy
        objects.The field can contain up to 64 entries. Each key and value is limited
        to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values
        can contain only lowercase letters, numerals, underscores, and dashes. Keys
        must begin with a letter.
    """


    alertStrategy?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0]

    combiner?: str

    conditions?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0]

    displayName?: str

    documentation?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderDocumentationItems0]

    enabled?: bool

    notificationChannels?: [str]

    project?: str

    severity?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider alert strategy items0

    Attributes
    ----------
    autoClose : str, default is Undefined, optional
        If an alert policy that was active has no data for this long, any open incidents will close.
    notificationChannelStrategy : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0NotificationChannelStrategyItems0], default is Undefined, optional
        Control over how the notification channels in notification_channels
        are notified when this alert fires, on a per-channel basis.
        Structure is documented below.
    notificationRateLimit : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0NotificationRateLimitItems0], default is Undefined, optional
        Required for alert policies with a LogMatch condition.
        This limit is not implemented for alert policies that are not log-based.
        Structure is documented below.
    """


    autoClose?: str

    notificationChannelStrategy?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0NotificationChannelStrategyItems0]

    notificationRateLimit?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0NotificationRateLimitItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0NotificationChannelStrategyItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider alert strategy items0 notification channel strategy items0

    Attributes
    ----------
    notificationChannelNames : [str], default is Undefined, optional
        The notification channels that these settings apply to. Each of these
        correspond to the name field in one of the NotificationChannel objects
        referenced in the notification_channels field of this AlertPolicy. The format is
        projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
    renotifyInterval : str, default is Undefined, optional
        The frequency at which to send reminder notifications for open incidents.
    """


    notificationChannelNames?: [str]

    renotifyInterval?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderAlertStrategyItems0NotificationRateLimitItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider alert strategy items0 notification rate limit items0

    Attributes
    ----------
    period : str, default is Undefined, optional
        Not more than one notification per period.
    """


    period?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0

    Attributes
    ----------
    conditionAbsent : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0], default is Undefined, optional
        A condition that checks that a time series
        continues to receive new data points.
        Structure is documented below.
    conditionMatchedLog : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMatchedLogItems0], default is Undefined, optional
        A condition that checks for log messages matching given constraints.
        If set, no other conditions can be present.
        Structure is documented below.
    conditionMonitoringQueryLanguage : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMonitoringQueryLanguageItems0], default is Undefined, optional
        A Monitoring Query Language query that outputs a boolean stream
        Structure is documented below.
    conditionPrometheusQueryLanguage : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionPrometheusQueryLanguageItems0], default is Undefined, optional
        A condition type that allows alert policies to be defined using
        Prometheus Query Language (PromQL).
        The PrometheusQueryLanguageCondition message contains information
        from a Prometheus alerting rule and its associated rule group.
        Structure is documented below.
    conditionThreshold : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0], default is Undefined, optional
        A condition that compares a time series against a
        threshold.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A short name or phrase used to identify the
        condition in dashboards, notifications, and
        incidents. To avoid confusion, don't use the same
        display name for multiple conditions in the same
        policy.
    """


    conditionAbsent?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0]

    conditionMatchedLog?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMatchedLogItems0]

    conditionMonitoringQueryLanguage?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMonitoringQueryLanguageItems0]

    conditionPrometheusQueryLanguage?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionPrometheusQueryLanguageItems0]

    conditionThreshold?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0]

    displayName?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition absent items0

    Attributes
    ----------
    aggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0AggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
        Structure is documented below.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    aggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0AggregationsItems0]

    duration?: str

    $filter?: str

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0AggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition absent items0 aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionAbsentItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition absent items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMatchedLogItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition matched log items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key to an extractor expression, which is used to
        extract the value for this label key. Each entry in this map is
        a specification for how data should be extracted from log entries that
        match filter. Each combination of extracted values is treated as
        a separate rule for the purposes of triggering notifications.
        Label keys and corresponding values can be used in notifications
        generated by this condition.
    """


    $filter?: str

    labelExtractors?: {str:str}


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMonitoringQueryLanguageItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition monitoring query language items0

    Attributes
    ----------
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving.
        Possible values are: EVALUATION_MISSING_DATA_INACTIVE, EVALUATION_MISSING_DATA_ACTIVE, EVALUATION_MISSING_DATA_NO_OP.
    query : str, default is Undefined, optional
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    duration?: str

    evaluationMissingData?: str

    query?: str

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition monitoring query language items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionPrometheusQueryLanguageItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition prometheus query language items0

    Attributes
    ----------
    alertRule : str, default is Undefined, optional
        The alerting rule name of this alert in the corresponding Prometheus
        configuration file.
        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future.
        This field is optional. If this field is not empty, then it must be a
        valid Prometheus label name.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationInterval : str, default is Undefined, optional
        How often this rule should be evaluated. Must be a positive multiple
        of 30 seconds or missing. The default value is 30 seconds. If this
        PrometheusQueryLanguageCondition was generated from a Prometheus
        alerting rule, then this value should be taken from the enclosing
        rule group.
    labels : {str:str}, default is Undefined, optional
        Labels to add to or overwrite in the PromQL query result. Label names
        must be valid.
        Label values can be templatized by using variables. The only available
        variable names are the names of the labels in the PromQL result, including
        "name" and "value". "labels" may be empty. This field is intended to be
        used for organizing and identifying the AlertPolicy
    query : str, default is Undefined, optional
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    ruleGroup : str, default is Undefined, optional
        The rule group name of this alert in the corresponding Prometheus
        configuration file.
        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future. This field is optional.
    """


    alertRule?: str

    duration?: str

    evaluationInterval?: str

    labels?: {str:str}

    query?: str

    ruleGroup?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition threshold items0

    Attributes
    ----------
    aggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0AggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
        Structure is documented below.
    comparison : str, default is Undefined, optional
        The comparison to apply between the time
        series (indicated by filter and aggregation)
        and the threshold (indicated by
        threshold_value). The comparison is applied
        on each time series, with the time series on
        the left-hand side and the threshold on the
        right-hand side. Only COMPARISON_LT and
        COMPARISON_GT are supported currently.
        Possible values are: COMPARISON_GT, COMPARISON_GE, COMPARISON_LT, COMPARISON_LE, COMPARISON_EQ, COMPARISON_NE.
    denominatorAggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series selected by
        denominatorFilter as well as how to combine
        the retrieved time series together (such as
        when aggregating multiple streams on each
        resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).When
        computing ratios, the aggregations and
        denominator_aggregations fields must use the
        same alignment period and produce time
        series that have the same periodicity and
        labels.This field is similar to the one in
        the MetricService.ListTimeSeries request. It
        is advisable to use the ListTimeSeries
        method when debugging this field.
        Structure is documented below.
    denominatorFilter : str, default is Undefined, optional
        A filter that identifies a time series that
        should be used as the denominator of a ratio
        that will be compared with the threshold. If
        a denominator_filter is specified, the time
        series specified by the filter field will be
        used as the numerator.The filter is similar
        to the one that is specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving.
        Possible values are: EVALUATION_MISSING_DATA_INACTIVE, EVALUATION_MISSING_DATA_ACTIVE, EVALUATION_MISSING_DATA_NO_OP.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    forecastOptions : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0], default is Undefined, optional
        When this field is present, the MetricThreshold
        condition forecasts whether the time series is
        predicted to violate the threshold within the
        forecastHorizon. When this field is not set, the
        MetricThreshold tests the current value of the
        timeseries against the threshold.
        Structure is documented below.
    thresholdValue : float, default is Undefined, optional
        A value against which to compare the time
        series.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    aggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0AggregationsItems0]

    comparison?: str

    denominatorAggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0]

    denominatorFilter?: str

    duration?: str

    evaluationMissingData?: str

    $filter?: str

    forecastOptions?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0]

    thresholdValue?: float

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0AggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition threshold items0 aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition threshold items0 denominator aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition threshold items0 forecast options items0

    Attributes
    ----------
    forecastHorizon : str, default is Undefined, optional
        The length of time into the future to forecast
        whether a timeseries will violate the threshold.
        If the predicted value is found to violate the
        threshold, and the violation is observed in all
        forecasts made for the Configured duration,
        then the timeseries is considered to be failing.
    """


    forecastHorizon?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderConditionsItems0ConditionThresholdItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider conditions items0 condition threshold items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecInitProviderDocumentationItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy spec init provider documentation items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the documentation, interpreted according to mimeType.
        The content may not exceed 8,192 Unicode characters and may not
        exceed more than 10,240 bytes when encoded in UTF-8 format,
        whichever is smaller.
    mimeType : str, default is Undefined, optional
        The format of the content field. Presently, only the value
        "text/markdown" is supported.
    subject : str, default is Undefined, optional
        The subject line of the notification. The subject line may not
        exceed 10,240 bytes. In notifications generated by this policy the contents
        of the subject line after variable expansion will be truncated to 255 bytes
        or shorter at the latest UTF-8 character boundary.
    """


    content?: str

    mimeType?: str

    subject?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1AlertPolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecProviderConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToConfigRef

    metadata?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToMetadata

    name: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatus:
    """
    AlertPolicyStatus defines the observed state of AlertPolicy.

    Attributes
    ----------
    atProvider : MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProvider

    conditions?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusConditionsItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProvider:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider

    Attributes
    ----------
    alertStrategy : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0], default is Undefined, optional
        Control over how this alert policy's notification channels are notified.
        Structure is documented below.
    combiner : str, default is Undefined, optional
        How to combine the results of multiple conditions to
        determine if an incident should be opened.
        Possible values are: AND, OR, AND_WITH_MATCHING_RESOURCE.
    conditions : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0], default is Undefined, optional
        A list of conditions for the policy. The conditions are combined by
        AND or OR according to the combiner field. If the combined conditions
        evaluate to true, then an incident is created. A policy can have from
        one to six conditions.
        Structure is documented below.
    creationRecord : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderCreationRecordItems0], default is Undefined, optional
        A read-only record of the creation of the alerting policy.
        If provided in a call to create or update, this field will
        be ignored.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A short name or phrase used to identify the policy in
        dashboards, notifications, and incidents. To avoid confusion, don't use
        the same display name for multiple policies in the same project. The
        name is limited to 512 Unicode characters.
    documentation : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderDocumentationItems0], default is Undefined, optional
        Documentation that is included with notifications and incidents related
        to this policy. Best practice is for the documentation to include information
        to help responders understand, mitigate, escalate, and correct the underlying
        problems detected by the alerting policy. Notification channels that have
        limited capacity might not show this documentation.
        Structure is documented below.
    enabled : bool, default is Undefined, optional
        Whether or not the policy is enabled. The default is true.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    name : str, default is Undefined, optional
        The unique resource name for this policy.
        Its syntax is: projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID]
    notificationChannels : [str], default is Undefined, optional
        Identifies the notification channels to which notifications should be
        sent when incidents are opened or closed or when new violations occur
        on an already opened incident. Each element of this array corresponds
        to the name field in each of the NotificationChannel objects that are
        returned from the notificationChannels.list method. The syntax of the
        entries in this field is
        projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    severity : str, default is Undefined, optional
        The severity of an alert policy indicates how important incidents generated
        by that policy are. The severity level will be displayed on the Incident
        detail page and in notifications.
        Possible values are: CRITICAL, ERROR, WARNING.
    userLabels : {str:str}, default is Undefined, optional
        This field is intended to be used for organizing and identifying the AlertPolicy
        objects.The field can contain up to 64 entries. Each key and value is limited
        to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values
        can contain only lowercase letters, numerals, underscores, and dashes. Keys
        must begin with a letter.
    """


    alertStrategy?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0]

    combiner?: str

    conditions?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0]

    creationRecord?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderCreationRecordItems0]

    displayName?: str

    documentation?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderDocumentationItems0]

    enabled?: bool

    id?: str

    name?: str

    notificationChannels?: [str]

    project?: str

    severity?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider alert strategy items0

    Attributes
    ----------
    autoClose : str, default is Undefined, optional
        If an alert policy that was active has no data for this long, any open incidents will close.
    notificationChannelStrategy : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0NotificationChannelStrategyItems0], default is Undefined, optional
        Control over how the notification channels in notification_channels
        are notified when this alert fires, on a per-channel basis.
        Structure is documented below.
    notificationRateLimit : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0NotificationRateLimitItems0], default is Undefined, optional
        Required for alert policies with a LogMatch condition.
        This limit is not implemented for alert policies that are not log-based.
        Structure is documented below.
    """


    autoClose?: str

    notificationChannelStrategy?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0NotificationChannelStrategyItems0]

    notificationRateLimit?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0NotificationRateLimitItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0NotificationChannelStrategyItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider alert strategy items0 notification channel strategy items0

    Attributes
    ----------
    notificationChannelNames : [str], default is Undefined, optional
        The notification channels that these settings apply to. Each of these
        correspond to the name field in one of the NotificationChannel objects
        referenced in the notification_channels field of this AlertPolicy. The format is
        projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
    renotifyInterval : str, default is Undefined, optional
        The frequency at which to send reminder notifications for open incidents.
    """


    notificationChannelNames?: [str]

    renotifyInterval?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderAlertStrategyItems0NotificationRateLimitItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider alert strategy items0 notification rate limit items0

    Attributes
    ----------
    period : str, default is Undefined, optional
        Not more than one notification per period.
    """


    period?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0

    Attributes
    ----------
    conditionAbsent : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0], default is Undefined, optional
        A condition that checks that a time series
        continues to receive new data points.
        Structure is documented below.
    conditionMatchedLog : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMatchedLogItems0], default is Undefined, optional
        A condition that checks for log messages matching given constraints.
        If set, no other conditions can be present.
        Structure is documented below.
    conditionMonitoringQueryLanguage : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMonitoringQueryLanguageItems0], default is Undefined, optional
        A Monitoring Query Language query that outputs a boolean stream
        Structure is documented below.
    conditionPrometheusQueryLanguage : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionPrometheusQueryLanguageItems0], default is Undefined, optional
        A condition type that allows alert policies to be defined using
        Prometheus Query Language (PromQL).
        The PrometheusQueryLanguageCondition message contains information
        from a Prometheus alerting rule and its associated rule group.
        Structure is documented below.
    conditionThreshold : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0], default is Undefined, optional
        A condition that compares a time series against a
        threshold.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A short name or phrase used to identify the
        condition in dashboards, notifications, and
        incidents. To avoid confusion, don't use the same
        display name for multiple conditions in the same
        policy.
    name : str, default is Undefined, optional
        (Output)
        The unique resource name for this condition.
        Its syntax is:
        projects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]
        [CONDITION_ID] is assigned by Stackdriver Monitoring when
        the condition is created as part of a new or updated alerting
        policy.
    """


    conditionAbsent?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0]

    conditionMatchedLog?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMatchedLogItems0]

    conditionMonitoringQueryLanguage?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMonitoringQueryLanguageItems0]

    conditionPrometheusQueryLanguage?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionPrometheusQueryLanguageItems0]

    conditionThreshold?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0]

    displayName?: str

    name?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition absent items0

    Attributes
    ----------
    aggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0AggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
        Structure is documented below.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    aggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0AggregationsItems0]

    duration?: str

    $filter?: str

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0AggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition absent items0 aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionAbsentItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition absent items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMatchedLogItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition matched log items0

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key to an extractor expression, which is used to
        extract the value for this label key. Each entry in this map is
        a specification for how data should be extracted from log entries that
        match filter. Each combination of extracted values is treated as
        a separate rule for the purposes of triggering notifications.
        Label keys and corresponding values can be used in notifications
        generated by this condition.
    """


    $filter?: str

    labelExtractors?: {str:str}


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMonitoringQueryLanguageItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition monitoring query language items0

    Attributes
    ----------
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving.
        Possible values are: EVALUATION_MISSING_DATA_INACTIVE, EVALUATION_MISSING_DATA_ACTIVE, EVALUATION_MISSING_DATA_NO_OP.
    query : str, default is Undefined, optional
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    duration?: str

    evaluationMissingData?: str

    query?: str

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionMonitoringQueryLanguageItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition monitoring query language items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionPrometheusQueryLanguageItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition prometheus query language items0

    Attributes
    ----------
    alertRule : str, default is Undefined, optional
        The alerting rule name of this alert in the corresponding Prometheus
        configuration file.
        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future.
        This field is optional. If this field is not empty, then it must be a
        valid Prometheus label name.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationInterval : str, default is Undefined, optional
        How often this rule should be evaluated. Must be a positive multiple
        of 30 seconds or missing. The default value is 30 seconds. If this
        PrometheusQueryLanguageCondition was generated from a Prometheus
        alerting rule, then this value should be taken from the enclosing
        rule group.
    labels : {str:str}, default is Undefined, optional
        Labels to add to or overwrite in the PromQL query result. Label names
        must be valid.
        Label values can be templatized by using variables. The only available
        variable names are the names of the labels in the PromQL result, including
        "name" and "value". "labels" may be empty. This field is intended to be
        used for organizing and identifying the AlertPolicy
    query : str, default is Undefined, optional
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    ruleGroup : str, default is Undefined, optional
        The rule group name of this alert in the corresponding Prometheus
        configuration file.
        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future. This field is optional.
    """


    alertRule?: str

    duration?: str

    evaluationInterval?: str

    labels?: {str:str}

    query?: str

    ruleGroup?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition threshold items0

    Attributes
    ----------
    aggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0AggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
        Structure is documented below.
    comparison : str, default is Undefined, optional
        The comparison to apply between the time
        series (indicated by filter and aggregation)
        and the threshold (indicated by
        threshold_value). The comparison is applied
        on each time series, with the time series on
        the left-hand side and the threshold on the
        right-hand side. Only COMPARISON_LT and
        COMPARISON_GT are supported currently.
        Possible values are: COMPARISON_GT, COMPARISON_GE, COMPARISON_LT, COMPARISON_LE, COMPARISON_EQ, COMPARISON_NE.
    denominatorAggregations : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series selected by
        denominatorFilter as well as how to combine
        the retrieved time series together (such as
        when aggregating multiple streams on each
        resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).When
        computing ratios, the aggregations and
        denominator_aggregations fields must use the
        same alignment period and produce time
        series that have the same periodicity and
        labels.This field is similar to the one in
        the MetricService.ListTimeSeries request. It
        is advisable to use the ListTimeSeries
        method when debugging this field.
        Structure is documented below.
    denominatorFilter : str, default is Undefined, optional
        A filter that identifies a time series that
        should be used as the denominator of a ratio
        that will be compared with the threshold. If
        a denominator_filter is specified, the time
        series specified by the filter field will be
        used as the numerator.The filter is similar
        to the one that is specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    duration : str, default is Undefined, optional
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving.
        Possible values are: EVALUATION_MISSING_DATA_INACTIVE, EVALUATION_MISSING_DATA_ACTIVE, EVALUATION_MISSING_DATA_NO_OP.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    forecastOptions : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0], default is Undefined, optional
        When this field is present, the MetricThreshold
        condition forecasts whether the time series is
        predicted to violate the threshold within the
        forecastHorizon. When this field is not set, the
        MetricThreshold tests the current value of the
        timeseries against the threshold.
        Structure is documented below.
    thresholdValue : float, default is Undefined, optional
        A value against which to compare the time
        series.
    trigger : [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0TriggerItems0], default is Undefined, optional
        The number/percent of time series for which
        the comparison must hold in order for the
        condition to trigger. If unspecified, then
        the condition will trigger if the comparison
        is true for any of the time series that have
        been identified by filter and aggregations,
        or by the ratio, if denominator_filter and
        denominator_aggregations are specified.
        Structure is documented below.
    """


    aggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0AggregationsItems0]

    comparison?: str

    denominatorAggregations?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0]

    denominatorFilter?: str

    duration?: str

    evaluationMissingData?: str

    $filter?: str

    forecastOptions?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0]

    thresholdValue?: float

    trigger?: [MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0TriggerItems0]


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0AggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition threshold items0 aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0DenominatorAggregationsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition threshold items0 denominator aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: REDUCE_NONE, REDUCE_MEAN, REDUCE_MIN, REDUCE_MAX, REDUCE_SUM, REDUCE_STDDEV, REDUCE_COUNT, REDUCE_COUNT_TRUE, REDUCE_COUNT_FALSE, REDUCE_FRACTION_TRUE, REDUCE_PERCENTILE_99, REDUCE_PERCENTILE_95, REDUCE_PERCENTILE_50, REDUCE_PERCENTILE_05.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned.
        Possible values are: ALIGN_NONE, ALIGN_DELTA, ALIGN_RATE, ALIGN_INTERPOLATE, ALIGN_NEXT_OLDER, ALIGN_MIN, ALIGN_MAX, ALIGN_MEAN, ALIGN_COUNT, ALIGN_SUM, ALIGN_STDDEV, ALIGN_COUNT_TRUE, ALIGN_COUNT_FALSE, ALIGN_FRACTION_TRUE, ALIGN_PERCENTILE_99, ALIGN_PERCENTILE_95, ALIGN_PERCENTILE_50, ALIGN_PERCENTILE_05, ALIGN_PERCENT_CHANGE.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0ForecastOptionsItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition threshold items0 forecast options items0

    Attributes
    ----------
    forecastHorizon : str, default is Undefined, optional
        The length of time into the future to forecast
        whether a timeseries will violate the threshold.
        If the predicted value is found to violate the
        threshold, and the violation is observed in all
        forecasts made for the Configured duration,
        then the timeseries is considered to be failing.
    """


    forecastHorizon?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderConditionsItems0ConditionThresholdItems0TriggerItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider conditions items0 condition threshold items0 trigger items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: float

    percent?: float


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderCreationRecordItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider creation record items0

    Attributes
    ----------
    mutateTime : str, default is Undefined, optional
        (Output)
        When the change occurred.
    mutatedBy : str, default is Undefined, optional
        (Output)
        The email address of the user making the change.
    """


    mutateTime?: str

    mutatedBy?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusAtProviderDocumentationItems0:
    """
    monitoring gcp upbound io v1beta1 alert policy status at provider documentation items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the documentation, interpreted according to mimeType.
        The content may not exceed 8,192 Unicode characters and may not
        exceed more than 10,240 bytes when encoded in UTF-8 format,
        whichever is smaller.
    mimeType : str, default is Undefined, optional
        The format of the content field. Presently, only the value
        "text/markdown" is supported.
    subject : str, default is Undefined, optional
        The subject line of the notification. The subject line may not
        exceed 10,240 bytes. In notifications generated by this policy the contents
        of the subject line after variable expansion will be truncated to 255 bytes
        or shorter at the latest UTF-8 character boundary.
    """


    content?: str

    mimeType?: str

    subject?: str


schema MonitoringGcpUpboundIoV1beta1AlertPolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


