"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Policy:
    """
    Policy is the Schema for the Policys API. A policy for container image binary authorization.

    Attributes
    ----------
    apiVersion : str, default is "binaryauthorization.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Policy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BinaryauthorizationGcpUpboundIoV1beta1PolicySpec, default is Undefined, required
        spec
    status : BinaryauthorizationGcpUpboundIoV1beta1PolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "binaryauthorization.gcp.upbound.io/v1beta1" = "binaryauthorization.gcp.upbound.io/v1beta1"

    kind: "Policy" = "Policy"

    metadata?: v1.ObjectMeta

    spec: BinaryauthorizationGcpUpboundIoV1beta1PolicySpec

    status?: BinaryauthorizationGcpUpboundIoV1beta1PolicyStatus


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpec:
    """
    PolicySpec defines the desired state of Policy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProvider

    initProvider?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecProviderConfigRef

    publishConnectionDetailsTo?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecWriteConnectionSecretToRef


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProvider:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec for provider

    Attributes
    ----------
    admissionWhitelistPatterns : [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderAdmissionWhitelistPatternsItems0], default is Undefined, optional
        A whitelist of image patterns to exclude from admission rules. If an
        image's name matches a whitelist pattern, the image's admission
        requests will always be permitted regardless of your admission rules.
        Structure is documented below.
    clusterAdmissionRules : [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderClusterAdmissionRulesItems0], default is Undefined, optional
        Per-cluster admission rules. An admission rule specifies either that
        all container images used in a pod creation request must be attested
        to by one or more attestors, that all pod creations will be allowed,
        or that all pod creations will be denied. There can be at most one
        admission rule per cluster spec.
    defaultAdmissionRule : [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderDefaultAdmissionRuleItems0], default is Undefined, optional
        Default admission rule for a cluster without a per-cluster admission
        rule.
        Structure is documented below.
    description : str, default is Undefined, optional
        A descriptive comment.
    globalPolicyEvaluationMode : str, default is Undefined, optional
        Controls the evaluation of a Google-maintained global admission policy
        for common system-level images. Images not covered by the global
        policy will be subject to the project admission policy.
        Possible values are: ENABLE, DISABLE.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    admissionWhitelistPatterns?: [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderAdmissionWhitelistPatternsItems0]

    clusterAdmissionRules?: [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderClusterAdmissionRulesItems0]

    defaultAdmissionRule?: [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderDefaultAdmissionRuleItems0]

    description?: str

    globalPolicyEvaluationMode?: str

    project?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderAdmissionWhitelistPatternsItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec for provider admission whitelist patterns items0

    Attributes
    ----------
    namePattern : str, default is Undefined, optional
        An image name pattern to whitelist, in the form
        registry/path/to/image. This supports a trailing * as a
        wildcard, but this is allowed only in text after the registry/
        part.
    """


    namePattern?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderClusterAdmissionRulesItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec for provider cluster admission rules items0

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    enforcementMode : str, default is Undefined, optional
        The action when a pod creation is denied by the admission rule.
        Possible values are: ENFORCED_BLOCK_AND_AUDIT_LOG, DRYRUN_AUDIT_LOG_ONLY.
    evaluationMode : str, default is Undefined, optional
        How this admission rule will be evaluated.
        Possible values are: ALWAYS_ALLOW, REQUIRE_ATTESTATION, ALWAYS_DENY.
    requireAttestationsBy : [str], default is Undefined, optional
        The resource names of the attestors that must attest to a
        container image. If the attestor is in a different project from the
        policy, it should be specified in the format projects/*/attestors/*.
        Each attestor must exist before a policy can reference it. To add an
        attestor to a policy the principal issuing the policy change
        request must be able to read the attestor resource.
        Note: this field must be non-empty when the evaluation_mode field
        specifies REQUIRE_ATTESTATION, otherwise it must be empty.
    """


    cluster?: str

    enforcementMode?: str

    evaluationMode?: str

    requireAttestationsBy?: [str]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecForProviderDefaultAdmissionRuleItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec for provider default admission rule items0

    Attributes
    ----------
    enforcementMode : str, default is Undefined, optional
        The action when a pod creation is denied by the admission rule.
        Possible values are: ENFORCED_BLOCK_AND_AUDIT_LOG, DRYRUN_AUDIT_LOG_ONLY.
    evaluationMode : str, default is Undefined, optional
        How this admission rule will be evaluated.
        Possible values are: ALWAYS_ALLOW, REQUIRE_ATTESTATION, ALWAYS_DENY.
    requireAttestationsBy : [str], default is Undefined, optional
        The resource names of the attestors that must attest to a
        container image. If the attestor is in a different project from the
        policy, it should be specified in the format projects/*/attestors/*.
        Each attestor must exist before a policy can reference it. To add an
        attestor to a policy the principal issuing the policy change
        request must be able to read the attestor resource.
        Note: this field must be non-empty when the evaluation_mode field
        specifies REQUIRE_ATTESTATION, otherwise it must be empty.
    """


    enforcementMode?: str

    evaluationMode?: str

    requireAttestationsBy?: [str]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    admissionWhitelistPatterns : [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderAdmissionWhitelistPatternsItems0], default is Undefined, optional
        A whitelist of image patterns to exclude from admission rules. If an
        image's name matches a whitelist pattern, the image's admission
        requests will always be permitted regardless of your admission rules.
        Structure is documented below.
    clusterAdmissionRules : [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderClusterAdmissionRulesItems0], default is Undefined, optional
        Per-cluster admission rules. An admission rule specifies either that
        all container images used in a pod creation request must be attested
        to by one or more attestors, that all pod creations will be allowed,
        or that all pod creations will be denied. There can be at most one
        admission rule per cluster spec.
    defaultAdmissionRule : [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderDefaultAdmissionRuleItems0], default is Undefined, optional
        Default admission rule for a cluster without a per-cluster admission
        rule.
        Structure is documented below.
    description : str, default is Undefined, optional
        A descriptive comment.
    globalPolicyEvaluationMode : str, default is Undefined, optional
        Controls the evaluation of a Google-maintained global admission policy
        for common system-level images. Images not covered by the global
        policy will be subject to the project admission policy.
        Possible values are: ENABLE, DISABLE.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    admissionWhitelistPatterns?: [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderAdmissionWhitelistPatternsItems0]

    clusterAdmissionRules?: [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderClusterAdmissionRulesItems0]

    defaultAdmissionRule?: [BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderDefaultAdmissionRuleItems0]

    description?: str

    globalPolicyEvaluationMode?: str

    project?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderAdmissionWhitelistPatternsItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec init provider admission whitelist patterns items0

    Attributes
    ----------
    namePattern : str, default is Undefined, optional
        An image name pattern to whitelist, in the form
        registry/path/to/image. This supports a trailing * as a
        wildcard, but this is allowed only in text after the registry/
        part.
    """


    namePattern?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderClusterAdmissionRulesItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec init provider cluster admission rules items0

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    enforcementMode : str, default is Undefined, optional
        The action when a pod creation is denied by the admission rule.
        Possible values are: ENFORCED_BLOCK_AND_AUDIT_LOG, DRYRUN_AUDIT_LOG_ONLY.
    evaluationMode : str, default is Undefined, optional
        How this admission rule will be evaluated.
        Possible values are: ALWAYS_ALLOW, REQUIRE_ATTESTATION, ALWAYS_DENY.
    requireAttestationsBy : [str], default is Undefined, optional
        The resource names of the attestors that must attest to a
        container image. If the attestor is in a different project from the
        policy, it should be specified in the format projects/*/attestors/*.
        Each attestor must exist before a policy can reference it. To add an
        attestor to a policy the principal issuing the policy change
        request must be able to read the attestor resource.
        Note: this field must be non-empty when the evaluation_mode field
        specifies REQUIRE_ATTESTATION, otherwise it must be empty.
    """


    cluster?: str

    enforcementMode?: str

    evaluationMode?: str

    requireAttestationsBy?: [str]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecInitProviderDefaultAdmissionRuleItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy spec init provider default admission rule items0

    Attributes
    ----------
    enforcementMode : str, default is Undefined, optional
        The action when a pod creation is denied by the admission rule.
        Possible values are: ENFORCED_BLOCK_AND_AUDIT_LOG, DRYRUN_AUDIT_LOG_ONLY.
    evaluationMode : str, default is Undefined, optional
        How this admission rule will be evaluated.
        Possible values are: ALWAYS_ALLOW, REQUIRE_ATTESTATION, ALWAYS_DENY.
    requireAttestationsBy : [str], default is Undefined, optional
        The resource names of the attestors that must attest to a
        container image. If the attestor is in a different project from the
        policy, it should be specified in the format projects/*/attestors/*.
        Each attestor must exist before a policy can reference it. To add an
        attestor to a policy the principal issuing the policy change
        request must be able to read the attestor resource.
        Note: this field must be non-empty when the evaluation_mode field
        specifies REQUIRE_ATTESTATION, otherwise it must be empty.
    """


    enforcementMode?: str

    evaluationMode?: str

    requireAttestationsBy?: [str]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecProviderConfigRefPolicy


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToConfigRef

    metadata?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToMetadata

    name: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToConfigRefPolicy


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicyStatus:
    """
    PolicyStatus defines the observed state of Policy.

    Attributes
    ----------
    atProvider : BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProvider

    conditions?: [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusConditionsItems0]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProvider:
    """
    binaryauthorization gcp upbound io v1beta1 policy status at provider

    Attributes
    ----------
    admissionWhitelistPatterns : [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderAdmissionWhitelistPatternsItems0], default is Undefined, optional
        A whitelist of image patterns to exclude from admission rules. If an
        image's name matches a whitelist pattern, the image's admission
        requests will always be permitted regardless of your admission rules.
        Structure is documented below.
    clusterAdmissionRules : [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderClusterAdmissionRulesItems0], default is Undefined, optional
        Per-cluster admission rules. An admission rule specifies either that
        all container images used in a pod creation request must be attested
        to by one or more attestors, that all pod creations will be allowed,
        or that all pod creations will be denied. There can be at most one
        admission rule per cluster spec.
    defaultAdmissionRule : [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderDefaultAdmissionRuleItems0], default is Undefined, optional
        Default admission rule for a cluster without a per-cluster admission
        rule.
        Structure is documented below.
    description : str, default is Undefined, optional
        A descriptive comment.
    globalPolicyEvaluationMode : str, default is Undefined, optional
        Controls the evaluation of a Google-maintained global admission policy
        for common system-level images. Images not covered by the global
        policy will be subject to the project admission policy.
        Possible values are: ENABLE, DISABLE.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    admissionWhitelistPatterns?: [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderAdmissionWhitelistPatternsItems0]

    clusterAdmissionRules?: [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderClusterAdmissionRulesItems0]

    defaultAdmissionRule?: [BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderDefaultAdmissionRuleItems0]

    description?: str

    globalPolicyEvaluationMode?: str

    id?: str

    project?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderAdmissionWhitelistPatternsItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy status at provider admission whitelist patterns items0

    Attributes
    ----------
    namePattern : str, default is Undefined, optional
        An image name pattern to whitelist, in the form
        registry/path/to/image. This supports a trailing * as a
        wildcard, but this is allowed only in text after the registry/
        part.
    """


    namePattern?: str


schema BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderClusterAdmissionRulesItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy status at provider cluster admission rules items0

    Attributes
    ----------
    cluster : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    enforcementMode : str, default is Undefined, optional
        The action when a pod creation is denied by the admission rule.
        Possible values are: ENFORCED_BLOCK_AND_AUDIT_LOG, DRYRUN_AUDIT_LOG_ONLY.
    evaluationMode : str, default is Undefined, optional
        How this admission rule will be evaluated.
        Possible values are: ALWAYS_ALLOW, REQUIRE_ATTESTATION, ALWAYS_DENY.
    requireAttestationsBy : [str], default is Undefined, optional
        The resource names of the attestors that must attest to a
        container image. If the attestor is in a different project from the
        policy, it should be specified in the format projects/*/attestors/*.
        Each attestor must exist before a policy can reference it. To add an
        attestor to a policy the principal issuing the policy change
        request must be able to read the attestor resource.
        Note: this field must be non-empty when the evaluation_mode field
        specifies REQUIRE_ATTESTATION, otherwise it must be empty.
    """


    cluster?: str

    enforcementMode?: str

    evaluationMode?: str

    requireAttestationsBy?: [str]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusAtProviderDefaultAdmissionRuleItems0:
    """
    binaryauthorization gcp upbound io v1beta1 policy status at provider default admission rule items0

    Attributes
    ----------
    enforcementMode : str, default is Undefined, optional
        The action when a pod creation is denied by the admission rule.
        Possible values are: ENFORCED_BLOCK_AND_AUDIT_LOG, DRYRUN_AUDIT_LOG_ONLY.
    evaluationMode : str, default is Undefined, optional
        How this admission rule will be evaluated.
        Possible values are: ALWAYS_ALLOW, REQUIRE_ATTESTATION, ALWAYS_DENY.
    requireAttestationsBy : [str], default is Undefined, optional
        The resource names of the attestors that must attest to a
        container image. If the attestor is in a different project from the
        policy, it should be specified in the format projects/*/attestors/*.
        Each attestor must exist before a policy can reference it. To add an
        attestor to a policy the principal issuing the policy change
        request must be able to read the attestor resource.
        Note: this field must be non-empty when the evaluation_mode field
        specifies REQUIRE_ATTESTATION, otherwise it must be empty.
    """


    enforcementMode?: str

    evaluationMode?: str

    requireAttestationsBy?: [str]


schema BinaryauthorizationGcpUpboundIoV1beta1PolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


