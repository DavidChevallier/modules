"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Group:
    """
    Group is the Schema for the Groups API. The description of a dynamic collection of monitored resources.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Group", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGcpUpboundIoV1beta1GroupSpec, default is Undefined, required
        spec
    status : MonitoringGcpUpboundIoV1beta1GroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.gcp.upbound.io/v1beta1" = "monitoring.gcp.upbound.io/v1beta1"

    kind: "Group" = "Group"

    metadata?: v1.ObjectMeta

    spec: MonitoringGcpUpboundIoV1beta1GroupSpec

    status?: MonitoringGcpUpboundIoV1beta1GroupStatus


schema MonitoringGcpUpboundIoV1beta1GroupSpec:
    """
    GroupSpec defines the desired state of Group

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MonitoringGcpUpboundIoV1beta1GroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : MonitoringGcpUpboundIoV1beta1GroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MonitoringGcpUpboundIoV1beta1GroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MonitoringGcpUpboundIoV1beta1GroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MonitoringGcpUpboundIoV1beta1GroupSpecForProvider

    initProvider?: MonitoringGcpUpboundIoV1beta1GroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MonitoringGcpUpboundIoV1beta1GroupSpecProviderConfigRef

    publishConnectionDetailsTo?: MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MonitoringGcpUpboundIoV1beta1GroupSpecWriteConnectionSecretToRef


schema MonitoringGcpUpboundIoV1beta1GroupSpecForProvider:
    """
    monitoring gcp upbound io v1beta1 group spec for provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        A user-assigned name for this group, used only for display
        purposes.
    $filter : str, default is Undefined, optional
        The filter used to determine which monitored resources
        belong to this group.
    isCluster : bool, default is Undefined, optional
        If true, the members of this group are considered to be a
        cluster. The system can perform additional analysis on
        groups that are clusters.
    parentName : str, default is Undefined, optional
        The name of the group's parent, if it has one. The format is
        "projects/{project_id_or_number}/groups/{group_id}". For
        groups with no parent, parentName is the empty string, "".
    parentNameRef : MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameRef, default is Undefined, optional
        parent name ref
    parentNameSelector : MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameSelector, default is Undefined, optional
        parent name selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    displayName?: str

    $filter?: str

    isCluster?: bool

    parentName?: str

    parentNameRef?: MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameRef

    parentNameSelector?: MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameSelector

    project?: str


schema MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameRef:
    """
    Reference to a Group in monitoring to populate parentName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameRefPolicy


schema MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameSelector:
    """
    Selector for a Group in monitoring to populate parentName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1GroupSpecForProviderParentNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1GroupSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        A user-assigned name for this group, used only for display
        purposes.
    $filter : str, default is Undefined, optional
        The filter used to determine which monitored resources
        belong to this group.
    isCluster : bool, default is Undefined, optional
        If true, the members of this group are considered to be a
        cluster. The system can perform additional analysis on
        groups that are clusters.
    parentName : str, default is Undefined, optional
        The name of the group's parent, if it has one. The format is
        "projects/{project_id_or_number}/groups/{group_id}". For
        groups with no parent, parentName is the empty string, "".
    parentNameRef : MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameRef, default is Undefined, optional
        parent name ref
    parentNameSelector : MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameSelector, default is Undefined, optional
        parent name selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    displayName?: str

    $filter?: str

    isCluster?: bool

    parentName?: str

    parentNameRef?: MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameRef

    parentNameSelector?: MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameSelector

    project?: str


schema MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameRef:
    """
    Reference to a Group in monitoring to populate parentName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameRefPolicy


schema MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameSelector:
    """
    Selector for a Group in monitoring to populate parentName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1GroupSpecInitProviderParentNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1GroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1GroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1GroupSpecProviderConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1GroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToConfigRef

    metadata?: MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToMetadata

    name: str


schema MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1GroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1GroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1GroupStatus:
    """
    GroupStatus defines the observed state of Group.

    Attributes
    ----------
    atProvider : MonitoringGcpUpboundIoV1beta1GroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MonitoringGcpUpboundIoV1beta1GroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MonitoringGcpUpboundIoV1beta1GroupStatusAtProvider

    conditions?: [MonitoringGcpUpboundIoV1beta1GroupStatusConditionsItems0]


schema MonitoringGcpUpboundIoV1beta1GroupStatusAtProvider:
    """
    monitoring gcp upbound io v1beta1 group status at provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        A user-assigned name for this group, used only for display
        purposes.
    $filter : str, default is Undefined, optional
        The filter used to determine which monitored resources
        belong to this group.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    isCluster : bool, default is Undefined, optional
        If true, the members of this group are considered to be a
        cluster. The system can perform additional analysis on
        groups that are clusters.
    name : str, default is Undefined, optional
        A unique identifier for this group. The format is
        "projects/{project_id_or_number}/groups/{group_id}".
    parentName : str, default is Undefined, optional
        The name of the group's parent, if it has one. The format is
        "projects/{project_id_or_number}/groups/{group_id}". For
        groups with no parent, parentName is the empty string, "".
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    displayName?: str

    $filter?: str

    id?: str

    isCluster?: bool

    name?: str

    parentName?: str

    project?: str


schema MonitoringGcpUpboundIoV1beta1GroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


