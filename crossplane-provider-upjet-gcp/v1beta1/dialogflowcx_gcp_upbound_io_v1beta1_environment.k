"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Environment:
    """
    Environment is the Schema for the Environments API. Represents an environment for an agent.

    Attributes
    ----------
    apiVersion : str, default is "dialogflowcx.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Environment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpec, default is Undefined, required
        spec
    status : DialogflowcxGcpUpboundIoV1beta1EnvironmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "dialogflowcx.gcp.upbound.io/v1beta1" = "dialogflowcx.gcp.upbound.io/v1beta1"

    kind: "Environment" = "Environment"

    metadata?: v1.ObjectMeta

    spec: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpec

    status?: DialogflowcxGcpUpboundIoV1beta1EnvironmentStatus


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpec:
    """
    EnvironmentSpec defines the desired state of Environment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProvider

    initProvider?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRef

    publishConnectionDetailsTo?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProvider:
    """
    dialogflowcx gcp upbound io v1beta1 environment spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
    displayName : str, default is Undefined, optional
        The human-readable name of the environment (unique in an agent). Limit of 64 characters.
    parent : str, default is Undefined, optional
        The Agent to create an Environment for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentSelector, default is Undefined, optional
        parent selector
    versionConfigs : [DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0], default is Undefined, optional
        A list of configurations for flow versions. You should include version configs for all flows that are reachable from [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
        Structure is documented below.
    """


    description?: str

    displayName?: str

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentSelector

    versionConfigs?: [DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0]


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 environment spec for provider version configs items0

    Attributes
    ----------
    version : str, default is Undefined, optional
        Format: projects/{{project}}/locations/{{location}}/agents/{{agent}}/flows/{{flow}}/versions/{{version}}.
    versionRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionRef, default is Undefined, optional
        version ref
    versionSelector : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionSelector, default is Undefined, optional
        version selector
    """


    version?: str

    versionRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionRef

    versionSelector?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionSelector


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionRef:
    """
    Reference to a Version in dialogflowcx to populate version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionSelector:
    """
    Selector for a Version in dialogflowcx to populate version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecForProviderVersionConfigsItems0VersionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
    displayName : str, default is Undefined, optional
        The human-readable name of the environment (unique in an agent). Limit of 64 characters.
    parent : str, default is Undefined, optional
        The Agent to create an Environment for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentSelector, default is Undefined, optional
        parent selector
    versionConfigs : [DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0], default is Undefined, optional
        A list of configurations for flow versions. You should include version configs for all flows that are reachable from [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
        Structure is documented below.
    """


    description?: str

    displayName?: str

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentSelector

    versionConfigs?: [DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0]


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 environment spec init provider version configs items0

    Attributes
    ----------
    version : str, default is Undefined, optional
        Format: projects/{{project}}/locations/{{location}}/agents/{{agent}}/flows/{{flow}}/versions/{{version}}.
    versionRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionRef, default is Undefined, optional
        version ref
    versionSelector : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionSelector, default is Undefined, optional
        version selector
    """


    version?: str

    versionRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionRef

    versionSelector?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionSelector


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionRef:
    """
    Reference to a Version in dialogflowcx to populate version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionSelector:
    """
    Selector for a Version in dialogflowcx to populate version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecInitProviderVersionConfigsItems0VersionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef

    metadata?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata

    name: str


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentStatus:
    """
    EnvironmentStatus defines the observed state of Environment.

    Attributes
    ----------
    atProvider : DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusAtProvider

    conditions?: [DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusConditionsItems0]


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusAtProvider:
    """
    dialogflowcx gcp upbound io v1beta1 environment status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
    displayName : str, default is Undefined, optional
        The human-readable name of the environment (unique in an agent). Limit of 64 characters.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{parent}}/environments/{{name}}
    name : str, default is Undefined, optional
        The name of the environment.
    parent : str, default is Undefined, optional
        The Agent to create an Environment for.
        Format: projects//locations//agents/.
    updateTime : str, default is Undefined, optional
        Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    versionConfigs : [DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusAtProviderVersionConfigsItems0], default is Undefined, optional
        A list of configurations for flow versions. You should include version configs for all flows that are reachable from [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
        Structure is documented below.
    """


    description?: str

    displayName?: str

    id?: str

    name?: str

    parent?: str

    updateTime?: str

    versionConfigs?: [DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusAtProviderVersionConfigsItems0]


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusAtProviderVersionConfigsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 environment status at provider version configs items0

    Attributes
    ----------
    version : str, default is Undefined, optional
        Format: projects/{{project}}/locations/{{location}}/agents/{{agent}}/flows/{{flow}}/versions/{{version}}.
    """


    version?: str


schema DialogflowcxGcpUpboundIoV1beta1EnvironmentStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


