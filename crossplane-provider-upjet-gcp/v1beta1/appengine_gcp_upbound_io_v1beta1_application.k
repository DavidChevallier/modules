"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Application:
    """
    Application is the Schema for the Applications API. Allows management of an App Engine application.

    Attributes
    ----------
    apiVersion : str, default is "appengine.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppengineGcpUpboundIoV1beta1ApplicationSpec, default is Undefined, required
        spec
    status : AppengineGcpUpboundIoV1beta1ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "appengine.gcp.upbound.io/v1beta1" = "appengine.gcp.upbound.io/v1beta1"

    kind: "Application" = "Application"

    metadata?: v1.ObjectMeta

    spec: AppengineGcpUpboundIoV1beta1ApplicationSpec

    status?: AppengineGcpUpboundIoV1beta1ApplicationStatus


schema AppengineGcpUpboundIoV1beta1ApplicationSpec:
    """
    ApplicationSpec defines the desired state of Application

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppengineGcpUpboundIoV1beta1ApplicationSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppengineGcpUpboundIoV1beta1ApplicationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppengineGcpUpboundIoV1beta1ApplicationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppengineGcpUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppengineGcpUpboundIoV1beta1ApplicationSpecForProvider

    initProvider?: AppengineGcpUpboundIoV1beta1ApplicationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppengineGcpUpboundIoV1beta1ApplicationSpecProviderConfigRef

    publishConnectionDetailsTo?: AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppengineGcpUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProvider:
    """
    appengine gcp upbound io v1beta1 application spec for provider

    Attributes
    ----------
    authDomain : str, default is Undefined, optional
        The domain to authenticate users with when using App Engine's User API.
    databaseType : str, default is Undefined, optional
        The type of the Cloud Firestore or Cloud Datastore database associated with this application.
        Can be CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY for new
        instances.  To support old instances, the value CLOUD_DATASTORE is accepted by the provider, but will be rejected by the API.
        To create a Cloud Firestore database without creating an App Engine application, use the
        google_firestore_database
        resource instead.
    featureSettings : [AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderFeatureSettingsItems0], default is Undefined, optional
        A block of optional settings to configure specific App Engine features:
    iap : [AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderIapItems0], default is Undefined, optional
        Settings for enabling Cloud Identity Aware Proxy
    locationId : str, default is Undefined, optional
        The location
        to serve the app from.
    project : str, default is Undefined, optional
        The project ID to create the application under.
        ~>NOTE: GCP only accepts project ID, not project number. If you are using number,
        you may get a "Permission denied" error.
    projectRef : AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    servingStatus : str, default is Undefined, optional
        The serving status of the app.
    """


    authDomain?: str

    databaseType?: str

    featureSettings?: [AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderFeatureSettingsItems0]

    iap?: [AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderIapItems0]

    locationId?: str

    project?: str

    projectRef?: AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectRef

    projectSelector?: AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectSelector

    servingStatus?: str


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderFeatureSettingsItems0:
    """
    appengine gcp upbound io v1beta1 application spec for provider feature settings items0

    Attributes
    ----------
    splitHealthChecks : bool, default is Undefined, optional
        Set to false to use the legacy health check instead of the readiness
        and liveness checks.
    """


    splitHealthChecks?: bool


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderIapItems0:
    """
    appengine gcp upbound io v1beta1 application spec for provider iap items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the serving infrastructure will authenticate and authorize all incoming requests.
        (default is false)
    oauth2ClientId : str, default is Undefined, optional
        OAuth2 client ID to use for the authentication flow.
    oauth2ClientSecretSecretRef : AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderIapItems0Oauth2ClientSecretSecretRef, default is Undefined, required
        oauth2 client secret secret ref
    """


    enabled?: bool

    oauth2ClientId?: str

    oauth2ClientSecretSecretRef: AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderIapItems0Oauth2ClientSecretSecretRef


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderIapItems0Oauth2ClientSecretSecretRef:
    """
    OAuth2 client secret to use for the authentication flow.
    The SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectRefPolicy


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectSelectorPolicy


schema AppengineGcpUpboundIoV1beta1ApplicationSpecForProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    authDomain : str, default is Undefined, optional
        The domain to authenticate users with when using App Engine's User API.
    databaseType : str, default is Undefined, optional
        The type of the Cloud Firestore or Cloud Datastore database associated with this application.
        Can be CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY for new
        instances.  To support old instances, the value CLOUD_DATASTORE is accepted by the provider, but will be rejected by the API.
        To create a Cloud Firestore database without creating an App Engine application, use the
        google_firestore_database
        resource instead.
    featureSettings : [AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderFeatureSettingsItems0], default is Undefined, optional
        A block of optional settings to configure specific App Engine features:
    iap : [AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderIapItems0], default is Undefined, optional
        Settings for enabling Cloud Identity Aware Proxy
    locationId : str, default is Undefined, optional
        The location
        to serve the app from.
    project : str, default is Undefined, optional
        The project ID to create the application under.
        ~>NOTE: GCP only accepts project ID, not project number. If you are using number,
        you may get a "Permission denied" error.
    projectRef : AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectSelector, default is Undefined, optional
        project selector
    servingStatus : str, default is Undefined, optional
        The serving status of the app.
    """


    authDomain?: str

    databaseType?: str

    featureSettings?: [AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderFeatureSettingsItems0]

    iap?: [AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderIapItems0]

    locationId?: str

    project?: str

    projectRef?: AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectRef

    projectSelector?: AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectSelector

    servingStatus?: str


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderFeatureSettingsItems0:
    """
    appengine gcp upbound io v1beta1 application spec init provider feature settings items0

    Attributes
    ----------
    splitHealthChecks : bool, default is Undefined, optional
        Set to false to use the legacy health check instead of the readiness
        and liveness checks.
    """


    splitHealthChecks?: bool


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderIapItems0:
    """
    appengine gcp upbound io v1beta1 application spec init provider iap items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the serving infrastructure will authenticate and authorize all incoming requests.
        (default is false)
    oauth2ClientId : str, default is Undefined, optional
        OAuth2 client ID to use for the authentication flow.
    """


    enabled?: bool

    oauth2ClientId?: str


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectRefPolicy


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectSelectorPolicy


schema AppengineGcpUpboundIoV1beta1ApplicationSpecInitProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppengineGcpUpboundIoV1beta1ApplicationSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppengineGcpUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppengineGcpUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy


schema AppengineGcpUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef

    metadata?: AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata

    name: str


schema AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy


schema AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppengineGcpUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppengineGcpUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppengineGcpUpboundIoV1beta1ApplicationStatus:
    """
    ApplicationStatus defines the observed state of Application.

    Attributes
    ----------
    atProvider : AppengineGcpUpboundIoV1beta1ApplicationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppengineGcpUpboundIoV1beta1ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AppengineGcpUpboundIoV1beta1ApplicationStatusAtProvider

    conditions?: [AppengineGcpUpboundIoV1beta1ApplicationStatusConditionsItems0]


schema AppengineGcpUpboundIoV1beta1ApplicationStatusAtProvider:
    """
    appengine gcp upbound io v1beta1 application status at provider

    Attributes
    ----------
    appId : str, default is Undefined, optional
        Identifier of the app, usually {PROJECT_ID}
    authDomain : str, default is Undefined, optional
        The domain to authenticate users with when using App Engine's User API.
    codeBucket : str, default is Undefined, optional
        The GCS bucket code is being stored in for this app.
    databaseType : str, default is Undefined, optional
        The type of the Cloud Firestore or Cloud Datastore database associated with this application.
        Can be CLOUD_FIRESTORE or CLOUD_DATASTORE_COMPATIBILITY for new
        instances.  To support old instances, the value CLOUD_DATASTORE is accepted by the provider, but will be rejected by the API.
        To create a Cloud Firestore database without creating an App Engine application, use the
        google_firestore_database
        resource instead.
    defaultBucket : str, default is Undefined, optional
        The GCS bucket content is being stored in for this app.
    defaultHostname : str, default is Undefined, optional
        The default hostname for this app.
    featureSettings : [AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderFeatureSettingsItems0], default is Undefined, optional
        A block of optional settings to configure specific App Engine features:
    gcrDomain : str, default is Undefined, optional
        The GCR domain used for storing managed Docker images for this app.
    iap : [AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderIapItems0], default is Undefined, optional
        Settings for enabling Cloud Identity Aware Proxy
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}
    locationId : str, default is Undefined, optional
        The location
        to serve the app from.
    name : str, default is Undefined, optional
        Unique name of the app, usually apps/{PROJECT_ID}
    project : str, default is Undefined, optional
        The project ID to create the application under.
        ~>NOTE: GCP only accepts project ID, not project number. If you are using number,
        you may get a "Permission denied" error.
    servingStatus : str, default is Undefined, optional
        The serving status of the app.
    urlDispatchRule : [AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderURLDispatchRuleItems0], default is Undefined, optional
        A list of dispatch rule blocks. Each block has a domain, path, and service field.
    """


    appId?: str

    authDomain?: str

    codeBucket?: str

    databaseType?: str

    defaultBucket?: str

    defaultHostname?: str

    featureSettings?: [AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderFeatureSettingsItems0]

    gcrDomain?: str

    iap?: [AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderIapItems0]

    id?: str

    locationId?: str

    name?: str

    project?: str

    servingStatus?: str

    urlDispatchRule?: [AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderURLDispatchRuleItems0]


schema AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderFeatureSettingsItems0:
    """
    appengine gcp upbound io v1beta1 application status at provider feature settings items0

    Attributes
    ----------
    splitHealthChecks : bool, default is Undefined, optional
        Set to false to use the legacy health check instead of the readiness
        and liveness checks.
    """


    splitHealthChecks?: bool


schema AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderIapItems0:
    """
    appengine gcp upbound io v1beta1 application status at provider iap items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the serving infrastructure will authenticate and authorize all incoming requests.
        (default is false)
    oauth2ClientId : str, default is Undefined, optional
        OAuth2 client ID to use for the authentication flow.
    """


    enabled?: bool

    oauth2ClientId?: str


schema AppengineGcpUpboundIoV1beta1ApplicationStatusAtProviderURLDispatchRuleItems0:
    """
    appengine gcp upbound io v1beta1 application status at provider URL dispatch rule items0

    Attributes
    ----------
    domain : str, default is Undefined, optional
        domain
    path : str, default is Undefined, optional
        path
    service : str, default is Undefined, optional
        service
    """


    domain?: str

    path?: str

    service?: str


schema AppengineGcpUpboundIoV1beta1ApplicationStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


