"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProjectBucketConfig:
    """
    ProjectBucketConfig is the Schema for the ProjectBucketConfigs API. Manages a project-level logging bucket config.

    Attributes
    ----------
    apiVersion : str, default is "logging.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProjectBucketConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpec, default is Undefined, required
        spec
    status : LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "logging.gcp.upbound.io/v1beta1" = "logging.gcp.upbound.io/v1beta1"

    kind: "ProjectBucketConfig" = "ProjectBucketConfig"

    metadata?: v1.ObjectMeta

    spec: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpec

    status?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatus


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpec:
    """
    ProjectBucketConfigSpec defines the desired state of ProjectBucketConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProvider

    initProvider?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecWriteConnectionSecretToRef


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProvider:
    """
    logging gcp upbound io v1beta1 project bucket config spec for provider

    Attributes
    ----------
    bucketId : str, default is Undefined, required
        The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
    cmekSettings : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0], default is Undefined, optional
        The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed. Structure is documented below.
    description : str, default is Undefined, optional
        Describes this bucket.
    enableAnalytics : bool, default is Undefined, optional
        Whether or not Log Analytics is enabled. Logs for buckets with Log Analytics enabled can be queried in the Log Analytics page using SQL queries. Cannot be disabled once enabled.
    indexConfigs : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderIndexConfigsItems0], default is Undefined, optional
        A list of indexed fields and related configuration data. Structure is documented below.
    location : str, default is Undefined, required
        The location of the bucket.
    locked : bool, default is Undefined, optional
        Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
    project : str, default is Undefined, optional
        The parent resource that contains the logging bucket.
    projectRef : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    retentionDays : float, default is Undefined, optional
        Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
    """


    bucketId: str

    cmekSettings?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0]

    description?: str

    enableAnalytics?: bool

    indexConfigs?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderIndexConfigsItems0]

    location: str

    locked?: bool

    project?: str

    projectRef?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectRef

    projectSelector?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectSelector

    retentionDays?: float


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0:
    """
    logging gcp upbound io v1beta1 project bucket config spec for provider cmek settings items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The resource name for the configured Cloud KMS key.
        KMS key name format:
        'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'
        To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
        The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
        See Enabling CMEK for Logging Buckets for more information.
    kmsKeyNameRef : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameRef, default is Undefined, optional
        kms key name ref
    kmsKeyNameSelector : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameSelector, default is Undefined, optional
        kms key name selector
    """


    kmsKeyName?: str

    kmsKeyNameRef?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameRef

    kmsKeyNameSelector?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameSelector


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameRef:
    """
    Reference to a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameSelector:
    """
    Selector for a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameSelectorPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderCmekSettingsItems0KmsKeyNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderIndexConfigsItems0:
    """
    logging gcp upbound io v1beta1 project bucket config spec for provider index configs items0

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
        The LogEntry field path to index.
        Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation for details.
    $type : str, default is Undefined, optional
        The type of data in this index. Allowed types include INDEX_TYPE_UNSPECIFIED, INDEX_TYPE_STRING and INDEX_TYPE_INTEGER.
    """


    fieldPath?: str

    $type?: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectSelectorPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecForProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cmekSettings : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0], default is Undefined, optional
        The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed. Structure is documented below.
    description : str, default is Undefined, optional
        Describes this bucket.
    enableAnalytics : bool, default is Undefined, optional
        Whether or not Log Analytics is enabled. Logs for buckets with Log Analytics enabled can be queried in the Log Analytics page using SQL queries. Cannot be disabled once enabled.
    indexConfigs : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderIndexConfigsItems0], default is Undefined, optional
        A list of indexed fields and related configuration data. Structure is documented below.
    locked : bool, default is Undefined, optional
        Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
    retentionDays : float, default is Undefined, optional
        Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
    """


    cmekSettings?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0]

    description?: str

    enableAnalytics?: bool

    indexConfigs?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderIndexConfigsItems0]

    locked?: bool

    retentionDays?: float


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0:
    """
    logging gcp upbound io v1beta1 project bucket config spec init provider cmek settings items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The resource name for the configured Cloud KMS key.
        KMS key name format:
        'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'
        To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
        The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
        See Enabling CMEK for Logging Buckets for more information.
    kmsKeyNameRef : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameRef, default is Undefined, optional
        kms key name ref
    kmsKeyNameSelector : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameSelector, default is Undefined, optional
        kms key name selector
    """


    kmsKeyName?: str

    kmsKeyNameRef?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameRef

    kmsKeyNameSelector?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameSelector


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameRef:
    """
    Reference to a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameSelector:
    """
    Selector for a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameSelectorPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderCmekSettingsItems0KmsKeyNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecInitProviderIndexConfigsItems0:
    """
    logging gcp upbound io v1beta1 project bucket config spec init provider index configs items0

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
        The LogEntry field path to index.
        Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation for details.
    $type : str, default is Undefined, optional
        The type of data in this index. Allowed types include INDEX_TYPE_UNSPECIFIED, INDEX_TYPE_STRING and INDEX_TYPE_INTEGER.
    """


    fieldPath?: str

    $type?: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecProviderConfigRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatus:
    """
    ProjectBucketConfigStatus defines the observed state of ProjectBucketConfig.

    Attributes
    ----------
    atProvider : LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProvider

    conditions?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusConditionsItems0]


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProvider:
    """
    logging gcp upbound io v1beta1 project bucket config status at provider

    Attributes
    ----------
    bucketId : str, default is Undefined, optional
        The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
    cmekSettings : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProviderCmekSettingsItems0], default is Undefined, optional
        The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by updating the log bucket. Changing the KMS key is allowed. Structure is documented below.
    description : str, default is Undefined, optional
        Describes this bucket.
    enableAnalytics : bool, default is Undefined, optional
        Whether or not Log Analytics is enabled. Logs for buckets with Log Analytics enabled can be queried in the Log Analytics page using SQL queries. Cannot be disabled once enabled.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/buckets/{{bucket_id}}
    indexConfigs : [LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProviderIndexConfigsItems0], default is Undefined, optional
        A list of indexed fields and related configuration data. Structure is documented below.
    lifecycleState : str, default is Undefined, optional
        The bucket's lifecycle such as active or deleted. See LifecycleState.
    location : str, default is Undefined, optional
        The location of the bucket.
    locked : bool, default is Undefined, optional
        Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be deleted if they are empty.
    name : str, default is Undefined, optional
        The resource name of the bucket. For example: "projects/my-project-id/locations/my-location/buckets/my-bucket-id"
    project : str, default is Undefined, optional
        The parent resource that contains the logging bucket.
    retentionDays : float, default is Undefined, optional
        Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be used.
    """


    bucketId?: str

    cmekSettings?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProviderCmekSettingsItems0]

    description?: str

    enableAnalytics?: bool

    id?: str

    indexConfigs?: [LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProviderIndexConfigsItems0]

    lifecycleState?: str

    location?: str

    locked?: bool

    name?: str

    project?: str

    retentionDays?: float


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProviderCmekSettingsItems0:
    """
    logging gcp upbound io v1beta1 project bucket config status at provider cmek settings items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The resource name for the configured Cloud KMS key.
        KMS key name format:
        'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]'
        To enable CMEK for the bucket, set this field to a valid kmsKeyName for which the associated service account has the required cloudkms.cryptoKeyEncrypterDecrypter roles assigned for the key.
        The Cloud KMS key used by the bucket can be updated by changing the kmsKeyName to a new valid key name. Encryption operations that are in progress will be completed with the key that was in use when they started. Decryption operations will be completed using the key that was used at the time of encryption unless access to that key has been revoked.
        See Enabling CMEK for Logging Buckets for more information.
    kmsKeyVersionName : str, default is Undefined, optional
        The CryptoKeyVersion resource name for the configured Cloud KMS key.
        KMS key name format:
        'projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]/cryptoKeyVersions/[VERSION]'
        For example:
        "projects/my-project/locations/us-central1/keyRings/my-ring/cryptoKeys/my-key/cryptoKeyVersions/1"
        This is a read-only field used to convey the specific configured CryptoKeyVersion of kms_key that has been configured. It will be populated in cases where the CMEK settings are bound to a single key version.
    name : str, default is Undefined, optional
        The resource name of the CMEK settings.
    serviceAccountId : str, default is Undefined, optional
        The service account associated with a project for which CMEK will apply.
        Before enabling CMEK for a logging bucket, you must first assign the cloudkms.cryptoKeyEncrypterDecrypter role to the service account associated with the project for which CMEK will apply. Use v2.getCmekSettings to obtain the service account ID.
        See Enabling CMEK for Logging Buckets for more information.
    """


    kmsKeyName?: str

    kmsKeyVersionName?: str

    name?: str

    serviceAccountId?: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusAtProviderIndexConfigsItems0:
    """
    logging gcp upbound io v1beta1 project bucket config status at provider index configs items0

    Attributes
    ----------
    fieldPath : str, default is Undefined, optional
        The LogEntry field path to index.
        Note that some paths are automatically indexed, and other paths are not eligible for indexing. See indexing documentation for details.
    $type : str, default is Undefined, optional
        The type of data in this index. Allowed types include INDEX_TYPE_UNSPECIFIED, INDEX_TYPE_STRING and INDEX_TYPE_INTEGER.
    """


    fieldPath?: str

    $type?: str


schema LoggingGcpUpboundIoV1beta1ProjectBucketConfigStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


