"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Routine:
    """
    Routine is the Schema for the Routines API. A user-defined function or a stored procedure that belongs to a Dataset

    Attributes
    ----------
    apiVersion : str, default is "bigquery.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Routine", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BigqueryGcpUpboundIoV1beta1RoutineSpec, default is Undefined, required
        spec
    status : BigqueryGcpUpboundIoV1beta1RoutineStatus, default is Undefined, optional
        status
    """


    apiVersion: "bigquery.gcp.upbound.io/v1beta1" = "bigquery.gcp.upbound.io/v1beta1"

    kind: "Routine" = "Routine"

    metadata?: v1.ObjectMeta

    spec: BigqueryGcpUpboundIoV1beta1RoutineSpec

    status?: BigqueryGcpUpboundIoV1beta1RoutineStatus


schema BigqueryGcpUpboundIoV1beta1RoutineSpec:
    """
    RoutineSpec defines the desired state of Routine

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BigqueryGcpUpboundIoV1beta1RoutineSpecForProvider, default is Undefined, required
        for provider
    initProvider : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BigqueryGcpUpboundIoV1beta1RoutineSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BigqueryGcpUpboundIoV1beta1RoutineSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BigqueryGcpUpboundIoV1beta1RoutineSpecForProvider

    initProvider?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecProviderConfigRef

    publishConnectionDetailsTo?: BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecWriteConnectionSecretToRef


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProvider:
    """
    bigquery gcp upbound io v1beta1 routine spec for provider

    Attributes
    ----------
    arguments : [BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderArgumentsItems0], default is Undefined, optional
        Input/output argument of a function or a stored procedure.
        Structure is documented below.
    datasetId : str, default is Undefined, optional
        The ID of the dataset containing this routine
    datasetIdRef : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDRef, default is Undefined, optional
        dataset Id ref
    datasetIdSelector : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDSelector, default is Undefined, optional
        dataset Id selector
    definitionBody : str, default is Undefined, optional
        The body of the routine. For functions, this is the expression in the AS clause.
        If language=SQL, it is the substring inside (but excluding) the parentheses.
    description : str, default is Undefined, optional
        The description of the routine if defined.
    determinismLevel : str, default is Undefined, optional
        The determinism level of the JavaScript UDF if defined.
        Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
    importedLibraries : [str], default is Undefined, optional
        Optional. If language = "JAVASCRIPT", this field stores the path of the
        imported JAVASCRIPT libraries.
    language : str, default is Undefined, optional
        The language of the routine.
        Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteFunctionOptions : [BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0], default is Undefined, optional
        Remote function specific options.
        Structure is documented below.
    returnTableType : str, default is Undefined, optional
        Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
        If absent, the return table type is inferred from definitionBody at query time in each query
        that references this routine. If present, then the columns in the evaluated table result will
        be cast to match the column types specificed in return table type, at query time.
    returnType : str, default is Undefined, optional
        A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
        If absent, the return type is inferred from definitionBody at query time in each query
        that references this routine. If present, then the evaluated result will be cast to
        the specified returned type at query time. ~>NOTE: Because this field expects a JSON
        string, any changes to the string will create a diff, even if the JSON itself hasn't
        changed. If the API returns a different value for the same schema, e.g. it switche
        d the order of values or replaced STRUCT field type with RECORD field type, we currently
        cannot suppress the recurring diff this causes. As a workaround, we recommend using
        the schema as returned by the API.
    routineType : str, default is Undefined, optional
        The type of routine.
        Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
    sparkOptions : [BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0], default is Undefined, optional
        Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
        Structure is documented below.
    """


    arguments?: [BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderArgumentsItems0]

    datasetId?: str

    datasetIdRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDRef

    datasetIdSelector?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDSelector

    definitionBody?: str

    description?: str

    determinismLevel?: str

    importedLibraries?: [str]

    language?: str

    project?: str

    remoteFunctionOptions?: [BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0]

    returnTableType?: str

    returnType?: str

    routineType?: str

    sparkOptions?: [BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0]


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderArgumentsItems0:
    """
    bigquery gcp upbound io v1beta1 routine spec for provider arguments items0

    Attributes
    ----------
    argumentKind : str, default is Undefined, optional
        Defaults to FIXED_TYPE.
        Default value is FIXED_TYPE.
        Possible values are: FIXED_TYPE, ANY_TYPE.
    dataType : str, default is Undefined, optional
        A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
        ~>NOTE: Because this field expects a JSON string, any changes to the string
        will create a diff, even if the JSON itself hasn't changed. If the API returns
        a different value for the same schema, e.g. it switched the order of values
        or replaced STRUCT field type with RECORD field type, we currently cannot
        suppress the recurring diff this causes. As a workaround, we recommend using
        the schema as returned by the API.
    mode : str, default is Undefined, optional
        Specifies whether the argument is input or output. Can be set for procedures only.
        Possible values are: IN, OUT, INOUT.
    name : str, default is Undefined, optional
        The name of this argument. Can be absent for function return argument.
    """


    argumentKind?: str

    dataType?: str

    mode?: str

    name?: str


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDRef:
    """
    Reference to a Dataset in bigquery to populate datasetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDSelector:
    """
    Selector for a Dataset in bigquery to populate datasetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDSelectorPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderDatasetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0:
    """
    bigquery gcp upbound io v1beta1 routine spec for provider remote function options items0

    Attributes
    ----------
    connection : str, default is Undefined, optional
        Fully qualified name of the user-provided connection object which holds
        the authentication information to send requests to the remote service.
        Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
    connectionRef : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionRef, default is Undefined, optional
        connection ref
    connectionSelector : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionSelector, default is Undefined, optional
        connection selector
    endpoint : str, default is Undefined, optional
        Endpoint of the user-provided remote service, e.g.
        https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
    maxBatchingRows : str, default is Undefined, optional
        Max number of rows in each batch sent to the remote service. If absent or if 0,
        BigQuery dynamically decides the number of rows in a batch.
    userDefinedContext : {str:str}, default is Undefined, optional
        User-defined context as a set of key/value pairs, which will be sent as function
        invocation context together with batched arguments in the requests to the remote
        service. The total number of bytes of keys and values must be less than 8KB.
        An object containing a list of "key": value pairs. Example:
        { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    """


    connection?: str

    connectionRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionRef

    connectionSelector?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionSelector

    endpoint?: str

    maxBatchingRows?: str

    userDefinedContext?: {str:str}


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionRef:
    """
    Reference to a Connection in bigquery to populate connection.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionSelector:
    """
    Selector for a Connection in bigquery to populate connection.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionSelectorPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderRemoteFunctionOptionsItems0ConnectionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0:
    """
    bigquery gcp upbound io v1beta1 routine spec for provider spark options items0

    Attributes
    ----------
    archiveUris : [str], default is Undefined, optional
        Archive files to be extracted into the working directory of each executor. For more information about Apache Spark, see Apache Spark.
    connection : str, default is Undefined, optional
        Fully qualified name of the user-provided Spark connection object.
        Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
    connectionRef : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionRef, default is Undefined, optional
        connection ref
    connectionSelector : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionSelector, default is Undefined, optional
        connection selector
    containerImage : str, default is Undefined, optional
        Custom container image for the runtime environment.
    fileUris : [str], default is Undefined, optional
        Files to be placed in the working directory of each executor. For more information about Apache Spark, see Apache Spark.
    jarUris : [str], default is Undefined, optional
        JARs to include on the driver and executor CLASSPATH. For more information about Apache Spark, see Apache Spark.
    mainClass : str, default is Undefined, optional
        The fully qualified name of a class in jarUris, for example, com.example.wordcount.
        Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
    mainFileUri : str, default is Undefined, optional
        The main file/jar URI of the Spark application.
        Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
        Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
    properties : {str:str}, default is Undefined, optional
        Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
        For more information, see Apache Spark and the procedure option list.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    pyFileUris : [str], default is Undefined, optional
        Python files to be placed on the PYTHONPATH for PySpark application. Supported file types: .py, .egg, and .zip. For more information about Apache Spark, see Apache Spark.
    runtimeVersion : str, default is Undefined, optional
        Runtime version. If not specified, the default runtime version is used.
    """


    archiveUris?: [str]

    connection?: str

    connectionRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionRef

    connectionSelector?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionSelector

    containerImage?: str

    fileUris?: [str]

    jarUris?: [str]

    mainClass?: str

    mainFileUri?: str

    properties?: {str:str}

    pyFileUris?: [str]

    runtimeVersion?: str


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionRef:
    """
    Reference to a Connection in bigquery to populate connection.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionSelector:
    """
    Selector for a Connection in bigquery to populate connection.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionSelectorPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecForProviderSparkOptionsItems0ConnectionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    arguments : [BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderArgumentsItems0], default is Undefined, optional
        Input/output argument of a function or a stored procedure.
        Structure is documented below.
    definitionBody : str, default is Undefined, optional
        The body of the routine. For functions, this is the expression in the AS clause.
        If language=SQL, it is the substring inside (but excluding) the parentheses.
    description : str, default is Undefined, optional
        The description of the routine if defined.
    determinismLevel : str, default is Undefined, optional
        The determinism level of the JavaScript UDF if defined.
        Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
    importedLibraries : [str], default is Undefined, optional
        Optional. If language = "JAVASCRIPT", this field stores the path of the
        imported JAVASCRIPT libraries.
    language : str, default is Undefined, optional
        The language of the routine.
        Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteFunctionOptions : [BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0], default is Undefined, optional
        Remote function specific options.
        Structure is documented below.
    returnTableType : str, default is Undefined, optional
        Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
        If absent, the return table type is inferred from definitionBody at query time in each query
        that references this routine. If present, then the columns in the evaluated table result will
        be cast to match the column types specificed in return table type, at query time.
    returnType : str, default is Undefined, optional
        A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
        If absent, the return type is inferred from definitionBody at query time in each query
        that references this routine. If present, then the evaluated result will be cast to
        the specified returned type at query time. ~>NOTE: Because this field expects a JSON
        string, any changes to the string will create a diff, even if the JSON itself hasn't
        changed. If the API returns a different value for the same schema, e.g. it switche
        d the order of values or replaced STRUCT field type with RECORD field type, we currently
        cannot suppress the recurring diff this causes. As a workaround, we recommend using
        the schema as returned by the API.
    routineType : str, default is Undefined, optional
        The type of routine.
        Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
    sparkOptions : [BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0], default is Undefined, optional
        Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
        Structure is documented below.
    """


    arguments?: [BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderArgumentsItems0]

    definitionBody?: str

    description?: str

    determinismLevel?: str

    importedLibraries?: [str]

    language?: str

    project?: str

    remoteFunctionOptions?: [BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0]

    returnTableType?: str

    returnType?: str

    routineType?: str

    sparkOptions?: [BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0]


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderArgumentsItems0:
    """
    bigquery gcp upbound io v1beta1 routine spec init provider arguments items0

    Attributes
    ----------
    argumentKind : str, default is Undefined, optional
        Defaults to FIXED_TYPE.
        Default value is FIXED_TYPE.
        Possible values are: FIXED_TYPE, ANY_TYPE.
    dataType : str, default is Undefined, optional
        A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
        ~>NOTE: Because this field expects a JSON string, any changes to the string
        will create a diff, even if the JSON itself hasn't changed. If the API returns
        a different value for the same schema, e.g. it switched the order of values
        or replaced STRUCT field type with RECORD field type, we currently cannot
        suppress the recurring diff this causes. As a workaround, we recommend using
        the schema as returned by the API.
    mode : str, default is Undefined, optional
        Specifies whether the argument is input or output. Can be set for procedures only.
        Possible values are: IN, OUT, INOUT.
    name : str, default is Undefined, optional
        The name of this argument. Can be absent for function return argument.
    """


    argumentKind?: str

    dataType?: str

    mode?: str

    name?: str


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0:
    """
    bigquery gcp upbound io v1beta1 routine spec init provider remote function options items0

    Attributes
    ----------
    connection : str, default is Undefined, optional
        Fully qualified name of the user-provided connection object which holds
        the authentication information to send requests to the remote service.
        Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
    connectionRef : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionRef, default is Undefined, optional
        connection ref
    connectionSelector : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionSelector, default is Undefined, optional
        connection selector
    endpoint : str, default is Undefined, optional
        Endpoint of the user-provided remote service, e.g.
        https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
    maxBatchingRows : str, default is Undefined, optional
        Max number of rows in each batch sent to the remote service. If absent or if 0,
        BigQuery dynamically decides the number of rows in a batch.
    userDefinedContext : {str:str}, default is Undefined, optional
        User-defined context as a set of key/value pairs, which will be sent as function
        invocation context together with batched arguments in the requests to the remote
        service. The total number of bytes of keys and values must be less than 8KB.
        An object containing a list of "key": value pairs. Example:
        { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    """


    connection?: str

    connectionRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionRef

    connectionSelector?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionSelector

    endpoint?: str

    maxBatchingRows?: str

    userDefinedContext?: {str:str}


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionRef:
    """
    Reference to a Connection in bigquery to populate connection.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionSelector:
    """
    Selector for a Connection in bigquery to populate connection.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionSelectorPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderRemoteFunctionOptionsItems0ConnectionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0:
    """
    bigquery gcp upbound io v1beta1 routine spec init provider spark options items0

    Attributes
    ----------
    archiveUris : [str], default is Undefined, optional
        Archive files to be extracted into the working directory of each executor. For more information about Apache Spark, see Apache Spark.
    connection : str, default is Undefined, optional
        Fully qualified name of the user-provided Spark connection object.
        Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
    connectionRef : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionRef, default is Undefined, optional
        connection ref
    connectionSelector : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionSelector, default is Undefined, optional
        connection selector
    containerImage : str, default is Undefined, optional
        Custom container image for the runtime environment.
    fileUris : [str], default is Undefined, optional
        Files to be placed in the working directory of each executor. For more information about Apache Spark, see Apache Spark.
    jarUris : [str], default is Undefined, optional
        JARs to include on the driver and executor CLASSPATH. For more information about Apache Spark, see Apache Spark.
    mainClass : str, default is Undefined, optional
        The fully qualified name of a class in jarUris, for example, com.example.wordcount.
        Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
    mainFileUri : str, default is Undefined, optional
        The main file/jar URI of the Spark application.
        Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
        Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
    properties : {str:str}, default is Undefined, optional
        Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
        For more information, see Apache Spark and the procedure option list.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    pyFileUris : [str], default is Undefined, optional
        Python files to be placed on the PYTHONPATH for PySpark application. Supported file types: .py, .egg, and .zip. For more information about Apache Spark, see Apache Spark.
    runtimeVersion : str, default is Undefined, optional
        Runtime version. If not specified, the default runtime version is used.
    """


    archiveUris?: [str]

    connection?: str

    connectionRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionRef

    connectionSelector?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionSelector

    containerImage?: str

    fileUris?: [str]

    jarUris?: [str]

    mainClass?: str

    mainFileUri?: str

    properties?: {str:str}

    pyFileUris?: [str]

    runtimeVersion?: str


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionRef:
    """
    Reference to a Connection in bigquery to populate connection.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionSelector:
    """
    Selector for a Connection in bigquery to populate connection.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionSelectorPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecInitProviderSparkOptionsItems0ConnectionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecProviderConfigRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToConfigRef

    metadata?: BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToMetadata

    name: str


schema BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToConfigRefPolicy


schema BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigqueryGcpUpboundIoV1beta1RoutineSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BigqueryGcpUpboundIoV1beta1RoutineSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BigqueryGcpUpboundIoV1beta1RoutineStatus:
    """
    RoutineStatus defines the observed state of Routine.

    Attributes
    ----------
    atProvider : BigqueryGcpUpboundIoV1beta1RoutineStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BigqueryGcpUpboundIoV1beta1RoutineStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: BigqueryGcpUpboundIoV1beta1RoutineStatusAtProvider

    conditions?: [BigqueryGcpUpboundIoV1beta1RoutineStatusConditionsItems0]


schema BigqueryGcpUpboundIoV1beta1RoutineStatusAtProvider:
    """
    bigquery gcp upbound io v1beta1 routine status at provider

    Attributes
    ----------
    arguments : [BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderArgumentsItems0], default is Undefined, optional
        Input/output argument of a function or a stored procedure.
        Structure is documented below.
    creationTime : float, default is Undefined, optional
        The time when this routine was created, in milliseconds since the
        epoch.
    datasetId : str, default is Undefined, optional
        The ID of the dataset containing this routine
    definitionBody : str, default is Undefined, optional
        The body of the routine. For functions, this is the expression in the AS clause.
        If language=SQL, it is the substring inside (but excluding) the parentheses.
    description : str, default is Undefined, optional
        The description of the routine if defined.
    determinismLevel : str, default is Undefined, optional
        The determinism level of the JavaScript UDF if defined.
        Possible values are: DETERMINISM_LEVEL_UNSPECIFIED, DETERMINISTIC, NOT_DETERMINISTIC.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/datasets/{{dataset_id}}/routines/{{routine_id}}
    importedLibraries : [str], default is Undefined, optional
        Optional. If language = "JAVASCRIPT", this field stores the path of the
        imported JAVASCRIPT libraries.
    language : str, default is Undefined, optional
        The language of the routine.
        Possible values are: SQL, JAVASCRIPT, PYTHON, JAVA, SCALA.
    lastModifiedTime : float, default is Undefined, optional
        The time when this routine was modified, in milliseconds since the
        epoch.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    remoteFunctionOptions : [BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderRemoteFunctionOptionsItems0], default is Undefined, optional
        Remote function specific options.
        Structure is documented below.
    returnTableType : str, default is Undefined, optional
        Optional. Can be set only if routineType = "TABLE_VALUED_FUNCTION".
        If absent, the return table type is inferred from definitionBody at query time in each query
        that references this routine. If present, then the columns in the evaluated table result will
        be cast to match the column types specificed in return table type, at query time.
    returnType : str, default is Undefined, optional
        A JSON schema for the return type. Optional if language = "SQL"; required otherwise.
        If absent, the return type is inferred from definitionBody at query time in each query
        that references this routine. If present, then the evaluated result will be cast to
        the specified returned type at query time. ~>NOTE: Because this field expects a JSON
        string, any changes to the string will create a diff, even if the JSON itself hasn't
        changed. If the API returns a different value for the same schema, e.g. it switche
        d the order of values or replaced STRUCT field type with RECORD field type, we currently
        cannot suppress the recurring diff this causes. As a workaround, we recommend using
        the schema as returned by the API.
    routineType : str, default is Undefined, optional
        The type of routine.
        Possible values are: SCALAR_FUNCTION, PROCEDURE, TABLE_VALUED_FUNCTION.
    sparkOptions : [BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderSparkOptionsItems0], default is Undefined, optional
        Optional. If language is one of "PYTHON", "JAVA", "SCALA", this field stores the options for spark stored procedure.
        Structure is documented below.
    """


    arguments?: [BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderArgumentsItems0]

    creationTime?: float

    datasetId?: str

    definitionBody?: str

    description?: str

    determinismLevel?: str

    id?: str

    importedLibraries?: [str]

    language?: str

    lastModifiedTime?: float

    project?: str

    remoteFunctionOptions?: [BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderRemoteFunctionOptionsItems0]

    returnTableType?: str

    returnType?: str

    routineType?: str

    sparkOptions?: [BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderSparkOptionsItems0]


schema BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderArgumentsItems0:
    """
    bigquery gcp upbound io v1beta1 routine status at provider arguments items0

    Attributes
    ----------
    argumentKind : str, default is Undefined, optional
        Defaults to FIXED_TYPE.
        Default value is FIXED_TYPE.
        Possible values are: FIXED_TYPE, ANY_TYPE.
    dataType : str, default is Undefined, optional
        A JSON schema for the data type. Required unless argumentKind = ANY_TYPE.
        ~>NOTE: Because this field expects a JSON string, any changes to the string
        will create a diff, even if the JSON itself hasn't changed. If the API returns
        a different value for the same schema, e.g. it switched the order of values
        or replaced STRUCT field type with RECORD field type, we currently cannot
        suppress the recurring diff this causes. As a workaround, we recommend using
        the schema as returned by the API.
    mode : str, default is Undefined, optional
        Specifies whether the argument is input or output. Can be set for procedures only.
        Possible values are: IN, OUT, INOUT.
    name : str, default is Undefined, optional
        The name of this argument. Can be absent for function return argument.
    """


    argumentKind?: str

    dataType?: str

    mode?: str

    name?: str


schema BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderRemoteFunctionOptionsItems0:
    """
    bigquery gcp upbound io v1beta1 routine status at provider remote function options items0

    Attributes
    ----------
    connection : str, default is Undefined, optional
        Fully qualified name of the user-provided connection object which holds
        the authentication information to send requests to the remote service.
        Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
    endpoint : str, default is Undefined, optional
        Endpoint of the user-provided remote service, e.g.
        https://us-east1-my_gcf_project.cloudfunctions.net/remote_add
    maxBatchingRows : str, default is Undefined, optional
        Max number of rows in each batch sent to the remote service. If absent or if 0,
        BigQuery dynamically decides the number of rows in a batch.
    userDefinedContext : {str:str}, default is Undefined, optional
        User-defined context as a set of key/value pairs, which will be sent as function
        invocation context together with batched arguments in the requests to the remote
        service. The total number of bytes of keys and values must be less than 8KB.
        An object containing a list of "key": value pairs. Example:
        { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    """


    connection?: str

    endpoint?: str

    maxBatchingRows?: str

    userDefinedContext?: {str:str}


schema BigqueryGcpUpboundIoV1beta1RoutineStatusAtProviderSparkOptionsItems0:
    """
    bigquery gcp upbound io v1beta1 routine status at provider spark options items0

    Attributes
    ----------
    archiveUris : [str], default is Undefined, optional
        Archive files to be extracted into the working directory of each executor. For more information about Apache Spark, see Apache Spark.
    connection : str, default is Undefined, optional
        Fully qualified name of the user-provided Spark connection object.
        Format: "projects/{projectId}/locations/{locationId}/connections/{connectionId}"
    containerImage : str, default is Undefined, optional
        Custom container image for the runtime environment.
    fileUris : [str], default is Undefined, optional
        Files to be placed in the working directory of each executor. For more information about Apache Spark, see Apache Spark.
    jarUris : [str], default is Undefined, optional
        JARs to include on the driver and executor CLASSPATH. For more information about Apache Spark, see Apache Spark.
    mainClass : str, default is Undefined, optional
        The fully qualified name of a class in jarUris, for example, com.example.wordcount.
        Exactly one of mainClass and main_jar_uri field should be set for Java/Scala language type.
    mainFileUri : str, default is Undefined, optional
        The main file/jar URI of the Spark application.
        Exactly one of the definitionBody field and the mainFileUri field must be set for Python.
        Exactly one of mainClass and mainFileUri field should be set for Java/Scala language type.
    properties : {str:str}, default is Undefined, optional
        Configuration properties as a set of key/value pairs, which will be passed on to the Spark application.
        For more information, see Apache Spark and the procedure option list.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    pyFileUris : [str], default is Undefined, optional
        Python files to be placed on the PYTHONPATH for PySpark application. Supported file types: .py, .egg, and .zip. For more information about Apache Spark, see Apache Spark.
    runtimeVersion : str, default is Undefined, optional
        Runtime version. If not specified, the default runtime version is used.
    """


    archiveUris?: [str]

    connection?: str

    containerImage?: str

    fileUris?: [str]

    jarUris?: [str]

    mainClass?: str

    mainFileUri?: str

    properties?: {str:str}

    pyFileUris?: [str]

    runtimeVersion?: str


schema BigqueryGcpUpboundIoV1beta1RoutineStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


