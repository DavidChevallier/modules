"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    """
    Cluster is the Schema for the Clusters API. An Anthos cluster running on Azure.

    Attributes
    ----------
    apiVersion : str, default is "containerazure.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerazureGcpUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : ContainerazureGcpUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "containerazure.gcp.upbound.io/v1beta1" = "containerazure.gcp.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: ContainerazureGcpUpboundIoV1beta1ClusterSpec

    status?: ContainerazureGcpUpboundIoV1beta1ClusterStatus


schema ContainerazureGcpUpboundIoV1beta1ClusterSpec:
    """
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ContainerazureGcpUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ContainerazureGcpUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ContainerazureGcpUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ContainerazureGcpUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ContainerazureGcpUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ContainerazureGcpUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProvider:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
    authorization : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0], default is Undefined, optional
        Configuration related to the cluster RBAC settings.
    azureRegion : str, default is Undefined, optional
        The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
    azureServicesAuthentication : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAzureServicesAuthenticationItems0], default is Undefined, optional
        Azure authentication configuration for management of Azure resources
    client : str, default is Undefined, optional
        Name of the AzureClient. The AzureClient resource must reside on the same GCP project and region as the AzureCluster. AzureClient names are formatted as projects/<project-number>/locations/<region>/azureClients/<client-id>. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
    controlPlane : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0], default is Undefined, optional
        Configuration related to the cluster control plane.
    description : str, default is Undefined, optional
        Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
    fleet : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderFleetItems0], default is Undefined, optional
        Fleet configuration.
    location : str, default is Undefined, required
        The location for the resource
    networking : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderNetworkingItems0], default is Undefined, optional
        Cluster-wide networking configuration.
    project : str, default is Undefined, optional
        The project for the resource
    resourceGroupId : str, default is Undefined, optional
        The ARM ID of the resource group where the cluster resources are deployed. For example: /subscriptions/*/resourceGroups/*
    """


    annotations?: {str:str}

    authorization?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0]

    azureRegion?: str

    azureServicesAuthentication?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAzureServicesAuthenticationItems0]

    client?: str

    controlPlane?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0]

    description?: str

    fleet?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderFleetItems0]

    location: str

    networking?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderNetworkingItems0]

    project?: str

    resourceGroupId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider authorization items0

    Attributes
    ----------
    adminGroups : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0AdminGroupsItems0], default is Undefined, optional
        Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    adminUsers : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0AdminUsersItems0], default is Undefined, optional
        Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    """


    adminGroups?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0AdminGroupsItems0]

    adminUsers?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0AdminUsersItems0]


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0AdminGroupsItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider authorization items0 admin groups items0

    Attributes
    ----------
    group : str, default is Undefined, optional
        The name of the group, e.g. my-group@domain.com.
    """


    group?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAuthorizationItems0AdminUsersItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider authorization items0 admin users items0

    Attributes
    ----------
    username : str, default is Undefined, optional
        The name of the user, e.g. my-gcp-id@gmail.com.
    """


    username?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderAzureServicesAuthenticationItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider azure services authentication items0

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        The Azure Active Directory Application ID for Authentication configuration.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory Tenant ID for Authentication configuration.
    """


    applicationId?: str

    tenantId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0

    Attributes
    ----------
    databaseEncryption : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0DatabaseEncryptionItems0], default is Undefined, optional
        Optional. Configuration related to application-layer secrets encryption.
    mainVolume : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0MainVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
    proxyConfig : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0ProxyConfigItems0], default is Undefined, optional
        Proxy configuration for outbound HTTP(S) traffic.
    replicaPlacements : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0ReplicaPlacementsItems0], default is Undefined, optional
        Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replica_placements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
    rootVolume : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0RootVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
    sshConfig : [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0SSHConfigItems0], default is Undefined, optional
        SSH configuration for how to access the underlying control plane machines.
    subnetId : str, default is Undefined, optional
        The ARM ID of the subnet where the control plane VMs are deployed. Example: /subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default.
    tags : {str:str}, default is Undefined, optional
        Optional. A set of tags to apply to all underlying control plane Azure resources.
    version : str, default is Undefined, optional
        The Kubernetes version to run on control plane replicas (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
    vmSize : str, default is Undefined, optional
        Optional. The Azure VM size name. Example: Standard_DS2_v2. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to Standard_DS2_v2.
    """


    databaseEncryption?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0DatabaseEncryptionItems0]

    mainVolume?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0MainVolumeItems0]

    proxyConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0ProxyConfigItems0]

    replicaPlacements?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0ReplicaPlacementsItems0]

    rootVolume?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0RootVolumeItems0]

    sshConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0SSHConfigItems0]

    subnetId?: str

    tags?: {str:str}

    version?: str

    vmSize?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0DatabaseEncryptionItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0 database encryption items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: /subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name> Encryption will always take the latest version of the key and hence specific version is not supported.
    """


    keyId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0MainVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0 main volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0ProxyConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0 proxy config items0

    Attributes
    ----------
    resourceGroupId : str, default is Undefined, optional
        The ARM ID of the resource group where the cluster resources are deployed. For example: /subscriptions/*/resourceGroups/*
    secretId : str, default is Undefined, optional
        The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
    """


    resourceGroupId?: str

    secretId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0ReplicaPlacementsItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0 replica placements items0

    Attributes
    ----------
    azureAvailabilityZone : str, default is Undefined, optional
        For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
    subnetId : str, default is Undefined, optional
        For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
    """


    azureAvailabilityZone?: str

    subnetId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0RootVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0 root volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderControlPlaneItems0SSHConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider control plane items0 SSH config items0

    Attributes
    ----------
    authorizedKey : str, default is Undefined, optional
        The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
    """


    authorizedKey?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderFleetItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider fleet items0

    Attributes
    ----------
    project : str, default is Undefined, optional
        The number of the Fleet host project where this cluster will be registered.
    """


    project?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecForProviderNetworkingItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec for provider networking items0

    Attributes
    ----------
    podAddressCidrBlocks : [str], default is Undefined, optional
        The IP address range of the pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
    serviceAddressCidrBlocks : [str], default is Undefined, optional
        The IP address range for services in this cluster, in CIDR notation (e.g. 10.96.0.0/14). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
    virtualNetworkId : str, default is Undefined, optional
        The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: /subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/* This field cannot be changed after creation.
    """


    podAddressCidrBlocks?: [str]

    serviceAddressCidrBlocks?: [str]

    virtualNetworkId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
    authorization : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0], default is Undefined, optional
        Configuration related to the cluster RBAC settings.
    azureRegion : str, default is Undefined, optional
        The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
    azureServicesAuthentication : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAzureServicesAuthenticationItems0], default is Undefined, optional
        Azure authentication configuration for management of Azure resources
    client : str, default is Undefined, optional
        Name of the AzureClient. The AzureClient resource must reside on the same GCP project and region as the AzureCluster. AzureClient names are formatted as projects/<project-number>/locations/<region>/azureClients/<client-id>. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
    controlPlane : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0], default is Undefined, optional
        Configuration related to the cluster control plane.
    description : str, default is Undefined, optional
        Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
    fleet : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderFleetItems0], default is Undefined, optional
        Fleet configuration.
    networking : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderNetworkingItems0], default is Undefined, optional
        Cluster-wide networking configuration.
    project : str, default is Undefined, optional
        The project for the resource
    resourceGroupId : str, default is Undefined, optional
        The ARM ID of the resource group where the cluster resources are deployed. For example: /subscriptions/*/resourceGroups/*
    """


    annotations?: {str:str}

    authorization?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0]

    azureRegion?: str

    azureServicesAuthentication?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAzureServicesAuthenticationItems0]

    client?: str

    controlPlane?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0]

    description?: str

    fleet?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderFleetItems0]

    networking?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderNetworkingItems0]

    project?: str

    resourceGroupId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider authorization items0

    Attributes
    ----------
    adminGroups : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0AdminGroupsItems0], default is Undefined, optional
        Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    adminUsers : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0AdminUsersItems0], default is Undefined, optional
        Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    """


    adminGroups?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0AdminGroupsItems0]

    adminUsers?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0AdminUsersItems0]


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0AdminGroupsItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider authorization items0 admin groups items0

    Attributes
    ----------
    group : str, default is Undefined, optional
        The name of the group, e.g. my-group@domain.com.
    """


    group?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAuthorizationItems0AdminUsersItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider authorization items0 admin users items0

    Attributes
    ----------
    username : str, default is Undefined, optional
        The name of the user, e.g. my-gcp-id@gmail.com.
    """


    username?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderAzureServicesAuthenticationItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider azure services authentication items0

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        The Azure Active Directory Application ID for Authentication configuration.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory Tenant ID for Authentication configuration.
    """


    applicationId?: str

    tenantId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0

    Attributes
    ----------
    databaseEncryption : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0DatabaseEncryptionItems0], default is Undefined, optional
        Optional. Configuration related to application-layer secrets encryption.
    mainVolume : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0MainVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
    proxyConfig : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0ProxyConfigItems0], default is Undefined, optional
        Proxy configuration for outbound HTTP(S) traffic.
    replicaPlacements : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0ReplicaPlacementsItems0], default is Undefined, optional
        Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replica_placements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
    rootVolume : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0RootVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
    sshConfig : [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0SSHConfigItems0], default is Undefined, optional
        SSH configuration for how to access the underlying control plane machines.
    subnetId : str, default is Undefined, optional
        The ARM ID of the subnet where the control plane VMs are deployed. Example: /subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default.
    tags : {str:str}, default is Undefined, optional
        Optional. A set of tags to apply to all underlying control plane Azure resources.
    version : str, default is Undefined, optional
        The Kubernetes version to run on control plane replicas (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
    vmSize : str, default is Undefined, optional
        Optional. The Azure VM size name. Example: Standard_DS2_v2. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to Standard_DS2_v2.
    """


    databaseEncryption?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0DatabaseEncryptionItems0]

    mainVolume?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0MainVolumeItems0]

    proxyConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0ProxyConfigItems0]

    replicaPlacements?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0ReplicaPlacementsItems0]

    rootVolume?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0RootVolumeItems0]

    sshConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0SSHConfigItems0]

    subnetId?: str

    tags?: {str:str}

    version?: str

    vmSize?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0DatabaseEncryptionItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0 database encryption items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: /subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name> Encryption will always take the latest version of the key and hence specific version is not supported.
    """


    keyId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0MainVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0 main volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0ProxyConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0 proxy config items0

    Attributes
    ----------
    resourceGroupId : str, default is Undefined, optional
        The ARM ID of the resource group where the cluster resources are deployed. For example: /subscriptions/*/resourceGroups/*
    secretId : str, default is Undefined, optional
        The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
    """


    resourceGroupId?: str

    secretId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0ReplicaPlacementsItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0 replica placements items0

    Attributes
    ----------
    azureAvailabilityZone : str, default is Undefined, optional
        For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
    subnetId : str, default is Undefined, optional
        For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
    """


    azureAvailabilityZone?: str

    subnetId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0RootVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0 root volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderControlPlaneItems0SSHConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider control plane items0 SSH config items0

    Attributes
    ----------
    authorizedKey : str, default is Undefined, optional
        The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
    """


    authorizedKey?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderFleetItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider fleet items0

    Attributes
    ----------
    project : str, default is Undefined, optional
        The number of the Fleet host project where this cluster will be registered.
    """


    project?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecInitProviderNetworkingItems0:
    """
    containerazure gcp upbound io v1beta1 cluster spec init provider networking items0

    Attributes
    ----------
    podAddressCidrBlocks : [str], default is Undefined, optional
        The IP address range of the pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
    serviceAddressCidrBlocks : [str], default is Undefined, optional
        The IP address range for services in this cluster, in CIDR notation (e.g. 10.96.0.0/14). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
    virtualNetworkId : str, default is Undefined, optional
        The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: /subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/* This field cannot be changed after creation.
    """


    podAddressCidrBlocks?: [str]

    serviceAddressCidrBlocks?: [str]

    virtualNetworkId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerazureGcpUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerazureGcpUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatus:
    """
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ContainerazureGcpUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusConditionsItems0]


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProvider:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
    authorization : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0], default is Undefined, optional
        Configuration related to the cluster RBAC settings.
    azureRegion : str, default is Undefined, optional
        The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
    azureServicesAuthentication : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAzureServicesAuthenticationItems0], default is Undefined, optional
        Azure authentication configuration for management of Azure resources
    client : str, default is Undefined, optional
        Name of the AzureClient. The AzureClient resource must reside on the same GCP project and region as the AzureCluster. AzureClient names are formatted as projects/<project-number>/locations/<region>/azureClients/<client-id>. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
    controlPlane : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0], default is Undefined, optional
        Configuration related to the cluster control plane.
    createTime : str, default is Undefined, optional
        Output only. The time at which this cluster was created.
    description : str, default is Undefined, optional
        Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
    effectiveAnnotations : {str:str}, default is Undefined, optional
        effective annotations
    endpoint : str, default is Undefined, optional
        Output only. The endpoint of the cluster's API server.
    etag : str, default is Undefined, optional
        Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
    fleet : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderFleetItems0], default is Undefined, optional
        Fleet configuration.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/azureClusters/{{name}}
    location : str, default is Undefined, optional
        The location for the resource
    networking : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderNetworkingItems0], default is Undefined, optional
        Cluster-wide networking configuration.
    project : str, default is Undefined, optional
        The project for the resource
    reconciling : bool, default is Undefined, optional
        Output only. If set, there are currently changes in flight to the cluster.
    resourceGroupId : str, default is Undefined, optional
        The ARM ID of the resource group where the cluster resources are deployed. For example: /subscriptions/*/resourceGroups/*
    state : str, default is Undefined, optional
        Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
    uid : str, default is Undefined, optional
        Output only. A globally unique identifier for the cluster.
    updateTime : str, default is Undefined, optional
        Output only. The time at which this cluster was last updated.
    workloadIdentityConfig : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderWorkloadIdentityConfigItems0], default is Undefined, optional
        Output only. Workload Identity settings.
    """


    annotations?: {str:str}

    authorization?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0]

    azureRegion?: str

    azureServicesAuthentication?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAzureServicesAuthenticationItems0]

    client?: str

    controlPlane?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0]

    createTime?: str

    description?: str

    effectiveAnnotations?: {str:str}

    endpoint?: str

    etag?: str

    fleet?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderFleetItems0]

    id?: str

    location?: str

    networking?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderNetworkingItems0]

    project?: str

    reconciling?: bool

    resourceGroupId?: str

    state?: str

    uid?: str

    updateTime?: str

    workloadIdentityConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderWorkloadIdentityConfigItems0]


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider authorization items0

    Attributes
    ----------
    adminGroups : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0AdminGroupsItems0], default is Undefined, optional
        Groups of users that can perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the groups. Up to ten admin groups can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    adminUsers : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0AdminUsersItems0], default is Undefined, optional
        Users that can perform operations as a cluster admin. A new ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
    """


    adminGroups?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0AdminGroupsItems0]

    adminUsers?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0AdminUsersItems0]


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0AdminGroupsItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider authorization items0 admin groups items0

    Attributes
    ----------
    group : str, default is Undefined, optional
        The name of the group, e.g. my-group@domain.com.
    """


    group?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAuthorizationItems0AdminUsersItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider authorization items0 admin users items0

    Attributes
    ----------
    username : str, default is Undefined, optional
        The name of the user, e.g. my-gcp-id@gmail.com.
    """


    username?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderAzureServicesAuthenticationItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider azure services authentication items0

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        The Azure Active Directory Application ID for Authentication configuration.
    tenantId : str, default is Undefined, optional
        The Azure Active Directory Tenant ID for Authentication configuration.
    """


    applicationId?: str

    tenantId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0

    Attributes
    ----------
    databaseEncryption : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0DatabaseEncryptionItems0], default is Undefined, optional
        Optional. Configuration related to application-layer secrets encryption.
    mainVolume : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0MainVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
    proxyConfig : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0ProxyConfigItems0], default is Undefined, optional
        Proxy configuration for outbound HTTP(S) traffic.
    replicaPlacements : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0ReplicaPlacementsItems0], default is Undefined, optional
        Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replica_placements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
    rootVolume : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0RootVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
    sshConfig : [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0SSHConfigItems0], default is Undefined, optional
        SSH configuration for how to access the underlying control plane machines.
    subnetId : str, default is Undefined, optional
        The ARM ID of the subnet where the control plane VMs are deployed. Example: /subscriptions//resourceGroups//providers/Microsoft.Network/virtualNetworks//subnets/default.
    tags : {str:str}, default is Undefined, optional
        Optional. A set of tags to apply to all underlying control plane Azure resources.
    version : str, default is Undefined, optional
        The Kubernetes version to run on control plane replicas (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
    vmSize : str, default is Undefined, optional
        Optional. The Azure VM size name. Example: Standard_DS2_v2. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to Standard_DS2_v2.
    """


    databaseEncryption?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0DatabaseEncryptionItems0]

    mainVolume?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0MainVolumeItems0]

    proxyConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0ProxyConfigItems0]

    replicaPlacements?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0ReplicaPlacementsItems0]

    rootVolume?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0RootVolumeItems0]

    sshConfig?: [ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0SSHConfigItems0]

    subnetId?: str

    tags?: {str:str}

    version?: str

    vmSize?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0DatabaseEncryptionItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0 database encryption items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ARM ID of the Azure Key Vault key to encrypt / decrypt data. For example: /subscriptions/<subscription-id>/resourceGroups/<resource-group-id>/providers/Microsoft.KeyVault/vaults/<key-vault-id>/keys/<key-name> Encryption will always take the latest version of the key and hence specific version is not supported.
    """


    keyId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0MainVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0 main volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0ProxyConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0 proxy config items0

    Attributes
    ----------
    resourceGroupId : str, default is Undefined, optional
        The ARM ID of the resource group where the cluster resources are deployed. For example: /subscriptions/*/resourceGroups/*
    secretId : str, default is Undefined, optional
        The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
    """


    resourceGroupId?: str

    secretId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0ReplicaPlacementsItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0 replica placements items0

    Attributes
    ----------
    azureAvailabilityZone : str, default is Undefined, optional
        For a given replica, the Azure availability zone where to provision the control plane VM and the ETCD disk.
    subnetId : str, default is Undefined, optional
        For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
    """


    azureAvailabilityZone?: str

    subnetId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0RootVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0 root volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderControlPlaneItems0SSHConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider control plane items0 SSH config items0

    Attributes
    ----------
    authorizedKey : str, default is Undefined, optional
        The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
    """


    authorizedKey?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderFleetItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider fleet items0

    Attributes
    ----------
    membership : str, default is Undefined, optional
        The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects//locations/global/membership/.
    project : str, default is Undefined, optional
        The number of the Fleet host project where this cluster will be registered.
    """


    membership?: str

    project?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderNetworkingItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider networking items0

    Attributes
    ----------
    podAddressCidrBlocks : [str], default is Undefined, optional
        The IP address range of the pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
    serviceAddressCidrBlocks : [str], default is Undefined, optional
        The IP address range for services in this cluster, in CIDR notation (e.g. 10.96.0.0/14). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
    virtualNetworkId : str, default is Undefined, optional
        The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: /subscriptions/*/resourceGroups/*/providers/Microsoft.Network/virtualNetworks/* This field cannot be changed after creation.
    """


    podAddressCidrBlocks?: [str]

    serviceAddressCidrBlocks?: [str]

    virtualNetworkId?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusAtProviderWorkloadIdentityConfigItems0:
    """
    containerazure gcp upbound io v1beta1 cluster status at provider workload identity config items0

    Attributes
    ----------
    identityProvider : str, default is Undefined, optional
        identity provider
    issuerUri : str, default is Undefined, optional
        issuer Uri
    workloadPool : str, default is Undefined, optional
        workload pool
    """


    identityProvider?: str

    issuerUri?: str

    workloadPool?: str


schema ContainerazureGcpUpboundIoV1beta1ClusterStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


