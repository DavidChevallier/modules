"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema WorkloadIdentityPoolProvider:
    """
    WorkloadIdentityPoolProvider is the Schema for the WorkloadIdentityPoolProviders API. A configuration for an external identity provider.

    Attributes
    ----------
    apiVersion : str, default is "iam.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "WorkloadIdentityPoolProvider", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpec, default is Undefined, required
        spec
    status : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatus, default is Undefined, optional
        status
    """


    apiVersion: "iam.gcp.upbound.io/v1beta1" = "iam.gcp.upbound.io/v1beta1"

    kind: "WorkloadIdentityPoolProvider" = "WorkloadIdentityPoolProvider"

    metadata?: v1.ObjectMeta

    spec: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpec

    status?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatus


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpec:
    """
    WorkloadIdentityPoolProviderSpec defines the desired state of WorkloadIdentityPoolProvider

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProvider, default is Undefined, required
        for provider
    initProvider : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProvider

    initProvider?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecProviderConfigRef

    publishConnectionDetailsTo?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecWriteConnectionSecretToRef


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProvider:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec for provider

    Attributes
    ----------
    attributeCondition : str, default is Undefined, optional
        A Common Expression Language expression, in
        plain text, to restrict what otherwise valid authentication credentials issued by the
        provider should not be accepted.
        The expression must output a boolean representing whether to allow the federation.
        The following keywords may be referenced in the expressions:
    attributeMapping : {str:str}, default is Undefined, optional
        Maps attributes from authentication credentials issued by an external identity provider
        to Google Cloud attributes, such as subject and segment.
        Each key must be a string specifying the Google Cloud IAM attribute to map to.
        The following keys are supported:
    aws : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderAwsItems0], default is Undefined, optional
        An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description for the provider. Cannot exceed 256 characters.
    disabled : bool, default is Undefined, optional
        Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
        However, existing tokens still grant access.
    displayName : str, default is Undefined, optional
        A display name for the provider. Cannot exceed 32 characters.
    oidc : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderOidcItems0], default is Undefined, optional
        An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    saml : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderSamlItems0], default is Undefined, optional
        An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
        Structure is documented below.
    workloadIdentityPoolId : str, default is Undefined, optional
        The ID used for the pool, which is the final component of the pool resource name. This
        value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
        gcp- is reserved for use by Google, and may not be specified.
    workloadIdentityPoolIdRef : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDRef, default is Undefined, optional
        workload identity pool Id ref
    workloadIdentityPoolIdSelector : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDSelector, default is Undefined, optional
        workload identity pool Id selector
    """


    attributeCondition?: str

    attributeMapping?: {str:str}

    aws?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderAwsItems0]

    description?: str

    disabled?: bool

    displayName?: str

    oidc?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderOidcItems0]

    project?: str

    saml?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderSamlItems0]

    workloadIdentityPoolId?: str

    workloadIdentityPoolIdRef?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDRef

    workloadIdentityPoolIdSelector?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDSelector


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderAwsItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec for provider aws items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The AWS account ID.
    """


    accountId?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderOidcItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec for provider oidc items0

    Attributes
    ----------
    allowedAudiences : [str], default is Undefined, optional
        Acceptable values for the aud field (audience) in the OIDC token. Token exchange
        requests are rejected if the token audience does not match one of the configured
        values. Each audience may be at most 256 characters. A maximum of 10 audiences may
        be configured.
        If this list is empty, the OIDC token audience must be equal to the full canonical
        resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
        For example:
    issuerUri : str, default is Undefined, optional
        The OIDC issuer URL.
    jwksJson : str, default is Undefined, optional
        OIDC JWKs in JSON String format. For details on definition of a
        JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
        use the jwks_uri from the discovery document fetched from the
        .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
        keys are supported. The JWK must use following format and include only
        the following fields:
    """


    allowedAudiences?: [str]

    issuerUri?: str

    jwksJson?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderSamlItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec for provider saml items0

    Attributes
    ----------
    idpMetadataXml : str, default is Undefined, optional
        SAML Identity provider configuration metadata xml doc.
    """


    idpMetadataXml?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDRef:
    """
    Reference to a WorkloadIdentityPool in iam to populate workloadIdentityPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDRefPolicy


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDSelector:
    """
    Selector for a WorkloadIdentityPool in iam to populate workloadIdentityPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDSelectorPolicy


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecForProviderWorkloadIdentityPoolIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    attributeCondition : str, default is Undefined, optional
        A Common Expression Language expression, in
        plain text, to restrict what otherwise valid authentication credentials issued by the
        provider should not be accepted.
        The expression must output a boolean representing whether to allow the federation.
        The following keywords may be referenced in the expressions:
    attributeMapping : {str:str}, default is Undefined, optional
        Maps attributes from authentication credentials issued by an external identity provider
        to Google Cloud attributes, such as subject and segment.
        Each key must be a string specifying the Google Cloud IAM attribute to map to.
        The following keys are supported:
    aws : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderAwsItems0], default is Undefined, optional
        An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description for the provider. Cannot exceed 256 characters.
    disabled : bool, default is Undefined, optional
        Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
        However, existing tokens still grant access.
    displayName : str, default is Undefined, optional
        A display name for the provider. Cannot exceed 32 characters.
    oidc : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderOidcItems0], default is Undefined, optional
        An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    saml : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderSamlItems0], default is Undefined, optional
        An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
        Structure is documented below.
    """


    attributeCondition?: str

    attributeMapping?: {str:str}

    aws?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderAwsItems0]

    description?: str

    disabled?: bool

    displayName?: str

    oidc?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderOidcItems0]

    project?: str

    saml?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderSamlItems0]


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderAwsItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec init provider aws items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The AWS account ID.
    """


    accountId?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderOidcItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec init provider oidc items0

    Attributes
    ----------
    allowedAudiences : [str], default is Undefined, optional
        Acceptable values for the aud field (audience) in the OIDC token. Token exchange
        requests are rejected if the token audience does not match one of the configured
        values. Each audience may be at most 256 characters. A maximum of 10 audiences may
        be configured.
        If this list is empty, the OIDC token audience must be equal to the full canonical
        resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
        For example:
    issuerUri : str, default is Undefined, optional
        The OIDC issuer URL.
    jwksJson : str, default is Undefined, optional
        OIDC JWKs in JSON String format. For details on definition of a
        JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
        use the jwks_uri from the discovery document fetched from the
        .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
        keys are supported. The JWK must use following format and include only
        the following fields:
    """


    allowedAudiences?: [str]

    issuerUri?: str

    jwksJson?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecInitProviderSamlItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider spec init provider saml items0

    Attributes
    ----------
    idpMetadataXml : str, default is Undefined, optional
        SAML Identity provider configuration metadata xml doc.
    """


    idpMetadataXml?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecProviderConfigRefPolicy


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToConfigRef

    metadata?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToMetadata

    name: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToConfigRefPolicy


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatus:
    """
    WorkloadIdentityPoolProviderStatus defines the observed state of WorkloadIdentityPoolProvider.

    Attributes
    ----------
    atProvider : IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProvider

    conditions?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusConditionsItems0]


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProvider:
    """
    iam gcp upbound io v1beta1 workload identity pool provider status at provider

    Attributes
    ----------
    attributeCondition : str, default is Undefined, optional
        A Common Expression Language expression, in
        plain text, to restrict what otherwise valid authentication credentials issued by the
        provider should not be accepted.
        The expression must output a boolean representing whether to allow the federation.
        The following keywords may be referenced in the expressions:
    attributeMapping : {str:str}, default is Undefined, optional
        Maps attributes from authentication credentials issued by an external identity provider
        to Google Cloud attributes, such as subject and segment.
        Each key must be a string specifying the Google Cloud IAM attribute to map to.
        The following keys are supported:
    aws : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderAwsItems0], default is Undefined, optional
        An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description for the provider. Cannot exceed 256 characters.
    disabled : bool, default is Undefined, optional
        Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
        However, existing tokens still grant access.
    displayName : str, default is Undefined, optional
        A display name for the provider. Cannot exceed 32 characters.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/providers/{{workload_identity_pool_provider_id}}
    name : str, default is Undefined, optional
        The resource name of the provider as
        projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}.
    oidc : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderOidcItems0], default is Undefined, optional
        An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    saml : [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderSamlItems0], default is Undefined, optional
        An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
        Structure is documented below.
    state : str, default is Undefined, optional
        The state of the provider.
    workloadIdentityPoolId : str, default is Undefined, optional
        The ID used for the pool, which is the final component of the pool resource name. This
        value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
        gcp- is reserved for use by Google, and may not be specified.
    """


    attributeCondition?: str

    attributeMapping?: {str:str}

    aws?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderAwsItems0]

    description?: str

    disabled?: bool

    displayName?: str

    id?: str

    name?: str

    oidc?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderOidcItems0]

    project?: str

    saml?: [IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderSamlItems0]

    state?: str

    workloadIdentityPoolId?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderAwsItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider status at provider aws items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The AWS account ID.
    """


    accountId?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderOidcItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider status at provider oidc items0

    Attributes
    ----------
    allowedAudiences : [str], default is Undefined, optional
        Acceptable values for the aud field (audience) in the OIDC token. Token exchange
        requests are rejected if the token audience does not match one of the configured
        values. Each audience may be at most 256 characters. A maximum of 10 audiences may
        be configured.
        If this list is empty, the OIDC token audience must be equal to the full canonical
        resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix.
        For example:
    issuerUri : str, default is Undefined, optional
        The OIDC issuer URL.
    jwksJson : str, default is Undefined, optional
        OIDC JWKs in JSON String format. For details on definition of a
        JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
        use the jwks_uri from the discovery document fetched from the
        .well-known path for the issuer_uri. Currently, RSA and EC asymmetric
        keys are supported. The JWK must use following format and include only
        the following fields:
    """


    allowedAudiences?: [str]

    issuerUri?: str

    jwksJson?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusAtProviderSamlItems0:
    """
    iam gcp upbound io v1beta1 workload identity pool provider status at provider saml items0

    Attributes
    ----------
    idpMetadataXml : str, default is Undefined, optional
        SAML Identity provider configuration metadata xml doc.
    """


    idpMetadataXml?: str


schema IamGcpUpboundIoV1beta1WorkloadIdentityPoolProviderStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


