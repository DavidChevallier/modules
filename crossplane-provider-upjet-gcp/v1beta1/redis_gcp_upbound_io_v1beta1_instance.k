"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API. A Google Cloud Redis instance.

    Attributes
    ----------
    apiVersion : str, default is "redis.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RedisGcpUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : RedisGcpUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "redis.gcp.upbound.io/v1beta1" = "redis.gcp.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: RedisGcpUpboundIoV1beta1InstanceSpec

    status?: RedisGcpUpboundIoV1beta1InstanceStatus


schema RedisGcpUpboundIoV1beta1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RedisGcpUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : RedisGcpUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RedisGcpUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RedisGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RedisGcpUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: RedisGcpUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RedisGcpUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RedisGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema RedisGcpUpboundIoV1beta1InstanceSpecForProvider:
    """
    redis gcp upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    alternativeLocationId : str, default is Undefined, optional
        Only applicable to STANDARD_HA tier which protects the instance
        against zonal failures by provisioning it across two zones.
        If provided, it must be a different zone from the one provided in
        [locationId].
    authEnabled : bool, default is Undefined, optional
        Optional. Indicates whether OSS Redis AUTH is enabled for the
        instance. If set to "true" AUTH is enabled on the instance.
        Default value is "false" meaning AUTH is disabled.
    authorizedNetwork : str, default is Undefined, optional
        The full name of the Google Compute Engine network to which the
        instance is connected. If left unspecified, the default network
        will be used.
    authorizedNetworkRef : RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRef, default is Undefined, optional
        authorized network ref
    authorizedNetworkSelector : RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelector, default is Undefined, optional
        authorized network selector
    connectMode : str, default is Undefined, optional
        The connection mode of the Redis instance.
        Default value is DIRECT_PEERING.
        Possible values are: DIRECT_PEERING, PRIVATE_SERVICE_ACCESS.
    customerManagedKey : str, default is Undefined, optional
        Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis
        instance. If this is provided, CMEK is enabled.
    customerManagedKeyRef : RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeyRef, default is Undefined, optional
        customer managed key ref
    customerManagedKeySelector : RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeySelector, default is Undefined, optional
        customer managed key selector
    displayName : str, default is Undefined, optional
        An arbitrary and optional user-provided name for the instance.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    locationId : str, default is Undefined, optional
        The zone where the instance will be provisioned. If not provided,
        the service will choose a zone for the instance. For STANDARD_HA tier,
        instances will be created across two zones for protection against
        zonal failures. If [alternativeLocationId] is also provided, it must
        be different from [locationId].
    maintenancePolicy : [RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0], default is Undefined, optional
        Maintenance policy for an instance.
        Structure is documented below.
    memorySizeGb : float, default is Undefined, optional
        Redis memory size in GiB.
    persistenceConfig : [RedisGcpUpboundIoV1beta1InstanceSpecForProviderPersistenceConfigItems0], default is Undefined, optional
        Persistence configuration for an instance.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    readReplicasMode : str, default is Undefined, optional
        Optional. Read replica mode. Can only be specified when trying to create the instance.
        If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.
    redisConfigs : {str:str}, default is Undefined, optional
        Redis configuration parameters, according to http://redis.io/topics/config.
        Please check Memorystore documentation for the list of supported parameters:
        https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
    redisVersion : str, default is Undefined, optional
        The version of Redis software. If not provided, latest supported
        version will be used. Please check the API documentation linked
        at the top for the latest valid values.
    region : str, default is Undefined, required
        The name of the Redis region of the instance.
    replicaCount : float, default is Undefined, optional
        Optional. The number of replica nodes. The valid range for the Standard Tier with
        read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled
        for a Standard Tier instance, the only valid value is 1 and the default is 1.
        The valid value for basic tier is 0 and the default is also 0.
    reservedIpRange : str, default is Undefined, optional
        The CIDR range of internal addresses that are reserved for this
        instance. If not provided, the service will choose an unused /29
        block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
        unique and non-overlapping with existing subnets in an authorized
        network.
    secondaryIpRange : str, default is Undefined, optional
        Optional. Additional IP range for node placement. Required when enabling read replicas on
        an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or
        "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address
        range associated with the private service access connection, or "auto".
    tier : str, default is Undefined, optional
        The service tier of the instance. Must be one of these values:
    transitEncryptionMode : str, default is Undefined, optional
        The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
    """


    alternativeLocationId?: str

    authEnabled?: bool

    authorizedNetwork?: str

    authorizedNetworkRef?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRef

    authorizedNetworkSelector?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelector

    connectMode?: str

    customerManagedKey?: str

    customerManagedKeyRef?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeyRef

    customerManagedKeySelector?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeySelector

    displayName?: str

    labels?: {str:str}

    locationId?: str

    maintenancePolicy?: [RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0]

    memorySizeGb?: float

    persistenceConfig?: [RedisGcpUpboundIoV1beta1InstanceSpecForProviderPersistenceConfigItems0]

    project?: str

    readReplicasMode?: str

    redisConfigs?: {str:str}

    redisVersion?: str

    region: str

    replicaCount?: float

    reservedIpRange?: str

    secondaryIpRange?: str

    tier?: str

    transitEncryptionMode?: str


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRef:
    """
    Reference to a Network in compute to populate authorizedNetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRefPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelector:
    """
    Selector for a Network in compute to populate authorizedNetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelectorPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeyRef:
    """
    Reference to a CryptoKey in kms to populate customerManagedKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeyRefPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeyRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeySelector:
    """
    Selector for a CryptoKey in kms to populate customerManagedKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeySelectorPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderCustomerManagedKeySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0:
    """
    redis gcp upbound io v1beta1 instance spec for provider maintenance policy items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of what this policy is for.
        Create/Update methods return INVALID_ARGUMENT if the
        length is greater than 512.
    weeklyMaintenanceWindow : [RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0], default is Undefined, optional
        Optional. Maintenance window that is applied to resources covered by this policy.
        Minimum 1. For the current version, the maximum number
        of weekly_window is expected to be one.
        Structure is documented below.
    """


    description?: str

    weeklyMaintenanceWindow?: [RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0]


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0:
    """
    redis gcp upbound io v1beta1 instance spec for provider maintenance policy items0 weekly maintenance window items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        Required. The day of week that maintenance updates occur.
    startTime : [RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0], default is Undefined, optional
        Required. Start time of the window in UTC time.
        Structure is documented below.
    """


    day?: str

    startTime?: [RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0]


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0:
    """
    redis gcp upbound io v1beta1 instance spec for provider maintenance policy items0 weekly maintenance window items0 start time items0

    Attributes
    ----------
    hours : float, default is Undefined, optional
        Hours of day in 24 hour format. Should be from 0 to 23.
        An API may choose to allow the value "24:00:00" for scenarios like business closing time.
    minutes : float, default is Undefined, optional
        Minutes of hour of day. Must be from 0 to 59.
    nanos : float, default is Undefined, optional
        Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    seconds : float, default is Undefined, optional
        Seconds of minutes of the time. Must normally be from 0 to 59.
        An API may allow the value 60 if it allows leap-seconds.
    """


    hours?: float

    minutes?: float

    nanos?: float

    seconds?: float


schema RedisGcpUpboundIoV1beta1InstanceSpecForProviderPersistenceConfigItems0:
    """
    redis gcp upbound io v1beta1 instance spec for provider persistence config items0

    Attributes
    ----------
    persistenceMode : str, default is Undefined, optional
        Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
    rdbSnapshotPeriod : str, default is Undefined, optional
        Optional. Available snapshot periods for scheduling.
    rdbSnapshotStartTime : str, default is Undefined, optional
        Optional. Date and time that the first snapshot was/will be attempted,
        and to which future snapshots will be aligned. If not provided,
        the current time will be used.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
        and up to nine fractional digits.
        Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    persistenceMode?: str

    rdbSnapshotPeriod?: str

    rdbSnapshotStartTime?: str


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alternativeLocationId : str, default is Undefined, optional
        Only applicable to STANDARD_HA tier which protects the instance
        against zonal failures by provisioning it across two zones.
        If provided, it must be a different zone from the one provided in
        [locationId].
    authEnabled : bool, default is Undefined, optional
        Optional. Indicates whether OSS Redis AUTH is enabled for the
        instance. If set to "true" AUTH is enabled on the instance.
        Default value is "false" meaning AUTH is disabled.
    authorizedNetwork : str, default is Undefined, optional
        The full name of the Google Compute Engine network to which the
        instance is connected. If left unspecified, the default network
        will be used.
    authorizedNetworkRef : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRef, default is Undefined, optional
        authorized network ref
    authorizedNetworkSelector : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelector, default is Undefined, optional
        authorized network selector
    connectMode : str, default is Undefined, optional
        The connection mode of the Redis instance.
        Default value is DIRECT_PEERING.
        Possible values are: DIRECT_PEERING, PRIVATE_SERVICE_ACCESS.
    customerManagedKey : str, default is Undefined, optional
        Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis
        instance. If this is provided, CMEK is enabled.
    customerManagedKeyRef : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeyRef, default is Undefined, optional
        customer managed key ref
    customerManagedKeySelector : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeySelector, default is Undefined, optional
        customer managed key selector
    displayName : str, default is Undefined, optional
        An arbitrary and optional user-provided name for the instance.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    locationId : str, default is Undefined, optional
        The zone where the instance will be provisioned. If not provided,
        the service will choose a zone for the instance. For STANDARD_HA tier,
        instances will be created across two zones for protection against
        zonal failures. If [alternativeLocationId] is also provided, it must
        be different from [locationId].
    maintenancePolicy : [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0], default is Undefined, optional
        Maintenance policy for an instance.
        Structure is documented below.
    memorySizeGb : float, default is Undefined, optional
        Redis memory size in GiB.
    persistenceConfig : [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderPersistenceConfigItems0], default is Undefined, optional
        Persistence configuration for an instance.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    readReplicasMode : str, default is Undefined, optional
        Optional. Read replica mode. Can only be specified when trying to create the instance.
        If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.
    redisConfigs : {str:str}, default is Undefined, optional
        Redis configuration parameters, according to http://redis.io/topics/config.
        Please check Memorystore documentation for the list of supported parameters:
        https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
    redisVersion : str, default is Undefined, optional
        The version of Redis software. If not provided, latest supported
        version will be used. Please check the API documentation linked
        at the top for the latest valid values.
    replicaCount : float, default is Undefined, optional
        Optional. The number of replica nodes. The valid range for the Standard Tier with
        read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled
        for a Standard Tier instance, the only valid value is 1 and the default is 1.
        The valid value for basic tier is 0 and the default is also 0.
    reservedIpRange : str, default is Undefined, optional
        The CIDR range of internal addresses that are reserved for this
        instance. If not provided, the service will choose an unused /29
        block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
        unique and non-overlapping with existing subnets in an authorized
        network.
    secondaryIpRange : str, default is Undefined, optional
        Optional. Additional IP range for node placement. Required when enabling read replicas on
        an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or
        "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address
        range associated with the private service access connection, or "auto".
    tier : str, default is Undefined, optional
        The service tier of the instance. Must be one of these values:
    transitEncryptionMode : str, default is Undefined, optional
        The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
    """


    alternativeLocationId?: str

    authEnabled?: bool

    authorizedNetwork?: str

    authorizedNetworkRef?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRef

    authorizedNetworkSelector?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelector

    connectMode?: str

    customerManagedKey?: str

    customerManagedKeyRef?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeyRef

    customerManagedKeySelector?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeySelector

    displayName?: str

    labels?: {str:str}

    locationId?: str

    maintenancePolicy?: [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0]

    memorySizeGb?: float

    persistenceConfig?: [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderPersistenceConfigItems0]

    project?: str

    readReplicasMode?: str

    redisConfigs?: {str:str}

    redisVersion?: str

    replicaCount?: float

    reservedIpRange?: str

    secondaryIpRange?: str

    tier?: str

    transitEncryptionMode?: str


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRef:
    """
    Reference to a Network in compute to populate authorizedNetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRefPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelector:
    """
    Selector for a Network in compute to populate authorizedNetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelectorPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeyRef:
    """
    Reference to a CryptoKey in kms to populate customerManagedKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeyRefPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeyRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeySelector:
    """
    Selector for a CryptoKey in kms to populate customerManagedKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeySelectorPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderCustomerManagedKeySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0:
    """
    redis gcp upbound io v1beta1 instance spec init provider maintenance policy items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of what this policy is for.
        Create/Update methods return INVALID_ARGUMENT if the
        length is greater than 512.
    weeklyMaintenanceWindow : [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0], default is Undefined, optional
        Optional. Maintenance window that is applied to resources covered by this policy.
        Minimum 1. For the current version, the maximum number
        of weekly_window is expected to be one.
        Structure is documented below.
    """


    description?: str

    weeklyMaintenanceWindow?: [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0]


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0:
    """
    redis gcp upbound io v1beta1 instance spec init provider maintenance policy items0 weekly maintenance window items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        Required. The day of week that maintenance updates occur.
    startTime : [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0], default is Undefined, optional
        Required. Start time of the window in UTC time.
        Structure is documented below.
    """


    day?: str

    startTime?: [RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0]


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0:
    """
    redis gcp upbound io v1beta1 instance spec init provider maintenance policy items0 weekly maintenance window items0 start time items0

    Attributes
    ----------
    hours : float, default is Undefined, optional
        Hours of day in 24 hour format. Should be from 0 to 23.
        An API may choose to allow the value "24:00:00" for scenarios like business closing time.
    minutes : float, default is Undefined, optional
        Minutes of hour of day. Must be from 0 to 59.
    nanos : float, default is Undefined, optional
        Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    seconds : float, default is Undefined, optional
        Seconds of minutes of the time. Must normally be from 0 to 59.
        An API may allow the value 60 if it allows leap-seconds.
    """


    hours?: float

    minutes?: float

    nanos?: float

    seconds?: float


schema RedisGcpUpboundIoV1beta1InstanceSpecInitProviderPersistenceConfigItems0:
    """
    redis gcp upbound io v1beta1 instance spec init provider persistence config items0

    Attributes
    ----------
    persistenceMode : str, default is Undefined, optional
        Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
    rdbSnapshotPeriod : str, default is Undefined, optional
        Optional. Available snapshot periods for scheduling.
    rdbSnapshotStartTime : str, default is Undefined, optional
        Optional. Date and time that the first snapshot was/will be attempted,
        and to which future snapshots will be aligned. If not provided,
        the current time will be used.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
        and up to nine fractional digits.
        Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    persistenceMode?: str

    rdbSnapshotPeriod?: str

    rdbSnapshotStartTime?: str


schema RedisGcpUpboundIoV1beta1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedisGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RedisGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RedisGcpUpboundIoV1beta1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : RedisGcpUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RedisGcpUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: RedisGcpUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [RedisGcpUpboundIoV1beta1InstanceStatusConditionsItems0]


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProvider:
    """
    redis gcp upbound io v1beta1 instance status at provider

    Attributes
    ----------
    alternativeLocationId : str, default is Undefined, optional
        Only applicable to STANDARD_HA tier which protects the instance
        against zonal failures by provisioning it across two zones.
        If provided, it must be a different zone from the one provided in
        [locationId].
    authEnabled : bool, default is Undefined, optional
        Optional. Indicates whether OSS Redis AUTH is enabled for the
        instance. If set to "true" AUTH is enabled on the instance.
        Default value is "false" meaning AUTH is disabled.
    authorizedNetwork : str, default is Undefined, optional
        The full name of the Google Compute Engine network to which the
        instance is connected. If left unspecified, the default network
        will be used.
    connectMode : str, default is Undefined, optional
        The connection mode of the Redis instance.
        Default value is DIRECT_PEERING.
        Possible values are: DIRECT_PEERING, PRIVATE_SERVICE_ACCESS.
    createTime : str, default is Undefined, optional
        The time the instance was created in RFC3339 UTC "Zulu" format,
        accurate to nanoseconds.
    currentLocationId : str, default is Undefined, optional
        The current zone where the Redis endpoint is placed.
        For Basic Tier instances, this will always be the same as the
        [locationId] provided by the user at creation time. For Standard Tier
        instances, this can be either [locationId] or [alternativeLocationId]
        and can change after a failover event.
    customerManagedKey : str, default is Undefined, optional
        Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis
        instance. If this is provided, CMEK is enabled.
    displayName : str, default is Undefined, optional
        An arbitrary and optional user-provided name for the instance.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    host : str, default is Undefined, optional
        Hostname or IP address of the exposed Redis endpoint used by clients
        to connect to the service.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{region}}/instances/{{name}}
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    locationId : str, default is Undefined, optional
        The zone where the instance will be provisioned. If not provided,
        the service will choose a zone for the instance. For STANDARD_HA tier,
        instances will be created across two zones for protection against
        zonal failures. If [alternativeLocationId] is also provided, it must
        be different from [locationId].
    maintenancePolicy : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0], default is Undefined, optional
        Maintenance policy for an instance.
        Structure is documented below.
    maintenanceSchedule : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenanceScheduleItems0], default is Undefined, optional
        Upcoming maintenance schedule.
        Structure is documented below.
    memorySizeGb : float, default is Undefined, optional
        Redis memory size in GiB.
    nodes : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderNodesItems0], default is Undefined, optional
        Output only. Info per node.
        Structure is documented below.
    persistenceConfig : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderPersistenceConfigItems0], default is Undefined, optional
        Persistence configuration for an instance.
        Structure is documented below.
    persistenceIamIdentity : str, default is Undefined, optional
        Output only. Cloud IAM identity used by import / export operations
        to transfer data to/from Cloud Storage. Format is "serviceAccount:".
        The value may change over time for a given instance so should be
        checked before each import/export operation.
    port : float, default is Undefined, optional
        The port number of the exposed Redis endpoint.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    readEndpoint : str, default is Undefined, optional
        Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only.
        Targets all healthy replica nodes in instance. Replication is asynchronous and replica nodes
        will exhibit some lag behind the primary. Write requests must target 'host'.
    readEndpointPort : float, default is Undefined, optional
        Output only. The port number of the exposed readonly redis endpoint. Standard tier only.
        Write requests should target 'port'.
    readReplicasMode : str, default is Undefined, optional
        Optional. Read replica mode. Can only be specified when trying to create the instance.
        If not set, Memorystore Redis backend will default to READ_REPLICAS_DISABLED.
    redisConfigs : {str:str}, default is Undefined, optional
        Redis configuration parameters, according to http://redis.io/topics/config.
        Please check Memorystore documentation for the list of supported parameters:
        https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
    redisVersion : str, default is Undefined, optional
        The version of Redis software. If not provided, latest supported
        version will be used. Please check the API documentation linked
        at the top for the latest valid values.
    region : str, default is Undefined, optional
        The name of the Redis region of the instance.
    replicaCount : float, default is Undefined, optional
        Optional. The number of replica nodes. The valid range for the Standard Tier with
        read replicas enabled is [1-5] and defaults to 2. If read replicas are not enabled
        for a Standard Tier instance, the only valid value is 1 and the default is 1.
        The valid value for basic tier is 0 and the default is also 0.
    reservedIpRange : str, default is Undefined, optional
        The CIDR range of internal addresses that are reserved for this
        instance. If not provided, the service will choose an unused /29
        block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be
        unique and non-overlapping with existing subnets in an authorized
        network.
    secondaryIpRange : str, default is Undefined, optional
        Optional. Additional IP range for node placement. Required when enabling read replicas on
        an existing instance. For DIRECT_PEERING mode value must be a CIDR range of size /28, or
        "auto". For PRIVATE_SERVICE_ACCESS mode value must be the name of an allocated address
        range associated with the private service access connection, or "auto".
    serverCaCerts : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderServerCaCertsItems0], default is Undefined, optional
        List of server CA certificates for the instance.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    tier : str, default is Undefined, optional
        The service tier of the instance. Must be one of these values:
    transitEncryptionMode : str, default is Undefined, optional
        The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance.
    """


    alternativeLocationId?: str

    authEnabled?: bool

    authorizedNetwork?: str

    connectMode?: str

    createTime?: str

    currentLocationId?: str

    customerManagedKey?: str

    displayName?: str

    effectiveLabels?: {str:str}

    host?: str

    id?: str

    labels?: {str:str}

    locationId?: str

    maintenancePolicy?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0]

    maintenanceSchedule?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenanceScheduleItems0]

    memorySizeGb?: float

    nodes?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderNodesItems0]

    persistenceConfig?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderPersistenceConfigItems0]

    persistenceIamIdentity?: str

    port?: float

    project?: str

    readEndpoint?: str

    readEndpointPort?: float

    readReplicasMode?: str

    redisConfigs?: {str:str}

    redisVersion?: str

    region?: str

    replicaCount?: float

    reservedIpRange?: str

    secondaryIpRange?: str

    serverCaCerts?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderServerCaCertsItems0]

    terraformLabels?: {str:str}

    tier?: str

    transitEncryptionMode?: str


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider maintenance policy items0

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        (Output)
        Output only. The time when the policy was created.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    description : str, default is Undefined, optional
        Optional. Description of what this policy is for.
        Create/Update methods return INVALID_ARGUMENT if the
        length is greater than 512.
    updateTime : str, default is Undefined, optional
        (Output)
        Output only. The time when the policy was last updated.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    weeklyMaintenanceWindow : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0], default is Undefined, optional
        Optional. Maintenance window that is applied to resources covered by this policy.
        Minimum 1. For the current version, the maximum number
        of weekly_window is expected to be one.
        Structure is documented below.
    """


    createTime?: str

    description?: str

    updateTime?: str

    weeklyMaintenanceWindow?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0]


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider maintenance policy items0 weekly maintenance window items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        Required. The day of week that maintenance updates occur.
    duration : str, default is Undefined, optional
        (Output)
        Output only. Duration of the maintenance window.
        The current window is fixed at 1 hour.
        A duration in seconds with up to nine fractional digits,
        terminated by 's'. Example: "3.5s".
    startTime : [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0], default is Undefined, optional
        Required. Start time of the window in UTC time.
        Structure is documented below.
    """


    day?: str

    duration?: str

    startTime?: [RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0]


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider maintenance policy items0 weekly maintenance window items0 start time items0

    Attributes
    ----------
    hours : float, default is Undefined, optional
        Hours of day in 24 hour format. Should be from 0 to 23.
        An API may choose to allow the value "24:00:00" for scenarios like business closing time.
    minutes : float, default is Undefined, optional
        Minutes of hour of day. Must be from 0 to 59.
    nanos : float, default is Undefined, optional
        Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    seconds : float, default is Undefined, optional
        Seconds of minutes of the time. Must normally be from 0 to 59.
        An API may allow the value 60 if it allows leap-seconds.
    """


    hours?: float

    minutes?: float

    nanos?: float

    seconds?: float


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenanceScheduleItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider maintenance schedule items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        (Output)
        Output only. The end time of any upcoming scheduled maintenance for this instance.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    scheduleDeadlineTime : str, default is Undefined, optional
        (Output)
        Output only. The deadline that the maintenance schedule start time
        can not go beyond, including reschedule.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    startTime : str, default is Undefined, optional
        (Output)
        Output only. The start time of any upcoming scheduled maintenance for this instance.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    """


    endTime?: str

    scheduleDeadlineTime?: str

    startTime?: str


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderNodesItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider nodes items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        (Output)
        Node identifying string. e.g. 'node-0', 'node-1'
    zone : str, default is Undefined, optional
        (Output)
        Location of the node.
    """


    id?: str

    zone?: str


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderPersistenceConfigItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider persistence config items0

    Attributes
    ----------
    persistenceMode : str, default is Undefined, optional
        Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
    rdbNextSnapshotTime : str, default is Undefined, optional
        (Output)
        Output only. The next time that a snapshot attempt is scheduled to occur.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
        to nine fractional digits.
        Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    rdbSnapshotPeriod : str, default is Undefined, optional
        Optional. Available snapshot periods for scheduling.
    rdbSnapshotStartTime : str, default is Undefined, optional
        Optional. Date and time that the first snapshot was/will be attempted,
        and to which future snapshots will be aligned. If not provided,
        the current time will be used.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution
        and up to nine fractional digits.
        Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    persistenceMode?: str

    rdbNextSnapshotTime?: str

    rdbSnapshotPeriod?: str

    rdbSnapshotStartTime?: str


schema RedisGcpUpboundIoV1beta1InstanceStatusAtProviderServerCaCertsItems0:
    """
    redis gcp upbound io v1beta1 instance status at provider server ca certs items0

    Attributes
    ----------
    cert : str, default is Undefined, optional
        (Output)
        The certificate data in PEM format.
    createTime : str, default is Undefined, optional
        (Output)
        The time when the certificate was created.
    expireTime : str, default is Undefined, optional
        (Output)
        The time when the certificate expires.
    serialNumber : str, default is Undefined, optional
        (Output)
        Serial number, as extracted from the certificate.
    sha1Fingerprint : str, default is Undefined, optional
        (Output)
        Sha1 Fingerprint of the certificate.
    """


    cert?: str

    createTime?: str

    expireTime?: str

    serialNumber?: str

    sha1Fingerprint?: str


schema RedisGcpUpboundIoV1beta1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


