"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Node:
    """
    Node is the Schema for the Nodes API. A Cloud TPU instance.

    Attributes
    ----------
    apiVersion : str, default is "tpu.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Node", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TpuGcpUpboundIoV1beta1NodeSpec, default is Undefined, required
        spec
    status : TpuGcpUpboundIoV1beta1NodeStatus, default is Undefined, optional
        status
    """


    apiVersion: "tpu.gcp.upbound.io/v1beta1" = "tpu.gcp.upbound.io/v1beta1"

    kind: "Node" = "Node"

    metadata?: v1.ObjectMeta

    spec: TpuGcpUpboundIoV1beta1NodeSpec

    status?: TpuGcpUpboundIoV1beta1NodeStatus


schema TpuGcpUpboundIoV1beta1NodeSpec:
    """
    NodeSpec defines the desired state of Node

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : TpuGcpUpboundIoV1beta1NodeSpecForProvider, default is Undefined, required
        for provider
    initProvider : TpuGcpUpboundIoV1beta1NodeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : TpuGcpUpboundIoV1beta1NodeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : TpuGcpUpboundIoV1beta1NodeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: TpuGcpUpboundIoV1beta1NodeSpecForProvider

    initProvider?: TpuGcpUpboundIoV1beta1NodeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: TpuGcpUpboundIoV1beta1NodeSpecProviderConfigRef

    publishConnectionDetailsTo?: TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: TpuGcpUpboundIoV1beta1NodeSpecWriteConnectionSecretToRef


schema TpuGcpUpboundIoV1beta1NodeSpecForProvider:
    """
    tpu gcp upbound io v1beta1 node spec for provider

    Attributes
    ----------
    acceleratorType : str, default is Undefined, optional
        The type of hardware accelerators associated with this node.
    cidrBlock : str, default is Undefined, optional
        The CIDR block that the TPU node will use when selecting an IP
        address. This CIDR block must be a /29 block; the Compute Engine
        networks API forbids a smaller block, and using a larger block would
        be wasteful (a node can only consume one IP address).
        Errors will occur if the CIDR block has already been used for a
        currently existing TPU node, the CIDR block conflicts with any
        subnetworks in the user's provided network, or the provided network
        is peered with another network that is using that CIDR block.
    description : str, default is Undefined, optional
        The user-supplied description of the TPU. Maximum of 512 characters.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    network : str, default is Undefined, optional
        The name of a network to peer the TPU node to. It must be a
        preexisting Compute Engine network inside of the project on which
        this API has been activated. If none is provided, "default" will be
        used.
    networkRef : TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    schedulingConfig : [TpuGcpUpboundIoV1beta1NodeSpecForProviderSchedulingConfigItems0], default is Undefined, optional
        Sets the scheduling options for this TPU instance.
        Structure is documented below.
    tensorflowVersion : str, default is Undefined, optional
        The version of Tensorflow running in the Node.
    useServiceNetworking : bool, default is Undefined, optional
        Whether the VPC peering for the node is set up through Service Networking API.
        The VPC Peering should be set up before provisioning the node. If this field is set,
        cidr_block field should not be specified. If the network that you want to peer the
        TPU Node to is a Shared VPC network, the node must be created with this this field enabled.
    zone : str, default is Undefined, required
        The GCP location for the TPU. If it is not provided, the provider zone is used.
    """


    acceleratorType?: str

    cidrBlock?: str

    description?: str

    labels?: {str:str}

    network?: str

    networkRef?: TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkRef

    networkSelector?: TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkSelector

    project?: str

    schedulingConfig?: [TpuGcpUpboundIoV1beta1NodeSpecForProviderSchedulingConfigItems0]

    tensorflowVersion?: str

    useServiceNetworking?: bool

    zone: str


schema TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkRef:
    """
    Reference to a Connection in servicenetworking to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkRefPolicy


schema TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkSelector:
    """
    Selector for a Connection in servicenetworking to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkSelectorPolicy


schema TpuGcpUpboundIoV1beta1NodeSpecForProviderNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TpuGcpUpboundIoV1beta1NodeSpecForProviderSchedulingConfigItems0:
    """
    tpu gcp upbound io v1beta1 node spec for provider scheduling config items0

    Attributes
    ----------
    preemptible : bool, default is Undefined, optional
        Defines whether the TPU instance is preemptible.
    """


    preemptible?: bool


schema TpuGcpUpboundIoV1beta1NodeSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    acceleratorType : str, default is Undefined, optional
        The type of hardware accelerators associated with this node.
    cidrBlock : str, default is Undefined, optional
        The CIDR block that the TPU node will use when selecting an IP
        address. This CIDR block must be a /29 block; the Compute Engine
        networks API forbids a smaller block, and using a larger block would
        be wasteful (a node can only consume one IP address).
        Errors will occur if the CIDR block has already been used for a
        currently existing TPU node, the CIDR block conflicts with any
        subnetworks in the user's provided network, or the provided network
        is peered with another network that is using that CIDR block.
    description : str, default is Undefined, optional
        The user-supplied description of the TPU. Maximum of 512 characters.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    network : str, default is Undefined, optional
        The name of a network to peer the TPU node to. It must be a
        preexisting Compute Engine network inside of the project on which
        this API has been activated. If none is provided, "default" will be
        used.
    networkRef : TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    schedulingConfig : [TpuGcpUpboundIoV1beta1NodeSpecInitProviderSchedulingConfigItems0], default is Undefined, optional
        Sets the scheduling options for this TPU instance.
        Structure is documented below.
    tensorflowVersion : str, default is Undefined, optional
        The version of Tensorflow running in the Node.
    useServiceNetworking : bool, default is Undefined, optional
        Whether the VPC peering for the node is set up through Service Networking API.
        The VPC Peering should be set up before provisioning the node. If this field is set,
        cidr_block field should not be specified. If the network that you want to peer the
        TPU Node to is a Shared VPC network, the node must be created with this this field enabled.
    """


    acceleratorType?: str

    cidrBlock?: str

    description?: str

    labels?: {str:str}

    network?: str

    networkRef?: TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkRef

    networkSelector?: TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkSelector

    project?: str

    schedulingConfig?: [TpuGcpUpboundIoV1beta1NodeSpecInitProviderSchedulingConfigItems0]

    tensorflowVersion?: str

    useServiceNetworking?: bool


schema TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkRef:
    """
    Reference to a Connection in servicenetworking to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkRefPolicy


schema TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkSelector:
    """
    Selector for a Connection in servicenetworking to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkSelectorPolicy


schema TpuGcpUpboundIoV1beta1NodeSpecInitProviderNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TpuGcpUpboundIoV1beta1NodeSpecInitProviderSchedulingConfigItems0:
    """
    tpu gcp upbound io v1beta1 node spec init provider scheduling config items0

    Attributes
    ----------
    preemptible : bool, default is Undefined, optional
        Defines whether the TPU instance is preemptible.
    """


    preemptible?: bool


schema TpuGcpUpboundIoV1beta1NodeSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TpuGcpUpboundIoV1beta1NodeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TpuGcpUpboundIoV1beta1NodeSpecProviderConfigRefPolicy


schema TpuGcpUpboundIoV1beta1NodeSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToConfigRef

    metadata?: TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToMetadata

    name: str


schema TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToConfigRefPolicy


schema TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TpuGcpUpboundIoV1beta1NodeSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema TpuGcpUpboundIoV1beta1NodeSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema TpuGcpUpboundIoV1beta1NodeStatus:
    """
    NodeStatus defines the observed state of Node.

    Attributes
    ----------
    atProvider : TpuGcpUpboundIoV1beta1NodeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [TpuGcpUpboundIoV1beta1NodeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: TpuGcpUpboundIoV1beta1NodeStatusAtProvider

    conditions?: [TpuGcpUpboundIoV1beta1NodeStatusConditionsItems0]


schema TpuGcpUpboundIoV1beta1NodeStatusAtProvider:
    """
    tpu gcp upbound io v1beta1 node status at provider

    Attributes
    ----------
    acceleratorType : str, default is Undefined, optional
        The type of hardware accelerators associated with this node.
    cidrBlock : str, default is Undefined, optional
        The CIDR block that the TPU node will use when selecting an IP
        address. This CIDR block must be a /29 block; the Compute Engine
        networks API forbids a smaller block, and using a larger block would
        be wasteful (a node can only consume one IP address).
        Errors will occur if the CIDR block has already been used for a
        currently existing TPU node, the CIDR block conflicts with any
        subnetworks in the user's provided network, or the provided network
        is peered with another network that is using that CIDR block.
    description : str, default is Undefined, optional
        The user-supplied description of the TPU. Maximum of 512 characters.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{zone}}/nodes/{{name}}
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    network : str, default is Undefined, optional
        The name of a network to peer the TPU node to. It must be a
        preexisting Compute Engine network inside of the project on which
        this API has been activated. If none is provided, "default" will be
        used.
    networkEndpoints : [TpuGcpUpboundIoV1beta1NodeStatusAtProviderNetworkEndpointsItems0], default is Undefined, optional
        The network endpoints where TPU workers can be accessed and sent work.
        It is recommended that Tensorflow clients of the node first reach out
        to the first (index 0) entry.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    schedulingConfig : [TpuGcpUpboundIoV1beta1NodeStatusAtProviderSchedulingConfigItems0], default is Undefined, optional
        Sets the scheduling options for this TPU instance.
        Structure is documented below.
    serviceAccount : str, default is Undefined, optional
        The service account used to run the tensor flow services within the
        node. To share resources, including Google Cloud Storage data, with
        the Tensorflow job running in the Node, this account must have
        permissions to that data.
    tensorflowVersion : str, default is Undefined, optional
        The version of Tensorflow running in the Node.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    useServiceNetworking : bool, default is Undefined, optional
        Whether the VPC peering for the node is set up through Service Networking API.
        The VPC Peering should be set up before provisioning the node. If this field is set,
        cidr_block field should not be specified. If the network that you want to peer the
        TPU Node to is a Shared VPC network, the node must be created with this this field enabled.
    zone : str, default is Undefined, optional
        The GCP location for the TPU. If it is not provided, the provider zone is used.
    """


    acceleratorType?: str

    cidrBlock?: str

    description?: str

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    network?: str

    networkEndpoints?: [TpuGcpUpboundIoV1beta1NodeStatusAtProviderNetworkEndpointsItems0]

    project?: str

    schedulingConfig?: [TpuGcpUpboundIoV1beta1NodeStatusAtProviderSchedulingConfigItems0]

    serviceAccount?: str

    tensorflowVersion?: str

    terraformLabels?: {str:str}

    useServiceNetworking?: bool

    zone?: str


schema TpuGcpUpboundIoV1beta1NodeStatusAtProviderNetworkEndpointsItems0:
    """
    tpu gcp upbound io v1beta1 node status at provider network endpoints items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        (Output)
        The IP address of this network endpoint.
    port : float, default is Undefined, optional
        (Output)
        The port of this network endpoint.
    """


    ipAddress?: str

    port?: float


schema TpuGcpUpboundIoV1beta1NodeStatusAtProviderSchedulingConfigItems0:
    """
    tpu gcp upbound io v1beta1 node status at provider scheduling config items0

    Attributes
    ----------
    preemptible : bool, default is Undefined, optional
        Defines whether the TPU instance is preemptible.
    """


    preemptible?: bool


schema TpuGcpUpboundIoV1beta1NodeStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


