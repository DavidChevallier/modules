"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MetricDescriptor:
    """
    MetricDescriptor is the Schema for the MetricDescriptors API. Defines a metric type and its schema.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MetricDescriptor", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpec, default is Undefined, required
        spec
    status : MonitoringGcpUpboundIoV1beta1MetricDescriptorStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.gcp.upbound.io/v1beta1" = "monitoring.gcp.upbound.io/v1beta1"

    kind: "MetricDescriptor" = "MetricDescriptor"

    metadata?: v1.ObjectMeta

    spec: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpec

    status?: MonitoringGcpUpboundIoV1beta1MetricDescriptorStatus


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpec:
    """
    MetricDescriptorSpec defines the desired state of MetricDescriptor

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProvider, default is Undefined, required
        for provider
    initProvider : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProvider

    initProvider?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecProviderConfigRef

    publishConnectionDetailsTo?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecWriteConnectionSecretToRef


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProvider:
    """
    monitoring gcp upbound io v1beta1 metric descriptor spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A detailed description of the metric, which can be used in documentation.
    displayName : str, default is Undefined, optional
        A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example "Request count".
    labels : [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProviderLabelsItems0], default is Undefined, optional
        The set of labels that can be used to describe a specific instance of this metric type. In order to delete a label, the entire resource must be deleted, then created with the desired labels.
        Structure is documented below.
    launchStage : str, default is Undefined, optional
        The launch stage of the metric definition.
        Possible values are: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
    metadata : [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProviderMetadataItems0], default is Undefined, optional
        Metadata which can be used to guide usage of the metric.
        Structure is documented below.
    metricKind : str, default is Undefined, optional
        Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metricKind and valueType might not be supported.
        Possible values are: METRIC_KIND_UNSPECIFIED, GAUGE, DELTA, CUMULATIVE.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $type : str, default is Undefined, optional
        The metric type, including its DNS name prefix. The type is not URL-encoded. All service defined metrics must be prefixed with the service name, in the format of {service name}/{relative metric name}, such as cloudsql.googleapis.com/database/cpu/utilization. The relative metric name must have only upper and lower-case letters, digits, '/' and underscores '_' are allowed. Additionally, the maximum number of characters allowed for the relative_metric_name is 100. All user-defined metric types have the DNS name custom.googleapis.com, external.googleapis.com, or logging.googleapis.com/user/.
    unit : str, default is Undefined, optional
        The units in which the metric value is reported. It is only applicable if the
        valueType is INT64, DOUBLE, or DISTRIBUTION. The unit defines the representation of
        the stored metric values.
        Different systems may scale the values to be more easily displayed (so a value of
        0.02KBy might be displayed as 20By, and a value of 3523KBy might be displayed as
        3.5MBy). However, if the unit is KBy, then the value of the metric is always in
        thousands of bytes, no matter how it may be displayed.
        If you want a custom metric to record the exact number of CPU-seconds used by a job,
        you can create an INT64 CUMULATIVE metric whose unit is s{CPU} (or equivalently
        1s{CPU} or just s). If the job uses 12,005 CPU-seconds, then the value is written as
        12005.
        Alternatively, if you want a custom metric to record data in a more granular way, you
        can create a DOUBLE CUMULATIVE metric whose unit is ks{CPU}, and then write the value
        12.005 (which is 12005/1000), or use Kis{CPU} and write 11.723 (which is 12005/1024).
        The supported units are a subset of The Unified Code for Units of Measure standard.
        More info can be found in the API documentation
        (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors).
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc. Some combinations of metricKind and valueType might not be supported.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION.
    """


    description?: str

    displayName?: str

    labels?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProviderLabelsItems0]

    launchStage?: str

    metadata?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProviderMetadataItems0]

    metricKind?: str

    project?: str

    $type?: str

    unit?: str

    valueType?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProviderLabelsItems0:
    """
    monitoring gcp upbound io v1beta1 metric descriptor spec for provider labels items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description for the label.
    key : str, default is Undefined, optional
        The key for this label. The key must not exceed 100 characters. The first character of the key must be an upper- or lower-case letter, the remaining characters must be letters, digits or underscores, and the key must match the regular expression [a-zA-Z][a-zA-Z0-9_]*
    valueType : str, default is Undefined, optional
        The type of data that can be assigned to the label.
        Default value is STRING.
        Possible values are: STRING, BOOL, INT64.
    """


    description?: str

    key?: str

    valueType?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecForProviderMetadataItems0:
    """
    monitoring gcp upbound io v1beta1 metric descriptor spec for provider metadata items0

    Attributes
    ----------
    ingestDelay : str, default is Undefined, optional
        The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
    samplePeriod : str, default is Undefined, optional
        The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
    """


    ingestDelay?: str

    samplePeriod?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A detailed description of the metric, which can be used in documentation.
    displayName : str, default is Undefined, optional
        A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example "Request count".
    labels : [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProviderLabelsItems0], default is Undefined, optional
        The set of labels that can be used to describe a specific instance of this metric type. In order to delete a label, the entire resource must be deleted, then created with the desired labels.
        Structure is documented below.
    launchStage : str, default is Undefined, optional
        The launch stage of the metric definition.
        Possible values are: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
    metadata : [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProviderMetadataItems0], default is Undefined, optional
        Metadata which can be used to guide usage of the metric.
        Structure is documented below.
    metricKind : str, default is Undefined, optional
        Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metricKind and valueType might not be supported.
        Possible values are: METRIC_KIND_UNSPECIFIED, GAUGE, DELTA, CUMULATIVE.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $type : str, default is Undefined, optional
        The metric type, including its DNS name prefix. The type is not URL-encoded. All service defined metrics must be prefixed with the service name, in the format of {service name}/{relative metric name}, such as cloudsql.googleapis.com/database/cpu/utilization. The relative metric name must have only upper and lower-case letters, digits, '/' and underscores '_' are allowed. Additionally, the maximum number of characters allowed for the relative_metric_name is 100. All user-defined metric types have the DNS name custom.googleapis.com, external.googleapis.com, or logging.googleapis.com/user/.
    unit : str, default is Undefined, optional
        The units in which the metric value is reported. It is only applicable if the
        valueType is INT64, DOUBLE, or DISTRIBUTION. The unit defines the representation of
        the stored metric values.
        Different systems may scale the values to be more easily displayed (so a value of
        0.02KBy might be displayed as 20By, and a value of 3523KBy might be displayed as
        3.5MBy). However, if the unit is KBy, then the value of the metric is always in
        thousands of bytes, no matter how it may be displayed.
        If you want a custom metric to record the exact number of CPU-seconds used by a job,
        you can create an INT64 CUMULATIVE metric whose unit is s{CPU} (or equivalently
        1s{CPU} or just s). If the job uses 12,005 CPU-seconds, then the value is written as
        12005.
        Alternatively, if you want a custom metric to record data in a more granular way, you
        can create a DOUBLE CUMULATIVE metric whose unit is ks{CPU}, and then write the value
        12.005 (which is 12005/1000), or use Kis{CPU} and write 11.723 (which is 12005/1024).
        The supported units are a subset of The Unified Code for Units of Measure standard.
        More info can be found in the API documentation
        (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors).
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc. Some combinations of metricKind and valueType might not be supported.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION.
    """


    description?: str

    displayName?: str

    labels?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProviderLabelsItems0]

    launchStage?: str

    metadata?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProviderMetadataItems0]

    metricKind?: str

    project?: str

    $type?: str

    unit?: str

    valueType?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProviderLabelsItems0:
    """
    monitoring gcp upbound io v1beta1 metric descriptor spec init provider labels items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description for the label.
    key : str, default is Undefined, optional
        The key for this label. The key must not exceed 100 characters. The first character of the key must be an upper- or lower-case letter, the remaining characters must be letters, digits or underscores, and the key must match the regular expression [a-zA-Z][a-zA-Z0-9_]*
    valueType : str, default is Undefined, optional
        The type of data that can be assigned to the label.
        Default value is STRING.
        Possible values are: STRING, BOOL, INT64.
    """


    description?: str

    key?: str

    valueType?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecInitProviderMetadataItems0:
    """
    monitoring gcp upbound io v1beta1 metric descriptor spec init provider metadata items0

    Attributes
    ----------
    ingestDelay : str, default is Undefined, optional
        The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
    samplePeriod : str, default is Undefined, optional
        The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
    """


    ingestDelay?: str

    samplePeriod?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecProviderConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToConfigRef

    metadata?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToMetadata

    name: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorStatus:
    """
    MetricDescriptorStatus defines the observed state of MetricDescriptor.

    Attributes
    ----------
    atProvider : MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProvider

    conditions?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusConditionsItems0]


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProvider:
    """
    monitoring gcp upbound io v1beta1 metric descriptor status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A detailed description of the metric, which can be used in documentation.
    displayName : str, default is Undefined, optional
        A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example "Request count".
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    labels : [MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProviderLabelsItems0], default is Undefined, optional
        The set of labels that can be used to describe a specific instance of this metric type. In order to delete a label, the entire resource must be deleted, then created with the desired labels.
        Structure is documented below.
    launchStage : str, default is Undefined, optional
        The launch stage of the metric definition.
        Possible values are: LAUNCH_STAGE_UNSPECIFIED, UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
    metadata : [MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProviderMetadataItems0], default is Undefined, optional
        Metadata which can be used to guide usage of the metric.
        Structure is documented below.
    metricKind : str, default is Undefined, optional
        Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metricKind and valueType might not be supported.
        Possible values are: METRIC_KIND_UNSPECIFIED, GAUGE, DELTA, CUMULATIVE.
    monitoredResourceTypes : [str], default is Undefined, optional
        If present, then a time series, which is identified partially by a metric type and a MonitoredResourceDescriptor, that is associated with this metric type can only be associated with one of the monitored resource types listed here. This field allows time series to be associated with the intersection of this metric type and the monitored resource types in this list.
    name : str, default is Undefined, optional
        The resource name of the metric descriptor.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $type : str, default is Undefined, optional
        The metric type, including its DNS name prefix. The type is not URL-encoded. All service defined metrics must be prefixed with the service name, in the format of {service name}/{relative metric name}, such as cloudsql.googleapis.com/database/cpu/utilization. The relative metric name must have only upper and lower-case letters, digits, '/' and underscores '_' are allowed. Additionally, the maximum number of characters allowed for the relative_metric_name is 100. All user-defined metric types have the DNS name custom.googleapis.com, external.googleapis.com, or logging.googleapis.com/user/.
    unit : str, default is Undefined, optional
        The units in which the metric value is reported. It is only applicable if the
        valueType is INT64, DOUBLE, or DISTRIBUTION. The unit defines the representation of
        the stored metric values.
        Different systems may scale the values to be more easily displayed (so a value of
        0.02KBy might be displayed as 20By, and a value of 3523KBy might be displayed as
        3.5MBy). However, if the unit is KBy, then the value of the metric is always in
        thousands of bytes, no matter how it may be displayed.
        If you want a custom metric to record the exact number of CPU-seconds used by a job,
        you can create an INT64 CUMULATIVE metric whose unit is s{CPU} (or equivalently
        1s{CPU} or just s). If the job uses 12,005 CPU-seconds, then the value is written as
        12005.
        Alternatively, if you want a custom metric to record data in a more granular way, you
        can create a DOUBLE CUMULATIVE metric whose unit is ks{CPU}, and then write the value
        12.005 (which is 12005/1000), or use Kis{CPU} and write 11.723 (which is 12005/1024).
        The supported units are a subset of The Unified Code for Units of Measure standard.
        More info can be found in the API documentation
        (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors).
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc. Some combinations of metricKind and valueType might not be supported.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION.
    """


    description?: str

    displayName?: str

    id?: str

    labels?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProviderLabelsItems0]

    launchStage?: str

    metadata?: [MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProviderMetadataItems0]

    metricKind?: str

    monitoredResourceTypes?: [str]

    name?: str

    project?: str

    $type?: str

    unit?: str

    valueType?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProviderLabelsItems0:
    """
    monitoring gcp upbound io v1beta1 metric descriptor status at provider labels items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description for the label.
    key : str, default is Undefined, optional
        The key for this label. The key must not exceed 100 characters. The first character of the key must be an upper- or lower-case letter, the remaining characters must be letters, digits or underscores, and the key must match the regular expression [a-zA-Z][a-zA-Z0-9_]*
    valueType : str, default is Undefined, optional
        The type of data that can be assigned to the label.
        Default value is STRING.
        Possible values are: STRING, BOOL, INT64.
    """


    description?: str

    key?: str

    valueType?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusAtProviderMetadataItems0:
    """
    monitoring gcp upbound io v1beta1 metric descriptor status at provider metadata items0

    Attributes
    ----------
    ingestDelay : str, default is Undefined, optional
        The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
    samplePeriod : str, default is Undefined, optional
        The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period. In [duration format](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?&_ga=2.264881487.1507873253.1593446723-935052455.1591817775#google.protobuf.Duration).
    """


    ingestDelay?: str

    samplePeriod?: str


schema MonitoringGcpUpboundIoV1beta1MetricDescriptorStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


