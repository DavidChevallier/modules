"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NodePool:
    """
    NodePool is the Schema for the NodePools API. An Anthos node pool running on Azure.

    Attributes
    ----------
    apiVersion : str, default is "containerazure.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerazureGcpUpboundIoV1beta1NodePoolSpec, default is Undefined, required
        spec
    status : ContainerazureGcpUpboundIoV1beta1NodePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "containerazure.gcp.upbound.io/v1beta1" = "containerazure.gcp.upbound.io/v1beta1"

    kind: "NodePool" = "NodePool"

    metadata?: v1.ObjectMeta

    spec: ContainerazureGcpUpboundIoV1beta1NodePoolSpec

    status?: ContainerazureGcpUpboundIoV1beta1NodePoolStatus


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpec:
    """
    NodePoolSpec defines the desired state of NodePool

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProvider, default is Undefined, required
        for provider
    initProvider : ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ContainerazureGcpUpboundIoV1beta1NodePoolSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ContainerazureGcpUpboundIoV1beta1NodePoolSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProvider

    initProvider?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecProviderConfigRef

    publishConnectionDetailsTo?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecWriteConnectionSecretToRef


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProvider:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
    autoscaling : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderAutoscalingItems0], default is Undefined, optional
        Autoscaler configuration for this node pool.
    azureAvailabilityZone : str, default is Undefined, optional
        Optional. The Azure availability zone of the nodes in this nodepool. When unspecified, it defaults to 1.
    cluster : str, default is Undefined, optional
        The azureCluster for the resource
    clusterRef : ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRef, default is Undefined, optional
        cluster ref
    clusterSelector : ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelector, default is Undefined, optional
        cluster selector
    config : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0], default is Undefined, optional
        The node configuration of the node pool.
    location : str, default is Undefined, required
        The location for the resource
    management : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderManagementItems0], default is Undefined, optional
        The Management configuration for this node pool.
    maxPodsConstraint : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderMaxPodsConstraintItems0], default is Undefined, optional
        The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
    project : str, default is Undefined, optional
        The project for the resource
    subnetId : str, default is Undefined, optional
        The ARM ID of the subnet where the node pool VMs run. Make sure it's a subnet under the virtual network in the cluster configuration.
    version : str, default is Undefined, optional
        The Kubernetes version (e.g. 1.19.10-gke.1000) running on this node pool.
    """


    annotations?: {str:str}

    autoscaling?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderAutoscalingItems0]

    azureAvailabilityZone?: str

    cluster?: str

    clusterRef?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRef

    clusterSelector?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelector

    config?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0]

    location: str

    management?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderManagementItems0]

    maxPodsConstraint?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderMaxPodsConstraintItems0]

    project?: str

    subnetId?: str

    version?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderAutoscalingItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider autoscaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes in the node pool. Must be >= min_node_count.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRef:
    """
    Reference to a Cluster to populate cluster.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRefPolicy


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelector:
    """
    Selector for a Cluster to populate cluster.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelectorPolicy


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderClusterSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider config items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    proxyConfig : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0ProxyConfigItems0], default is Undefined, optional
        Proxy configuration for outbound HTTP(S) traffic.
    rootVolume : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0RootVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
    sshConfig : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0SSHConfigItems0], default is Undefined, optional
        SSH configuration for how to access the node pool machines.
    tags : {str:str}, default is Undefined, optional
        Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
    vmSize : str, default is Undefined, optional
        Optional. The Azure VM size name. Example: Standard_DS2_v2. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to Standard_DS2_v2.
    """


    labels?: {str:str}

    proxyConfig?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0ProxyConfigItems0]

    rootVolume?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0RootVolumeItems0]

    sshConfig?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0SSHConfigItems0]

    tags?: {str:str}

    vmSize?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0ProxyConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider config items0 proxy config items0

    Attributes
    ----------
    resourceGroupId : str, default is Undefined, optional
        The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>
    secretId : str, default is Undefined, optional
        The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
    """


    resourceGroupId?: str

    secretId?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0RootVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider config items0 root volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderConfigItems0SSHConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider config items0 SSH config items0

    Attributes
    ----------
    authorizedKey : str, default is Undefined, optional
        The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
    """


    authorizedKey?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderManagementItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider management items0

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Optional. Whether or not the nodes will be automatically repaired.
    """


    autoRepair?: bool


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecForProviderMaxPodsConstraintItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec for provider max pods constraint items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods to schedule on a single node.
    """


    maxPodsPerNode?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
    autoscaling : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderAutoscalingItems0], default is Undefined, optional
        Autoscaler configuration for this node pool.
    azureAvailabilityZone : str, default is Undefined, optional
        Optional. The Azure availability zone of the nodes in this nodepool. When unspecified, it defaults to 1.
    config : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0], default is Undefined, optional
        The node configuration of the node pool.
    management : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderManagementItems0], default is Undefined, optional
        The Management configuration for this node pool.
    maxPodsConstraint : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderMaxPodsConstraintItems0], default is Undefined, optional
        The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
    project : str, default is Undefined, optional
        The project for the resource
    subnetId : str, default is Undefined, optional
        The ARM ID of the subnet where the node pool VMs run. Make sure it's a subnet under the virtual network in the cluster configuration.
    version : str, default is Undefined, optional
        The Kubernetes version (e.g. 1.19.10-gke.1000) running on this node pool.
    """


    annotations?: {str:str}

    autoscaling?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderAutoscalingItems0]

    azureAvailabilityZone?: str

    config?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0]

    management?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderManagementItems0]

    maxPodsConstraint?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderMaxPodsConstraintItems0]

    project?: str

    subnetId?: str

    version?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderAutoscalingItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider autoscaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes in the node pool. Must be >= min_node_count.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider config items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    proxyConfig : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0ProxyConfigItems0], default is Undefined, optional
        Proxy configuration for outbound HTTP(S) traffic.
    rootVolume : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0RootVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
    sshConfig : [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0SSHConfigItems0], default is Undefined, optional
        SSH configuration for how to access the node pool machines.
    tags : {str:str}, default is Undefined, optional
        Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
    vmSize : str, default is Undefined, optional
        Optional. The Azure VM size name. Example: Standard_DS2_v2. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to Standard_DS2_v2.
    """


    labels?: {str:str}

    proxyConfig?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0ProxyConfigItems0]

    rootVolume?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0RootVolumeItems0]

    sshConfig?: [ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0SSHConfigItems0]

    tags?: {str:str}

    vmSize?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0ProxyConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider config items0 proxy config items0

    Attributes
    ----------
    resourceGroupId : str, default is Undefined, optional
        The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>
    secretId : str, default is Undefined, optional
        The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
    """


    resourceGroupId?: str

    secretId?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0RootVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider config items0 root volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderConfigItems0SSHConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider config items0 SSH config items0

    Attributes
    ----------
    authorizedKey : str, default is Undefined, optional
        The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
    """


    authorizedKey?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderManagementItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider management items0

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Optional. Whether or not the nodes will be automatically repaired.
    """


    autoRepair?: bool


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecInitProviderMaxPodsConstraintItems0:
    """
    containerazure gcp upbound io v1beta1 node pool spec init provider max pods constraint items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods to schedule on a single node.
    """


    maxPodsPerNode?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerazureGcpUpboundIoV1beta1NodePoolSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecProviderConfigRefPolicy


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRef

    metadata?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToMetadata

    name: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRefPolicy


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatus:
    """
    NodePoolStatus defines the observed state of NodePool.

    Attributes
    ----------
    atProvider : ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProvider

    conditions?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusConditionsItems0]


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProvider:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
    autoscaling : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderAutoscalingItems0], default is Undefined, optional
        Autoscaler configuration for this node pool.
    azureAvailabilityZone : str, default is Undefined, optional
        Optional. The Azure availability zone of the nodes in this nodepool. When unspecified, it defaults to 1.
    cluster : str, default is Undefined, optional
        The azureCluster for the resource
    config : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0], default is Undefined, optional
        The node configuration of the node pool.
    createTime : str, default is Undefined, optional
        Output only. The time at which this node pool was created.
    effectiveAnnotations : {str:str}, default is Undefined, optional
        effective annotations
    etag : str, default is Undefined, optional
        Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/azureClusters/{{cluster}}/azureNodePools/{{name}}
    location : str, default is Undefined, optional
        The location for the resource
    management : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderManagementItems0], default is Undefined, optional
        The Management configuration for this node pool.
    maxPodsConstraint : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderMaxPodsConstraintItems0], default is Undefined, optional
        The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
    project : str, default is Undefined, optional
        The project for the resource
    reconciling : bool, default is Undefined, optional
        Output only. If set, there are currently pending changes to the node pool.
    state : str, default is Undefined, optional
        Output only. The current state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
    subnetId : str, default is Undefined, optional
        The ARM ID of the subnet where the node pool VMs run. Make sure it's a subnet under the virtual network in the cluster configuration.
    uid : str, default is Undefined, optional
        Output only. A globally unique identifier for the node pool.
    updateTime : str, default is Undefined, optional
        Output only. The time at which this node pool was last updated.
    version : str, default is Undefined, optional
        The Kubernetes version (e.g. 1.19.10-gke.1000) running on this node pool.
    """


    annotations?: {str:str}

    autoscaling?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderAutoscalingItems0]

    azureAvailabilityZone?: str

    cluster?: str

    config?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0]

    createTime?: str

    effectiveAnnotations?: {str:str}

    etag?: str

    id?: str

    location?: str

    management?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderManagementItems0]

    maxPodsConstraint?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderMaxPodsConstraintItems0]

    project?: str

    reconciling?: bool

    state?: str

    subnetId?: str

    uid?: str

    updateTime?: str

    version?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderAutoscalingItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider autoscaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        Maximum number of nodes in the node pool. Must be >= min_node_count.
    minNodeCount : float, default is Undefined, optional
        Minimum number of nodes in the node pool. Must be >= 1 and <= max_node_count.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider config items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Optional. The initial labels assigned to nodes of this node pool. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    proxyConfig : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0ProxyConfigItems0], default is Undefined, optional
        Proxy configuration for outbound HTTP(S) traffic.
    rootVolume : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0RootVolumeItems0], default is Undefined, optional
        Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
    sshConfig : [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0SSHConfigItems0], default is Undefined, optional
        SSH configuration for how to access the node pool machines.
    tags : {str:str}, default is Undefined, optional
        Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
    vmSize : str, default is Undefined, optional
        Optional. The Azure VM size name. Example: Standard_DS2_v2. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to Standard_DS2_v2.
    """


    labels?: {str:str}

    proxyConfig?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0ProxyConfigItems0]

    rootVolume?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0RootVolumeItems0]

    sshConfig?: [ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0SSHConfigItems0]

    tags?: {str:str}

    vmSize?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0ProxyConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider config items0 proxy config items0

    Attributes
    ----------
    resourceGroupId : str, default is Undefined, optional
        The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>
    secretId : str, default is Undefined, optional
        The URL the of the proxy setting secret with its version. Secret ids are formatted as https:<key-vault-name>.vault.azure.net/secrets/<secret-name>/<secret-version>.
    """


    resourceGroupId?: str

    secretId?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0RootVolumeItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider config items0 root volume items0

    Attributes
    ----------
    sizeGib : float, default is Undefined, optional
        Optional. The size of the disk, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.
    """


    sizeGib?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderConfigItems0SSHConfigItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider config items0 SSH config items0

    Attributes
    ----------
    authorizedKey : str, default is Undefined, optional
        The SSH public key data for VMs managed by Anthos. This accepts the authorized_keys file format used in OpenSSH according to the sshd(8) manual page.
    """


    authorizedKey?: str


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderManagementItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider management items0

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Optional. Whether or not the nodes will be automatically repaired.
    """


    autoRepair?: bool


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusAtProviderMaxPodsConstraintItems0:
    """
    containerazure gcp upbound io v1beta1 node pool status at provider max pods constraint items0

    Attributes
    ----------
    maxPodsPerNode : float, default is Undefined, optional
        The maximum number of pods to schedule on a single node.
    """


    maxPodsPerNode?: float


schema ContainerazureGcpUpboundIoV1beta1NodePoolStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


