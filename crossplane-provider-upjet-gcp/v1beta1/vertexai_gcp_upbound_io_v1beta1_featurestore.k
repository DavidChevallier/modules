"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Featurestore:
    """
    Featurestore is the Schema for the Featurestores API. A collection of DataItems and Annotations on them.

    Attributes
    ----------
    apiVersion : str, default is "vertexai.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Featurestore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VertexaiGcpUpboundIoV1beta1FeaturestoreSpec, default is Undefined, required
        spec
    status : VertexaiGcpUpboundIoV1beta1FeaturestoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "vertexai.gcp.upbound.io/v1beta1" = "vertexai.gcp.upbound.io/v1beta1"

    kind: "Featurestore" = "Featurestore"

    metadata?: v1.ObjectMeta

    spec: VertexaiGcpUpboundIoV1beta1FeaturestoreSpec

    status?: VertexaiGcpUpboundIoV1beta1FeaturestoreStatus


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpec:
    """
    FeaturestoreSpec defines the desired state of Featurestore

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProvider, default is Undefined, required
        for provider
    initProvider : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProvider

    initProvider?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecProviderConfigRef

    publishConnectionDetailsTo?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecWriteConnectionSecretToRef


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProvider:
    """
    vertexai gcp upbound io v1beta1 featurestore spec for provider

    Attributes
    ----------
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderEncryptionSpecItems0], default is Undefined, optional
        If set, both of the online and offline data storage will be secured by this key.
        Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        If set to true, any EntityTypes and Features for this Featurestore will also be deleted
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this Featurestore.
    name : str, default is Undefined, optional
        The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
    onlineServingConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderOnlineServingConfigItems0], default is Undefined, optional
        Config for online serving resources.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the dataset. eg us-central1
    """


    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderEncryptionSpecItems0]

    forceDestroy?: bool

    labels?: {str:str}

    name?: str

    onlineServingConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderOnlineServingConfigItems0]

    project?: str

    region?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore spec for provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the compute resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderOnlineServingConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore spec for provider online serving config items0

    Attributes
    ----------
    fixedNodeCount : float, default is Undefined, optional
        The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
    scaling : [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderOnlineServingConfigItems0ScalingItems0], default is Undefined, optional
        Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
        Structure is documented below.
    """


    fixedNodeCount?: float

    scaling?: [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderOnlineServingConfigItems0ScalingItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecForProviderOnlineServingConfigItems0ScalingItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore spec for provider online serving config items0 scaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        The maximum number of nodes to scale up to. Must be greater than minNodeCount, and less than or equal to 10 times of 'minNodeCount'.
    minNodeCount : float, default is Undefined, optional
        The minimum number of nodes to scale down to. Must be greater than or equal to 1.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderEncryptionSpecItems0], default is Undefined, optional
        If set, both of the online and offline data storage will be secured by this key.
        Structure is documented below.
    forceDestroy : bool, default is Undefined, optional
        If set to true, any EntityTypes and Features for this Featurestore will also be deleted
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this Featurestore.
    name : str, default is Undefined, optional
        The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
    onlineServingConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderOnlineServingConfigItems0], default is Undefined, optional
        Config for online serving resources.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the dataset. eg us-central1
    """


    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderEncryptionSpecItems0]

    forceDestroy?: bool

    labels?: {str:str}

    name?: str

    onlineServingConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderOnlineServingConfigItems0]

    project?: str

    region?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore spec init provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the compute resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderOnlineServingConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore spec init provider online serving config items0

    Attributes
    ----------
    fixedNodeCount : float, default is Undefined, optional
        The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
    scaling : [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderOnlineServingConfigItems0ScalingItems0], default is Undefined, optional
        Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
        Structure is documented below.
    """


    fixedNodeCount?: float

    scaling?: [VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderOnlineServingConfigItems0ScalingItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecInitProviderOnlineServingConfigItems0ScalingItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore spec init provider online serving config items0 scaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        The maximum number of nodes to scale up to. Must be greater than minNodeCount, and less than or equal to 10 times of 'minNodeCount'.
    minNodeCount : float, default is Undefined, optional
        The minimum number of nodes to scale down to. Must be greater than or equal to 1.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecProviderConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToConfigRef

    metadata?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToMetadata

    name: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreStatus:
    """
    FeaturestoreStatus defines the observed state of Featurestore.

    Attributes
    ----------
    atProvider : VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProvider

    conditions?: [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusConditionsItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProvider:
    """
    vertexai gcp upbound io v1beta1 featurestore status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderEncryptionSpecItems0], default is Undefined, optional
        If set, both of the online and offline data storage will be secured by this key.
        Structure is documented below.
    etag : str, default is Undefined, optional
        Used to perform consistent read-modify-write updates.
    forceDestroy : bool, default is Undefined, optional
        If set to true, any EntityTypes and Features for this Featurestore will also be deleted
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{region}}/featurestores/{{name}}
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this Featurestore.
    name : str, default is Undefined, optional
        The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
    onlineServingConfig : [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderOnlineServingConfigItems0], default is Undefined, optional
        Config for online serving resources.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the dataset. eg us-central1
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    """


    createTime?: str

    effectiveLabels?: {str:str}

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderEncryptionSpecItems0]

    etag?: str

    forceDestroy?: bool

    id?: str

    labels?: {str:str}

    name?: str

    onlineServingConfig?: [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderOnlineServingConfigItems0]

    project?: str

    region?: str

    terraformLabels?: {str:str}

    updateTime?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore status at provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the compute resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderOnlineServingConfigItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore status at provider online serving config items0

    Attributes
    ----------
    fixedNodeCount : float, default is Undefined, optional
        The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
    scaling : [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderOnlineServingConfigItems0ScalingItems0], default is Undefined, optional
        Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
        Structure is documented below.
    """


    fixedNodeCount?: float

    scaling?: [VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderOnlineServingConfigItems0ScalingItems0]


schema VertexaiGcpUpboundIoV1beta1FeaturestoreStatusAtProviderOnlineServingConfigItems0ScalingItems0:
    """
    vertexai gcp upbound io v1beta1 featurestore status at provider online serving config items0 scaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        The maximum number of nodes to scale up to. Must be greater than minNodeCount, and less than or equal to 10 times of 'minNodeCount'.
    minNodeCount : float, default is Undefined, optional
        The minimum number of nodes to scale down to. Must be greater than or equal to 1.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema VertexaiGcpUpboundIoV1beta1FeaturestoreStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


