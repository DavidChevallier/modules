"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CAPool:
    """
    CAPool is the Schema for the CAPools API. A CaPool represents a group of CertificateAuthorities that form a trust anchor.

    Attributes
    ----------
    apiVersion : str, default is "privateca.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CAPool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PrivatecaGcpUpboundIoV1beta1CAPoolSpec, default is Undefined, required
        spec
    status : PrivatecaGcpUpboundIoV1beta1CAPoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "privateca.gcp.upbound.io/v1beta1" = "privateca.gcp.upbound.io/v1beta1"

    kind: "CAPool" = "CAPool"

    metadata?: v1.ObjectMeta

    spec: PrivatecaGcpUpboundIoV1beta1CAPoolSpec

    status?: PrivatecaGcpUpboundIoV1beta1CAPoolStatus


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpec:
    """
    CAPoolSpec defines the desired state of CAPool

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProvider, default is Undefined, required
        for provider
    initProvider : PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PrivatecaGcpUpboundIoV1beta1CAPoolSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PrivatecaGcpUpboundIoV1beta1CAPoolSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProvider

    initProvider?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecProviderConfigRef

    publishConnectionDetailsTo?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecWriteConnectionSecretToRef


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProvider:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider

    Attributes
    ----------
    issuancePolicy : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0], default is Undefined, optional
        The IssuancePolicy to control how Certificates will be issued from this CaPool.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
        "1.3kg", "count": "3" }.
    location : str, default is Undefined, required
        Location of the CaPool. A full list of valid locations can be found by
        running gcloud privateca locations list.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    publishingOptions : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderPublishingOptionsItems0], default is Undefined, optional
        The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
        Structure is documented below.
    tier : str, default is Undefined, optional
        The Tier of this CaPool.
        Possible values are: ENTERPRISE, DEVOPS.
    """


    issuancePolicy?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0]

    labels?: {str:str}

    location: str

    project?: str

    publishingOptions?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderPublishingOptionsItems0]

    tier?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0

    Attributes
    ----------
    allowedIssuanceModes : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedIssuanceModesItems0], default is Undefined, optional
        IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
        Structure is documented below.
    allowedKeyTypes : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0], default is Undefined, optional
        If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
        Otherwise, any key may be used.
        Structure is documented below.
    baselineValues : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0], default is Undefined, optional
        A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
        includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
        request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
        issuance request will fail.
        Structure is documented below.
    identityConstraints : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0IdentityConstraintsItems0], default is Undefined, optional
        Describes constraints on identities that may appear in Certificates issued through this CaPool.
        If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
        Structure is documented below.
    maximumLifetime : str, default is Undefined, optional
        The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
        expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
    """


    allowedIssuanceModes?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedIssuanceModesItems0]

    allowedKeyTypes?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0]

    baselineValues?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0]

    identityConstraints?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0IdentityConstraintsItems0]

    maximumLifetime?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedIssuanceModesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 allowed issuance modes items0

    Attributes
    ----------
    allowConfigBasedIssuance : bool, default is Undefined, optional
        When true, allows callers to create Certificates by specifying a CertificateConfig.
    allowCsrBasedIssuance : bool, default is Undefined, optional
        When true, allows callers to create Certificates by specifying a CSR.
    """


    allowConfigBasedIssuance?: bool

    allowCsrBasedIssuance?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 allowed key types items0

    Attributes
    ----------
    ellipticCurve : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0], default is Undefined, optional
        Represents an allowed Elliptic Curve key type.
        Structure is documented below.
    rsa : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0], default is Undefined, optional
        Describes an RSA key that may be used in a Certificate issued from a CaPool.
        Structure is documented below.
    """


    ellipticCurve?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0]

    rsa?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 allowed key types items0 elliptic curve items0

    Attributes
    ----------
    signatureAlgorithm : str, default is Undefined, optional
        The algorithm used.
        Possible values are: ECDSA_P256, ECDSA_P384, EDDSA_25519.
    """


    signatureAlgorithm?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 allowed key types items0 rsa items0

    Attributes
    ----------
    maxModulusSize : str, default is Undefined, optional
        The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
        service will not enforce an explicit upper bound on RSA modulus sizes.
    minModulusSize : str, default is Undefined, optional
        The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
        service-level min RSA modulus size will continue to apply.
    """


    maxModulusSize?: str

    minModulusSize?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0], default is Undefined, optional
        Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0], default is Undefined, optional
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0], default is Undefined, optional
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0], default is Undefined, optional
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        The value of this X.509 extension. A base64-encoded string.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        if both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 baseline values items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0IdentityConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 identity constraints items0

    Attributes
    ----------
    allowSubjectAltNamesPassthrough : bool, default is Undefined, optional
        If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
        Otherwise, the requested SubjectAltNames will be discarded.
    allowSubjectPassthrough : bool, default is Undefined, optional
        If this is set, the Subject field may be copied from a certificate request into the signed certificate.
        Otherwise, the requested Subject will be discarded.
    celExpression : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0], default is Undefined, optional
        A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
        certificate is signed. To see the full allowed syntax and some examples,
        see https://cloud.google.com/certificate-authority-service/docs/cel-guide
        Structure is documented below.
    """


    allowSubjectAltNamesPassthrough?: bool

    allowSubjectPassthrough?: bool

    celExpression?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider issuance policy items0 identity constraints items0 cel expression items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    expression : str, default is Undefined, optional
        Textual representation of an expression in Common Expression Language syntax.
    location : str, default is Undefined, optional
        Location of the CaPool. A full list of valid locations can be found by
        running gcloud privateca locations list.
    title : str, default is Undefined, optional
        Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
    """


    description?: str

    expression?: str

    location?: str

    title?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecForProviderPublishingOptionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec for provider publishing options items0

    Attributes
    ----------
    encodingFormat : str, default is Undefined, optional
        Specifies the encoding format of each CertificateAuthority's CA
        certificate and CRLs. If this is omitted, CA certificates and CRLs
        will be published in PEM.
        Possible values are: PEM, DER.
    publishCaCert : bool, default is Undefined, optional
        When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
        X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
        X.509 extension will not be written in issued certificates.
    publishCrl : bool, default is Undefined, optional
        When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
        in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
        be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
        also rebuilt shortly after a certificate is revoked.
    """


    encodingFormat?: str

    publishCaCert?: bool

    publishCrl?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    issuancePolicy : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0], default is Undefined, optional
        The IssuancePolicy to control how Certificates will be issued from this CaPool.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
        "1.3kg", "count": "3" }.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    publishingOptions : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderPublishingOptionsItems0], default is Undefined, optional
        The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
        Structure is documented below.
    tier : str, default is Undefined, optional
        The Tier of this CaPool.
        Possible values are: ENTERPRISE, DEVOPS.
    """


    issuancePolicy?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0]

    labels?: {str:str}

    project?: str

    publishingOptions?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderPublishingOptionsItems0]

    tier?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0

    Attributes
    ----------
    allowedIssuanceModes : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedIssuanceModesItems0], default is Undefined, optional
        IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
        Structure is documented below.
    allowedKeyTypes : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0], default is Undefined, optional
        If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
        Otherwise, any key may be used.
        Structure is documented below.
    baselineValues : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0], default is Undefined, optional
        A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
        includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
        request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
        issuance request will fail.
        Structure is documented below.
    identityConstraints : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0IdentityConstraintsItems0], default is Undefined, optional
        Describes constraints on identities that may appear in Certificates issued through this CaPool.
        If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
        Structure is documented below.
    maximumLifetime : str, default is Undefined, optional
        The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
        expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
    """


    allowedIssuanceModes?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedIssuanceModesItems0]

    allowedKeyTypes?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0]

    baselineValues?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0]

    identityConstraints?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0IdentityConstraintsItems0]

    maximumLifetime?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedIssuanceModesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 allowed issuance modes items0

    Attributes
    ----------
    allowConfigBasedIssuance : bool, default is Undefined, optional
        When true, allows callers to create Certificates by specifying a CertificateConfig.
    allowCsrBasedIssuance : bool, default is Undefined, optional
        When true, allows callers to create Certificates by specifying a CSR.
    """


    allowConfigBasedIssuance?: bool

    allowCsrBasedIssuance?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 allowed key types items0

    Attributes
    ----------
    ellipticCurve : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0], default is Undefined, optional
        Represents an allowed Elliptic Curve key type.
        Structure is documented below.
    rsa : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0], default is Undefined, optional
        Describes an RSA key that may be used in a Certificate issued from a CaPool.
        Structure is documented below.
    """


    ellipticCurve?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0]

    rsa?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 allowed key types items0 elliptic curve items0

    Attributes
    ----------
    signatureAlgorithm : str, default is Undefined, optional
        The algorithm used.
        Possible values are: ECDSA_P256, ECDSA_P384, EDDSA_25519.
    """


    signatureAlgorithm?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 allowed key types items0 rsa items0

    Attributes
    ----------
    maxModulusSize : str, default is Undefined, optional
        The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
        service will not enforce an explicit upper bound on RSA modulus sizes.
    minModulusSize : str, default is Undefined, optional
        The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
        service-level min RSA modulus size will continue to apply.
    """


    maxModulusSize?: str

    minModulusSize?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0], default is Undefined, optional
        Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0], default is Undefined, optional
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0], default is Undefined, optional
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0], default is Undefined, optional
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        The value of this X.509 extension. A base64-encoded string.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        if both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 baseline values items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0IdentityConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 identity constraints items0

    Attributes
    ----------
    allowSubjectAltNamesPassthrough : bool, default is Undefined, optional
        If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
        Otherwise, the requested SubjectAltNames will be discarded.
    allowSubjectPassthrough : bool, default is Undefined, optional
        If this is set, the Subject field may be copied from a certificate request into the signed certificate.
        Otherwise, the requested Subject will be discarded.
    celExpression : [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0], default is Undefined, optional
        A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
        certificate is signed. To see the full allowed syntax and some examples,
        see https://cloud.google.com/certificate-authority-service/docs/cel-guide
        Structure is documented below.
    """


    allowSubjectAltNamesPassthrough?: bool

    allowSubjectPassthrough?: bool

    celExpression?: [PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider issuance policy items0 identity constraints items0 cel expression items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    expression : str, default is Undefined, optional
        Textual representation of an expression in Common Expression Language syntax.
    title : str, default is Undefined, optional
        Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
    """


    description?: str

    expression?: str

    title?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecInitProviderPublishingOptionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool spec init provider publishing options items0

    Attributes
    ----------
    encodingFormat : str, default is Undefined, optional
        Specifies the encoding format of each CertificateAuthority's CA
        certificate and CRLs. If this is omitted, CA certificates and CRLs
        will be published in PEM.
        Possible values are: PEM, DER.
    publishCaCert : bool, default is Undefined, optional
        When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
        X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
        X.509 extension will not be written in issued certificates.
    publishCrl : bool, default is Undefined, optional
        When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
        in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
        be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
        also rebuilt shortly after a certificate is revoked.
    """


    encodingFormat?: str

    publishCaCert?: bool

    publishCrl?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CAPoolSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecProviderConfigRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToConfigRef

    metadata?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToMetadata

    name: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToConfigRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatus:
    """
    CAPoolStatus defines the observed state of CAPool.

    Attributes
    ----------
    atProvider : PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProvider

    conditions?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusConditionsItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProvider:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider

    Attributes
    ----------
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/caPools/{{name}}
    issuancePolicy : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0], default is Undefined, optional
        The IssuancePolicy to control how Certificates will be issued from this CaPool.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
        "1.3kg", "count": "3" }.
    location : str, default is Undefined, optional
        Location of the CaPool. A full list of valid locations can be found by
        running gcloud privateca locations list.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    publishingOptions : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderPublishingOptionsItems0], default is Undefined, optional
        The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    tier : str, default is Undefined, optional
        The Tier of this CaPool.
        Possible values are: ENTERPRISE, DEVOPS.
    """


    effectiveLabels?: {str:str}

    id?: str

    issuancePolicy?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0]

    labels?: {str:str}

    location?: str

    project?: str

    publishingOptions?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderPublishingOptionsItems0]

    terraformLabels?: {str:str}

    tier?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0

    Attributes
    ----------
    allowedIssuanceModes : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedIssuanceModesItems0], default is Undefined, optional
        IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
        Structure is documented below.
    allowedKeyTypes : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0], default is Undefined, optional
        If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here.
        Otherwise, any key may be used.
        Structure is documented below.
    baselineValues : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0], default is Undefined, optional
        A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request
        includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate
        request uses a CertificateTemplate that defines conflicting predefinedValues for the same properties, the certificate
        issuance request will fail.
        Structure is documented below.
    identityConstraints : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0IdentityConstraintsItems0], default is Undefined, optional
        Describes constraints on identities that may appear in Certificates issued through this CaPool.
        If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
        Structure is documented below.
    maximumLifetime : str, default is Undefined, optional
        The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority
        expires before a Certificate's requested maximumLifetime, the effective lifetime will be explicitly truncated to match it.
    """


    allowedIssuanceModes?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedIssuanceModesItems0]

    allowedKeyTypes?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0]

    baselineValues?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0]

    identityConstraints?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0IdentityConstraintsItems0]

    maximumLifetime?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedIssuanceModesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 allowed issuance modes items0

    Attributes
    ----------
    allowConfigBasedIssuance : bool, default is Undefined, optional
        When true, allows callers to create Certificates by specifying a CertificateConfig.
    allowCsrBasedIssuance : bool, default is Undefined, optional
        When true, allows callers to create Certificates by specifying a CSR.
    """


    allowConfigBasedIssuance?: bool

    allowCsrBasedIssuance?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 allowed key types items0

    Attributes
    ----------
    ellipticCurve : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0], default is Undefined, optional
        Represents an allowed Elliptic Curve key type.
        Structure is documented below.
    rsa : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0], default is Undefined, optional
        Describes an RSA key that may be used in a Certificate issued from a CaPool.
        Structure is documented below.
    """


    ellipticCurve?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0]

    rsa?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0EllipticCurveItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 allowed key types items0 elliptic curve items0

    Attributes
    ----------
    signatureAlgorithm : str, default is Undefined, optional
        The algorithm used.
        Possible values are: ECDSA_P256, ECDSA_P384, EDDSA_25519.
    """


    signatureAlgorithm?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0AllowedKeyTypesItems0RsaItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 allowed key types items0 rsa items0

    Attributes
    ----------
    maxModulusSize : str, default is Undefined, optional
        The maximum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
        service will not enforce an explicit upper bound on RSA modulus sizes.
    minModulusSize : str, default is Undefined, optional
        The minimum allowed RSA modulus size, in bits. If this is not set, or if set to zero, the
        service-level min RSA modulus size will continue to apply.
    """


    maxModulusSize?: str

    minModulusSize?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0], default is Undefined, optional
        Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0], default is Undefined, optional
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0], default is Undefined, optional
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0], default is Undefined, optional
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        The value of this X.509 extension. A base64-encoded string.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        if both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0BaselineValuesItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 baseline values items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0IdentityConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 identity constraints items0

    Attributes
    ----------
    allowSubjectAltNamesPassthrough : bool, default is Undefined, optional
        If this is set, the SubjectAltNames extension may be copied from a certificate request into the signed certificate.
        Otherwise, the requested SubjectAltNames will be discarded.
    allowSubjectPassthrough : bool, default is Undefined, optional
        If this is set, the Subject field may be copied from a certificate request into the signed certificate.
        Otherwise, the requested Subject will be discarded.
    celExpression : [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0], default is Undefined, optional
        A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a
        certificate is signed. To see the full allowed syntax and some examples,
        see https://cloud.google.com/certificate-authority-service/docs/cel-guide
        Structure is documented below.
    """


    allowSubjectAltNamesPassthrough?: bool

    allowSubjectPassthrough?: bool

    celExpression?: [PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0]


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderIssuancePolicyItems0IdentityConstraintsItems0CelExpressionItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider issuance policy items0 identity constraints items0 cel expression items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
    expression : str, default is Undefined, optional
        Textual representation of an expression in Common Expression Language syntax.
    location : str, default is Undefined, optional
        Location of the CaPool. A full list of valid locations can be found by
        running gcloud privateca locations list.
    title : str, default is Undefined, optional
        Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
    """


    description?: str

    expression?: str

    location?: str

    title?: str


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusAtProviderPublishingOptionsItems0:
    """
    privateca gcp upbound io v1beta1 c a pool status at provider publishing options items0

    Attributes
    ----------
    encodingFormat : str, default is Undefined, optional
        Specifies the encoding format of each CertificateAuthority's CA
        certificate and CRLs. If this is omitted, CA certificates and CRLs
        will be published in PEM.
        Possible values are: PEM, DER.
    publishCaCert : bool, default is Undefined, optional
        When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access"
        X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding
        X.509 extension will not be written in issued certificates.
    publishCrl : bool, default is Undefined, optional
        When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension
        in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not
        be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are
        also rebuilt shortly after a certificate is revoked.
    """


    encodingFormat?: str

    publishCaCert?: bool

    publishCrl?: bool


schema PrivatecaGcpUpboundIoV1beta1CAPoolStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


