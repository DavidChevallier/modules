"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SubscriptionIAMMember:
    """
    SubscriptionIAMMember is the Schema for the SubscriptionIAMMembers API. <no value>

    Attributes
    ----------
    apiVersion : str, default is "pubsub.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SubscriptionIAMMember", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpec, default is Undefined, required
        spec
    status : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatus, default is Undefined, optional
        status
    """


    apiVersion: "pubsub.gcp.upbound.io/v1beta1" = "pubsub.gcp.upbound.io/v1beta1"

    kind: "SubscriptionIAMMember" = "SubscriptionIAMMember"

    metadata?: v1.ObjectMeta

    spec: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpec

    status?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatus


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpec:
    """
    SubscriptionIAMMemberSpec defines the desired state of SubscriptionIAMMember

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProvider, default is Undefined, required
        for provider
    initProvider : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProvider

    initProvider?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecProviderConfigRef

    publishConnectionDetailsTo?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecWriteConnectionSecretToRef


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProvider:
    """
    pubsub gcp upbound io v1beta1 subscription i a m member spec for provider

    Attributes
    ----------
    condition : [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderConditionItems0], default is Undefined, optional
        condition
    member : str, default is Undefined, optional
        member
    project : str, default is Undefined, optional
        project
    role : str, default is Undefined, optional
        role
    subscription : str, default is Undefined, optional
        subscription
    subscriptionRef : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionRef, default is Undefined, optional
        subscription ref
    subscriptionSelector : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionSelector, default is Undefined, optional
        subscription selector
    """


    condition?: [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderConditionItems0]

    member?: str

    project?: str

    role?: str

    subscription?: str

    subscriptionRef?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionRef

    subscriptionSelector?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionSelector


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderConditionItems0:
    """
    pubsub gcp upbound io v1beta1 subscription i a m member spec for provider condition items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    expression : str, default is Undefined, optional
        expression
    title : str, default is Undefined, optional
        title
    """


    description?: str

    expression?: str

    title?: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionRef:
    """
    Reference to a Subscription to populate subscription.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionRefPolicy


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionSelector:
    """
    Selector for a Subscription to populate subscription.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionSelectorPolicy


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecForProviderSubscriptionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    condition : [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderConditionItems0], default is Undefined, optional
        condition
    member : str, default is Undefined, optional
        member
    project : str, default is Undefined, optional
        project
    role : str, default is Undefined, optional
        role
    subscription : str, default is Undefined, optional
        subscription
    subscriptionRef : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionRef, default is Undefined, optional
        subscription ref
    subscriptionSelector : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionSelector, default is Undefined, optional
        subscription selector
    """


    condition?: [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderConditionItems0]

    member?: str

    project?: str

    role?: str

    subscription?: str

    subscriptionRef?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionRef

    subscriptionSelector?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionSelector


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderConditionItems0:
    """
    pubsub gcp upbound io v1beta1 subscription i a m member spec init provider condition items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    expression : str, default is Undefined, optional
        expression
    title : str, default is Undefined, optional
        title
    """


    description?: str

    expression?: str

    title?: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionRef:
    """
    Reference to a Subscription to populate subscription.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionRefPolicy


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionSelector:
    """
    Selector for a Subscription to populate subscription.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionSelectorPolicy


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecInitProviderSubscriptionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecProviderConfigRefPolicy


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToConfigRef

    metadata?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToMetadata

    name: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToConfigRefPolicy


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatus:
    """
    SubscriptionIAMMemberStatus defines the observed state of SubscriptionIAMMember.

    Attributes
    ----------
    atProvider : PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusAtProvider

    conditions?: [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusConditionsItems0]


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusAtProvider:
    """
    pubsub gcp upbound io v1beta1 subscription i a m member status at provider

    Attributes
    ----------
    condition : [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusAtProviderConditionItems0], default is Undefined, optional
        condition
    etag : str, default is Undefined, optional
        etag
    id : str, default is Undefined, optional
        id
    member : str, default is Undefined, optional
        member
    project : str, default is Undefined, optional
        project
    role : str, default is Undefined, optional
        role
    subscription : str, default is Undefined, optional
        subscription
    """


    condition?: [PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusAtProviderConditionItems0]

    etag?: str

    id?: str

    member?: str

    project?: str

    role?: str

    subscription?: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusAtProviderConditionItems0:
    """
    pubsub gcp upbound io v1beta1 subscription i a m member status at provider condition items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    expression : str, default is Undefined, optional
        expression
    title : str, default is Undefined, optional
        title
    """


    description?: str

    expression?: str

    title?: str


schema PubsubGcpUpboundIoV1beta1SubscriptionIAMMemberStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


