"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CertificateAuthority:
    """
    CertificateAuthority is the Schema for the CertificateAuthoritys API. A CertificateAuthority represents an individual Certificate Authority.

    Attributes
    ----------
    apiVersion : str, default is "privateca.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CertificateAuthority", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpec, default is Undefined, required
        spec
    status : PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatus, default is Undefined, optional
        status
    """


    apiVersion: "privateca.gcp.upbound.io/v1beta1" = "privateca.gcp.upbound.io/v1beta1"

    kind: "CertificateAuthority" = "CertificateAuthority"

    metadata?: v1.ObjectMeta

    spec: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpec

    status?: PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatus


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpec:
    """
    CertificateAuthoritySpec defines the desired state of CertificateAuthority

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProvider, default is Undefined, required
        for provider
    initProvider : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProvider

    initProvider?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRef

    publishConnectionDetailsTo?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecWriteConnectionSecretToRef


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProvider:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider

    Attributes
    ----------
    config : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0], default is Undefined, optional
        The config used to create a self-signed X.509 certificate or CSR.
        Structure is documented below.
    deletionProtection : bool, default is Undefined, optional
        deletion protection
    desiredState : str, default is Undefined, optional
        Desired state of the CertificateAuthority. Set this field to STAGED to create a STAGED root CA.
    gcsBucket : str, default is Undefined, optional
        The name of a Cloud Storage bucket where this CertificateAuthority will publish content,
        such as the CA certificate and CRLs. This must be a bucket name, without any prefixes
        (such as gs://) or suffixes (such as .googleapis.com). For example, to use a bucket named
        my-bucket, you would simply specify my-bucket. If not specified, a managed bucket will be
        created.
    ignoreActiveCertificatesOnDeletion : bool, default is Undefined, optional
        This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs.
        Use with care. Defaults to false.
    keySpec : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderKeySpecItems0], default is Undefined, optional
        Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority
        is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA
        certificate. Otherwise, it is used to sign a CSR.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
        "1.3kg", "count": "3" }.
    lifetime : str, default is Undefined, optional
        The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
        "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
        fractional digits, terminated by 's'. Example: "3.5s".
    location : str, default is Undefined, required
        Location of the CertificateAuthority. A full list of valid locations can be found by
        running gcloud privateca locations list.
    pemCaCertificate : str, default is Undefined, optional
        The signed CA certificate issued from the subordinated CA's CSR. This is needed when activating the subordiante CA with a third party issuer.
    pool : str, default is Undefined, optional
        The name of the CaPool this Certificate Authority belongs to.
    poolRef : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolRef, default is Undefined, optional
        pool ref
    poolSelector : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolSelector, default is Undefined, optional
        pool selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    skipGracePeriod : bool, default is Undefined, optional
        If this flag is set, the Certificate Authority will be deleted as soon as
        possible without a 30-day grace period where undeletion would have been
        allowed. If you proceed, there will be no way to recover this CA.
        Use with care. Defaults to false.
    subordinateConfig : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0], default is Undefined, optional
        If this is a subordinate CertificateAuthority, this field will be set
        with the subordinate configuration, which describes its issuers.
        Structure is documented below.
    $type : str, default is Undefined, optional
        The Type of this CertificateAuthority.
        ~> Note: For SUBORDINATE Certificate Authorities, they need to
        be activated before they can issue certificates.
        Default value is SELF_SIGNED.
        Possible values are: SELF_SIGNED, SUBORDINATE.
    """


    config?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0]

    deletionProtection?: bool

    desiredState?: str

    gcsBucket?: str

    ignoreActiveCertificatesOnDeletion?: bool

    keySpec?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderKeySpecItems0]

    labels?: {str:str}

    lifetime?: str

    location: str

    pemCaCertificate?: str

    pool?: str

    poolRef?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolRef

    poolSelector?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolSelector

    project?: str

    skipGracePeriod?: bool

    subordinateConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0]

    $type?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0

    Attributes
    ----------
    subjectConfig : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0], default is Undefined, optional
        Specifies some of the values in a certificate that are related to the subject.
        Structure is documented below.
    x509Config : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0], default is Undefined, optional
        Describes how some of the technical X.509 fields in a certificate should be populated.
        Structure is documented below.
    """


    subjectConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0]

    x509Config?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 subject config items0

    Attributes
    ----------
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0SubjectItems0], default is Undefined, optional
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0], default is Undefined, optional
        The subject alternative name fields.
        Structure is documented below.
    """


    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 subject config items0 subject alt name items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0SubjectConfigItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 subject config items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0], default is Undefined, optional
        Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0CaOptionsItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0], default is Undefined, optional
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0NameConstraintsItems0], default is Undefined, optional
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0PolicyIdsItems0], default is Undefined, optional
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        The value of this X.509 extension. A base64-encoded string.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. Setting the value to 0
        requires setting zero_max_issuer_path_length = true.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        If both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderConfigItems0X509ConfigItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider config items0 x509 config items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderKeySpecItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider key spec items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The algorithm to use for creating a managed Cloud KMS key for a for a simplified
        experience. All managed keys will be have their ProtectionLevel as HSM.
        Possible values are: SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256, RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256, EC_P384_SHA384.
    cloudKmsKeyVersion : str, default is Undefined, optional
        The resource name for an existing Cloud KMS CryptoKeyVersion in the format
        projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.
    """


    algorithm?: str

    cloudKmsKeyVersion?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolRef:
    """
    Reference to a CAPool to populate pool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolSelector:
    """
    Selector for a CAPool to populate pool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolSelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderPoolSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider subordinate config items0

    Attributes
    ----------
    certificateAuthority : str, default is Undefined, optional
        This can refer to a CertificateAuthority that was used to create a
        subordinate CertificateAuthority. This field is used for information
        and usability purposes only. The resource name is in the format
        projects/*/locations/*/caPools/*/certificateAuthorities/*.
    certificateAuthorityRef : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthorityRef, default is Undefined, optional
        certificate authority ref
    certificateAuthoritySelector : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthoritySelector, default is Undefined, optional
        certificate authority selector
    pemIssuerChain : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0PemIssuerChainItems0], default is Undefined, optional
        Contains the PEM certificate chain for the issuers of this CertificateAuthority,
        but not pem certificate for this CA itself.
        Structure is documented below.
    """


    certificateAuthority?: str

    certificateAuthorityRef?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthorityRef

    certificateAuthoritySelector?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthoritySelector

    pemIssuerChain?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0PemIssuerChainItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthorityRef:
    """
    Reference to a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthorityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthorityRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthorityRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthoritySelector:
    """
    Selector for a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthoritySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthoritySelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0CertificateAuthoritySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecForProviderSubordinateConfigItems0PemIssuerChainItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec for provider subordinate config items0 pem issuer chain items0

    Attributes
    ----------
    pemCertificates : [str], default is Undefined, optional
        Expected to be in leaf-to-root order according to RFC 5246.
    """


    pemCertificates?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    config : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0], default is Undefined, optional
        The config used to create a self-signed X.509 certificate or CSR.
        Structure is documented below.
    deletionProtection : bool, default is Undefined, optional
        deletion protection
    desiredState : str, default is Undefined, optional
        Desired state of the CertificateAuthority. Set this field to STAGED to create a STAGED root CA.
    gcsBucket : str, default is Undefined, optional
        The name of a Cloud Storage bucket where this CertificateAuthority will publish content,
        such as the CA certificate and CRLs. This must be a bucket name, without any prefixes
        (such as gs://) or suffixes (such as .googleapis.com). For example, to use a bucket named
        my-bucket, you would simply specify my-bucket. If not specified, a managed bucket will be
        created.
    ignoreActiveCertificatesOnDeletion : bool, default is Undefined, optional
        This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs.
        Use with care. Defaults to false.
    keySpec : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderKeySpecItems0], default is Undefined, optional
        Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority
        is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA
        certificate. Otherwise, it is used to sign a CSR.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
        "1.3kg", "count": "3" }.
    lifetime : str, default is Undefined, optional
        The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
        "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
        fractional digits, terminated by 's'. Example: "3.5s".
    pemCaCertificate : str, default is Undefined, optional
        The signed CA certificate issued from the subordinated CA's CSR. This is needed when activating the subordiante CA with a third party issuer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    skipGracePeriod : bool, default is Undefined, optional
        If this flag is set, the Certificate Authority will be deleted as soon as
        possible without a 30-day grace period where undeletion would have been
        allowed. If you proceed, there will be no way to recover this CA.
        Use with care. Defaults to false.
    subordinateConfig : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0], default is Undefined, optional
        If this is a subordinate CertificateAuthority, this field will be set
        with the subordinate configuration, which describes its issuers.
        Structure is documented below.
    $type : str, default is Undefined, optional
        The Type of this CertificateAuthority.
        ~> Note: For SUBORDINATE Certificate Authorities, they need to
        be activated before they can issue certificates.
        Default value is SELF_SIGNED.
        Possible values are: SELF_SIGNED, SUBORDINATE.
    """


    config?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0]

    deletionProtection?: bool

    desiredState?: str

    gcsBucket?: str

    ignoreActiveCertificatesOnDeletion?: bool

    keySpec?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderKeySpecItems0]

    labels?: {str:str}

    lifetime?: str

    pemCaCertificate?: str

    project?: str

    skipGracePeriod?: bool

    subordinateConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0]

    $type?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0

    Attributes
    ----------
    subjectConfig : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0], default is Undefined, optional
        Specifies some of the values in a certificate that are related to the subject.
        Structure is documented below.
    x509Config : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0], default is Undefined, optional
        Describes how some of the technical X.509 fields in a certificate should be populated.
        Structure is documented below.
    """


    subjectConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0]

    x509Config?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 subject config items0

    Attributes
    ----------
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0SubjectItems0], default is Undefined, optional
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0], default is Undefined, optional
        The subject alternative name fields.
        Structure is documented below.
    """


    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 subject config items0 subject alt name items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0SubjectConfigItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 subject config items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0], default is Undefined, optional
        Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0CaOptionsItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0], default is Undefined, optional
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0NameConstraintsItems0], default is Undefined, optional
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0PolicyIdsItems0], default is Undefined, optional
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        The value of this X.509 extension. A base64-encoded string.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. Setting the value to 0
        requires setting zero_max_issuer_path_length = true.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        If both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderConfigItems0X509ConfigItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider config items0 x509 config items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderKeySpecItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider key spec items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The algorithm to use for creating a managed Cloud KMS key for a for a simplified
        experience. All managed keys will be have their ProtectionLevel as HSM.
        Possible values are: SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256, RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256, EC_P384_SHA384.
    cloudKmsKeyVersion : str, default is Undefined, optional
        The resource name for an existing Cloud KMS CryptoKeyVersion in the format
        projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.
    """


    algorithm?: str

    cloudKmsKeyVersion?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider subordinate config items0

    Attributes
    ----------
    certificateAuthority : str, default is Undefined, optional
        This can refer to a CertificateAuthority that was used to create a
        subordinate CertificateAuthority. This field is used for information
        and usability purposes only. The resource name is in the format
        projects/*/locations/*/caPools/*/certificateAuthorities/*.
    certificateAuthorityRef : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthorityRef, default is Undefined, optional
        certificate authority ref
    certificateAuthoritySelector : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthoritySelector, default is Undefined, optional
        certificate authority selector
    pemIssuerChain : [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0PemIssuerChainItems0], default is Undefined, optional
        Contains the PEM certificate chain for the issuers of this CertificateAuthority,
        but not pem certificate for this CA itself.
        Structure is documented below.
    """


    certificateAuthority?: str

    certificateAuthorityRef?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthorityRef

    certificateAuthoritySelector?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthoritySelector

    pemIssuerChain?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0PemIssuerChainItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthorityRef:
    """
    Reference to a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthorityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthorityRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthorityRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthoritySelector:
    """
    Selector for a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthoritySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthoritySelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0CertificateAuthoritySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecInitProviderSubordinateConfigItems0PemIssuerChainItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority spec init provider subordinate config items0 pem issuer chain items0

    Attributes
    ----------
    pemCertificates : [str], default is Undefined, optional
        Expected to be in leaf-to-root order according to RFC 5246.
    """


    pemCertificates?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef

    metadata?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToMetadata

    name: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthoritySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatus:
    """
    CertificateAuthorityStatus defines the observed state of CertificateAuthority.

    Attributes
    ----------
    atProvider : PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProvider

    conditions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusConditionsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProvider:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider

    Attributes
    ----------
    accessUrls : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderAccessUrlsItems0], default is Undefined, optional
        URLs for accessing content published by this CA, such as the CA certificate and CRLs.
        Structure is documented below.
    config : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0], default is Undefined, optional
        The config used to create a self-signed X.509 certificate or CSR.
        Structure is documented below.
    createTime : str, default is Undefined, optional
        The time at which this CertificateAuthority was created.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
        fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    deletionProtection : bool, default is Undefined, optional
        deletion protection
    desiredState : str, default is Undefined, optional
        Desired state of the CertificateAuthority. Set this field to STAGED to create a STAGED root CA.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    gcsBucket : str, default is Undefined, optional
        The name of a Cloud Storage bucket where this CertificateAuthority will publish content,
        such as the CA certificate and CRLs. This must be a bucket name, without any prefixes
        (such as gs://) or suffixes (such as .googleapis.com). For example, to use a bucket named
        my-bucket, you would simply specify my-bucket. If not specified, a managed bucket will be
        created.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/caPools/{{pool}}/certificateAuthorities/{{certificate_authority_id}}
    ignoreActiveCertificatesOnDeletion : bool, default is Undefined, optional
        This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs.
        Use with care. Defaults to false.
    keySpec : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderKeySpecItems0], default is Undefined, optional
        Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority
        is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA
        certificate. Otherwise, it is used to sign a CSR.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
        "1.3kg", "count": "3" }.
    lifetime : str, default is Undefined, optional
        The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
        "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
        fractional digits, terminated by 's'. Example: "3.5s".
    location : str, default is Undefined, optional
        Location of the CertificateAuthority. A full list of valid locations can be found by
        running gcloud privateca locations list.
    name : str, default is Undefined, optional
        The resource name for this CertificateAuthority in the format
        projects//locations//certificateAuthorities/*.
    pemCaCertificate : str, default is Undefined, optional
        The signed CA certificate issued from the subordinated CA's CSR. This is needed when activating the subordiante CA with a third party issuer.
    pemCaCertificates : [str], default is Undefined, optional
        This CertificateAuthority's certificate chain, including the current
        CertificateAuthority's certificate. Ordered such that the root issuer is the final
        element (consistent with RFC 5246). For a self-signed CA, this will only list the current
        CertificateAuthority's certificate.
    pool : str, default is Undefined, optional
        The name of the CaPool this Certificate Authority belongs to.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    skipGracePeriod : bool, default is Undefined, optional
        If this flag is set, the Certificate Authority will be deleted as soon as
        possible without a 30-day grace period where undeletion would have been
        allowed. If you proceed, there will be no way to recover this CA.
        Use with care. Defaults to false.
    state : str, default is Undefined, optional
        The State for this CertificateAuthority.
    subordinateConfig : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderSubordinateConfigItems0], default is Undefined, optional
        If this is a subordinate CertificateAuthority, this field will be set
        with the subordinate configuration, which describes its issuers.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    $type : str, default is Undefined, optional
        The Type of this CertificateAuthority.
        ~> Note: For SUBORDINATE Certificate Authorities, they need to
        be activated before they can issue certificates.
        Default value is SELF_SIGNED.
        Possible values are: SELF_SIGNED, SUBORDINATE.
    updateTime : str, default is Undefined, optional
        The time at which this CertificateAuthority was updated.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
        fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    accessUrls?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderAccessUrlsItems0]

    config?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0]

    createTime?: str

    deletionProtection?: bool

    desiredState?: str

    effectiveLabels?: {str:str}

    gcsBucket?: str

    id?: str

    ignoreActiveCertificatesOnDeletion?: bool

    keySpec?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderKeySpecItems0]

    labels?: {str:str}

    lifetime?: str

    location?: str

    name?: str

    pemCaCertificate?: str

    pemCaCertificates?: [str]

    pool?: str

    project?: str

    skipGracePeriod?: bool

    state?: str

    subordinateConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderSubordinateConfigItems0]

    terraformLabels?: {str:str}

    $type?: str

    updateTime?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderAccessUrlsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider access urls items0

    Attributes
    ----------
    caCertificateAccessUrl : str, default is Undefined, optional
        (Output)
        The URL where this CertificateAuthority's CA certificate is published. This will only be
        set for CAs that have been activated.
    crlAccessUrls : [str], default is Undefined, optional
        (Output)
        The URL where this CertificateAuthority's CRLs are published. This will only be set for
        CAs that have been activated.
    """


    caCertificateAccessUrl?: str

    crlAccessUrls?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0

    Attributes
    ----------
    subjectConfig : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0], default is Undefined, optional
        Specifies some of the values in a certificate that are related to the subject.
        Structure is documented below.
    x509Config : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0], default is Undefined, optional
        Describes how some of the technical X.509 fields in a certificate should be populated.
        Structure is documented below.
    """


    subjectConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0]

    x509Config?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 subject config items0

    Attributes
    ----------
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0SubjectItems0], default is Undefined, optional
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0], default is Undefined, optional
        The subject alternative name fields.
        Structure is documented below.
    """


    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 subject config items0 subject alt name items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0SubjectConfigItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 subject config items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0], default is Undefined, optional
        Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0CaOptionsItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0], default is Undefined, optional
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0NameConstraintsItems0], default is Undefined, optional
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0PolicyIdsItems0], default is Undefined, optional
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        The value of this X.509 extension. A base64-encoded string.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. Setting the value to 0
        requires setting zero_max_issuer_path_length = true.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        If both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderConfigItems0X509ConfigItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider config items0 x509 config items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderKeySpecItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider key spec items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The algorithm to use for creating a managed Cloud KMS key for a for a simplified
        experience. All managed keys will be have their ProtectionLevel as HSM.
        Possible values are: SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256, RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256, EC_P384_SHA384.
    cloudKmsKeyVersion : str, default is Undefined, optional
        The resource name for an existing Cloud KMS CryptoKeyVersion in the format
        projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.
    """


    algorithm?: str

    cloudKmsKeyVersion?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderSubordinateConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider subordinate config items0

    Attributes
    ----------
    certificateAuthority : str, default is Undefined, optional
        This can refer to a CertificateAuthority that was used to create a
        subordinate CertificateAuthority. This field is used for information
        and usability purposes only. The resource name is in the format
        projects/*/locations/*/caPools/*/certificateAuthorities/*.
    pemIssuerChain : [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderSubordinateConfigItems0PemIssuerChainItems0], default is Undefined, optional
        Contains the PEM certificate chain for the issuers of this CertificateAuthority,
        but not pem certificate for this CA itself.
        Structure is documented below.
    """


    certificateAuthority?: str

    pemIssuerChain?: [PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderSubordinateConfigItems0PemIssuerChainItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusAtProviderSubordinateConfigItems0PemIssuerChainItems0:
    """
    privateca gcp upbound io v1beta1 certificate authority status at provider subordinate config items0 pem issuer chain items0

    Attributes
    ----------
    pemCertificates : [str], default is Undefined, optional
        Expected to be in leaf-to-root order according to RFC 5246.
    """


    pemCertificates?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateAuthorityStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


