"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API. An

    Attributes
    ----------
    apiVersion : str, default is "apigee.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApigeeGcpUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : ApigeeGcpUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigee.gcp.upbound.io/v1beta1" = "apigee.gcp.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: ApigeeGcpUpboundIoV1beta1InstanceSpec

    status?: ApigeeGcpUpboundIoV1beta1InstanceStatus


schema ApigeeGcpUpboundIoV1beta1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApigeeGcpUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApigeeGcpUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApigeeGcpUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApigeeGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApigeeGcpUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: ApigeeGcpUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApigeeGcpUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApigeeGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProvider:
    """
    apigee gcp upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    consumerAcceptList : [str], default is Undefined, optional
        Optional. Customer accept list represents the list of projects (id/number) on customer
        side that can privately connect to the service attachment. It is an optional field
        which the customers can provide during the instance creation. By default, the customer
        project associated with the Apigee organization will be included to the list.
    description : str, default is Undefined, optional
        Description of the instance.
    diskEncryptionKeyName : str, default is Undefined, optional
        Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
        Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
    diskEncryptionKeyNameRef : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameRef, default is Undefined, optional
        disk encryption key name ref
    diskEncryptionKeyNameSelector : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameSelector, default is Undefined, optional
        disk encryption key name selector
    displayName : str, default is Undefined, optional
        Display name of the instance.
    ipRange : str, default is Undefined, optional
        IP range represents the customer-provided CIDR block of length 22 that will be used for
        the Apigee instance creation. This optional range, if provided, should be freely
        available as part of larger named range the customer has allocated to the Service
        Networking peering. If this is not provided, Apigee will automatically request for any
        available /22 CIDR block from Service Networking. The customer should use this CIDR block
        for configuring their firewall needs to allow traffic from Apigee.
        Input format: "a.b.c.d/22"
    location : str, default is Undefined, optional
        Required. Compute Engine location where the instance resides.
    orgId : str, default is Undefined, optional
        The Apigee Organization associated with the Apigee instance,
        in the format organizations/{{org_name}}.
    orgIdRef : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDRef, default is Undefined, optional
        org Id ref
    orgIdSelector : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDSelector, default is Undefined, optional
        org Id selector
    peeringCidrRange : str, default is Undefined, optional
        The size of the CIDR block range that will be reserved by the instance. For valid values,
        see CidrRange on the documentation.
    """


    consumerAcceptList?: [str]

    description?: str

    diskEncryptionKeyName?: str

    diskEncryptionKeyNameRef?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameRef

    diskEncryptionKeyNameSelector?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameSelector

    displayName?: str

    ipRange?: str

    location?: str

    orgId?: str

    orgIdRef?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDRef

    orgIdSelector?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDSelector

    peeringCidrRange?: str


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameRef:
    """
    Reference to a CryptoKey in kms to populate diskEncryptionKeyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameRefPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameSelector:
    """
    Selector for a CryptoKey in kms to populate diskEncryptionKeyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameSelectorPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderDiskEncryptionKeyNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDRef:
    """
    Reference to a Organization in apigee to populate orgId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDRefPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDSelector:
    """
    Selector for a Organization in apigee to populate orgId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDSelectorPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecForProviderOrgIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    consumerAcceptList : [str], default is Undefined, optional
        Optional. Customer accept list represents the list of projects (id/number) on customer
        side that can privately connect to the service attachment. It is an optional field
        which the customers can provide during the instance creation. By default, the customer
        project associated with the Apigee organization will be included to the list.
    description : str, default is Undefined, optional
        Description of the instance.
    diskEncryptionKeyName : str, default is Undefined, optional
        Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
        Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
    diskEncryptionKeyNameRef : ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameRef, default is Undefined, optional
        disk encryption key name ref
    diskEncryptionKeyNameSelector : ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameSelector, default is Undefined, optional
        disk encryption key name selector
    displayName : str, default is Undefined, optional
        Display name of the instance.
    ipRange : str, default is Undefined, optional
        IP range represents the customer-provided CIDR block of length 22 that will be used for
        the Apigee instance creation. This optional range, if provided, should be freely
        available as part of larger named range the customer has allocated to the Service
        Networking peering. If this is not provided, Apigee will automatically request for any
        available /22 CIDR block from Service Networking. The customer should use this CIDR block
        for configuring their firewall needs to allow traffic from Apigee.
        Input format: "a.b.c.d/22"
    location : str, default is Undefined, optional
        Required. Compute Engine location where the instance resides.
    peeringCidrRange : str, default is Undefined, optional
        The size of the CIDR block range that will be reserved by the instance. For valid values,
        see CidrRange on the documentation.
    """


    consumerAcceptList?: [str]

    description?: str

    diskEncryptionKeyName?: str

    diskEncryptionKeyNameRef?: ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameRef

    diskEncryptionKeyNameSelector?: ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameSelector

    displayName?: str

    ipRange?: str

    location?: str

    peeringCidrRange?: str


schema ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameRef:
    """
    Reference to a CryptoKey in kms to populate diskEncryptionKeyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameRefPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameSelector:
    """
    Selector for a CryptoKey in kms to populate diskEncryptionKeyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameSelectorPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecInitProviderDiskEncryptionKeyNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigeeGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApigeeGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApigeeGcpUpboundIoV1beta1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : ApigeeGcpUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApigeeGcpUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ApigeeGcpUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [ApigeeGcpUpboundIoV1beta1InstanceStatusConditionsItems0]


schema ApigeeGcpUpboundIoV1beta1InstanceStatusAtProvider:
    """
    apigee gcp upbound io v1beta1 instance status at provider

    Attributes
    ----------
    consumerAcceptList : [str], default is Undefined, optional
        Optional. Customer accept list represents the list of projects (id/number) on customer
        side that can privately connect to the service attachment. It is an optional field
        which the customers can provide during the instance creation. By default, the customer
        project associated with the Apigee organization will be included to the list.
    description : str, default is Undefined, optional
        Description of the instance.
    diskEncryptionKeyName : str, default is Undefined, optional
        Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
        Use the following format: projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)
    displayName : str, default is Undefined, optional
        Display name of the instance.
    host : str, default is Undefined, optional
        Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{org_id}}/instances/{{name}}
    ipRange : str, default is Undefined, optional
        IP range represents the customer-provided CIDR block of length 22 that will be used for
        the Apigee instance creation. This optional range, if provided, should be freely
        available as part of larger named range the customer has allocated to the Service
        Networking peering. If this is not provided, Apigee will automatically request for any
        available /22 CIDR block from Service Networking. The customer should use this CIDR block
        for configuring their firewall needs to allow traffic from Apigee.
        Input format: "a.b.c.d/22"
    location : str, default is Undefined, optional
        Required. Compute Engine location where the instance resides.
    orgId : str, default is Undefined, optional
        The Apigee Organization associated with the Apigee instance,
        in the format organizations/{{org_name}}.
    peeringCidrRange : str, default is Undefined, optional
        The size of the CIDR block range that will be reserved by the instance. For valid values,
        see CidrRange on the documentation.
    port : str, default is Undefined, optional
        Output only. Port number of the exposed Apigee endpoint.
    serviceAttachment : str, default is Undefined, optional
        Output only. Resource name of the service attachment created for the instance in
        the format: projects//regions//serviceAttachments/* Apigee customers can privately
        forward traffic to this service attachment using the PSC endpoints.
    """


    consumerAcceptList?: [str]

    description?: str

    diskEncryptionKeyName?: str

    displayName?: str

    host?: str

    id?: str

    ipRange?: str

    location?: str

    orgId?: str

    peeringCidrRange?: str

    port?: str

    serviceAttachment?: str


schema ApigeeGcpUpboundIoV1beta1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


