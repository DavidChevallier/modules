"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Queue:
    """
    Queue is the Schema for the Queues API. A named resource to which messages are sent by publishers.

    Attributes
    ----------
    apiVersion : str, default is "cloudtasks.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Queue", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudtasksGcpUpboundIoV1beta1QueueSpec, default is Undefined, required
        spec
    status : CloudtasksGcpUpboundIoV1beta1QueueStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudtasks.gcp.upbound.io/v1beta1" = "cloudtasks.gcp.upbound.io/v1beta1"

    kind: "Queue" = "Queue"

    metadata?: v1.ObjectMeta

    spec: CloudtasksGcpUpboundIoV1beta1QueueSpec

    status?: CloudtasksGcpUpboundIoV1beta1QueueStatus


schema CloudtasksGcpUpboundIoV1beta1QueueSpec:
    """
    QueueSpec defines the desired state of Queue

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudtasksGcpUpboundIoV1beta1QueueSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudtasksGcpUpboundIoV1beta1QueueSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudtasksGcpUpboundIoV1beta1QueueSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudtasksGcpUpboundIoV1beta1QueueSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudtasksGcpUpboundIoV1beta1QueueSpecForProvider

    initProvider?: CloudtasksGcpUpboundIoV1beta1QueueSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudtasksGcpUpboundIoV1beta1QueueSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudtasksGcpUpboundIoV1beta1QueueSpecWriteConnectionSecretToRef


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProvider:
    """
    cloudtasks gcp upbound io v1beta1 queue spec for provider

    Attributes
    ----------
    appEngineRoutingOverride : [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderAppEngineRoutingOverrideItems0], default is Undefined, optional
        Overrides for task-level appEngineRouting. These settings apply only
        to App Engine tasks in this queue
        Structure is documented below.
    location : str, default is Undefined, required
        The location of the queue
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    projectRef : CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    rateLimits : [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderRateLimitsItems0], default is Undefined, optional
        Rate limits for task dispatches.
        The queue's actual dispatch rate is the result of:
    retryConfig : [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderRetryConfigItems0], default is Undefined, optional
        Settings that determine the retry behavior.
        Structure is documented below.
    stackdriverLoggingConfig : [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderStackdriverLoggingConfigItems0], default is Undefined, optional
        Configuration options for writing logs to Stackdriver Logging.
        Structure is documented below.
    """


    appEngineRoutingOverride?: [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderAppEngineRoutingOverrideItems0]

    location: str

    project?: str

    projectRef?: CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectRef

    projectSelector?: CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectSelector

    rateLimits?: [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderRateLimitsItems0]

    retryConfig?: [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderRetryConfigItems0]

    stackdriverLoggingConfig?: [CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderStackdriverLoggingConfigItems0]


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderAppEngineRoutingOverrideItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec for provider app engine routing override items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        App instance.
        By default, the task is sent to an instance which is available when the task is attempted.
    service : str, default is Undefined, optional
        App service.
        By default, the task is sent to the service which is the default service when the task is attempted.
    version : str, default is Undefined, optional
        App version.
        By default, the task is sent to the version which is the default version when the task is attempted.
    """


    instance?: str

    service?: str

    version?: str


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectRefPolicy


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectSelectorPolicy


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderRateLimitsItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec for provider rate limits items0

    Attributes
    ----------
    maxConcurrentDispatches : float, default is Undefined, optional
        The maximum number of concurrent tasks that Cloud Tasks allows to
        be dispatched for this queue. After this threshold has been
        reached, Cloud Tasks stops dispatching tasks until the number of
        concurrent requests decreases.
    maxDispatchesPerSecond : float, default is Undefined, optional
        The maximum rate at which tasks are dispatched from this queue.
        If unspecified when the queue is created, Cloud Tasks will pick the default.
    """


    maxConcurrentDispatches?: float

    maxDispatchesPerSecond?: float


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderRetryConfigItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec for provider retry config items0

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        Number of attempts per task.
        Cloud Tasks will attempt the task maxAttempts times (that is, if
        the first attempt fails, then there will be maxAttempts - 1
        retries). Must be >= -1.
        If unspecified when the queue is created, Cloud Tasks will pick
        the default.
        -1 indicates unlimited attempts.
    maxBackoff : str, default is Undefined, optional
        A task will be scheduled for retry between minBackoff and
        maxBackoff duration after it fails, if the queue's RetryConfig
        specifies that the task should be retried.
    maxDoublings : float, default is Undefined, optional
        The time between retries will double maxDoublings times.
        A task's retry interval starts at minBackoff, then doubles maxDoublings times,
        then increases linearly, and finally retries retries at intervals of maxBackoff
        up to maxAttempts times.
    maxRetryDuration : str, default is Undefined, optional
        If positive, maxRetryDuration specifies the time limit for
        retrying a failed task, measured from when the task was first
        attempted. Once maxRetryDuration time has passed and the task has
        been attempted maxAttempts times, no further attempts will be
        made and the task will be deleted.
        If zero, then the task age is unlimited.
    minBackoff : str, default is Undefined, optional
        A task will be scheduled for retry between minBackoff and
        maxBackoff duration after it fails, if the queue's RetryConfig
        specifies that the task should be retried.
    """


    maxAttempts?: float

    maxBackoff?: str

    maxDoublings?: float

    maxRetryDuration?: str

    minBackoff?: str


schema CloudtasksGcpUpboundIoV1beta1QueueSpecForProviderStackdriverLoggingConfigItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec for provider stackdriver logging config items0

    Attributes
    ----------
    samplingRatio : float, default is Undefined, optional
        Specifies the fraction of operations to write to Stackdriver Logging.
        This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
        default and means that no operations are logged.
    """


    samplingRatio?: float


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    appEngineRoutingOverride : [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderAppEngineRoutingOverrideItems0], default is Undefined, optional
        Overrides for task-level appEngineRouting. These settings apply only
        to App Engine tasks in this queue
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    projectRef : CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectSelector, default is Undefined, optional
        project selector
    rateLimits : [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderRateLimitsItems0], default is Undefined, optional
        Rate limits for task dispatches.
        The queue's actual dispatch rate is the result of:
    retryConfig : [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderRetryConfigItems0], default is Undefined, optional
        Settings that determine the retry behavior.
        Structure is documented below.
    stackdriverLoggingConfig : [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderStackdriverLoggingConfigItems0], default is Undefined, optional
        Configuration options for writing logs to Stackdriver Logging.
        Structure is documented below.
    """


    appEngineRoutingOverride?: [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderAppEngineRoutingOverrideItems0]

    project?: str

    projectRef?: CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectRef

    projectSelector?: CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectSelector

    rateLimits?: [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderRateLimitsItems0]

    retryConfig?: [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderRetryConfigItems0]

    stackdriverLoggingConfig?: [CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderStackdriverLoggingConfigItems0]


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderAppEngineRoutingOverrideItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec init provider app engine routing override items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        App instance.
        By default, the task is sent to an instance which is available when the task is attempted.
    service : str, default is Undefined, optional
        App service.
        By default, the task is sent to the service which is the default service when the task is attempted.
    version : str, default is Undefined, optional
        App version.
        By default, the task is sent to the version which is the default version when the task is attempted.
    """


    instance?: str

    service?: str

    version?: str


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectRefPolicy


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectSelectorPolicy


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderRateLimitsItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec init provider rate limits items0

    Attributes
    ----------
    maxConcurrentDispatches : float, default is Undefined, optional
        The maximum number of concurrent tasks that Cloud Tasks allows to
        be dispatched for this queue. After this threshold has been
        reached, Cloud Tasks stops dispatching tasks until the number of
        concurrent requests decreases.
    maxDispatchesPerSecond : float, default is Undefined, optional
        The maximum rate at which tasks are dispatched from this queue.
        If unspecified when the queue is created, Cloud Tasks will pick the default.
    """


    maxConcurrentDispatches?: float

    maxDispatchesPerSecond?: float


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderRetryConfigItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec init provider retry config items0

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        Number of attempts per task.
        Cloud Tasks will attempt the task maxAttempts times (that is, if
        the first attempt fails, then there will be maxAttempts - 1
        retries). Must be >= -1.
        If unspecified when the queue is created, Cloud Tasks will pick
        the default.
        -1 indicates unlimited attempts.
    maxBackoff : str, default is Undefined, optional
        A task will be scheduled for retry between minBackoff and
        maxBackoff duration after it fails, if the queue's RetryConfig
        specifies that the task should be retried.
    maxDoublings : float, default is Undefined, optional
        The time between retries will double maxDoublings times.
        A task's retry interval starts at minBackoff, then doubles maxDoublings times,
        then increases linearly, and finally retries retries at intervals of maxBackoff
        up to maxAttempts times.
    maxRetryDuration : str, default is Undefined, optional
        If positive, maxRetryDuration specifies the time limit for
        retrying a failed task, measured from when the task was first
        attempted. Once maxRetryDuration time has passed and the task has
        been attempted maxAttempts times, no further attempts will be
        made and the task will be deleted.
        If zero, then the task age is unlimited.
    minBackoff : str, default is Undefined, optional
        A task will be scheduled for retry between minBackoff and
        maxBackoff duration after it fails, if the queue's RetryConfig
        specifies that the task should be retried.
    """


    maxAttempts?: float

    maxBackoff?: str

    maxDoublings?: float

    maxRetryDuration?: str

    minBackoff?: str


schema CloudtasksGcpUpboundIoV1beta1QueueSpecInitProviderStackdriverLoggingConfigItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue spec init provider stackdriver logging config items0

    Attributes
    ----------
    samplingRatio : float, default is Undefined, optional
        Specifies the fraction of operations to write to Stackdriver Logging.
        This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
        default and means that no operations are logged.
    """


    samplingRatio?: float


schema CloudtasksGcpUpboundIoV1beta1QueueSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtasksGcpUpboundIoV1beta1QueueSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtasksGcpUpboundIoV1beta1QueueSpecProviderConfigRefPolicy


schema CloudtasksGcpUpboundIoV1beta1QueueSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtasksGcpUpboundIoV1beta1QueueSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudtasksGcpUpboundIoV1beta1QueueSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudtasksGcpUpboundIoV1beta1QueueStatus:
    """
    QueueStatus defines the observed state of Queue.

    Attributes
    ----------
    atProvider : CloudtasksGcpUpboundIoV1beta1QueueStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudtasksGcpUpboundIoV1beta1QueueStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CloudtasksGcpUpboundIoV1beta1QueueStatusAtProvider

    conditions?: [CloudtasksGcpUpboundIoV1beta1QueueStatusConditionsItems0]


schema CloudtasksGcpUpboundIoV1beta1QueueStatusAtProvider:
    """
    cloudtasks gcp upbound io v1beta1 queue status at provider

    Attributes
    ----------
    appEngineRoutingOverride : [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderAppEngineRoutingOverrideItems0], default is Undefined, optional
        Overrides for task-level appEngineRouting. These settings apply only
        to App Engine tasks in this queue
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/queues/{{name}}
    location : str, default is Undefined, optional
        The location of the queue
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    rateLimits : [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderRateLimitsItems0], default is Undefined, optional
        Rate limits for task dispatches.
        The queue's actual dispatch rate is the result of:
    retryConfig : [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderRetryConfigItems0], default is Undefined, optional
        Settings that determine the retry behavior.
        Structure is documented below.
    stackdriverLoggingConfig : [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderStackdriverLoggingConfigItems0], default is Undefined, optional
        Configuration options for writing logs to Stackdriver Logging.
        Structure is documented below.
    """


    appEngineRoutingOverride?: [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderAppEngineRoutingOverrideItems0]

    id?: str

    location?: str

    project?: str

    rateLimits?: [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderRateLimitsItems0]

    retryConfig?: [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderRetryConfigItems0]

    stackdriverLoggingConfig?: [CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderStackdriverLoggingConfigItems0]


schema CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderAppEngineRoutingOverrideItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue status at provider app engine routing override items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        (Output)
        The host that the task is sent to.
    instance : str, default is Undefined, optional
        App instance.
        By default, the task is sent to an instance which is available when the task is attempted.
    service : str, default is Undefined, optional
        App service.
        By default, the task is sent to the service which is the default service when the task is attempted.
    version : str, default is Undefined, optional
        App version.
        By default, the task is sent to the version which is the default version when the task is attempted.
    """


    host?: str

    instance?: str

    service?: str

    version?: str


schema CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderRateLimitsItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue status at provider rate limits items0

    Attributes
    ----------
    maxBurstSize : float, default is Undefined, optional
        (Output)
        The max burst size.
        Max burst size limits how fast tasks in queue are processed when many tasks are
        in the queue and the rate is high. This field allows the queue to have a high
        rate so processing starts shortly after a task is enqueued, but still limits
        resource usage when many tasks are enqueued in a short period of time.
    maxConcurrentDispatches : float, default is Undefined, optional
        The maximum number of concurrent tasks that Cloud Tasks allows to
        be dispatched for this queue. After this threshold has been
        reached, Cloud Tasks stops dispatching tasks until the number of
        concurrent requests decreases.
    maxDispatchesPerSecond : float, default is Undefined, optional
        The maximum rate at which tasks are dispatched from this queue.
        If unspecified when the queue is created, Cloud Tasks will pick the default.
    """


    maxBurstSize?: float

    maxConcurrentDispatches?: float

    maxDispatchesPerSecond?: float


schema CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderRetryConfigItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue status at provider retry config items0

    Attributes
    ----------
    maxAttempts : float, default is Undefined, optional
        Number of attempts per task.
        Cloud Tasks will attempt the task maxAttempts times (that is, if
        the first attempt fails, then there will be maxAttempts - 1
        retries). Must be >= -1.
        If unspecified when the queue is created, Cloud Tasks will pick
        the default.
        -1 indicates unlimited attempts.
    maxBackoff : str, default is Undefined, optional
        A task will be scheduled for retry between minBackoff and
        maxBackoff duration after it fails, if the queue's RetryConfig
        specifies that the task should be retried.
    maxDoublings : float, default is Undefined, optional
        The time between retries will double maxDoublings times.
        A task's retry interval starts at minBackoff, then doubles maxDoublings times,
        then increases linearly, and finally retries retries at intervals of maxBackoff
        up to maxAttempts times.
    maxRetryDuration : str, default is Undefined, optional
        If positive, maxRetryDuration specifies the time limit for
        retrying a failed task, measured from when the task was first
        attempted. Once maxRetryDuration time has passed and the task has
        been attempted maxAttempts times, no further attempts will be
        made and the task will be deleted.
        If zero, then the task age is unlimited.
    minBackoff : str, default is Undefined, optional
        A task will be scheduled for retry between minBackoff and
        maxBackoff duration after it fails, if the queue's RetryConfig
        specifies that the task should be retried.
    """


    maxAttempts?: float

    maxBackoff?: str

    maxDoublings?: float

    maxRetryDuration?: str

    minBackoff?: str


schema CloudtasksGcpUpboundIoV1beta1QueueStatusAtProviderStackdriverLoggingConfigItems0:
    """
    cloudtasks gcp upbound io v1beta1 queue status at provider stackdriver logging config items0

    Attributes
    ----------
    samplingRatio : float, default is Undefined, optional
        Specifies the fraction of operations to write to Stackdriver Logging.
        This field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the
        default and means that no operations are logged.
    """


    samplingRatio?: float


schema CloudtasksGcpUpboundIoV1beta1QueueStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


