"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema HaVPNGateway:
    """
    HaVPNGateway is the Schema for the HaVPNGateways API. Represents a VPN gateway running in GCP.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HaVPNGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1HaVPNGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "HaVPNGateway" = "HaVPNGateway"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpec

    status?: ComputeGcpUpboundIoV1beta1HaVPNGatewayStatus


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpec:
    """
    HaVPNGatewaySpec defines the desired state of HaVPNGateway

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProvider:
    """
    compute gcp upbound io v1beta1 ha v p n gateway spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    network : str, default is Undefined, optional
        The network this VPN gateway is accepting traffic for.
    networkRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, required
        The region this gateway should sit in.
    stackType : str, default is Undefined, optional
        The stack type for this VPN gateway to identify the IP protocols that are enabled.
        If not specified, IPV4_ONLY will be used.
        Default value is IPV4_ONLY.
        Possible values are: IPV4_ONLY, IPV4_IPV6.
    vpnInterfaces : [ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0], default is Undefined, optional
        A list of interfaces on this VPN gateway.
        Structure is documented below.
    """


    description?: str

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkSelector

    project?: str

    region: str

    stackType?: str

    vpnInterfaces?: [ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0]


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkRef:
    """
    Reference to a Network to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkSelector:
    """
    Selector for a Network to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0:
    """
    compute gcp upbound io v1beta1 ha v p n gateway spec for provider vpn interfaces items0

    Attributes
    ----------
    id : float, default is Undefined, optional
        The numeric ID of this VPN gateway interface.
    interconnectAttachment : str, default is Undefined, optional
        URL of the interconnect attachment resource. When the value
        of this field is present, the VPN Gateway will be used for
        IPsec-encrypted Cloud Interconnect; all Egress or Ingress
        traffic for this VPN Gateway interface will go through the
        specified interconnect attachment resource.
        Not currently available publicly.
    interconnectAttachmentRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentRef, default is Undefined, optional
        interconnect attachment ref
    interconnectAttachmentSelector : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentSelector, default is Undefined, optional
        interconnect attachment selector
    """


    id?: float

    interconnectAttachment?: str

    interconnectAttachmentRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentRef

    interconnectAttachmentSelector?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentSelector


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentRef:
    """
    Reference to a InterconnectAttachment in compute to populate interconnectAttachment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentRefPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentSelector:
    """
    Selector for a InterconnectAttachment in compute to populate interconnectAttachment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentSelectorPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecForProviderVpnInterfacesItems0InterconnectAttachmentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    network : str, default is Undefined, optional
        The network this VPN gateway is accepting traffic for.
    networkRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkSelector, default is Undefined, optional
        network selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    stackType : str, default is Undefined, optional
        The stack type for this VPN gateway to identify the IP protocols that are enabled.
        If not specified, IPV4_ONLY will be used.
        Default value is IPV4_ONLY.
        Possible values are: IPV4_ONLY, IPV4_IPV6.
    vpnInterfaces : [ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0], default is Undefined, optional
        A list of interfaces on this VPN gateway.
        Structure is documented below.
    """


    description?: str

    network?: str

    networkRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkRef

    networkSelector?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkSelector

    project?: str

    stackType?: str

    vpnInterfaces?: [ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0]


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkRef:
    """
    Reference to a Network to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkRefPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkSelector:
    """
    Selector for a Network to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkSelectorPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0:
    """
    compute gcp upbound io v1beta1 ha v p n gateway spec init provider vpn interfaces items0

    Attributes
    ----------
    id : float, default is Undefined, optional
        The numeric ID of this VPN gateway interface.
    interconnectAttachment : str, default is Undefined, optional
        URL of the interconnect attachment resource. When the value
        of this field is present, the VPN Gateway will be used for
        IPsec-encrypted Cloud Interconnect; all Egress or Ingress
        traffic for this VPN Gateway interface will go through the
        specified interconnect attachment resource.
        Not currently available publicly.
    interconnectAttachmentRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentRef, default is Undefined, optional
        interconnect attachment ref
    interconnectAttachmentSelector : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentSelector, default is Undefined, optional
        interconnect attachment selector
    """


    id?: float

    interconnectAttachment?: str

    interconnectAttachmentRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentRef

    interconnectAttachmentSelector?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentSelector


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentRef:
    """
    Reference to a InterconnectAttachment in compute to populate interconnectAttachment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentRefPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentSelector:
    """
    Selector for a InterconnectAttachment in compute to populate interconnectAttachment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentSelectorPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecInitProviderVpnInterfacesItems0InterconnectAttachmentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1HaVPNGatewaySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1HaVPNGatewayStatus:
    """
    HaVPNGatewayStatus defines the observed state of HaVPNGateway.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusConditionsItems0]


schema ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusAtProvider:
    """
    compute gcp upbound io v1beta1 ha v p n gateway status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional description of this resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/regions/{{region}}/vpnGateways/{{name}}
    network : str, default is Undefined, optional
        The network this VPN gateway is accepting traffic for.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region this gateway should sit in.
    selfLink : str, default is Undefined, optional
        The URI of the created resource.
    stackType : str, default is Undefined, optional
        The stack type for this VPN gateway to identify the IP protocols that are enabled.
        If not specified, IPV4_ONLY will be used.
        Default value is IPV4_ONLY.
        Possible values are: IPV4_ONLY, IPV4_IPV6.
    vpnInterfaces : [ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusAtProviderVpnInterfacesItems0], default is Undefined, optional
        A list of interfaces on this VPN gateway.
        Structure is documented below.
    """


    description?: str

    id?: str

    network?: str

    project?: str

    region?: str

    selfLink?: str

    stackType?: str

    vpnInterfaces?: [ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusAtProviderVpnInterfacesItems0]


schema ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusAtProviderVpnInterfacesItems0:
    """
    compute gcp upbound io v1beta1 ha v p n gateway status at provider vpn interfaces items0

    Attributes
    ----------
    id : float, default is Undefined, optional
        The numeric ID of this VPN gateway interface.
    interconnectAttachment : str, default is Undefined, optional
        URL of the interconnect attachment resource. When the value
        of this field is present, the VPN Gateway will be used for
        IPsec-encrypted Cloud Interconnect; all Egress or Ingress
        traffic for this VPN Gateway interface will go through the
        specified interconnect attachment resource.
        Not currently available publicly.
    ipAddress : str, default is Undefined, optional
        (Output)
        The external IP address for this VPN gateway interface.
    """


    id?: float

    interconnectAttachment?: str

    ipAddress?: str


schema ComputeGcpUpboundIoV1beta1HaVPNGatewayStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


