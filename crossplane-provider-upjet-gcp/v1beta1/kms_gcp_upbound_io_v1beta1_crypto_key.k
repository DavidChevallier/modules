"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CryptoKey:
    """
    CryptoKey is the Schema for the CryptoKeys API. A

    Attributes
    ----------
    apiVersion : str, default is "kms.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CryptoKey", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmsGcpUpboundIoV1beta1CryptoKeySpec, default is Undefined, required
        spec
    status : KmsGcpUpboundIoV1beta1CryptoKeyStatus, default is Undefined, optional
        status
    """


    apiVersion: "kms.gcp.upbound.io/v1beta1" = "kms.gcp.upbound.io/v1beta1"

    kind: "CryptoKey" = "CryptoKey"

    metadata?: v1.ObjectMeta

    spec: KmsGcpUpboundIoV1beta1CryptoKeySpec

    status?: KmsGcpUpboundIoV1beta1CryptoKeyStatus


schema KmsGcpUpboundIoV1beta1CryptoKeySpec:
    """
    CryptoKeySpec defines the desired state of CryptoKey

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KmsGcpUpboundIoV1beta1CryptoKeySpecForProvider, default is Undefined, required
        for provider
    initProvider : KmsGcpUpboundIoV1beta1CryptoKeySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KmsGcpUpboundIoV1beta1CryptoKeySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KmsGcpUpboundIoV1beta1CryptoKeySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KmsGcpUpboundIoV1beta1CryptoKeySpecForProvider

    initProvider?: KmsGcpUpboundIoV1beta1CryptoKeySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KmsGcpUpboundIoV1beta1CryptoKeySpecProviderConfigRef

    publishConnectionDetailsTo?: KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KmsGcpUpboundIoV1beta1CryptoKeySpecWriteConnectionSecretToRef


schema KmsGcpUpboundIoV1beta1CryptoKeySpecForProvider:
    """
    kms gcp upbound io v1beta1 crypto key spec for provider

    Attributes
    ----------
    destroyScheduledDuration : str, default is Undefined, optional
        The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
        If not specified at creation time, the default duration is 24 hours.
    importOnly : bool, default is Undefined, optional
        Whether this key may contain imported versions only.
    keyRing : str, default is Undefined, optional
        The KeyRing that this key belongs to.
        Format: 'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'.
    keyRingRef : KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingRef, default is Undefined, optional
        key ring ref
    keyRingSelector : KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingSelector, default is Undefined, optional
        key ring selector
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata to apply to this resource.
    purpose : str, default is Undefined, optional
        The immutable purpose of this CryptoKey. See the
        purpose reference
        for possible inputs.
        Default value is "ENCRYPT_DECRYPT".
    rotationPeriod : str, default is Undefined, optional
        Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
        The first rotation will take place after the specified period. The rotation period has
        the format of a decimal number with up to 9 fractional digits, followed by the
        letter s (seconds). It must be greater than a day (ie, 86400).
    skipInitialVersionCreation : bool, default is Undefined, optional
        If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
        You must use the google_kms_key_ring_import_job resource to import the CryptoKeyVersion.
    versionTemplate : [KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderVersionTemplateItems0], default is Undefined, optional
        A template describing settings for new crypto key versions.
        Structure is documented below.
    """


    destroyScheduledDuration?: str

    importOnly?: bool

    keyRing?: str

    keyRingRef?: KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingRef

    keyRingSelector?: KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingSelector

    labels?: {str:str}

    purpose?: str

    rotationPeriod?: str

    skipInitialVersionCreation?: bool

    versionTemplate?: [KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderVersionTemplateItems0]


schema KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingRef:
    """
    Reference to a KeyRing in kms to populate keyRing.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingRefPolicy


schema KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingSelector:
    """
    Selector for a KeyRing in kms to populate keyRing.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingSelectorPolicy


schema KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderKeyRingSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsGcpUpboundIoV1beta1CryptoKeySpecForProviderVersionTemplateItems0:
    """
    kms gcp upbound io v1beta1 crypto key spec for provider version template items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The algorithm to use when creating a version based on this template.
        See the algorithm reference for possible inputs.
    protectionLevel : str, default is Undefined, optional
        The protection level to use when creating a version based on this template. Possible values include "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC". Defaults to "SOFTWARE".
    """


    algorithm?: str

    protectionLevel?: str


schema KmsGcpUpboundIoV1beta1CryptoKeySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    destroyScheduledDuration : str, default is Undefined, optional
        The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
        If not specified at creation time, the default duration is 24 hours.
    importOnly : bool, default is Undefined, optional
        Whether this key may contain imported versions only.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata to apply to this resource.
    purpose : str, default is Undefined, optional
        The immutable purpose of this CryptoKey. See the
        purpose reference
        for possible inputs.
        Default value is "ENCRYPT_DECRYPT".
    rotationPeriod : str, default is Undefined, optional
        Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
        The first rotation will take place after the specified period. The rotation period has
        the format of a decimal number with up to 9 fractional digits, followed by the
        letter s (seconds). It must be greater than a day (ie, 86400).
    skipInitialVersionCreation : bool, default is Undefined, optional
        If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
        You must use the google_kms_key_ring_import_job resource to import the CryptoKeyVersion.
    versionTemplate : [KmsGcpUpboundIoV1beta1CryptoKeySpecInitProviderVersionTemplateItems0], default is Undefined, optional
        A template describing settings for new crypto key versions.
        Structure is documented below.
    """


    destroyScheduledDuration?: str

    importOnly?: bool

    labels?: {str:str}

    purpose?: str

    rotationPeriod?: str

    skipInitialVersionCreation?: bool

    versionTemplate?: [KmsGcpUpboundIoV1beta1CryptoKeySpecInitProviderVersionTemplateItems0]


schema KmsGcpUpboundIoV1beta1CryptoKeySpecInitProviderVersionTemplateItems0:
    """
    kms gcp upbound io v1beta1 crypto key spec init provider version template items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The algorithm to use when creating a version based on this template.
        See the algorithm reference for possible inputs.
    protectionLevel : str, default is Undefined, optional
        The protection level to use when creating a version based on this template. Possible values include "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC". Defaults to "SOFTWARE".
    """


    algorithm?: str

    protectionLevel?: str


schema KmsGcpUpboundIoV1beta1CryptoKeySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsGcpUpboundIoV1beta1CryptoKeySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsGcpUpboundIoV1beta1CryptoKeySpecProviderConfigRefPolicy


schema KmsGcpUpboundIoV1beta1CryptoKeySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToConfigRef

    metadata?: KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToMetadata

    name: str


schema KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToConfigRefPolicy


schema KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsGcpUpboundIoV1beta1CryptoKeySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KmsGcpUpboundIoV1beta1CryptoKeySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KmsGcpUpboundIoV1beta1CryptoKeyStatus:
    """
    CryptoKeyStatus defines the observed state of CryptoKey.

    Attributes
    ----------
    atProvider : KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KmsGcpUpboundIoV1beta1CryptoKeyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProvider

    conditions?: [KmsGcpUpboundIoV1beta1CryptoKeyStatusConditionsItems0]


schema KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProvider:
    """
    kms gcp upbound io v1beta1 crypto key status at provider

    Attributes
    ----------
    destroyScheduledDuration : str, default is Undefined, optional
        The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
        If not specified at creation time, the default duration is 24 hours.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{key_ring}}/cryptoKeys/{{name}}
    importOnly : bool, default is Undefined, optional
        Whether this key may contain imported versions only.
    keyRing : str, default is Undefined, optional
        The KeyRing that this key belongs to.
        Format: 'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata to apply to this resource.
    primary : [KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProviderPrimaryItems0], default is Undefined, optional
        A copy of the primary CryptoKeyVersion that will be used by cryptoKeys.encrypt when this CryptoKey is given in EncryptRequest.name.
        Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be unset.
        Structure is documented below.
    purpose : str, default is Undefined, optional
        The immutable purpose of this CryptoKey. See the
        purpose reference
        for possible inputs.
        Default value is "ENCRYPT_DECRYPT".
    rotationPeriod : str, default is Undefined, optional
        Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
        The first rotation will take place after the specified period. The rotation period has
        the format of a decimal number with up to 9 fractional digits, followed by the
        letter s (seconds). It must be greater than a day (ie, 86400).
    skipInitialVersionCreation : bool, default is Undefined, optional
        If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
        You must use the google_kms_key_ring_import_job resource to import the CryptoKeyVersion.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    versionTemplate : [KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProviderVersionTemplateItems0], default is Undefined, optional
        A template describing settings for new crypto key versions.
        Structure is documented below.
    """


    destroyScheduledDuration?: str

    effectiveLabels?: {str:str}

    id?: str

    importOnly?: bool

    keyRing?: str

    labels?: {str:str}

    primary?: [KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProviderPrimaryItems0]

    purpose?: str

    rotationPeriod?: str

    skipInitialVersionCreation?: bool

    terraformLabels?: {str:str}

    versionTemplate?: [KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProviderVersionTemplateItems0]


schema KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProviderPrimaryItems0:
    """
    kms gcp upbound io v1beta1 crypto key status at provider primary items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        (Output)
        The resource name for this CryptoKeyVersion.
    state : str, default is Undefined, optional
        (Output)
        The current state of the CryptoKeyVersion.
    """


    name?: str

    state?: str


schema KmsGcpUpboundIoV1beta1CryptoKeyStatusAtProviderVersionTemplateItems0:
    """
    kms gcp upbound io v1beta1 crypto key status at provider version template items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        The algorithm to use when creating a version based on this template.
        See the algorithm reference for possible inputs.
    protectionLevel : str, default is Undefined, optional
        The protection level to use when creating a version based on this template. Possible values include "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC". Defaults to "SOFTWARE".
    """


    algorithm?: str

    protectionLevel?: str


schema KmsGcpUpboundIoV1beta1CryptoKeyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


