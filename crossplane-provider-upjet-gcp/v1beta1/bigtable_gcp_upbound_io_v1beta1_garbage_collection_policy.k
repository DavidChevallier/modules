"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GarbageCollectionPolicy:
    """
    GarbageCollectionPolicy is the Schema for the GarbageCollectionPolicys API. Creates a Google Cloud Bigtable GC Policy inside a family.

    Attributes
    ----------
    apiVersion : str, default is "bigtable.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GarbageCollectionPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpec, default is Undefined, required
        spec
    status : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "bigtable.gcp.upbound.io/v1beta1" = "bigtable.gcp.upbound.io/v1beta1"

    kind: "GarbageCollectionPolicy" = "GarbageCollectionPolicy"

    metadata?: v1.ObjectMeta

    spec: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpec

    status?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatus


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpec:
    """
    GarbageCollectionPolicySpec defines the desired state of GarbageCollectionPolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProvider

    initProvider?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecProviderConfigRef

    publishConnectionDetailsTo?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecWriteConnectionSecretToRef


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProvider:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy spec for provider

    Attributes
    ----------
    columnFamily : str, default is Undefined, optional
        The name of the column family.
    deletionPolicy : str, default is Undefined, optional
        The deletion policy for the GC policy.
        Setting ABANDON allows the resource to be abandoned rather than deleted. This is useful for GC policy as it cannot be deleted in a replicated instance.
    gcRules : str, default is Undefined, optional
        Serialized JSON object to represent a more complex GC policy. Conflicts with mode, max_age and max_version. Conflicts with mode, max_age and max_version.
    instanceName : str, default is Undefined, optional
        The name of the Bigtable instance.
    instanceNameRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameRef, default is Undefined, optional
        instance name ref
    instanceNameSelector : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameSelector, default is Undefined, optional
        instance name selector
    maxAge : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderMaxAgeItems0], default is Undefined, optional
        GC policy that applies to all cells older than the given age.
    maxVersion : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderMaxVersionItems0], default is Undefined, optional
        GC policy that applies to all versions of a cell except for the most recent.
    mode : str, default is Undefined, optional
        If multiple policies are set, you should choose between UNION OR INTERSECTION.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
    table : str, default is Undefined, optional
        The name of the table.
    tableRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableRef, default is Undefined, optional
        table ref
    tableSelector : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableSelector, default is Undefined, optional
        table selector
    """


    columnFamily?: str

    deletionPolicy?: str

    gcRules?: str

    instanceName?: str

    instanceNameRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameRef

    instanceNameSelector?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameSelector

    maxAge?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderMaxAgeItems0]

    maxVersion?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderMaxVersionItems0]

    mode?: str

    project?: str

    table?: str

    tableRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableRef

    tableSelector?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableSelector


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameRef:
    """
    Reference to a Instance in bigtable to populate instanceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameRefPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameSelector:
    """
    Selector for a Instance in bigtable to populate instanceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameSelectorPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderInstanceNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderMaxAgeItems0:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy spec for provider max age items0

    Attributes
    ----------
    days : float, default is Undefined, optional
        Number of days before applying GC policy.
    duration : str, default is Undefined, optional
        Duration before applying GC policy (ex. "8h"). This is required when days isn't set
    """


    days?: float

    duration?: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderMaxVersionItems0:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy spec for provider max version items0

    Attributes
    ----------
    number : float, default is Undefined, optional
        Number of version before applying the GC policy.
    """


    number?: float


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableRef:
    """
    Reference to a Table in bigtable to populate table.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableRefPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableSelector:
    """
    Selector for a Table in bigtable to populate table.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableSelectorPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecForProviderTableSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    columnFamily : str, default is Undefined, optional
        The name of the column family.
    deletionPolicy : str, default is Undefined, optional
        The deletion policy for the GC policy.
        Setting ABANDON allows the resource to be abandoned rather than deleted. This is useful for GC policy as it cannot be deleted in a replicated instance.
    gcRules : str, default is Undefined, optional
        Serialized JSON object to represent a more complex GC policy. Conflicts with mode, max_age and max_version. Conflicts with mode, max_age and max_version.
    instanceName : str, default is Undefined, optional
        The name of the Bigtable instance.
    instanceNameRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameRef, default is Undefined, optional
        instance name ref
    instanceNameSelector : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameSelector, default is Undefined, optional
        instance name selector
    maxAge : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderMaxAgeItems0], default is Undefined, optional
        GC policy that applies to all cells older than the given age.
    maxVersion : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderMaxVersionItems0], default is Undefined, optional
        GC policy that applies to all versions of a cell except for the most recent.
    mode : str, default is Undefined, optional
        If multiple policies are set, you should choose between UNION OR INTERSECTION.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
    table : str, default is Undefined, optional
        The name of the table.
    tableRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableRef, default is Undefined, optional
        table ref
    tableSelector : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableSelector, default is Undefined, optional
        table selector
    """


    columnFamily?: str

    deletionPolicy?: str

    gcRules?: str

    instanceName?: str

    instanceNameRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameRef

    instanceNameSelector?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameSelector

    maxAge?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderMaxAgeItems0]

    maxVersion?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderMaxVersionItems0]

    mode?: str

    project?: str

    table?: str

    tableRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableRef

    tableSelector?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableSelector


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameRef:
    """
    Reference to a Instance in bigtable to populate instanceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameRefPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameSelector:
    """
    Selector for a Instance in bigtable to populate instanceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameSelectorPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderInstanceNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderMaxAgeItems0:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy spec init provider max age items0

    Attributes
    ----------
    days : float, default is Undefined, optional
        Number of days before applying GC policy.
    duration : str, default is Undefined, optional
        Duration before applying GC policy (ex. "8h"). This is required when days isn't set
    """


    days?: float

    duration?: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderMaxVersionItems0:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy spec init provider max version items0

    Attributes
    ----------
    number : float, default is Undefined, optional
        Number of version before applying the GC policy.
    """


    number?: float


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableRef:
    """
    Reference to a Table in bigtable to populate table.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableRefPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableSelector:
    """
    Selector for a Table in bigtable to populate table.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableSelectorPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecInitProviderTableSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecProviderConfigRefPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToConfigRef

    metadata?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToMetadata

    name: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToConfigRefPolicy


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatus:
    """
    GarbageCollectionPolicyStatus defines the observed state of GarbageCollectionPolicy.

    Attributes
    ----------
    atProvider : BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProvider

    conditions?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusConditionsItems0]


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProvider:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy status at provider

    Attributes
    ----------
    columnFamily : str, default is Undefined, optional
        The name of the column family.
    deletionPolicy : str, default is Undefined, optional
        The deletion policy for the GC policy.
        Setting ABANDON allows the resource to be abandoned rather than deleted. This is useful for GC policy as it cannot be deleted in a replicated instance.
    gcRules : str, default is Undefined, optional
        Serialized JSON object to represent a more complex GC policy. Conflicts with mode, max_age and max_version. Conflicts with mode, max_age and max_version.
    id : str, default is Undefined, optional
        id
    instanceName : str, default is Undefined, optional
        The name of the Bigtable instance.
    maxAge : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProviderMaxAgeItems0], default is Undefined, optional
        GC policy that applies to all cells older than the given age.
    maxVersion : [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProviderMaxVersionItems0], default is Undefined, optional
        GC policy that applies to all versions of a cell except for the most recent.
    mode : str, default is Undefined, optional
        If multiple policies are set, you should choose between UNION OR INTERSECTION.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
    table : str, default is Undefined, optional
        The name of the table.
    """


    columnFamily?: str

    deletionPolicy?: str

    gcRules?: str

    id?: str

    instanceName?: str

    maxAge?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProviderMaxAgeItems0]

    maxVersion?: [BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProviderMaxVersionItems0]

    mode?: str

    project?: str

    table?: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProviderMaxAgeItems0:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy status at provider max age items0

    Attributes
    ----------
    days : float, default is Undefined, optional
        Number of days before applying GC policy.
    duration : str, default is Undefined, optional
        Duration before applying GC policy (ex. "8h"). This is required when days isn't set
    """


    days?: float

    duration?: str


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusAtProviderMaxVersionItems0:
    """
    bigtable gcp upbound io v1beta1 garbage collection policy status at provider max version items0

    Attributes
    ----------
    number : float, default is Undefined, optional
        Number of version before applying the GC policy.
    """


    number?: float


schema BigtableGcpUpboundIoV1beta1GarbageCollectionPolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


