"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Trigger:
    """
    Trigger is the Schema for the Triggers API. Configuration for an automated build in response to source repository changes.

    Attributes
    ----------
    apiVersion : str, default is "cloudbuild.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Trigger", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudbuildGcpUpboundIoV1beta1TriggerSpec, default is Undefined, required
        spec
    status : CloudbuildGcpUpboundIoV1beta1TriggerStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudbuild.gcp.upbound.io/v1beta1" = "cloudbuild.gcp.upbound.io/v1beta1"

    kind: "Trigger" = "Trigger"

    metadata?: v1.ObjectMeta

    spec: CloudbuildGcpUpboundIoV1beta1TriggerSpec

    status?: CloudbuildGcpUpboundIoV1beta1TriggerStatus


schema CloudbuildGcpUpboundIoV1beta1TriggerSpec:
    """
    TriggerSpec defines the desired state of Trigger

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProvider

    initProvider?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecWriteConnectionSecretToRef


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProvider:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider

    Attributes
    ----------
    approvalConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderApprovalConfigItems0], default is Undefined, optional
        Configuration for manual approval to start a build invocation of this BuildTrigger.
        Builds created by this trigger will require approval before they execute.
        Any user with a Cloud Build Approver role for the project can approve a build.
        Structure is documented below.
    bitbucketServerTriggerConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0], default is Undefined, optional
        BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.
        Structure is documented below.
    build : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0], default is Undefined, optional
        Contents of the build template. Either a filename or build template must be provided.
        Structure is documented below.
    description : str, default is Undefined, optional
        Human-readable description of the trigger.
    disabled : bool, default is Undefined, optional
        Whether the trigger is disabled or not. If true, the trigger will never result in a build.
    filename : str, default is Undefined, optional
        Path, from the source root, to a file whose contents is used for the template.
        Either a filename or build template must be provided. Set this only when using trigger_template or github.
        When using Pub/Sub, Webhook or Manual set the file name using git_file_source instead.
    $filter : str, default is Undefined, optional
        A Common Expression Language string. Used only with Pub/Sub and Webhook.
    gitFileSource : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGitFileSourceItems0], default is Undefined, optional
        The file source describing the local or remote Build template.
        Structure is documented below.
    github : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0], default is Undefined, optional
        Describes the configuration of a trigger that creates a build whenever a GitHub event is received.
        One of trigger_template, github, pubsub_config or webhook_config must be provided.
        Structure is documented below.
    ignoredFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for **.
        If ignoredFiles and changed files are both empty, then they are not
        used to determine whether or not to trigger a build.
        If ignoredFiles is not empty, then we ignore any files that match any
        of the ignored_file globs. If the change has no files that are outside
        of the ignoredFiles globs, then we do not trigger a build.
    includeBuildLogs : str, default is Undefined, optional
        Build logs will be sent back to GitHub as part of the checkrun
        result.  Values can be INCLUDE_BUILD_LOGS_UNSPECIFIED or
        INCLUDE_BUILD_LOGS_WITH_STATUS
        Possible values are: INCLUDE_BUILD_LOGS_UNSPECIFIED, INCLUDE_BUILD_LOGS_WITH_STATUS.
    includedFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for **.
        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is empty, then as far as this filter is concerned, we
        should trigger the build.
        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is not empty, then we make sure that at least one of
        those files matches a includedFiles glob. If not, then we do not trigger
        a build.
    location : str, default is Undefined, optional
        The Cloud Build location for the trigger.
        If not specified, "global" is used.
    name : str, default is Undefined, optional
        Name of the trigger. Must be unique within the project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pubsubConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0], default is Undefined, optional
        PubsubConfig describes the configuration of a trigger that creates
        a build whenever a Pub/Sub message is published.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    repositoryEventConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0], default is Undefined, optional
        The configuration of a trigger that creates a build whenever an event from Repo API is received.
        Structure is documented below.
    serviceAccount : str, default is Undefined, optional
        The service account used for all user-controlled operations including
        triggers.patch, triggers.run, builds.create, and builds.cancel.
        If no service account is set, then the standard Cloud Build service account
        ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.
        Format: projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}
    serviceAccountRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountSelector, default is Undefined, optional
        service account selector
    sourceToBuild : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderSourceToBuildItems0], default is Undefined, optional
        The repo and ref of the repository from which to build.
        This field is used only for those triggers that do not respond to SCM events.
        Triggers that respond to such events build source at whatever commit caused the event.
        This field is currently only used by Webhook, Pub/Sub, Manual, and Cron triggers.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a BuildTrigger
    triggerTemplate : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderTriggerTemplateItems0], default is Undefined, optional
        Template describing the types of source changes to trigger a build.
        Branch and tag names in trigger templates are interpreted as regular
        expressions. Any branch or tag change that matches that regular
        expression will trigger a build.
        One of trigger_template, github, pubsub_config, webhook_config or source_to_build must be provided.
        Structure is documented below.
    webhookConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0], default is Undefined, optional
        WebhookConfig describes the configuration of a trigger that creates
        a build whenever a webhook is sent to a trigger's webhook URL.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    """


    approvalConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderApprovalConfigItems0]

    bitbucketServerTriggerConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0]

    build?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0]

    description?: str

    disabled?: bool

    filename?: str

    $filter?: str

    gitFileSource?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGitFileSourceItems0]

    github?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0]

    ignoredFiles?: [str]

    includeBuildLogs?: str

    includedFiles?: [str]

    location?: str

    name?: str

    project?: str

    pubsubConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0]

    repositoryEventConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0]

    serviceAccount?: str

    serviceAccountRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountRef

    serviceAccountSelector?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountSelector

    sourceToBuild?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderSourceToBuildItems0]

    substitutions?: {str:str}

    tags?: [str]

    triggerTemplate?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderTriggerTemplateItems0]

    webhookConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderApprovalConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider approval config items0

    Attributes
    ----------
    approvalRequired : bool, default is Undefined, optional
        Whether or not approval is needed. If this is set on a build, it will become pending when run,
        and will need to be explicitly approved to start.
    """


    approvalRequired?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider bitbucket server trigger config items0

    Attributes
    ----------
    bitbucketServerConfigResource : str, default is Undefined, optional
        The Bitbucket server config resource that this trigger config maps to.
    projectKey : str, default is Undefined, optional
        Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0PullRequestItems0], default is Undefined, optional
        Filter to match changes in pull requests.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0PushItems0], default is Undefined, optional
        Filter to match changes in refs like branches, tags.
        Structure is documented below.
    repoSlug : str, default is Undefined, optional
        Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
        For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
    """


    bitbucketServerConfigResource?: str

    projectKey?: str

    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0PushItems0]

    repoSlug?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider bitbucket server trigger config items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBitbucketServerTriggerConfigItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider bitbucket server trigger config items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0

    Attributes
    ----------
    artifacts : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0], default is Undefined, optional
        Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
        Structure is documented below.
    availableSecrets : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0AvailableSecretsItems0], default is Undefined, optional
        Secrets and secret environment variables.
        Structure is documented below.
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    logsBucket : str, default is Undefined, optional
        Google Cloud Storage bucket where logs should be written.
        Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
    options : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0OptionsItems0], default is Undefined, optional
        Special options for this build.
        Structure is documented below.
    queueTtl : str, default is Undefined, optional
        TTL in queue for this build. If provided and the build is enqueued longer than this value,
        the build will expire and the build status will be EXPIRED.
        The TTL starts ticking from createTime.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    secret : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SecretItems0], default is Undefined, optional
        Secrets to decrypt using Cloud Key Management Service.
        Structure is documented below.
    source : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0], default is Undefined, optional
        The location of the source files to build.
        One of storageSource or repoSource must be provided.
        Structure is documented below.
    step : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0StepItems0], default is Undefined, optional
        The operations to be performed on the workspace.
        Structure is documented below.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a Build. These are not docker tags.
    timeout : str, default is Undefined, optional
        Amount of time that this build should be allowed to run, to second granularity.
        If this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.
        This timeout must be equal to or greater than the sum of the timeouts for build steps within the build.
        The expected format is the number of seconds followed by s.
        Default time is ten minutes (600s).
    """


    artifacts?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0]

    availableSecrets?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0AvailableSecretsItems0]

    images?: [str]

    logsBucket?: str

    options?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0OptionsItems0]

    queueTtl?: str

    secret?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SecretItems0]

    source?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0]

    step?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0StepItems0]

    substitutions?: {str:str}

    tags?: [str]

    timeout?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 artifacts items0

    Attributes
    ----------
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    mavenArtifacts : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0MavenArtifactsItems0], default is Undefined, optional
        A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    npmPackages : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0NpmPackagesItems0], default is Undefined, optional
        Npm package to upload to Artifact Registry upon successful completion of all build steps.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    objects : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0ObjectsItems0], default is Undefined, optional
        A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
        Files in the workspace matching specified paths globs will be uploaded to the
        Cloud Storage location using the builder service account's credentials.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    pythonPackages : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0PythonPackagesItems0], default is Undefined, optional
        Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    """


    images?: [str]

    mavenArtifacts?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0MavenArtifactsItems0]

    npmPackages?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0NpmPackagesItems0]

    objects?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0ObjectsItems0]

    pythonPackages?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0PythonPackagesItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0MavenArtifactsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 artifacts items0 maven artifacts items0

    Attributes
    ----------
    artifactId : str, default is Undefined, optional
        Maven artifactId value used when uploading the artifact to Artifact Registry.
    groupId : str, default is Undefined, optional
        Maven groupId value used when uploading the artifact to Artifact Registry.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    version : str, default is Undefined, optional
        Maven version value used when uploading the artifact to Artifact Registry.
    """


    artifactId?: str

    groupId?: str

    path?: str

    repository?: str

    version?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0NpmPackagesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 artifacts items0 npm packages items0

    Attributes
    ----------
    packagePath : str, default is Undefined, optional
        Path to the package.json. e.g. workspace/path/to/package
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    """


    packagePath?: str

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0ObjectsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 artifacts items0 objects items0

    Attributes
    ----------
    location : str, default is Undefined, optional
        Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
        Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
        this location as a prefix.
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually dist/*, and sometimes additionally an .asc file.
    """


    location?: str

    paths?: [str]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0ArtifactsItems0PythonPackagesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 artifacts items0 python packages items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually dist/*, and sometimes additionally an .asc file.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    """


    paths?: [str]

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0AvailableSecretsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 available secrets items0

    Attributes
    ----------
    secretManager : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0AvailableSecretsItems0SecretManagerItems0], default is Undefined, optional
        Pairs a secret environment variable with a SecretVersion in Secret Manager.
        Structure is documented below.
    """


    secretManager?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0AvailableSecretsItems0SecretManagerItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0AvailableSecretsItems0SecretManagerItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 available secrets items0 secret manager items0

    Attributes
    ----------
    env : str, default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    versionName : str, default is Undefined, optional
        Resource name of the SecretVersion. In format: projects//secrets//versions/*
    """


    env?: str

    versionName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0OptionsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 options items0

    Attributes
    ----------
    diskSizeGb : float, default is Undefined, optional
        Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
        some of the space will be used by the operating system and build utilities.
        Also note that this is the minimum disk size that will be allocated for the build --
        the build may run with a larger disk than requested. At present, the maximum disk size
        is 1000GB; builds that request more than the maximum are rejected with an error.
    dynamicSubstitutions : bool, default is Undefined, optional
        Option to specify whether or not to apply bash style string operations to the substitutions.
        NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    logStreamingOption : str, default is Undefined, optional
        Option to define build log streaming behavior to Google Cloud Storage.
        Possible values are: STREAM_DEFAULT, STREAM_ON, STREAM_OFF.
    logging : str, default is Undefined, optional
        Option to specify the logging mode, which determines if and where build logs are stored.
        Possible values are: LOGGING_UNSPECIFIED, LEGACY, GCS_ONLY, STACKDRIVER_ONLY, CLOUD_LOGGING_ONLY, NONE.
    machineType : str, default is Undefined, optional
        Compute Engine machine type on which to run the build.
    requestedVerifyOption : str, default is Undefined, optional
        Requested verifiability options.
        Possible values are: NOT_VERIFIED, VERIFIED.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    sourceProvenanceHash : [str], default is Undefined, optional
        Requested hash for SourceProvenance.
        Each value may be one of: NONE, SHA256, MD5.
    substitutionOption : str, default is Undefined, optional
        Option to specify behavior when there is an error in the substitution checks.
        NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
        in the build configuration file.
        Possible values are: MUST_MATCH, ALLOW_LOOSE.
    volumes : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0OptionsItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.
        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.
        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
        Structure is documented below.
    workerPool : str, default is Undefined, optional
        Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
        This field is experimental.
    """


    diskSizeGb?: float

    dynamicSubstitutions?: bool

    env?: [str]

    logStreamingOption?: str

    logging?: str

    machineType?: str

    requestedVerifyOption?: str

    secretEnv?: [str]

    sourceProvenanceHash?: [str]

    substitutionOption?: str

    volumes?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0OptionsItems0VolumesItems0]

    workerPool?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0OptionsItems0VolumesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 options items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SecretItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 secret items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Cloud KMS key name to use to decrypt these envs.
    secretEnv : {str:str}, default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    """


    kmsKeyName?: str

    secretEnv?: {str:str}


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 source items0

    Attributes
    ----------
    repoSource : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0RepoSourceItems0], default is Undefined, optional
        Location of the source in a Google Cloud Source Repository.
        Structure is documented below.
    storageSource : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0StorageSourceItems0], default is Undefined, optional
        Location of the source in an archive file in Google Cloud Storage.
        Structure is documented below.
    """


    repoSource?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0RepoSourceItems0]

    storageSource?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0StorageSourceItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0RepoSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 source items0 repo source items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository. If
        omitted, the project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    substitutions?: {str:str}

    tagName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0SourceItems0StorageSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 source items0 storage source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source.
    generation : str, default is Undefined, optional
        Google Cloud Storage generation for the object.
        If the generation is omitted, the latest generation will be used
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
        This object must be a gzipped archive file (.tar.gz) containing source to build.
    """


    bucket?: str

    generation?: str

    object?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0StepItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 step items0

    Attributes
    ----------
    allowExitCodes : [float], default is Undefined, optional
        Allow this build step to fail without failing the entire build if and
        only if the exit code is one of the specified codes.
        If allowFailure is also specified, this field will take precedence.
    allowFailure : bool, default is Undefined, optional
        Allow this build step to fail without failing the entire build.
        If false, the entire build will fail if this step fails. Otherwise, the
        build will succeed, but this step will still have a failure status.
        Error information will be reported in the failureDetail field.
        allowExitCodes takes precedence over this field.
    args : [str], default is Undefined, optional
        A list of arguments that will be presented to the step when it is started.
        If the image used to run the step's container has an entrypoint, the args
        are used as arguments to that entrypoint. If the image does not define an
        entrypoint, the first element in args is used as the entrypoint, and the
        remainder will be used as arguments.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    entrypoint : str, default is Undefined, optional
        Entrypoint to be used instead of the build step image's
        default entrypoint.
        If unset, the image's default entrypoint is used
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    id : str, default is Undefined, optional
        Unique identifier for this build step, used in wait_for to
        reference this build step as a dependency.
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    script : str, default is Undefined, optional
        A shell script to be executed in the step.
        When script is provided, the user cannot specify the entrypoint or args.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    timeout : str, default is Undefined, optional
        Time limit for executing this build step. If not defined,
        the step has no
        time limit and will be allowed to continue to run until either it
        completes or the build itself times out.
    timing : str, default is Undefined, optional
        Output only. Stores timing information for executing this
        build step.
    volumes : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0StepItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.
        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.
        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
        Structure is documented below.
    waitFor : [str], default is Undefined, optional
        The ID(s) of the step(s) that this build step depends on.
        This build step will not start until all the build steps in wait_for
        have completed successfully. If wait_for is empty, this build step
        will start when all previous build steps in the Build.Steps list
        have completed successfully.
    """


    allowExitCodes?: [float]

    allowFailure?: bool

    args?: [str]

    dir?: str

    entrypoint?: str

    env?: [str]

    id?: str

    name?: str

    script?: str

    secretEnv?: [str]

    timeout?: str

    timing?: str

    volumes?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0StepItems0VolumesItems0]

    waitFor?: [str]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderBuildItems0StepItems0VolumesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider build items0 step items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGitFileSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider git file source items0

    Attributes
    ----------
    bitbucketServerConfig : str, default is Undefined, optional
        The full resource name of the bitbucket server config.
        Format: projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
    githubEnterpriseConfig : str, default is Undefined, optional
        The full resource name of the github enterprise config.
        Format: projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}. projects/{project}/githubEnterpriseConfigs/{id}.
    path : str, default is Undefined, optional
        The path of the file, with the repo root as the root of the path.
    repoType : str, default is Undefined, optional
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
        Possible values are: UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER.
    repository : str, default is Undefined, optional
        The fully qualified resource name of the Repo API repository. The fully qualified resource name of the Repo API repository.
        If unspecified, the repo from which the trigger invocation originated is assumed to be the repo from which to read the specified path.
    revision : str, default is Undefined, optional
        The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
        filename . This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
        If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
    uri : str, default is Undefined, optional
        The URI of the repo . If unspecified, the repo from which the trigger
        invocation originated is assumed to be the repo from which to read the specified path.
    """


    bitbucketServerConfig?: str

    githubEnterpriseConfig?: str

    path?: str

    repoType?: str

    repository?: str

    revision?: str

    uri?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider github items0

    Attributes
    ----------
    enterpriseConfigResourceName : str, default is Undefined, optional
        The resource name of the github enterprise config that should be applied to this installation.
        For example: "projects/{$projectId}/locations/{$locationId}/githubEnterpriseConfigs/{$configId}"
    name : str, default is Undefined, optional
        Name of the repository. For example: The name for
        https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
    owner : str, default is Undefined, optional
        Owner of the repository. For example: The owner for
        https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0PullRequestItems0], default is Undefined, optional
        filter to match changes in pull requests. Specify only one of pull_request or push.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0PushItems0], default is Undefined, optional
        filter to match changes in refs, like branches or tags. Specify only one of pull_request or push.
        Structure is documented below.
    """


    enterpriseConfigResourceName?: str

    name?: str

    owner?: str

    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0PushItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider github items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderGithubItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider github items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider pubsub config items0

    Attributes
    ----------
    serviceAccountEmail : str, default is Undefined, optional
        Service account that will make the push request.
    topic : str, default is Undefined, optional
        The name of the topic from which this subscription is receiving messages.
    topicRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicRef, default is Undefined, optional
        topic ref
    topicSelector : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicSelector, default is Undefined, optional
        topic selector
    """


    serviceAccountEmail?: str

    topic?: str

    topicRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicRef

    topicSelector?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicSelector


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicRef:
    """
    Reference to a Topic in pubsub to populate topic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicSelector:
    """
    Selector for a Topic in pubsub to populate topic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicSelectorPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderPubsubConfigItems0TopicSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider repository event config items0

    Attributes
    ----------
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0PullRequestItems0], default is Undefined, optional
        Contains filter properties for matching Pull Requests.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0PushItems0], default is Undefined, optional
        Contains filter properties for matching git pushes.
        Structure is documented below.
    repository : str, default is Undefined, optional
        The resource name of the Repo API resource.
    """


    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0PushItems0]

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider repository event config items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderRepositoryEventConfigItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider repository event config items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountSelectorPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderServiceAccountSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderSourceToBuildItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider source to build items0

    Attributes
    ----------
    bitbucketServerConfig : str, default is Undefined, optional
        The full resource name of the bitbucket server config.
        Format: projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
    githubEnterpriseConfig : str, default is Undefined, optional
        The full resource name of the github enterprise config.
        Format: projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}. projects/{project}/githubEnterpriseConfigs/{id}.
    ref : str, default is Undefined, optional
        The branch or tag to use. Must start with "refs/" .
    repoType : str, default is Undefined, optional
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
        Possible values are: UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    uri : str, default is Undefined, optional
        The URI of the repo.
    """


    bitbucketServerConfig?: str

    githubEnterpriseConfig?: str

    ref?: str

    repoType?: str

    repository?: str

    uri?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderTriggerTemplateItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider trigger template items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository. If
        omitted, the project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec for provider webhook config items0

    Attributes
    ----------
    secret : str, default is Undefined, optional
        Resource name for the secret required as a URL parameter.
    secretRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretSelector, default is Undefined, optional
        secret selector
    """


    secret?: str

    secretRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretRef

    secretSelector?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretSelector


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretRef:
    """
    Reference to a SecretVersion in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretSelector:
    """
    Selector for a SecretVersion in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretSelectorPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecForProviderWebhookConfigItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    approvalConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderApprovalConfigItems0], default is Undefined, optional
        Configuration for manual approval to start a build invocation of this BuildTrigger.
        Builds created by this trigger will require approval before they execute.
        Any user with a Cloud Build Approver role for the project can approve a build.
        Structure is documented below.
    bitbucketServerTriggerConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0], default is Undefined, optional
        BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.
        Structure is documented below.
    build : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0], default is Undefined, optional
        Contents of the build template. Either a filename or build template must be provided.
        Structure is documented below.
    description : str, default is Undefined, optional
        Human-readable description of the trigger.
    disabled : bool, default is Undefined, optional
        Whether the trigger is disabled or not. If true, the trigger will never result in a build.
    filename : str, default is Undefined, optional
        Path, from the source root, to a file whose contents is used for the template.
        Either a filename or build template must be provided. Set this only when using trigger_template or github.
        When using Pub/Sub, Webhook or Manual set the file name using git_file_source instead.
    $filter : str, default is Undefined, optional
        A Common Expression Language string. Used only with Pub/Sub and Webhook.
    gitFileSource : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGitFileSourceItems0], default is Undefined, optional
        The file source describing the local or remote Build template.
        Structure is documented below.
    github : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0], default is Undefined, optional
        Describes the configuration of a trigger that creates a build whenever a GitHub event is received.
        One of trigger_template, github, pubsub_config or webhook_config must be provided.
        Structure is documented below.
    ignoredFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for **.
        If ignoredFiles and changed files are both empty, then they are not
        used to determine whether or not to trigger a build.
        If ignoredFiles is not empty, then we ignore any files that match any
        of the ignored_file globs. If the change has no files that are outside
        of the ignoredFiles globs, then we do not trigger a build.
    includeBuildLogs : str, default is Undefined, optional
        Build logs will be sent back to GitHub as part of the checkrun
        result.  Values can be INCLUDE_BUILD_LOGS_UNSPECIFIED or
        INCLUDE_BUILD_LOGS_WITH_STATUS
        Possible values are: INCLUDE_BUILD_LOGS_UNSPECIFIED, INCLUDE_BUILD_LOGS_WITH_STATUS.
    includedFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for **.
        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is empty, then as far as this filter is concerned, we
        should trigger the build.
        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is not empty, then we make sure that at least one of
        those files matches a includedFiles glob. If not, then we do not trigger
        a build.
    location : str, default is Undefined, optional
        The Cloud Build location for the trigger.
        If not specified, "global" is used.
    name : str, default is Undefined, optional
        Name of the trigger. Must be unique within the project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pubsubConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0], default is Undefined, optional
        PubsubConfig describes the configuration of a trigger that creates
        a build whenever a Pub/Sub message is published.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    repositoryEventConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0], default is Undefined, optional
        The configuration of a trigger that creates a build whenever an event from Repo API is received.
        Structure is documented below.
    serviceAccount : str, default is Undefined, optional
        The service account used for all user-controlled operations including
        triggers.patch, triggers.run, builds.create, and builds.cancel.
        If no service account is set, then the standard Cloud Build service account
        ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.
        Format: projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}
    serviceAccountRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountSelector, default is Undefined, optional
        service account selector
    sourceToBuild : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderSourceToBuildItems0], default is Undefined, optional
        The repo and ref of the repository from which to build.
        This field is used only for those triggers that do not respond to SCM events.
        Triggers that respond to such events build source at whatever commit caused the event.
        This field is currently only used by Webhook, Pub/Sub, Manual, and Cron triggers.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a BuildTrigger
    triggerTemplate : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderTriggerTemplateItems0], default is Undefined, optional
        Template describing the types of source changes to trigger a build.
        Branch and tag names in trigger templates are interpreted as regular
        expressions. Any branch or tag change that matches that regular
        expression will trigger a build.
        One of trigger_template, github, pubsub_config, webhook_config or source_to_build must be provided.
        Structure is documented below.
    webhookConfig : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0], default is Undefined, optional
        WebhookConfig describes the configuration of a trigger that creates
        a build whenever a webhook is sent to a trigger's webhook URL.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    """


    approvalConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderApprovalConfigItems0]

    bitbucketServerTriggerConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0]

    build?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0]

    description?: str

    disabled?: bool

    filename?: str

    $filter?: str

    gitFileSource?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGitFileSourceItems0]

    github?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0]

    ignoredFiles?: [str]

    includeBuildLogs?: str

    includedFiles?: [str]

    location?: str

    name?: str

    project?: str

    pubsubConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0]

    repositoryEventConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0]

    serviceAccount?: str

    serviceAccountRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountRef

    serviceAccountSelector?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountSelector

    sourceToBuild?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderSourceToBuildItems0]

    substitutions?: {str:str}

    tags?: [str]

    triggerTemplate?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderTriggerTemplateItems0]

    webhookConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderApprovalConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider approval config items0

    Attributes
    ----------
    approvalRequired : bool, default is Undefined, optional
        Whether or not approval is needed. If this is set on a build, it will become pending when run,
        and will need to be explicitly approved to start.
    """


    approvalRequired?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider bitbucket server trigger config items0

    Attributes
    ----------
    bitbucketServerConfigResource : str, default is Undefined, optional
        The Bitbucket server config resource that this trigger config maps to.
    projectKey : str, default is Undefined, optional
        Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0PullRequestItems0], default is Undefined, optional
        Filter to match changes in pull requests.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0PushItems0], default is Undefined, optional
        Filter to match changes in refs like branches, tags.
        Structure is documented below.
    repoSlug : str, default is Undefined, optional
        Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
        For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
    """


    bitbucketServerConfigResource?: str

    projectKey?: str

    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0PushItems0]

    repoSlug?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider bitbucket server trigger config items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBitbucketServerTriggerConfigItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider bitbucket server trigger config items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0

    Attributes
    ----------
    artifacts : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0], default is Undefined, optional
        Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
        Structure is documented below.
    availableSecrets : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0AvailableSecretsItems0], default is Undefined, optional
        Secrets and secret environment variables.
        Structure is documented below.
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    logsBucket : str, default is Undefined, optional
        Google Cloud Storage bucket where logs should be written.
        Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
    options : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0OptionsItems0], default is Undefined, optional
        Special options for this build.
        Structure is documented below.
    queueTtl : str, default is Undefined, optional
        TTL in queue for this build. If provided and the build is enqueued longer than this value,
        the build will expire and the build status will be EXPIRED.
        The TTL starts ticking from createTime.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    secret : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SecretItems0], default is Undefined, optional
        Secrets to decrypt using Cloud Key Management Service.
        Structure is documented below.
    source : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0], default is Undefined, optional
        The location of the source files to build.
        One of storageSource or repoSource must be provided.
        Structure is documented below.
    step : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0StepItems0], default is Undefined, optional
        The operations to be performed on the workspace.
        Structure is documented below.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a Build. These are not docker tags.
    timeout : str, default is Undefined, optional
        Amount of time that this build should be allowed to run, to second granularity.
        If this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.
        This timeout must be equal to or greater than the sum of the timeouts for build steps within the build.
        The expected format is the number of seconds followed by s.
        Default time is ten minutes (600s).
    """


    artifacts?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0]

    availableSecrets?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0AvailableSecretsItems0]

    images?: [str]

    logsBucket?: str

    options?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0OptionsItems0]

    queueTtl?: str

    secret?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SecretItems0]

    source?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0]

    step?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0StepItems0]

    substitutions?: {str:str}

    tags?: [str]

    timeout?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 artifacts items0

    Attributes
    ----------
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    mavenArtifacts : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0MavenArtifactsItems0], default is Undefined, optional
        A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    npmPackages : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0NpmPackagesItems0], default is Undefined, optional
        Npm package to upload to Artifact Registry upon successful completion of all build steps.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    objects : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0ObjectsItems0], default is Undefined, optional
        A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
        Files in the workspace matching specified paths globs will be uploaded to the
        Cloud Storage location using the builder service account's credentials.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    pythonPackages : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0PythonPackagesItems0], default is Undefined, optional
        Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    """


    images?: [str]

    mavenArtifacts?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0MavenArtifactsItems0]

    npmPackages?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0NpmPackagesItems0]

    objects?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0ObjectsItems0]

    pythonPackages?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0PythonPackagesItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0MavenArtifactsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 artifacts items0 maven artifacts items0

    Attributes
    ----------
    artifactId : str, default is Undefined, optional
        Maven artifactId value used when uploading the artifact to Artifact Registry.
    groupId : str, default is Undefined, optional
        Maven groupId value used when uploading the artifact to Artifact Registry.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    version : str, default is Undefined, optional
        Maven version value used when uploading the artifact to Artifact Registry.
    """


    artifactId?: str

    groupId?: str

    path?: str

    repository?: str

    version?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0NpmPackagesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 artifacts items0 npm packages items0

    Attributes
    ----------
    packagePath : str, default is Undefined, optional
        Path to the package.json. e.g. workspace/path/to/package
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    """


    packagePath?: str

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0ObjectsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 artifacts items0 objects items0

    Attributes
    ----------
    location : str, default is Undefined, optional
        Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
        Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
        this location as a prefix.
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually dist/*, and sometimes additionally an .asc file.
    """


    location?: str

    paths?: [str]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0ArtifactsItems0PythonPackagesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 artifacts items0 python packages items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually dist/*, and sometimes additionally an .asc file.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    """


    paths?: [str]

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0AvailableSecretsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 available secrets items0

    Attributes
    ----------
    secretManager : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0AvailableSecretsItems0SecretManagerItems0], default is Undefined, optional
        Pairs a secret environment variable with a SecretVersion in Secret Manager.
        Structure is documented below.
    """


    secretManager?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0AvailableSecretsItems0SecretManagerItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0AvailableSecretsItems0SecretManagerItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 available secrets items0 secret manager items0

    Attributes
    ----------
    env : str, default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    versionName : str, default is Undefined, optional
        Resource name of the SecretVersion. In format: projects//secrets//versions/*
    """


    env?: str

    versionName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0OptionsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 options items0

    Attributes
    ----------
    diskSizeGb : float, default is Undefined, optional
        Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
        some of the space will be used by the operating system and build utilities.
        Also note that this is the minimum disk size that will be allocated for the build --
        the build may run with a larger disk than requested. At present, the maximum disk size
        is 1000GB; builds that request more than the maximum are rejected with an error.
    dynamicSubstitutions : bool, default is Undefined, optional
        Option to specify whether or not to apply bash style string operations to the substitutions.
        NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    logStreamingOption : str, default is Undefined, optional
        Option to define build log streaming behavior to Google Cloud Storage.
        Possible values are: STREAM_DEFAULT, STREAM_ON, STREAM_OFF.
    logging : str, default is Undefined, optional
        Option to specify the logging mode, which determines if and where build logs are stored.
        Possible values are: LOGGING_UNSPECIFIED, LEGACY, GCS_ONLY, STACKDRIVER_ONLY, CLOUD_LOGGING_ONLY, NONE.
    machineType : str, default is Undefined, optional
        Compute Engine machine type on which to run the build.
    requestedVerifyOption : str, default is Undefined, optional
        Requested verifiability options.
        Possible values are: NOT_VERIFIED, VERIFIED.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    sourceProvenanceHash : [str], default is Undefined, optional
        Requested hash for SourceProvenance.
        Each value may be one of: NONE, SHA256, MD5.
    substitutionOption : str, default is Undefined, optional
        Option to specify behavior when there is an error in the substitution checks.
        NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
        in the build configuration file.
        Possible values are: MUST_MATCH, ALLOW_LOOSE.
    volumes : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0OptionsItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.
        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.
        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
        Structure is documented below.
    workerPool : str, default is Undefined, optional
        Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
        This field is experimental.
    """


    diskSizeGb?: float

    dynamicSubstitutions?: bool

    env?: [str]

    logStreamingOption?: str

    logging?: str

    machineType?: str

    requestedVerifyOption?: str

    secretEnv?: [str]

    sourceProvenanceHash?: [str]

    substitutionOption?: str

    volumes?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0OptionsItems0VolumesItems0]

    workerPool?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0OptionsItems0VolumesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 options items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SecretItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 secret items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Cloud KMS key name to use to decrypt these envs.
    secretEnv : {str:str}, default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    """


    kmsKeyName?: str

    secretEnv?: {str:str}


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 source items0

    Attributes
    ----------
    repoSource : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0RepoSourceItems0], default is Undefined, optional
        Location of the source in a Google Cloud Source Repository.
        Structure is documented below.
    storageSource : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0StorageSourceItems0], default is Undefined, optional
        Location of the source in an archive file in Google Cloud Storage.
        Structure is documented below.
    """


    repoSource?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0RepoSourceItems0]

    storageSource?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0StorageSourceItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0RepoSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 source items0 repo source items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository. If
        omitted, the project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    substitutions?: {str:str}

    tagName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0SourceItems0StorageSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 source items0 storage source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source.
    generation : str, default is Undefined, optional
        Google Cloud Storage generation for the object.
        If the generation is omitted, the latest generation will be used
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
        This object must be a gzipped archive file (.tar.gz) containing source to build.
    """


    bucket?: str

    generation?: str

    object?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0StepItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 step items0

    Attributes
    ----------
    allowExitCodes : [float], default is Undefined, optional
        Allow this build step to fail without failing the entire build if and
        only if the exit code is one of the specified codes.
        If allowFailure is also specified, this field will take precedence.
    allowFailure : bool, default is Undefined, optional
        Allow this build step to fail without failing the entire build.
        If false, the entire build will fail if this step fails. Otherwise, the
        build will succeed, but this step will still have a failure status.
        Error information will be reported in the failureDetail field.
        allowExitCodes takes precedence over this field.
    args : [str], default is Undefined, optional
        A list of arguments that will be presented to the step when it is started.
        If the image used to run the step's container has an entrypoint, the args
        are used as arguments to that entrypoint. If the image does not define an
        entrypoint, the first element in args is used as the entrypoint, and the
        remainder will be used as arguments.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    entrypoint : str, default is Undefined, optional
        Entrypoint to be used instead of the build step image's
        default entrypoint.
        If unset, the image's default entrypoint is used
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    id : str, default is Undefined, optional
        Unique identifier for this build step, used in wait_for to
        reference this build step as a dependency.
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    script : str, default is Undefined, optional
        A shell script to be executed in the step.
        When script is provided, the user cannot specify the entrypoint or args.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    timeout : str, default is Undefined, optional
        Time limit for executing this build step. If not defined,
        the step has no
        time limit and will be allowed to continue to run until either it
        completes or the build itself times out.
    timing : str, default is Undefined, optional
        Output only. Stores timing information for executing this
        build step.
    volumes : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0StepItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.
        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.
        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
        Structure is documented below.
    waitFor : [str], default is Undefined, optional
        The ID(s) of the step(s) that this build step depends on.
        This build step will not start until all the build steps in wait_for
        have completed successfully. If wait_for is empty, this build step
        will start when all previous build steps in the Build.Steps list
        have completed successfully.
    """


    allowExitCodes?: [float]

    allowFailure?: bool

    args?: [str]

    dir?: str

    entrypoint?: str

    env?: [str]

    id?: str

    name?: str

    script?: str

    secretEnv?: [str]

    timeout?: str

    timing?: str

    volumes?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0StepItems0VolumesItems0]

    waitFor?: [str]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderBuildItems0StepItems0VolumesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider build items0 step items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGitFileSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider git file source items0

    Attributes
    ----------
    bitbucketServerConfig : str, default is Undefined, optional
        The full resource name of the bitbucket server config.
        Format: projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
    githubEnterpriseConfig : str, default is Undefined, optional
        The full resource name of the github enterprise config.
        Format: projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}. projects/{project}/githubEnterpriseConfigs/{id}.
    path : str, default is Undefined, optional
        The path of the file, with the repo root as the root of the path.
    repoType : str, default is Undefined, optional
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
        Possible values are: UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER.
    repository : str, default is Undefined, optional
        The fully qualified resource name of the Repo API repository. The fully qualified resource name of the Repo API repository.
        If unspecified, the repo from which the trigger invocation originated is assumed to be the repo from which to read the specified path.
    revision : str, default is Undefined, optional
        The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
        filename . This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
        If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
    uri : str, default is Undefined, optional
        The URI of the repo . If unspecified, the repo from which the trigger
        invocation originated is assumed to be the repo from which to read the specified path.
    """


    bitbucketServerConfig?: str

    githubEnterpriseConfig?: str

    path?: str

    repoType?: str

    repository?: str

    revision?: str

    uri?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider github items0

    Attributes
    ----------
    enterpriseConfigResourceName : str, default is Undefined, optional
        The resource name of the github enterprise config that should be applied to this installation.
        For example: "projects/{$projectId}/locations/{$locationId}/githubEnterpriseConfigs/{$configId}"
    name : str, default is Undefined, optional
        Name of the repository. For example: The name for
        https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
    owner : str, default is Undefined, optional
        Owner of the repository. For example: The owner for
        https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0PullRequestItems0], default is Undefined, optional
        filter to match changes in pull requests. Specify only one of pull_request or push.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0PushItems0], default is Undefined, optional
        filter to match changes in refs, like branches or tags. Specify only one of pull_request or push.
        Structure is documented below.
    """


    enterpriseConfigResourceName?: str

    name?: str

    owner?: str

    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0PushItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider github items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderGithubItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider github items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider pubsub config items0

    Attributes
    ----------
    serviceAccountEmail : str, default is Undefined, optional
        Service account that will make the push request.
    topic : str, default is Undefined, optional
        The name of the topic from which this subscription is receiving messages.
    topicRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicRef, default is Undefined, optional
        topic ref
    topicSelector : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicSelector, default is Undefined, optional
        topic selector
    """


    serviceAccountEmail?: str

    topic?: str

    topicRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicRef

    topicSelector?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicSelector


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicRef:
    """
    Reference to a Topic in pubsub to populate topic.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicSelector:
    """
    Selector for a Topic in pubsub to populate topic.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicSelectorPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderPubsubConfigItems0TopicSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider repository event config items0

    Attributes
    ----------
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0PullRequestItems0], default is Undefined, optional
        Contains filter properties for matching Pull Requests.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0PushItems0], default is Undefined, optional
        Contains filter properties for matching git pushes.
        Structure is documented below.
    repository : str, default is Undefined, optional
        The resource name of the Repo API resource.
    """


    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0PushItems0]

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider repository event config items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderRepositoryEventConfigItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider repository event config items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountSelectorPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderServiceAccountSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderSourceToBuildItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider source to build items0

    Attributes
    ----------
    bitbucketServerConfig : str, default is Undefined, optional
        The full resource name of the bitbucket server config.
        Format: projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
    githubEnterpriseConfig : str, default is Undefined, optional
        The full resource name of the github enterprise config.
        Format: projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}. projects/{project}/githubEnterpriseConfigs/{id}.
    ref : str, default is Undefined, optional
        The branch or tag to use. Must start with "refs/" .
    repoType : str, default is Undefined, optional
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
        Possible values are: UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    uri : str, default is Undefined, optional
        The URI of the repo.
    """


    bitbucketServerConfig?: str

    githubEnterpriseConfig?: str

    ref?: str

    repoType?: str

    repository?: str

    uri?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderTriggerTemplateItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider trigger template items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository. If
        omitted, the project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger spec init provider webhook config items0

    Attributes
    ----------
    secret : str, default is Undefined, optional
        Resource name for the secret required as a URL parameter.
    secretRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretSelector, default is Undefined, optional
        secret selector
    """


    secret?: str

    secretRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretRef

    secretSelector?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretSelector


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretRef:
    """
    Reference to a SecretVersion in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretSelector:
    """
    Selector for a SecretVersion in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretSelectorPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecInitProviderWebhookConfigItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecProviderConfigRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatus:
    """
    TriggerStatus defines the observed state of Trigger.

    Attributes
    ----------
    atProvider : CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudbuildGcpUpboundIoV1beta1TriggerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProvider

    conditions?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusConditionsItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProvider:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider

    Attributes
    ----------
    approvalConfig : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderApprovalConfigItems0], default is Undefined, optional
        Configuration for manual approval to start a build invocation of this BuildTrigger.
        Builds created by this trigger will require approval before they execute.
        Any user with a Cloud Build Approver role for the project can approve a build.
        Structure is documented below.
    bitbucketServerTriggerConfig : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0], default is Undefined, optional
        BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.
        Structure is documented below.
    build : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0], default is Undefined, optional
        Contents of the build template. Either a filename or build template must be provided.
        Structure is documented below.
    createTime : str, default is Undefined, optional
        Time when the trigger was created.
    description : str, default is Undefined, optional
        Human-readable description of the trigger.
    disabled : bool, default is Undefined, optional
        Whether the trigger is disabled or not. If true, the trigger will never result in a build.
    filename : str, default is Undefined, optional
        Path, from the source root, to a file whose contents is used for the template.
        Either a filename or build template must be provided. Set this only when using trigger_template or github.
        When using Pub/Sub, Webhook or Manual set the file name using git_file_source instead.
    $filter : str, default is Undefined, optional
        A Common Expression Language string. Used only with Pub/Sub and Webhook.
    gitFileSource : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGitFileSourceItems0], default is Undefined, optional
        The file source describing the local or remote Build template.
        Structure is documented below.
    github : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0], default is Undefined, optional
        Describes the configuration of a trigger that creates a build whenever a GitHub event is received.
        One of trigger_template, github, pubsub_config or webhook_config must be provided.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/triggers/{{trigger_id}}
    ignoredFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for **.
        If ignoredFiles and changed files are both empty, then they are not
        used to determine whether or not to trigger a build.
        If ignoredFiles is not empty, then we ignore any files that match any
        of the ignored_file globs. If the change has no files that are outside
        of the ignoredFiles globs, then we do not trigger a build.
    includeBuildLogs : str, default is Undefined, optional
        Build logs will be sent back to GitHub as part of the checkrun
        result.  Values can be INCLUDE_BUILD_LOGS_UNSPECIFIED or
        INCLUDE_BUILD_LOGS_WITH_STATUS
        Possible values are: INCLUDE_BUILD_LOGS_UNSPECIFIED, INCLUDE_BUILD_LOGS_WITH_STATUS.
    includedFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for **.
        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is empty, then as far as this filter is concerned, we
        should trigger the build.
        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is not empty, then we make sure that at least one of
        those files matches a includedFiles glob. If not, then we do not trigger
        a build.
    location : str, default is Undefined, optional
        The Cloud Build location for the trigger.
        If not specified, "global" is used.
    name : str, default is Undefined, optional
        Name of the trigger. Must be unique within the project.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    pubsubConfig : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderPubsubConfigItems0], default is Undefined, optional
        PubsubConfig describes the configuration of a trigger that creates
        a build whenever a Pub/Sub message is published.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    repositoryEventConfig : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0], default is Undefined, optional
        The configuration of a trigger that creates a build whenever an event from Repo API is received.
        Structure is documented below.
    serviceAccount : str, default is Undefined, optional
        The service account used for all user-controlled operations including
        triggers.patch, triggers.run, builds.create, and builds.cancel.
        If no service account is set, then the standard Cloud Build service account
        ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.
        Format: projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}
    sourceToBuild : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderSourceToBuildItems0], default is Undefined, optional
        The repo and ref of the repository from which to build.
        This field is used only for those triggers that do not respond to SCM events.
        Triggers that respond to such events build source at whatever commit caused the event.
        This field is currently only used by Webhook, Pub/Sub, Manual, and Cron triggers.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a BuildTrigger
    triggerId : str, default is Undefined, optional
        The unique identifier for the trigger.
    triggerTemplate : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderTriggerTemplateItems0], default is Undefined, optional
        Template describing the types of source changes to trigger a build.
        Branch and tag names in trigger templates are interpreted as regular
        expressions. Any branch or tag change that matches that regular
        expression will trigger a build.
        One of trigger_template, github, pubsub_config, webhook_config or source_to_build must be provided.
        Structure is documented below.
    webhookConfig : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderWebhookConfigItems0], default is Undefined, optional
        WebhookConfig describes the configuration of a trigger that creates
        a build whenever a webhook is sent to a trigger's webhook URL.
        One of trigger_template, github, pubsub_config webhook_config or source_to_build must be provided.
        Structure is documented below.
    """


    approvalConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderApprovalConfigItems0]

    bitbucketServerTriggerConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0]

    build?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0]

    createTime?: str

    description?: str

    disabled?: bool

    filename?: str

    $filter?: str

    gitFileSource?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGitFileSourceItems0]

    github?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0]

    id?: str

    ignoredFiles?: [str]

    includeBuildLogs?: str

    includedFiles?: [str]

    location?: str

    name?: str

    project?: str

    pubsubConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderPubsubConfigItems0]

    repositoryEventConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0]

    serviceAccount?: str

    sourceToBuild?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderSourceToBuildItems0]

    substitutions?: {str:str}

    tags?: [str]

    triggerId?: str

    triggerTemplate?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderTriggerTemplateItems0]

    webhookConfig?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderWebhookConfigItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderApprovalConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider approval config items0

    Attributes
    ----------
    approvalRequired : bool, default is Undefined, optional
        Whether or not approval is needed. If this is set on a build, it will become pending when run,
        and will need to be explicitly approved to start.
    """


    approvalRequired?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider bitbucket server trigger config items0

    Attributes
    ----------
    bitbucketServerConfigResource : str, default is Undefined, optional
        The Bitbucket server config resource that this trigger config maps to.
    projectKey : str, default is Undefined, optional
        Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0PullRequestItems0], default is Undefined, optional
        Filter to match changes in pull requests.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0PushItems0], default is Undefined, optional
        Filter to match changes in refs like branches, tags.
        Structure is documented below.
    repoSlug : str, default is Undefined, optional
        Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
        For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
    """


    bitbucketServerConfigResource?: str

    projectKey?: str

    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0PushItems0]

    repoSlug?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider bitbucket server trigger config items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBitbucketServerTriggerConfigItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider bitbucket server trigger config items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0

    Attributes
    ----------
    artifacts : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0], default is Undefined, optional
        Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
        Structure is documented below.
    availableSecrets : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0AvailableSecretsItems0], default is Undefined, optional
        Secrets and secret environment variables.
        Structure is documented below.
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    logsBucket : str, default is Undefined, optional
        Google Cloud Storage bucket where logs should be written.
        Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
    options : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0OptionsItems0], default is Undefined, optional
        Special options for this build.
        Structure is documented below.
    queueTtl : str, default is Undefined, optional
        TTL in queue for this build. If provided and the build is enqueued longer than this value,
        the build will expire and the build status will be EXPIRED.
        The TTL starts ticking from createTime.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    secret : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SecretItems0], default is Undefined, optional
        Secrets to decrypt using Cloud Key Management Service.
        Structure is documented below.
    source : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0], default is Undefined, optional
        The location of the source files to build.
        One of storageSource or repoSource must be provided.
        Structure is documented below.
    step : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0StepItems0], default is Undefined, optional
        The operations to be performed on the workspace.
        Structure is documented below.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a Build. These are not docker tags.
    timeout : str, default is Undefined, optional
        Amount of time that this build should be allowed to run, to second granularity.
        If this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.
        This timeout must be equal to or greater than the sum of the timeouts for build steps within the build.
        The expected format is the number of seconds followed by s.
        Default time is ten minutes (600s).
    """


    artifacts?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0]

    availableSecrets?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0AvailableSecretsItems0]

    images?: [str]

    logsBucket?: str

    options?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0OptionsItems0]

    queueTtl?: str

    secret?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SecretItems0]

    source?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0]

    step?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0StepItems0]

    substitutions?: {str:str}

    tags?: [str]

    timeout?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 artifacts items0

    Attributes
    ----------
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    mavenArtifacts : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0MavenArtifactsItems0], default is Undefined, optional
        A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    npmPackages : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0NpmPackagesItems0], default is Undefined, optional
        Npm package to upload to Artifact Registry upon successful completion of all build steps.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    objects : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0ObjectsItems0], default is Undefined, optional
        A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
        Files in the workspace matching specified paths globs will be uploaded to the
        Cloud Storage location using the builder service account's credentials.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    pythonPackages : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0PythonPackagesItems0], default is Undefined, optional
        Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository.
        The location and generation of the uploaded objects will be stored in the Build resource's results field.
        If any objects fail to be pushed, the build is marked FAILURE.
        Structure is documented below.
    """


    images?: [str]

    mavenArtifacts?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0MavenArtifactsItems0]

    npmPackages?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0NpmPackagesItems0]

    objects?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0ObjectsItems0]

    pythonPackages?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0PythonPackagesItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0MavenArtifactsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 artifacts items0 maven artifacts items0

    Attributes
    ----------
    artifactId : str, default is Undefined, optional
        Maven artifactId value used when uploading the artifact to Artifact Registry.
    groupId : str, default is Undefined, optional
        Maven groupId value used when uploading the artifact to Artifact Registry.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    version : str, default is Undefined, optional
        Maven version value used when uploading the artifact to Artifact Registry.
    """


    artifactId?: str

    groupId?: str

    path?: str

    repository?: str

    version?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0NpmPackagesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 artifacts items0 npm packages items0

    Attributes
    ----------
    packagePath : str, default is Undefined, optional
        Path to the package.json. e.g. workspace/path/to/package
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    """


    packagePath?: str

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0ObjectsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 artifacts items0 objects items0

    Attributes
    ----------
    location : str, default is Undefined, optional
        Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".
        Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
        this location as a prefix.
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually dist/*, and sometimes additionally an .asc file.
    timing : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0ObjectsItems0TimingItems0], default is Undefined, optional
        Output only. Stores timing information for executing this
        build step.
    """


    location?: str

    paths?: [str]

    timing?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0ObjectsItems0TimingItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0ObjectsItems0TimingItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 artifacts items0 objects items0 timing items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        End of time span.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
        nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    startTime : str, default is Undefined, optional
        Start of time span.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
        nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    endTime?: str

    startTime?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0ArtifactsItems0PythonPackagesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 artifacts items0 python packages items0

    Attributes
    ----------
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually dist/*, and sometimes additionally an .asc file.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    """


    paths?: [str]

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0AvailableSecretsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 available secrets items0

    Attributes
    ----------
    secretManager : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0AvailableSecretsItems0SecretManagerItems0], default is Undefined, optional
        Pairs a secret environment variable with a SecretVersion in Secret Manager.
        Structure is documented below.
    """


    secretManager?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0AvailableSecretsItems0SecretManagerItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0AvailableSecretsItems0SecretManagerItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 available secrets items0 secret manager items0

    Attributes
    ----------
    env : str, default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    versionName : str, default is Undefined, optional
        Resource name of the SecretVersion. In format: projects//secrets//versions/*
    """


    env?: str

    versionName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0OptionsItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 options items0

    Attributes
    ----------
    diskSizeGb : float, default is Undefined, optional
        Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
        some of the space will be used by the operating system and build utilities.
        Also note that this is the minimum disk size that will be allocated for the build --
        the build may run with a larger disk than requested. At present, the maximum disk size
        is 1000GB; builds that request more than the maximum are rejected with an error.
    dynamicSubstitutions : bool, default is Undefined, optional
        Option to specify whether or not to apply bash style string operations to the substitutions.
        NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    logStreamingOption : str, default is Undefined, optional
        Option to define build log streaming behavior to Google Cloud Storage.
        Possible values are: STREAM_DEFAULT, STREAM_ON, STREAM_OFF.
    logging : str, default is Undefined, optional
        Option to specify the logging mode, which determines if and where build logs are stored.
        Possible values are: LOGGING_UNSPECIFIED, LEGACY, GCS_ONLY, STACKDRIVER_ONLY, CLOUD_LOGGING_ONLY, NONE.
    machineType : str, default is Undefined, optional
        Compute Engine machine type on which to run the build.
    requestedVerifyOption : str, default is Undefined, optional
        Requested verifiability options.
        Possible values are: NOT_VERIFIED, VERIFIED.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    sourceProvenanceHash : [str], default is Undefined, optional
        Requested hash for SourceProvenance.
        Each value may be one of: NONE, SHA256, MD5.
    substitutionOption : str, default is Undefined, optional
        Option to specify behavior when there is an error in the substitution checks.
        NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
        in the build configuration file.
        Possible values are: MUST_MATCH, ALLOW_LOOSE.
    volumes : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0OptionsItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.
        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.
        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
        Structure is documented below.
    workerPool : str, default is Undefined, optional
        Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
        This field is experimental.
    """


    diskSizeGb?: float

    dynamicSubstitutions?: bool

    env?: [str]

    logStreamingOption?: str

    logging?: str

    machineType?: str

    requestedVerifyOption?: str

    secretEnv?: [str]

    sourceProvenanceHash?: [str]

    substitutionOption?: str

    volumes?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0OptionsItems0VolumesItems0]

    workerPool?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0OptionsItems0VolumesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 options items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SecretItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 secret items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Cloud KMS key name to use to decrypt these envs.
    secretEnv : {str:str}, default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    """


    kmsKeyName?: str

    secretEnv?: {str:str}


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 source items0

    Attributes
    ----------
    repoSource : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0RepoSourceItems0], default is Undefined, optional
        Location of the source in a Google Cloud Source Repository.
        Structure is documented below.
    storageSource : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0StorageSourceItems0], default is Undefined, optional
        Location of the source in an archive file in Google Cloud Storage.
        Structure is documented below.
    """


    repoSource?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0RepoSourceItems0]

    storageSource?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0StorageSourceItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0RepoSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 source items0 repo source items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository. If
        omitted, the project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    substitutions?: {str:str}

    tagName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0SourceItems0StorageSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 source items0 storage source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source.
    generation : str, default is Undefined, optional
        Google Cloud Storage generation for the object.
        If the generation is omitted, the latest generation will be used
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
        This object must be a gzipped archive file (.tar.gz) containing source to build.
    """


    bucket?: str

    generation?: str

    object?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0StepItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 step items0

    Attributes
    ----------
    allowExitCodes : [float], default is Undefined, optional
        Allow this build step to fail without failing the entire build if and
        only if the exit code is one of the specified codes.
        If allowFailure is also specified, this field will take precedence.
    allowFailure : bool, default is Undefined, optional
        Allow this build step to fail without failing the entire build.
        If false, the entire build will fail if this step fails. Otherwise, the
        build will succeed, but this step will still have a failure status.
        Error information will be reported in the failureDetail field.
        allowExitCodes takes precedence over this field.
    args : [str], default is Undefined, optional
        A list of arguments that will be presented to the step when it is started.
        If the image used to run the step's container has an entrypoint, the args
        are used as arguments to that entrypoint. If the image does not define an
        entrypoint, the first element in args is used as the entrypoint, and the
        remainder will be used as arguments.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    entrypoint : str, default is Undefined, optional
        Entrypoint to be used instead of the build step image's
        default entrypoint.
        If unset, the image's default entrypoint is used
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.
        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    id : str, default is Undefined, optional
        Unique identifier for this build step, used in wait_for to
        reference this build step as a dependency.
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    script : str, default is Undefined, optional
        A shell script to be executed in the step.
        When script is provided, the user cannot specify the entrypoint or args.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's Secret.
    timeout : str, default is Undefined, optional
        Time limit for executing this build step. If not defined,
        the step has no
        time limit and will be allowed to continue to run until either it
        completes or the build itself times out.
    timing : str, default is Undefined, optional
        Output only. Stores timing information for executing this
        build step.
    volumes : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0StepItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.
        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.
        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
        Structure is documented below.
    waitFor : [str], default is Undefined, optional
        The ID(s) of the step(s) that this build step depends on.
        This build step will not start until all the build steps in wait_for
        have completed successfully. If wait_for is empty, this build step
        will start when all previous build steps in the Build.Steps list
        have completed successfully.
    """


    allowExitCodes?: [float]

    allowFailure?: bool

    args?: [str]

    dir?: str

    entrypoint?: str

    env?: [str]

    id?: str

    name?: str

    script?: str

    secretEnv?: [str]

    timeout?: str

    timing?: str

    volumes?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0StepItems0VolumesItems0]

    waitFor?: [str]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderBuildItems0StepItems0VolumesItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider build items0 step items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.
        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.
        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGitFileSourceItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider git file source items0

    Attributes
    ----------
    bitbucketServerConfig : str, default is Undefined, optional
        The full resource name of the bitbucket server config.
        Format: projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
    githubEnterpriseConfig : str, default is Undefined, optional
        The full resource name of the github enterprise config.
        Format: projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}. projects/{project}/githubEnterpriseConfigs/{id}.
    path : str, default is Undefined, optional
        The path of the file, with the repo root as the root of the path.
    repoType : str, default is Undefined, optional
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
        Possible values are: UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER.
    repository : str, default is Undefined, optional
        The fully qualified resource name of the Repo API repository. The fully qualified resource name of the Repo API repository.
        If unspecified, the repo from which the trigger invocation originated is assumed to be the repo from which to read the specified path.
    revision : str, default is Undefined, optional
        The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
        filename . This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
        If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
    uri : str, default is Undefined, optional
        The URI of the repo . If unspecified, the repo from which the trigger
        invocation originated is assumed to be the repo from which to read the specified path.
    """


    bitbucketServerConfig?: str

    githubEnterpriseConfig?: str

    path?: str

    repoType?: str

    repository?: str

    revision?: str

    uri?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider github items0

    Attributes
    ----------
    enterpriseConfigResourceName : str, default is Undefined, optional
        The resource name of the github enterprise config that should be applied to this installation.
        For example: "projects/{$projectId}/locations/{$locationId}/githubEnterpriseConfigs/{$configId}"
    name : str, default is Undefined, optional
        Name of the repository. For example: The name for
        https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
    owner : str, default is Undefined, optional
        Owner of the repository. For example: The owner for
        https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0PullRequestItems0], default is Undefined, optional
        filter to match changes in pull requests. Specify only one of pull_request or push.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0PushItems0], default is Undefined, optional
        filter to match changes in refs, like branches or tags. Specify only one of pull_request or push.
        Structure is documented below.
    """


    enterpriseConfigResourceName?: str

    name?: str

    owner?: str

    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0PushItems0]


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider github items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderGithubItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider github items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderPubsubConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider pubsub config items0

    Attributes
    ----------
    serviceAccountEmail : str, default is Undefined, optional
        Service account that will make the push request.
    state : str, default is Undefined, optional
        (Output)
        Potential issues with the underlying Pub/Sub subscription configuration.
        Only populated on get requests.
    subscription : str, default is Undefined, optional
        (Output)
        Output only. Name of the subscription.
    topic : str, default is Undefined, optional
        The name of the topic from which this subscription is receiving messages.
    """


    serviceAccountEmail?: str

    state?: str

    subscription?: str

    topic?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider repository event config items0

    Attributes
    ----------
    pullRequest : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0PullRequestItems0], default is Undefined, optional
        Contains filter properties for matching Pull Requests.
        Structure is documented below.
    push : [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0PushItems0], default is Undefined, optional
        Contains filter properties for matching git pushes.
        Structure is documented below.
    repository : str, default is Undefined, optional
        The resource name of the Repo API resource.
    """


    pullRequest?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0PullRequestItems0]

    push?: [CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0PushItems0]

    repository?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0PullRequestItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider repository event config items0 pull request items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun.
        Possible values are: COMMENTS_DISABLED, COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderRepositoryEventConfigItems0PushItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider repository event config items0 push items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.
        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderSourceToBuildItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider source to build items0

    Attributes
    ----------
    bitbucketServerConfig : str, default is Undefined, optional
        The full resource name of the bitbucket server config.
        Format: projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.
    githubEnterpriseConfig : str, default is Undefined, optional
        The full resource name of the github enterprise config.
        Format: projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}. projects/{project}/githubEnterpriseConfigs/{id}.
    ref : str, default is Undefined, optional
        The branch or tag to use. Must start with "refs/" .
    repoType : str, default is Undefined, optional
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER
        Possible values are: UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER.
    repository : str, default is Undefined, optional
        The qualified resource name of the Repo API repository.
        Either uri or repository can be specified and is required.
    uri : str, default is Undefined, optional
        The URI of the repo.
    """


    bitbucketServerConfig?: str

    githubEnterpriseConfig?: str

    ref?: str

    repoType?: str

    repository?: str

    uri?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderTriggerTemplateItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider trigger template items0

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository. If
        omitted, the project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository. If omitted, the name "default" is assumed.
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusAtProviderWebhookConfigItems0:
    """
    cloudbuild gcp upbound io v1beta1 trigger status at provider webhook config items0

    Attributes
    ----------
    secret : str, default is Undefined, optional
        Resource name for the secret required as a URL parameter.
    state : str, default is Undefined, optional
        (Output)
        Potential issues with the underlying Pub/Sub subscription configuration.
        Only populated on get requests.
    """


    secret?: str

    state?: str


schema CloudbuildGcpUpboundIoV1beta1TriggerStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


