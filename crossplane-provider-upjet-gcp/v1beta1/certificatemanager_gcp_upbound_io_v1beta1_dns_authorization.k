"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DNSAuthorization:
    """
    DNSAuthorization is the Schema for the DNSAuthorizations API. DnsAuthorization represents a HTTP-reachable backend for a DnsAuthorization.

    Attributes
    ----------
    apiVersion : str, default is "certificatemanager.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DNSAuthorization", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpec, default is Undefined, required
        spec
    status : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatus, default is Undefined, optional
        status
    """


    apiVersion: "certificatemanager.gcp.upbound.io/v1beta1" = "certificatemanager.gcp.upbound.io/v1beta1"

    kind: "DNSAuthorization" = "DNSAuthorization"

    metadata?: v1.ObjectMeta

    spec: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpec

    status?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatus


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpec:
    """
    DNSAuthorizationSpec defines the desired state of DNSAuthorization

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecForProvider, default is Undefined, required
        for provider
    initProvider : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecForProvider

    initProvider?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecProviderConfigRef

    publishConnectionDetailsTo?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecWriteConnectionSecretToRef


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecForProvider:
    """
    certificatemanager gcp upbound io v1beta1 DNS authorization spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    domain : str, default is Undefined, optional
        A domain which is being authorized. A DnsAuthorization resource covers a
        single domain and its wildcard, e.g. authorization for "example.com" can
        be used to issue certificates for "example.com" and "*.example.com".
    labels : {str:str}, default is Undefined, optional
        Set of label tags associated with the DNS Authorization resource.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    location : str, default is Undefined, optional
        The Certificate Manager location. If not specified, "global" is used.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    description?: str

    domain?: str

    labels?: {str:str}

    location?: str

    project?: str


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    domain : str, default is Undefined, optional
        A domain which is being authorized. A DnsAuthorization resource covers a
        single domain and its wildcard, e.g. authorization for "example.com" can
        be used to issue certificates for "example.com" and "*.example.com".
    labels : {str:str}, default is Undefined, optional
        Set of label tags associated with the DNS Authorization resource.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    description?: str

    domain?: str

    labels?: {str:str}

    project?: str


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecProviderConfigRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToConfigRef

    metadata?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToMetadata

    name: str


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToConfigRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatus:
    """
    DNSAuthorizationStatus defines the observed state of DNSAuthorization.

    Attributes
    ----------
    atProvider : CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusAtProvider

    conditions?: [CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusConditionsItems0]


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusAtProvider:
    """
    certificatemanager gcp upbound io v1beta1 DNS authorization status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    dnsResourceRecord : [CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusAtProviderDNSResourceRecordItems0], default is Undefined, optional
        The structure describing the DNS Resource Record that needs to be added
        to DNS configuration for the authorization to be usable by
        certificate.
        Structure is documented below.
    domain : str, default is Undefined, optional
        A domain which is being authorized. A DnsAuthorization resource covers a
        single domain and its wildcard, e.g. authorization for "example.com" can
        be used to issue certificates for "example.com" and "*.example.com".
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/dnsAuthorizations/{{name}}
    labels : {str:str}, default is Undefined, optional
        Set of label tags associated with the DNS Authorization resource.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    location : str, default is Undefined, optional
        The Certificate Manager location. If not specified, "global" is used.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    description?: str

    dnsResourceRecord?: [CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusAtProviderDNSResourceRecordItems0]

    domain?: str

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    location?: str

    project?: str

    terraformLabels?: {str:str}


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusAtProviderDNSResourceRecordItems0:
    """
    certificatemanager gcp upbound io v1beta1 DNS authorization status at provider DNS resource record items0

    Attributes
    ----------
    data : str, default is Undefined, optional
        (Output)
        Data of the DNS Resource Record.
    name : str, default is Undefined, optional
        (Output)
        Fully qualified name of the DNS Resource Record.
        E.g. _acme-challenge.example.com.
    $type : str, default is Undefined, optional
        (Output)
        Type of the DNS Resource Record.
    """


    data?: str

    name?: str

    $type?: str


schema CertificatemanagerGcpUpboundIoV1beta1DNSAuthorizationStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


