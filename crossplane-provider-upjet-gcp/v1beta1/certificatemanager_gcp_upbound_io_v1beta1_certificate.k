"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Certificate:
    """
    Certificate is the Schema for the Certificates API. Certificate represents a HTTP-reachable backend for a Certificate.

    Attributes
    ----------
    apiVersion : str, default is "certificatemanager.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Certificate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CertificatemanagerGcpUpboundIoV1beta1CertificateSpec, default is Undefined, required
        spec
    status : CertificatemanagerGcpUpboundIoV1beta1CertificateStatus, default is Undefined, optional
        status
    """


    apiVersion: "certificatemanager.gcp.upbound.io/v1beta1" = "certificatemanager.gcp.upbound.io/v1beta1"

    kind: "Certificate" = "Certificate"

    metadata?: v1.ObjectMeta

    spec: CertificatemanagerGcpUpboundIoV1beta1CertificateSpec

    status?: CertificatemanagerGcpUpboundIoV1beta1CertificateStatus


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpec:
    """
    CertificateSpec defines the desired state of Certificate

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProvider, default is Undefined, required
        for provider
    initProvider : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProvider

    initProvider?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecProviderConfigRef

    publishConnectionDetailsTo?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProvider:
    """
    certificatemanager gcp upbound io v1beta1 certificate spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    labels : {str:str}, default is Undefined, optional
        Set of label tags associated with the Certificate resource.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    location : str, default is Undefined, optional
        The Certificate Manager location. If not specified, "global" is used.
    managed : [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderManagedItems0], default is Undefined, optional
        Configuration and state of a Managed Certificate.
        Certificate Manager provisions and renews Managed Certificates
        automatically, for as long as it's authorized to do so.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    scope : str, default is Undefined, optional
        The scope of the certificate.
        DEFAULT: Certificates with default scope are served from core Google data centers.
        If unsure, choose this option.
        EDGE_CACHE: Certificates with scope EDGE_CACHE are special-purposed certificates, served from Edge Points of Presence.
        See https://cloud.google.com/vpc/docs/edge-locations.
        ALL_REGIONS: Certificates with ALL_REGIONS scope are served from all GCP regions (You can only use ALL_REGIONS with global certs).
        See https://cloud.google.com/compute/docs/regions-zones
    selfManaged : [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0], default is Undefined, optional
        Certificate data for a SelfManaged Certificate.
        SelfManaged Certificates are uploaded by the user. Updating such
        certificates before they expire remains the user's responsibility.
        Structure is documented below.
    """


    description?: str

    labels?: {str:str}

    location?: str

    managed?: [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderManagedItems0]

    project?: str

    scope?: str

    selfManaged?: [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0]


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderManagedItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate spec for provider managed items0

    Attributes
    ----------
    dnsAuthorizations : [str], default is Undefined, optional
        Authorizations that will be used for performing domain authorization. Either issuanceConfig or dnsAuthorizations should be specificed, but not both.
    domains : [str], default is Undefined, optional
        The domains for which a managed SSL certificate will be generated.
        Wildcard domains are only supported with DNS challenge resolution
    issuanceConfig : str, default is Undefined, optional
        The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format projects//locations//certificateIssuanceConfigs/*.
        If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
        Either issuanceConfig or dnsAuthorizations should be specificed, but not both.
    """


    dnsAuthorizations?: [str]

    domains?: [str]

    issuanceConfig?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate spec for provider self managed items0

    Attributes
    ----------
    certificatePemSecretRef : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0CertificatePemSecretRef, default is Undefined, optional
        certificate pem secret ref
    pemCertificate : str, default is Undefined, optional
        The certificate chain in PEM-encoded form.
        Leaf certificate comes first, followed by intermediate ones if any.
    pemPrivateKeySecretRef : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0PemPrivateKeySecretRef, default is Undefined, optional
        pem private key secret ref
    privateKeyPemSecretRef : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0PrivateKeyPemSecretRef, default is Undefined, optional
        private key pem secret ref
    """


    certificatePemSecretRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0CertificatePemSecretRef

    pemCertificate?: str

    pemPrivateKeySecretRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0PemPrivateKeySecretRef

    privateKeyPemSecretRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0PrivateKeyPemSecretRef


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0CertificatePemSecretRef:
    """
    The certificate chain in PEM-encoded form.
    Leaf certificate comes first, followed by intermediate ones if any.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0PemPrivateKeySecretRef:
    """
    The private key of the leaf certificate in PEM-encoded form.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecForProviderSelfManagedItems0PrivateKeyPemSecretRef:
    """
    The private key of the leaf certificate in PEM-encoded form.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    labels : {str:str}, default is Undefined, optional
        Set of label tags associated with the Certificate resource.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    managed : [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProviderManagedItems0], default is Undefined, optional
        Configuration and state of a Managed Certificate.
        Certificate Manager provisions and renews Managed Certificates
        automatically, for as long as it's authorized to do so.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    scope : str, default is Undefined, optional
        The scope of the certificate.
        DEFAULT: Certificates with default scope are served from core Google data centers.
        If unsure, choose this option.
        EDGE_CACHE: Certificates with scope EDGE_CACHE are special-purposed certificates, served from Edge Points of Presence.
        See https://cloud.google.com/vpc/docs/edge-locations.
        ALL_REGIONS: Certificates with ALL_REGIONS scope are served from all GCP regions (You can only use ALL_REGIONS with global certs).
        See https://cloud.google.com/compute/docs/regions-zones
    selfManaged : [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProviderSelfManagedItems0], default is Undefined, optional
        Certificate data for a SelfManaged Certificate.
        SelfManaged Certificates are uploaded by the user. Updating such
        certificates before they expire remains the user's responsibility.
        Structure is documented below.
    """


    description?: str

    labels?: {str:str}

    managed?: [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProviderManagedItems0]

    project?: str

    scope?: str

    selfManaged?: [CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProviderSelfManagedItems0]


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProviderManagedItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate spec init provider managed items0

    Attributes
    ----------
    dnsAuthorizations : [str], default is Undefined, optional
        Authorizations that will be used for performing domain authorization. Either issuanceConfig or dnsAuthorizations should be specificed, but not both.
    domains : [str], default is Undefined, optional
        The domains for which a managed SSL certificate will be generated.
        Wildcard domains are only supported with DNS challenge resolution
    issuanceConfig : str, default is Undefined, optional
        The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format projects//locations//certificateIssuanceConfigs/*.
        If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
        Either issuanceConfig or dnsAuthorizations should be specificed, but not both.
    """


    dnsAuthorizations?: [str]

    domains?: [str]

    issuanceConfig?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecInitProviderSelfManagedItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate spec init provider self managed items0

    Attributes
    ----------
    pemCertificate : str, default is Undefined, optional
        The certificate chain in PEM-encoded form.
        Leaf certificate comes first, followed by intermediate ones if any.
    """


    pemCertificate?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef

    metadata?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata

    name: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatus:
    """
    CertificateStatus defines the observed state of Certificate.

    Attributes
    ----------
    atProvider : CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProvider

    conditions?: [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusConditionsItems0]


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProvider:
    """
    certificatemanager gcp upbound io v1beta1 certificate status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/certificates/{{name}}
    labels : {str:str}, default is Undefined, optional
        Set of label tags associated with the Certificate resource.
        Note: This field is non-authoritative, and will only manage the labels present in your configuration.
        Please refer to the field effective_labels for all of the labels present on the resource.
    location : str, default is Undefined, optional
        The Certificate Manager location. If not specified, "global" is used.
    managed : [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0], default is Undefined, optional
        Configuration and state of a Managed Certificate.
        Certificate Manager provisions and renews Managed Certificates
        automatically, for as long as it's authorized to do so.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    scope : str, default is Undefined, optional
        The scope of the certificate.
        DEFAULT: Certificates with default scope are served from core Google data centers.
        If unsure, choose this option.
        EDGE_CACHE: Certificates with scope EDGE_CACHE are special-purposed certificates, served from Edge Points of Presence.
        See https://cloud.google.com/vpc/docs/edge-locations.
        ALL_REGIONS: Certificates with ALL_REGIONS scope are served from all GCP regions (You can only use ALL_REGIONS with global certs).
        See https://cloud.google.com/compute/docs/regions-zones
    selfManaged : [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderSelfManagedItems0], default is Undefined, optional
        Certificate data for a SelfManaged Certificate.
        SelfManaged Certificates are uploaded by the user. Updating such
        certificates before they expire remains the user's responsibility.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    description?: str

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    location?: str

    managed?: [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0]

    project?: str

    scope?: str

    selfManaged?: [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderSelfManagedItems0]

    terraformLabels?: {str:str}


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate status at provider managed items0

    Attributes
    ----------
    authorizationAttemptInfo : [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0AuthorizationAttemptInfoItems0], default is Undefined, optional
        (Output)
        Detailed state of the latest authorization attempt for each domain
        specified for this Managed Certificate.
        Structure is documented below.
    dnsAuthorizations : [str], default is Undefined, optional
        Authorizations that will be used for performing domain authorization. Either issuanceConfig or dnsAuthorizations should be specificed, but not both.
    domains : [str], default is Undefined, optional
        The domains for which a managed SSL certificate will be generated.
        Wildcard domains are only supported with DNS challenge resolution
    issuanceConfig : str, default is Undefined, optional
        The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format projects//locations//certificateIssuanceConfigs/*.
        If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
        Either issuanceConfig or dnsAuthorizations should be specificed, but not both.
    provisioningIssue : [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0ProvisioningIssueItems0], default is Undefined, optional
        (Output)
        Information about issues with provisioning this Managed Certificate.
        Structure is documented below.
    state : str, default is Undefined, optional
        (Output)
        A state of this Managed Certificate.
    """


    authorizationAttemptInfo?: [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0AuthorizationAttemptInfoItems0]

    dnsAuthorizations?: [str]

    domains?: [str]

    issuanceConfig?: str

    provisioningIssue?: [CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0ProvisioningIssueItems0]

    state?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0AuthorizationAttemptInfoItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate status at provider managed items0 authorization attempt info items0

    Attributes
    ----------
    details : str, default is Undefined, optional
        (Output)
        Human readable explanation about the issue. Provided to help address
        the configuration issues.
        Not guaranteed to be stable. For programmatic access use reason field.
    domain : str, default is Undefined, optional
        (Output)
        Domain name of the authorization attempt.
    failureReason : str, default is Undefined, optional
        (Output)
        Reason for failure of the authorization attempt for the domain.
    state : str, default is Undefined, optional
        (Output)
        A state of this Managed Certificate.
    """


    details?: str

    domain?: str

    failureReason?: str

    state?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderManagedItems0ProvisioningIssueItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate status at provider managed items0 provisioning issue items0

    Attributes
    ----------
    details : str, default is Undefined, optional
        (Output)
        Human readable explanation about the issue. Provided to help address
        the configuration issues.
        Not guaranteed to be stable. For programmatic access use reason field.
    reason : str, default is Undefined, optional
        (Output)
        Reason for provisioning failures.
    """


    details?: str

    reason?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatusAtProviderSelfManagedItems0:
    """
    certificatemanager gcp upbound io v1beta1 certificate status at provider self managed items0

    Attributes
    ----------
    pemCertificate : str, default is Undefined, optional
        The certificate chain in PEM-encoded form.
        Leaf certificate comes first, followed by intermediate ones if any.
    """


    pemCertificate?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


