"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API. A Google Cloud Filestore instance.

    Attributes
    ----------
    apiVersion : str, default is "filestore.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FilestoreGcpUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : FilestoreGcpUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "filestore.gcp.upbound.io/v1beta1" = "filestore.gcp.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: FilestoreGcpUpboundIoV1beta1InstanceSpec

    status?: FilestoreGcpUpboundIoV1beta1InstanceStatus


schema FilestoreGcpUpboundIoV1beta1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FilestoreGcpUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : FilestoreGcpUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FilestoreGcpUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FilestoreGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FilestoreGcpUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: FilestoreGcpUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FilestoreGcpUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FilestoreGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProvider:
    """
    filestore gcp upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the instance.
    fileShares : [FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderFileSharesItems0], default is Undefined, optional
        File system shares on the instance. For this version, only a
        single file share is supported.
        Structure is documented below.
    kmsKeyName : str, default is Undefined, optional
        KMS key name used for data encryption.
    kmsKeyNameRef : FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameRef, default is Undefined, optional
        kms key name ref
    kmsKeyNameSelector : FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameSelector, default is Undefined, optional
        kms key name selector
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    location : str, default is Undefined, optional
        The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
    networks : [FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderNetworksItems0], default is Undefined, optional
        VPC networks to which the instance is connected. For this version,
        only a single network is supported.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    tier : str, default is Undefined, optional
        The service tier of the instance.
        Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
    zone : str, default is Undefined, optional
        The name of the Filestore zone of the instance.
    """


    description?: str

    fileShares?: [FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderFileSharesItems0]

    kmsKeyName?: str

    kmsKeyNameRef?: FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameRef

    kmsKeyNameSelector?: FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameSelector

    labels?: {str:str}

    location?: str

    networks?: [FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderNetworksItems0]

    project?: str

    tier?: str

    zone?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderFileSharesItems0:
    """
    filestore gcp upbound io v1beta1 instance spec for provider file shares items0

    Attributes
    ----------
    capacityGb : float, default is Undefined, optional
        File share capacity in GiB. This must be at least 1024 GiB
        for the standard tier, or 2560 GiB for the premium tier.
    name : str, default is Undefined, optional
        The name of the fileshare (16 characters or less)
    nfsExportOptions : [FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderFileSharesItems0NfsExportOptionsItems0], default is Undefined, optional
        Nfs Export Options. There is a limit of 10 export options per file share.
        Structure is documented below.
    sourceBackup : str, default is Undefined, optional
        The resource name of the backup, in the format
        projects/{projectId}/locations/{locationId}/backups/{backupId},
        that this file share has been restored from.
    """


    capacityGb?: float

    name?: str

    nfsExportOptions?: [FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderFileSharesItems0NfsExportOptionsItems0]

    sourceBackup?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderFileSharesItems0NfsExportOptionsItems0:
    """
    filestore gcp upbound io v1beta1 instance spec for provider file shares items0 nfs export options items0

    Attributes
    ----------
    accessMode : str, default is Undefined, optional
        Either READ_ONLY, for allowing only read requests on the exported directory,
        or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
        Default value is READ_WRITE.
        Possible values are: READ_ONLY, READ_WRITE.
    anonGid : float, default is Undefined, optional
        An integer representing the anonymous group id with a default value of 65534.
        Anon_gid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        if this field is specified for other squashMode settings.
    anonUid : float, default is Undefined, optional
        An integer representing the anonymous user id with a default value of 65534.
        Anon_uid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        if this field is specified for other squashMode settings.
    ipRanges : [str], default is Undefined, optional
        List of either IPv4 addresses, or ranges in CIDR notation which may mount the file share.
        Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned.
        The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.
    squashMode : str, default is Undefined, optional
        Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH,
        for not allowing root access. The default is NO_ROOT_SQUASH.
        Default value is NO_ROOT_SQUASH.
        Possible values are: NO_ROOT_SQUASH, ROOT_SQUASH.
    """


    accessMode?: str

    anonGid?: float

    anonUid?: float

    ipRanges?: [str]

    squashMode?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameRef:
    """
    Reference to a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameRefPolicy


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameSelector:
    """
    Selector for a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameSelectorPolicy


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderKmsKeyNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1InstanceSpecForProviderNetworksItems0:
    """
    filestore gcp upbound io v1beta1 instance spec for provider networks items0

    Attributes
    ----------
    connectMode : str, default is Undefined, optional
        The network connect mode of the Filestore instance.
        If not provided, the connect mode defaults to
        DIRECT_PEERING.
        Default value is DIRECT_PEERING.
        Possible values are: DIRECT_PEERING, PRIVATE_SERVICE_ACCESS.
    modes : [str], default is Undefined, optional
        IP versions for which the instance has
        IP addresses assigned.
        Each value may be one of: ADDRESS_MODE_UNSPECIFIED, MODE_IPV4, MODE_IPV6.
    network : str, default is Undefined, optional
        The name of the GCE VPC network to which the
        instance is connected.
    reservedIpRange : str, default is Undefined, optional
        A /29 CIDR block that identifies the range of IP
        addresses reserved for this instance.
    """


    connectMode?: str

    modes?: [str]

    network?: str

    reservedIpRange?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the instance.
    fileShares : [FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderFileSharesItems0], default is Undefined, optional
        File system shares on the instance. For this version, only a
        single file share is supported.
        Structure is documented below.
    kmsKeyName : str, default is Undefined, optional
        KMS key name used for data encryption.
    kmsKeyNameRef : FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameRef, default is Undefined, optional
        kms key name ref
    kmsKeyNameSelector : FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameSelector, default is Undefined, optional
        kms key name selector
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    networks : [FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderNetworksItems0], default is Undefined, optional
        VPC networks to which the instance is connected. For this version,
        only a single network is supported.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    tier : str, default is Undefined, optional
        The service tier of the instance.
        Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
    zone : str, default is Undefined, optional
        The name of the Filestore zone of the instance.
    """


    description?: str

    fileShares?: [FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderFileSharesItems0]

    kmsKeyName?: str

    kmsKeyNameRef?: FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameRef

    kmsKeyNameSelector?: FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameSelector

    labels?: {str:str}

    networks?: [FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderNetworksItems0]

    project?: str

    tier?: str

    zone?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderFileSharesItems0:
    """
    filestore gcp upbound io v1beta1 instance spec init provider file shares items0

    Attributes
    ----------
    capacityGb : float, default is Undefined, optional
        File share capacity in GiB. This must be at least 1024 GiB
        for the standard tier, or 2560 GiB for the premium tier.
    name : str, default is Undefined, optional
        The name of the fileshare (16 characters or less)
    nfsExportOptions : [FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderFileSharesItems0NfsExportOptionsItems0], default is Undefined, optional
        Nfs Export Options. There is a limit of 10 export options per file share.
        Structure is documented below.
    sourceBackup : str, default is Undefined, optional
        The resource name of the backup, in the format
        projects/{projectId}/locations/{locationId}/backups/{backupId},
        that this file share has been restored from.
    """


    capacityGb?: float

    name?: str

    nfsExportOptions?: [FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderFileSharesItems0NfsExportOptionsItems0]

    sourceBackup?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderFileSharesItems0NfsExportOptionsItems0:
    """
    filestore gcp upbound io v1beta1 instance spec init provider file shares items0 nfs export options items0

    Attributes
    ----------
    accessMode : str, default is Undefined, optional
        Either READ_ONLY, for allowing only read requests on the exported directory,
        or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
        Default value is READ_WRITE.
        Possible values are: READ_ONLY, READ_WRITE.
    anonGid : float, default is Undefined, optional
        An integer representing the anonymous group id with a default value of 65534.
        Anon_gid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        if this field is specified for other squashMode settings.
    anonUid : float, default is Undefined, optional
        An integer representing the anonymous user id with a default value of 65534.
        Anon_uid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        if this field is specified for other squashMode settings.
    ipRanges : [str], default is Undefined, optional
        List of either IPv4 addresses, or ranges in CIDR notation which may mount the file share.
        Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned.
        The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.
    squashMode : str, default is Undefined, optional
        Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH,
        for not allowing root access. The default is NO_ROOT_SQUASH.
        Default value is NO_ROOT_SQUASH.
        Possible values are: NO_ROOT_SQUASH, ROOT_SQUASH.
    """


    accessMode?: str

    anonGid?: float

    anonUid?: float

    ipRanges?: [str]

    squashMode?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameRef:
    """
    Reference to a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameRefPolicy


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameSelector:
    """
    Selector for a CryptoKey in kms to populate kmsKeyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameSelectorPolicy


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderKmsKeyNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1InstanceSpecInitProviderNetworksItems0:
    """
    filestore gcp upbound io v1beta1 instance spec init provider networks items0

    Attributes
    ----------
    connectMode : str, default is Undefined, optional
        The network connect mode of the Filestore instance.
        If not provided, the connect mode defaults to
        DIRECT_PEERING.
        Default value is DIRECT_PEERING.
        Possible values are: DIRECT_PEERING, PRIVATE_SERVICE_ACCESS.
    modes : [str], default is Undefined, optional
        IP versions for which the instance has
        IP addresses assigned.
        Each value may be one of: ADDRESS_MODE_UNSPECIFIED, MODE_IPV4, MODE_IPV6.
    network : str, default is Undefined, optional
        The name of the GCE VPC network to which the
        instance is connected.
    reservedIpRange : str, default is Undefined, optional
        A /29 CIDR block that identifies the range of IP
        addresses reserved for this instance.
    """


    connectMode?: str

    modes?: [str]

    network?: str

    reservedIpRange?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema FilestoreGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FilestoreGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FilestoreGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FilestoreGcpUpboundIoV1beta1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : FilestoreGcpUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FilestoreGcpUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: FilestoreGcpUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [FilestoreGcpUpboundIoV1beta1InstanceStatusConditionsItems0]


schema FilestoreGcpUpboundIoV1beta1InstanceStatusAtProvider:
    """
    filestore gcp upbound io v1beta1 instance status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    description : str, default is Undefined, optional
        A description of the instance.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    etag : str, default is Undefined, optional
        Server-specified ETag for the instance resource to prevent
        simultaneous updates from overwriting each other.
    fileShares : [FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderFileSharesItems0], default is Undefined, optional
        File system shares on the instance. For this version, only a
        single file share is supported.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/instances/{{name}}
    kmsKeyName : str, default is Undefined, optional
        KMS key name used for data encryption.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    location : str, default is Undefined, optional
        The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
    networks : [FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderNetworksItems0], default is Undefined, optional
        VPC networks to which the instance is connected. For this version,
        only a single network is supported.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    tier : str, default is Undefined, optional
        The service tier of the instance.
        Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
    zone : str, default is Undefined, optional
        The name of the Filestore zone of the instance.
    """


    createTime?: str

    description?: str

    effectiveLabels?: {str:str}

    etag?: str

    fileShares?: [FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderFileSharesItems0]

    id?: str

    kmsKeyName?: str

    labels?: {str:str}

    location?: str

    networks?: [FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderNetworksItems0]

    project?: str

    terraformLabels?: {str:str}

    tier?: str

    zone?: str


schema FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderFileSharesItems0:
    """
    filestore gcp upbound io v1beta1 instance status at provider file shares items0

    Attributes
    ----------
    capacityGb : float, default is Undefined, optional
        File share capacity in GiB. This must be at least 1024 GiB
        for the standard tier, or 2560 GiB for the premium tier.
    name : str, default is Undefined, optional
        The name of the fileshare (16 characters or less)
    nfsExportOptions : [FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderFileSharesItems0NfsExportOptionsItems0], default is Undefined, optional
        Nfs Export Options. There is a limit of 10 export options per file share.
        Structure is documented below.
    sourceBackup : str, default is Undefined, optional
        The resource name of the backup, in the format
        projects/{projectId}/locations/{locationId}/backups/{backupId},
        that this file share has been restored from.
    """


    capacityGb?: float

    name?: str

    nfsExportOptions?: [FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderFileSharesItems0NfsExportOptionsItems0]

    sourceBackup?: str


schema FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderFileSharesItems0NfsExportOptionsItems0:
    """
    filestore gcp upbound io v1beta1 instance status at provider file shares items0 nfs export options items0

    Attributes
    ----------
    accessMode : str, default is Undefined, optional
        Either READ_ONLY, for allowing only read requests on the exported directory,
        or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
        Default value is READ_WRITE.
        Possible values are: READ_ONLY, READ_WRITE.
    anonGid : float, default is Undefined, optional
        An integer representing the anonymous group id with a default value of 65534.
        Anon_gid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        if this field is specified for other squashMode settings.
    anonUid : float, default is Undefined, optional
        An integer representing the anonymous user id with a default value of 65534.
        Anon_uid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        if this field is specified for other squashMode settings.
    ipRanges : [str], default is Undefined, optional
        List of either IPv4 addresses, or ranges in CIDR notation which may mount the file share.
        Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned.
        The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.
    squashMode : str, default is Undefined, optional
        Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH,
        for not allowing root access. The default is NO_ROOT_SQUASH.
        Default value is NO_ROOT_SQUASH.
        Possible values are: NO_ROOT_SQUASH, ROOT_SQUASH.
    """


    accessMode?: str

    anonGid?: float

    anonUid?: float

    ipRanges?: [str]

    squashMode?: str


schema FilestoreGcpUpboundIoV1beta1InstanceStatusAtProviderNetworksItems0:
    """
    filestore gcp upbound io v1beta1 instance status at provider networks items0

    Attributes
    ----------
    connectMode : str, default is Undefined, optional
        The network connect mode of the Filestore instance.
        If not provided, the connect mode defaults to
        DIRECT_PEERING.
        Default value is DIRECT_PEERING.
        Possible values are: DIRECT_PEERING, PRIVATE_SERVICE_ACCESS.
    ipAddresses : [str], default is Undefined, optional
        (Output)
        A list of IPv4 or IPv6 addresses.
    modes : [str], default is Undefined, optional
        IP versions for which the instance has
        IP addresses assigned.
        Each value may be one of: ADDRESS_MODE_UNSPECIFIED, MODE_IPV4, MODE_IPV6.
    network : str, default is Undefined, optional
        The name of the GCE VPC network to which the
        instance is connected.
    reservedIpRange : str, default is Undefined, optional
        A /29 CIDR block that identifies the range of IP
        addresses reserved for this instance.
    """


    connectMode?: str

    ipAddresses?: [str]

    modes?: [str]

    network?: str

    reservedIpRange?: str


schema FilestoreGcpUpboundIoV1beta1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


