"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Tag:
    """
    Tag is the Schema for the Tags API. Tags are used to attach custom metadata to Data Catalog resources.

    Attributes
    ----------
    apiVersion : str, default is "datacatalog.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Tag", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DatacatalogGcpUpboundIoV1beta1TagSpec, default is Undefined, required
        spec
    status : DatacatalogGcpUpboundIoV1beta1TagStatus, default is Undefined, optional
        status
    """


    apiVersion: "datacatalog.gcp.upbound.io/v1beta1" = "datacatalog.gcp.upbound.io/v1beta1"

    kind: "Tag" = "Tag"

    metadata?: v1.ObjectMeta

    spec: DatacatalogGcpUpboundIoV1beta1TagSpec

    status?: DatacatalogGcpUpboundIoV1beta1TagStatus


schema DatacatalogGcpUpboundIoV1beta1TagSpec:
    """
    TagSpec defines the desired state of Tag

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DatacatalogGcpUpboundIoV1beta1TagSpecForProvider, default is Undefined, required
        for provider
    initProvider : DatacatalogGcpUpboundIoV1beta1TagSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DatacatalogGcpUpboundIoV1beta1TagSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DatacatalogGcpUpboundIoV1beta1TagSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DatacatalogGcpUpboundIoV1beta1TagSpecForProvider

    initProvider?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DatacatalogGcpUpboundIoV1beta1TagSpecProviderConfigRef

    publishConnectionDetailsTo?: DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DatacatalogGcpUpboundIoV1beta1TagSpecWriteConnectionSecretToRef


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProvider:
    """
    datacatalog gcp upbound io v1beta1 tag spec for provider

    Attributes
    ----------
    column : str, default is Undefined, optional
        Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an
        individual column based on that schema.
        For attaching a tag to a nested column, use . to separate the column names. Example:
        outer_column.inner_column
    fields : [DatacatalogGcpUpboundIoV1beta1TagSpecForProviderFieldsItems0], default is Undefined, optional
        This maps the ID of a tag field to the value of and additional information about that field.
        Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The name of the parent this tag is attached to. This can be the name of an entry or an entry group. If an entry group, the tag will be attached to
        all entries in that group.
    parentRef : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentSelector, default is Undefined, optional
        parent selector
    template : str, default is Undefined, optional
        The resource name of the tag template that this tag uses. Example:
        projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
        This field cannot be modified after creation.
    templateRef : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateRef, default is Undefined, optional
        template ref
    templateSelector : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateSelector, default is Undefined, optional
        template selector
    """


    column?: str

    fields?: [DatacatalogGcpUpboundIoV1beta1TagSpecForProviderFieldsItems0]

    parent?: str

    parentRef?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentRef

    parentSelector?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentSelector

    template?: str

    templateRef?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateRef

    templateSelector?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateSelector


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderFieldsItems0:
    """
    datacatalog gcp upbound io v1beta1 tag spec for provider fields items0

    Attributes
    ----------
    boolValue : bool, default is Undefined, optional
        Holds the value for a tag field with boolean type.
    doubleValue : float, default is Undefined, optional
        Holds the value for a tag field with double type.
    enumValue : str, default is Undefined, optional
        Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.
    fieldName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    stringValue : str, default is Undefined, optional
        Holds the value for a tag field with string type.
    timestampValue : str, default is Undefined, optional
        Holds the value for a tag field with timestamp type.
    """


    boolValue?: bool

    doubleValue?: float

    enumValue?: str

    fieldName?: str

    stringValue?: str

    timestampValue?: str


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentRef:
    """
    Reference to a Entry in datacatalog to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentRefPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentSelector:
    """
    Selector for a Entry in datacatalog to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentSelectorPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateRef:
    """
    Reference to a TagTemplate in datacatalog to populate template.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateRefPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateSelector:
    """
    Selector for a TagTemplate in datacatalog to populate template.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateSelectorPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecForProviderTemplateSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    column : str, default is Undefined, optional
        Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an
        individual column based on that schema.
        For attaching a tag to a nested column, use . to separate the column names. Example:
        outer_column.inner_column
    fields : [DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderFieldsItems0], default is Undefined, optional
        This maps the ID of a tag field to the value of and additional information about that field.
        Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The name of the parent this tag is attached to. This can be the name of an entry or an entry group. If an entry group, the tag will be attached to
        all entries in that group.
    parentRef : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentSelector, default is Undefined, optional
        parent selector
    template : str, default is Undefined, optional
        The resource name of the tag template that this tag uses. Example:
        projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
        This field cannot be modified after creation.
    templateRef : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateRef, default is Undefined, optional
        template ref
    templateSelector : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateSelector, default is Undefined, optional
        template selector
    """


    column?: str

    fields?: [DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderFieldsItems0]

    parent?: str

    parentRef?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentRef

    parentSelector?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentSelector

    template?: str

    templateRef?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateRef

    templateSelector?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateSelector


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderFieldsItems0:
    """
    datacatalog gcp upbound io v1beta1 tag spec init provider fields items0

    Attributes
    ----------
    boolValue : bool, default is Undefined, optional
        Holds the value for a tag field with boolean type.
    doubleValue : float, default is Undefined, optional
        Holds the value for a tag field with double type.
    enumValue : str, default is Undefined, optional
        Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.
    fieldName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    stringValue : str, default is Undefined, optional
        Holds the value for a tag field with string type.
    timestampValue : str, default is Undefined, optional
        Holds the value for a tag field with timestamp type.
    """


    boolValue?: bool

    doubleValue?: float

    enumValue?: str

    fieldName?: str

    stringValue?: str

    timestampValue?: str


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentRef:
    """
    Reference to a Entry in datacatalog to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentRefPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentSelector:
    """
    Selector for a Entry in datacatalog to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentSelectorPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateRef:
    """
    Reference to a TagTemplate in datacatalog to populate template.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateRefPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateSelector:
    """
    Selector for a TagTemplate in datacatalog to populate template.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateSelectorPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecInitProviderTemplateSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecProviderConfigRefPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToConfigRef

    metadata?: DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToMetadata

    name: str


schema DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToConfigRefPolicy


schema DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DatacatalogGcpUpboundIoV1beta1TagSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DatacatalogGcpUpboundIoV1beta1TagSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DatacatalogGcpUpboundIoV1beta1TagStatus:
    """
    TagStatus defines the observed state of Tag.

    Attributes
    ----------
    atProvider : DatacatalogGcpUpboundIoV1beta1TagStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DatacatalogGcpUpboundIoV1beta1TagStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DatacatalogGcpUpboundIoV1beta1TagStatusAtProvider

    conditions?: [DatacatalogGcpUpboundIoV1beta1TagStatusConditionsItems0]


schema DatacatalogGcpUpboundIoV1beta1TagStatusAtProvider:
    """
    datacatalog gcp upbound io v1beta1 tag status at provider

    Attributes
    ----------
    column : str, default is Undefined, optional
        Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an
        individual column based on that schema.
        For attaching a tag to a nested column, use . to separate the column names. Example:
        outer_column.inner_column
    fields : [DatacatalogGcpUpboundIoV1beta1TagStatusAtProviderFieldsItems0], default is Undefined, optional
        This maps the ID of a tag field to the value of and additional information about that field.
        Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    name : str, default is Undefined, optional
        The resource name of the tag in URL format. Example:
        projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}/tags/{tag_id} or
        projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/tags/{tag_id}
        where tag_id is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
    parent : str, default is Undefined, optional
        The name of the parent this tag is attached to. This can be the name of an entry or an entry group. If an entry group, the tag will be attached to
        all entries in that group.
    template : str, default is Undefined, optional
        The resource name of the tag template that this tag uses. Example:
        projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
        This field cannot be modified after creation.
    templateDisplayname : str, default is Undefined, optional
        The display name of the tag template.
    """


    column?: str

    fields?: [DatacatalogGcpUpboundIoV1beta1TagStatusAtProviderFieldsItems0]

    id?: str

    name?: str

    parent?: str

    template?: str

    templateDisplayname?: str


schema DatacatalogGcpUpboundIoV1beta1TagStatusAtProviderFieldsItems0:
    """
    datacatalog gcp upbound io v1beta1 tag status at provider fields items0

    Attributes
    ----------
    boolValue : bool, default is Undefined, optional
        Holds the value for a tag field with boolean type.
    displayName : str, default is Undefined, optional
        (Output)
        The display name of this field
    doubleValue : float, default is Undefined, optional
        Holds the value for a tag field with double type.
    enumValue : str, default is Undefined, optional
        Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.
    fieldName : str, default is Undefined, optional
        The identifier for this object. Format specified above.
    order : float, default is Undefined, optional
        (Output)
        The order of this field with respect to other fields in this tag. For example, a higher value can indicate
        a more important field. The value can be negative. Multiple fields can have the same order, and field orders
        within a tag do not have to be sequential.
    stringValue : str, default is Undefined, optional
        Holds the value for a tag field with string type.
    timestampValue : str, default is Undefined, optional
        Holds the value for a tag field with timestamp type.
    """


    boolValue?: bool

    displayName?: str

    doubleValue?: float

    enumValue?: str

    fieldName?: str

    order?: float

    stringValue?: str

    timestampValue?: str


schema DatacatalogGcpUpboundIoV1beta1TagStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


