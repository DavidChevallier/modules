"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SLO:
    """
    SLO is the Schema for the SLOs API. A Service-Level Objective (SLO) describes the level of desired good service.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SLO", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGcpUpboundIoV1beta1SLOSpec, default is Undefined, required
        spec
    status : MonitoringGcpUpboundIoV1beta1SLOStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.gcp.upbound.io/v1beta1" = "monitoring.gcp.upbound.io/v1beta1"

    kind: "SLO" = "SLO"

    metadata?: v1.ObjectMeta

    spec: MonitoringGcpUpboundIoV1beta1SLOSpec

    status?: MonitoringGcpUpboundIoV1beta1SLOStatus


schema MonitoringGcpUpboundIoV1beta1SLOSpec:
    """
    SLOSpec defines the desired state of SLO

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MonitoringGcpUpboundIoV1beta1SLOSpecForProvider, default is Undefined, required
        for provider
    initProvider : MonitoringGcpUpboundIoV1beta1SLOSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MonitoringGcpUpboundIoV1beta1SLOSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MonitoringGcpUpboundIoV1beta1SLOSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MonitoringGcpUpboundIoV1beta1SLOSpecForProvider

    initProvider?: MonitoringGcpUpboundIoV1beta1SLOSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MonitoringGcpUpboundIoV1beta1SLOSpecProviderConfigRef

    publishConnectionDetailsTo?: MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MonitoringGcpUpboundIoV1beta1SLOSpecWriteConnectionSecretToRef


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProvider:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider

    Attributes
    ----------
    basicSli : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0], default is Undefined, optional
        Basic Service-Level Indicator (SLI) on a well-known service type.
        Performance will be computed on the basis of pre-defined metrics.
        SLIs are used to measure and calculate the quality of the Service's
        performance with respect to a single aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    calendarPeriod : str, default is Undefined, optional
        A calendar period, semantically "since the start of the current
        ".
        Possible values are: DAY, WEEK, FORTNIGHT, MONTH.
    displayName : str, default is Undefined, optional
        Name used for UI elements listing this SLO.
    goal : float, default is Undefined, optional
        The fraction of service that must be good in order for this objective
        to be met. 0 < goal <= 0.999
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    requestBasedSli : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0], default is Undefined, optional
        A request-based SLI defines a SLI for which atomic units of
        service are counted directly.
        A SLI describes a good service.
        It is used to measure and calculate the quality of the Service's
        performance with respect to a single aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    rollingPeriodDays : float, default is Undefined, optional
        A rolling time period, semantically "in the past X days".
        Must be between 1 to 30 days, inclusive.
    service : str, default is Undefined, optional
        ID of the service to which this SLO belongs.
    serviceRef : MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceRef, default is Undefined, optional
        service ref
    serviceSelector : MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceSelector, default is Undefined, optional
        service selector
    sloId : str, default is Undefined, optional
        The id to use for this ServiceLevelObjective. If omitted, an id will be generated instead.
    userLabels : {str:str}, default is Undefined, optional
        This field is intended to be used for organizing and identifying the AlertPolicy
        objects.The field can contain up to 64 entries. Each key and value is limited
        to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values
        can contain only lowercase letters, numerals, underscores, and dashes. Keys
        must begin with a letter.
    windowsBasedSli : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0], default is Undefined, optional
        A windows-based SLI defines the criteria for time windows.
        good_service is defined based off the count of these time windows
        for which the provided service was of good quality.
        A SLI describes a good service. It is used to measure and calculate
        the quality of the Service's performance with respect to a single
        aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    """


    basicSli?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0]

    calendarPeriod?: str

    displayName?: str

    goal?: float

    project?: str

    requestBasedSli?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0]

    rollingPeriodDays?: float

    service?: str

    serviceRef?: MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceRef

    serviceSelector?: MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceSelector

    sloId?: str

    userLabels?: {str:str}

    windowsBasedSli?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider basic sli items0

    Attributes
    ----------
    availability : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0AvailabilityItems0], default is Undefined, optional
        Availability based SLI, dervied from count of requests made to this service that return successfully.
        Structure is documented below.
    latency : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0LatencyItems0], default is Undefined, optional
        Parameters for a latency threshold SLI.
        Structure is documented below.
    location : [str], default is Undefined, optional
        An optional set of locations to which this SLI is relevant.
        Telemetry from other locations will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        locations in which the Service has activity. For service types
        that don't support breaking down by location, setting this
        field will result in an error.
    method : [str], default is Undefined, optional
        An optional set of RPCs to which this SLI is relevant.
        Telemetry from other methods will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        the Service's methods. For service types that don't support
        breaking down by method, setting this field will result in an
        error.
    version : [str], default is Undefined, optional
        The set of API versions to which this SLI is relevant.
        Telemetry from other API versions will not be used to
        calculate performance for this SLI. If omitted,
        this SLI applies to all API versions. For service types
        that don't support breaking down by version, setting this
        field will result in an error.
    """


    availability?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0AvailabilityItems0]

    latency?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0LatencyItems0]

    location?: [str]

    method?: [str]

    version?: [str]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0AvailabilityItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider basic sli items0 availability items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether an availability SLI is enabled or not. Must be set to true. Defaults to true.
    """


    enabled?: bool


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderBasicSliItems0LatencyItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider basic sli items0 latency items0

    Attributes
    ----------
    threshold : str, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    threshold?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider request based sli items0

    Attributes
    ----------
    distributionCut : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0DistributionCutItems0], default is Undefined, optional
        Used when good_service is defined by a count of values aggregated in a
        Distribution that fall into a good range. The total_service is the
        total count of all values aggregated in the Distribution.
        Defines a distribution TimeSeries filter and thresholds used for
        measuring good service and total service.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    goodTotalRatio : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0GoodTotalRatioItems0], default is Undefined, optional
        A means to compute a ratio of good_service to total_service.
        Defines computing this ratio with two TimeSeries monitoring filters
        Must specify exactly two of good, bad, and total service filters.
        The relationship good_service + bad_service = total_service
        will be assumed.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    """


    distributionCut?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0DistributionCutItems0]

    goodTotalRatio?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0GoodTotalRatioItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0DistributionCutItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider request based sli items0 distribution cut items0

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        aggregating values to quantify the good service provided.
        Must have ValueType = DISTRIBUTION and
        MetricKind = DELTA or MetricKind = CUMULATIVE.
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0DistributionCutItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    """


    distributionFilter?: str

    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0DistributionCutItems0RangeItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0DistributionCutItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider request based sli items0 distribution cut items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderRequestBasedSliItems0GoodTotalRatioItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider request based sli items0 good total ratio items0

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying bad service provided, either demanded service that
        was not provided or demanded service that was of inadequate
        quality.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    goodServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying good service provided.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    totalServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying total demanded service.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceRef:
    """
    Reference to a CustomService in monitoring to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceRefPolicy


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceSelector:
    """
    Selector for a CustomService in monitoring to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderServiceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0

    Attributes
    ----------
    goodBadMetricFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        with ValueType = BOOL. The window is good if any true values
        appear in the window. One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
    goodTotalRatioThreshold : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0], default is Undefined, optional
        Criterion that describes a window as good if its performance is
        high enough. One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Structure is documented below.
    metricMeanInRange : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricMeanInRangeItems0], default is Undefined, optional
        Criterion that describes a window as good if the metric's value
        is in a good range, averaged across returned streams.
        One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Average value X of time_series should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    metricSumInRange : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricSumInRangeItems0], default is Undefined, optional
        Criterion that describes a window as good if the metric's value
        is in a good range, summed across returned streams.
        Summed value X of time_series should satisfy
        range.min <= X <= range.max for a good window.
        One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Structure is documented below.
    windowPeriod : str, default is Undefined, optional
        Duration over which window quality is evaluated, given as a
        duration string "{X}s" representing X seconds. Must be an
        integer fraction of a day and at least 60s.
    """


    goodBadMetricFilter?: str

    goodTotalRatioThreshold?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0]

    metricMeanInRange?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricMeanInRangeItems0]

    metricSumInRange?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricSumInRangeItems0]

    windowPeriod?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0

    Attributes
    ----------
    basicSliPerformance : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0], default is Undefined, optional
        Basic SLI to evaluate to judge window quality.
        Structure is documented below.
    performance : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0], default is Undefined, optional
        Request-based SLI to evaluate to judge window quality.
        Structure is documented below.
    threshold : float, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    basicSliPerformance?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0]

    performance?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0]

    threshold?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 basic sli performance items0

    Attributes
    ----------
    availability : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0], default is Undefined, optional
        Availability based SLI, dervied from count of requests made to this service that return successfully.
        Structure is documented below.
    latency : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0], default is Undefined, optional
        Parameters for a latency threshold SLI.
        Structure is documented below.
    location : [str], default is Undefined, optional
        An optional set of locations to which this SLI is relevant.
        Telemetry from other locations will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        locations in which the Service has activity. For service types
        that don't support breaking down by location, setting this
        field will result in an error.
    method : [str], default is Undefined, optional
        An optional set of RPCs to which this SLI is relevant.
        Telemetry from other methods will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        the Service's methods. For service types that don't support
        breaking down by method, setting this field will result in an
        error.
    version : [str], default is Undefined, optional
        The set of API versions to which this SLI is relevant.
        Telemetry from other API versions will not be used to
        calculate performance for this SLI. If omitted,
        this SLI applies to all API versions. For service types
        that don't support breaking down by version, setting this
        field will result in an error.
    """


    availability?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0]

    latency?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0]

    location?: [str]

    method?: [str]

    version?: [str]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 basic sli performance items0 availability items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether an availability SLI is enabled or not. Must be set to true. Defaults to true.
    """


    enabled?: bool


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 basic sli performance items0 latency items0

    Attributes
    ----------
    threshold : str, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    threshold?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 performance items0

    Attributes
    ----------
    distributionCut : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0], default is Undefined, optional
        Used when good_service is defined by a count of values aggregated in a
        Distribution that fall into a good range. The total_service is the
        total count of all values aggregated in the Distribution.
        Defines a distribution TimeSeries filter and thresholds used for
        measuring good service and total service.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    goodTotalRatio : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0], default is Undefined, optional
        A means to compute a ratio of good_service to total_service.
        Defines computing this ratio with two TimeSeries monitoring filters
        Must specify exactly two of good, bad, and total service filters.
        The relationship good_service + bad_service = total_service
        will be assumed.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    """


    distributionCut?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0]

    goodTotalRatio?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 performance items0 distribution cut items0

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        aggregating values to quantify the good service provided.
        Must have ValueType = DISTRIBUTION and
        MetricKind = DELTA or MetricKind = CUMULATIVE.
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    """


    distributionFilter?: str

    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 performance items0 distribution cut items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 good total ratio threshold items0 performance items0 good total ratio items0

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying bad service provided, either demanded service that
        was not provided or demanded service that was of inadequate
        quality.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    goodServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying good service provided.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    totalServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying total demanded service.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricMeanInRangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 metric mean in range items0

    Attributes
    ----------
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    timeSeries : str, default is Undefined, optional
        A monitoring filter
        specifying the TimeSeries to use for evaluating window
        quality. The provided TimeSeries must have
        ValueType = INT64 or ValueType = DOUBLE and
        MetricKind = GAUGE.
        Summed value X should satisfy
        range.min <= X <= range.max for a good window.
    """


    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0]

    timeSeries?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 metric mean in range items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricSumInRangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 metric sum in range items0

    Attributes
    ----------
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    timeSeries : str, default is Undefined, optional
        A monitoring filter
        specifying the TimeSeries to use for evaluating window
        quality. The provided TimeSeries must have
        ValueType = INT64 or ValueType = DOUBLE and
        MetricKind = GAUGE.
        Summed value X should satisfy
        range.min <= X <= range.max for a good window.
    """


    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0]

    timeSeries?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecForProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec for provider windows based sli items0 metric sum in range items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    basicSli : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0], default is Undefined, optional
        Basic Service-Level Indicator (SLI) on a well-known service type.
        Performance will be computed on the basis of pre-defined metrics.
        SLIs are used to measure and calculate the quality of the Service's
        performance with respect to a single aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    calendarPeriod : str, default is Undefined, optional
        A calendar period, semantically "since the start of the current
        ".
        Possible values are: DAY, WEEK, FORTNIGHT, MONTH.
    displayName : str, default is Undefined, optional
        Name used for UI elements listing this SLO.
    goal : float, default is Undefined, optional
        The fraction of service that must be good in order for this objective
        to be met. 0 < goal <= 0.999
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    requestBasedSli : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0], default is Undefined, optional
        A request-based SLI defines a SLI for which atomic units of
        service are counted directly.
        A SLI describes a good service.
        It is used to measure and calculate the quality of the Service's
        performance with respect to a single aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    rollingPeriodDays : float, default is Undefined, optional
        A rolling time period, semantically "in the past X days".
        Must be between 1 to 30 days, inclusive.
    service : str, default is Undefined, optional
        ID of the service to which this SLO belongs.
    serviceRef : MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceRef, default is Undefined, optional
        service ref
    serviceSelector : MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceSelector, default is Undefined, optional
        service selector
    sloId : str, default is Undefined, optional
        The id to use for this ServiceLevelObjective. If omitted, an id will be generated instead.
    userLabels : {str:str}, default is Undefined, optional
        This field is intended to be used for organizing and identifying the AlertPolicy
        objects.The field can contain up to 64 entries. Each key and value is limited
        to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values
        can contain only lowercase letters, numerals, underscores, and dashes. Keys
        must begin with a letter.
    windowsBasedSli : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0], default is Undefined, optional
        A windows-based SLI defines the criteria for time windows.
        good_service is defined based off the count of these time windows
        for which the provided service was of good quality.
        A SLI describes a good service. It is used to measure and calculate
        the quality of the Service's performance with respect to a single
        aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    """


    basicSli?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0]

    calendarPeriod?: str

    displayName?: str

    goal?: float

    project?: str

    requestBasedSli?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0]

    rollingPeriodDays?: float

    service?: str

    serviceRef?: MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceRef

    serviceSelector?: MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceSelector

    sloId?: str

    userLabels?: {str:str}

    windowsBasedSli?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider basic sli items0

    Attributes
    ----------
    availability : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0AvailabilityItems0], default is Undefined, optional
        Availability based SLI, dervied from count of requests made to this service that return successfully.
        Structure is documented below.
    latency : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0LatencyItems0], default is Undefined, optional
        Parameters for a latency threshold SLI.
        Structure is documented below.
    location : [str], default is Undefined, optional
        An optional set of locations to which this SLI is relevant.
        Telemetry from other locations will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        locations in which the Service has activity. For service types
        that don't support breaking down by location, setting this
        field will result in an error.
    method : [str], default is Undefined, optional
        An optional set of RPCs to which this SLI is relevant.
        Telemetry from other methods will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        the Service's methods. For service types that don't support
        breaking down by method, setting this field will result in an
        error.
    version : [str], default is Undefined, optional
        The set of API versions to which this SLI is relevant.
        Telemetry from other API versions will not be used to
        calculate performance for this SLI. If omitted,
        this SLI applies to all API versions. For service types
        that don't support breaking down by version, setting this
        field will result in an error.
    """


    availability?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0AvailabilityItems0]

    latency?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0LatencyItems0]

    location?: [str]

    method?: [str]

    version?: [str]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0AvailabilityItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider basic sli items0 availability items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether an availability SLI is enabled or not. Must be set to true. Defaults to true.
    """


    enabled?: bool


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderBasicSliItems0LatencyItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider basic sli items0 latency items0

    Attributes
    ----------
    threshold : str, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    threshold?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider request based sli items0

    Attributes
    ----------
    distributionCut : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0DistributionCutItems0], default is Undefined, optional
        Used when good_service is defined by a count of values aggregated in a
        Distribution that fall into a good range. The total_service is the
        total count of all values aggregated in the Distribution.
        Defines a distribution TimeSeries filter and thresholds used for
        measuring good service and total service.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    goodTotalRatio : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0GoodTotalRatioItems0], default is Undefined, optional
        A means to compute a ratio of good_service to total_service.
        Defines computing this ratio with two TimeSeries monitoring filters
        Must specify exactly two of good, bad, and total service filters.
        The relationship good_service + bad_service = total_service
        will be assumed.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    """


    distributionCut?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0DistributionCutItems0]

    goodTotalRatio?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0GoodTotalRatioItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0DistributionCutItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider request based sli items0 distribution cut items0

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        aggregating values to quantify the good service provided.
        Must have ValueType = DISTRIBUTION and
        MetricKind = DELTA or MetricKind = CUMULATIVE.
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0DistributionCutItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    """


    distributionFilter?: str

    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0DistributionCutItems0RangeItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0DistributionCutItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider request based sli items0 distribution cut items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderRequestBasedSliItems0GoodTotalRatioItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider request based sli items0 good total ratio items0

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying bad service provided, either demanded service that
        was not provided or demanded service that was of inadequate
        quality.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    goodServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying good service provided.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    totalServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying total demanded service.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceRef:
    """
    Reference to a CustomService in monitoring to populate service.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceRefPolicy


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceSelector:
    """
    Selector for a CustomService in monitoring to populate service.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderServiceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0

    Attributes
    ----------
    goodBadMetricFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        with ValueType = BOOL. The window is good if any true values
        appear in the window. One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
    goodTotalRatioThreshold : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0], default is Undefined, optional
        Criterion that describes a window as good if its performance is
        high enough. One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Structure is documented below.
    metricMeanInRange : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricMeanInRangeItems0], default is Undefined, optional
        Criterion that describes a window as good if the metric's value
        is in a good range, averaged across returned streams.
        One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Average value X of time_series should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    metricSumInRange : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricSumInRangeItems0], default is Undefined, optional
        Criterion that describes a window as good if the metric's value
        is in a good range, summed across returned streams.
        Summed value X of time_series should satisfy
        range.min <= X <= range.max for a good window.
        One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Structure is documented below.
    windowPeriod : str, default is Undefined, optional
        Duration over which window quality is evaluated, given as a
        duration string "{X}s" representing X seconds. Must be an
        integer fraction of a day and at least 60s.
    """


    goodBadMetricFilter?: str

    goodTotalRatioThreshold?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0]

    metricMeanInRange?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricMeanInRangeItems0]

    metricSumInRange?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricSumInRangeItems0]

    windowPeriod?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0

    Attributes
    ----------
    basicSliPerformance : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0], default is Undefined, optional
        Basic SLI to evaluate to judge window quality.
        Structure is documented below.
    performance : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0], default is Undefined, optional
        Request-based SLI to evaluate to judge window quality.
        Structure is documented below.
    threshold : float, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    basicSliPerformance?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0]

    performance?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0]

    threshold?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 basic sli performance items0

    Attributes
    ----------
    availability : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0], default is Undefined, optional
        Availability based SLI, dervied from count of requests made to this service that return successfully.
        Structure is documented below.
    latency : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0], default is Undefined, optional
        Parameters for a latency threshold SLI.
        Structure is documented below.
    location : [str], default is Undefined, optional
        An optional set of locations to which this SLI is relevant.
        Telemetry from other locations will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        locations in which the Service has activity. For service types
        that don't support breaking down by location, setting this
        field will result in an error.
    method : [str], default is Undefined, optional
        An optional set of RPCs to which this SLI is relevant.
        Telemetry from other methods will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        the Service's methods. For service types that don't support
        breaking down by method, setting this field will result in an
        error.
    version : [str], default is Undefined, optional
        The set of API versions to which this SLI is relevant.
        Telemetry from other API versions will not be used to
        calculate performance for this SLI. If omitted,
        this SLI applies to all API versions. For service types
        that don't support breaking down by version, setting this
        field will result in an error.
    """


    availability?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0]

    latency?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0]

    location?: [str]

    method?: [str]

    version?: [str]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 basic sli performance items0 availability items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether an availability SLI is enabled or not. Must be set to true. Defaults to true.
    """


    enabled?: bool


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 basic sli performance items0 latency items0

    Attributes
    ----------
    threshold : str, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    threshold?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 performance items0

    Attributes
    ----------
    distributionCut : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0], default is Undefined, optional
        Used when good_service is defined by a count of values aggregated in a
        Distribution that fall into a good range. The total_service is the
        total count of all values aggregated in the Distribution.
        Defines a distribution TimeSeries filter and thresholds used for
        measuring good service and total service.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    goodTotalRatio : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0], default is Undefined, optional
        A means to compute a ratio of good_service to total_service.
        Defines computing this ratio with two TimeSeries monitoring filters
        Must specify exactly two of good, bad, and total service filters.
        The relationship good_service + bad_service = total_service
        will be assumed.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    """


    distributionCut?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0]

    goodTotalRatio?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 performance items0 distribution cut items0

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        aggregating values to quantify the good service provided.
        Must have ValueType = DISTRIBUTION and
        MetricKind = DELTA or MetricKind = CUMULATIVE.
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    """


    distributionFilter?: str

    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0]


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 performance items0 distribution cut items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 good total ratio threshold items0 performance items0 good total ratio items0

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying bad service provided, either demanded service that
        was not provided or demanded service that was of inadequate
        quality.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    goodServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying good service provided.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    totalServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying total demanded service.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricMeanInRangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 metric mean in range items0

    Attributes
    ----------
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    timeSeries : str, default is Undefined, optional
        A monitoring filter
        specifying the TimeSeries to use for evaluating window
        quality. The provided TimeSeries must have
        ValueType = INT64 or ValueType = DOUBLE and
        MetricKind = GAUGE.
        Summed value X should satisfy
        range.min <= X <= range.max for a good window.
    """


    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0]

    timeSeries?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 metric mean in range items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricSumInRangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 metric sum in range items0

    Attributes
    ----------
    range : [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    timeSeries : str, default is Undefined, optional
        A monitoring filter
        specifying the TimeSeries to use for evaluating window
        quality. The provided TimeSeries must have
        ValueType = INT64 or ValueType = DOUBLE and
        MetricKind = GAUGE.
        Summed value X should satisfy
        range.min <= X <= range.max for a good window.
    """


    range?: [MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0]

    timeSeries?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecInitProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o spec init provider windows based sli items0 metric sum in range items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1SLOSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1SLOSpecProviderConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1SLOSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToConfigRef

    metadata?: MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToMetadata

    name: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1SLOSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1SLOSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1SLOStatus:
    """
    SLOStatus defines the observed state of SLO.

    Attributes
    ----------
    atProvider : MonitoringGcpUpboundIoV1beta1SLOStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MonitoringGcpUpboundIoV1beta1SLOStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MonitoringGcpUpboundIoV1beta1SLOStatusAtProvider

    conditions?: [MonitoringGcpUpboundIoV1beta1SLOStatusConditionsItems0]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProvider:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider

    Attributes
    ----------
    basicSli : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0], default is Undefined, optional
        Basic Service-Level Indicator (SLI) on a well-known service type.
        Performance will be computed on the basis of pre-defined metrics.
        SLIs are used to measure and calculate the quality of the Service's
        performance with respect to a single aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    calendarPeriod : str, default is Undefined, optional
        A calendar period, semantically "since the start of the current
        ".
        Possible values are: DAY, WEEK, FORTNIGHT, MONTH.
    displayName : str, default is Undefined, optional
        Name used for UI elements listing this SLO.
    goal : float, default is Undefined, optional
        The fraction of service that must be good in order for this objective
        to be met. 0 < goal <= 0.999
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    name : str, default is Undefined, optional
        The full resource name for this service. The syntax is:
        projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    requestBasedSli : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0], default is Undefined, optional
        A request-based SLI defines a SLI for which atomic units of
        service are counted directly.
        A SLI describes a good service.
        It is used to measure and calculate the quality of the Service's
        performance with respect to a single aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    rollingPeriodDays : float, default is Undefined, optional
        A rolling time period, semantically "in the past X days".
        Must be between 1 to 30 days, inclusive.
    service : str, default is Undefined, optional
        ID of the service to which this SLO belongs.
    sloId : str, default is Undefined, optional
        The id to use for this ServiceLevelObjective. If omitted, an id will be generated instead.
    userLabels : {str:str}, default is Undefined, optional
        This field is intended to be used for organizing and identifying the AlertPolicy
        objects.The field can contain up to 64 entries. Each key and value is limited
        to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values
        can contain only lowercase letters, numerals, underscores, and dashes. Keys
        must begin with a letter.
    windowsBasedSli : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0], default is Undefined, optional
        A windows-based SLI defines the criteria for time windows.
        good_service is defined based off the count of these time windows
        for which the provided service was of good quality.
        A SLI describes a good service. It is used to measure and calculate
        the quality of the Service's performance with respect to a single
        aspect of service quality.
        Exactly one of the following must be set:
        basic_sli, request_based_sli, windows_based_sli
        Structure is documented below.
    """


    basicSli?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0]

    calendarPeriod?: str

    displayName?: str

    goal?: float

    id?: str

    name?: str

    project?: str

    requestBasedSli?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0]

    rollingPeriodDays?: float

    service?: str

    sloId?: str

    userLabels?: {str:str}

    windowsBasedSli?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider basic sli items0

    Attributes
    ----------
    availability : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0AvailabilityItems0], default is Undefined, optional
        Availability based SLI, dervied from count of requests made to this service that return successfully.
        Structure is documented below.
    latency : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0LatencyItems0], default is Undefined, optional
        Parameters for a latency threshold SLI.
        Structure is documented below.
    location : [str], default is Undefined, optional
        An optional set of locations to which this SLI is relevant.
        Telemetry from other locations will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        locations in which the Service has activity. For service types
        that don't support breaking down by location, setting this
        field will result in an error.
    method : [str], default is Undefined, optional
        An optional set of RPCs to which this SLI is relevant.
        Telemetry from other methods will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        the Service's methods. For service types that don't support
        breaking down by method, setting this field will result in an
        error.
    version : [str], default is Undefined, optional
        The set of API versions to which this SLI is relevant.
        Telemetry from other API versions will not be used to
        calculate performance for this SLI. If omitted,
        this SLI applies to all API versions. For service types
        that don't support breaking down by version, setting this
        field will result in an error.
    """


    availability?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0AvailabilityItems0]

    latency?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0LatencyItems0]

    location?: [str]

    method?: [str]

    version?: [str]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0AvailabilityItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider basic sli items0 availability items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether an availability SLI is enabled or not. Must be set to true. Defaults to true.
    """


    enabled?: bool


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderBasicSliItems0LatencyItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider basic sli items0 latency items0

    Attributes
    ----------
    threshold : str, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    threshold?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider request based sli items0

    Attributes
    ----------
    distributionCut : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0DistributionCutItems0], default is Undefined, optional
        Used when good_service is defined by a count of values aggregated in a
        Distribution that fall into a good range. The total_service is the
        total count of all values aggregated in the Distribution.
        Defines a distribution TimeSeries filter and thresholds used for
        measuring good service and total service.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    goodTotalRatio : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0GoodTotalRatioItems0], default is Undefined, optional
        A means to compute a ratio of good_service to total_service.
        Defines computing this ratio with two TimeSeries monitoring filters
        Must specify exactly two of good, bad, and total service filters.
        The relationship good_service + bad_service = total_service
        will be assumed.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    """


    distributionCut?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0DistributionCutItems0]

    goodTotalRatio?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0GoodTotalRatioItems0]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0DistributionCutItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider request based sli items0 distribution cut items0

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        aggregating values to quantify the good service provided.
        Must have ValueType = DISTRIBUTION and
        MetricKind = DELTA or MetricKind = CUMULATIVE.
    range : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0DistributionCutItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    """


    distributionFilter?: str

    range?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0DistributionCutItems0RangeItems0]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0DistributionCutItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider request based sli items0 distribution cut items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderRequestBasedSliItems0GoodTotalRatioItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider request based sli items0 good total ratio items0

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying bad service provided, either demanded service that
        was not provided or demanded service that was of inadequate
        quality.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    goodServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying good service provided.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    totalServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying total demanded service.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0

    Attributes
    ----------
    goodBadMetricFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        with ValueType = BOOL. The window is good if any true values
        appear in the window. One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
    goodTotalRatioThreshold : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0], default is Undefined, optional
        Criterion that describes a window as good if its performance is
        high enough. One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Structure is documented below.
    metricMeanInRange : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricMeanInRangeItems0], default is Undefined, optional
        Criterion that describes a window as good if the metric's value
        is in a good range, averaged across returned streams.
        One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Average value X of time_series should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    metricSumInRange : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricSumInRangeItems0], default is Undefined, optional
        Criterion that describes a window as good if the metric's value
        is in a good range, summed across returned streams.
        Summed value X of time_series should satisfy
        range.min <= X <= range.max for a good window.
        One of good_bad_metric_filter,
        good_total_ratio_threshold, metric_mean_in_range,
        metric_sum_in_range must be set for windows_based_sli.
        Structure is documented below.
    windowPeriod : str, default is Undefined, optional
        Duration over which window quality is evaluated, given as a
        duration string "{X}s" representing X seconds. Must be an
        integer fraction of a day and at least 60s.
    """


    goodBadMetricFilter?: str

    goodTotalRatioThreshold?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0]

    metricMeanInRange?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricMeanInRangeItems0]

    metricSumInRange?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricSumInRangeItems0]

    windowPeriod?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0

    Attributes
    ----------
    basicSliPerformance : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0], default is Undefined, optional
        Basic SLI to evaluate to judge window quality.
        Structure is documented below.
    performance : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0], default is Undefined, optional
        Request-based SLI to evaluate to judge window quality.
        Structure is documented below.
    threshold : float, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    basicSliPerformance?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0]

    performance?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0]

    threshold?: float


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 basic sli performance items0

    Attributes
    ----------
    availability : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0], default is Undefined, optional
        Availability based SLI, dervied from count of requests made to this service that return successfully.
        Structure is documented below.
    latency : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0], default is Undefined, optional
        Parameters for a latency threshold SLI.
        Structure is documented below.
    location : [str], default is Undefined, optional
        An optional set of locations to which this SLI is relevant.
        Telemetry from other locations will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        locations in which the Service has activity. For service types
        that don't support breaking down by location, setting this
        field will result in an error.
    method : [str], default is Undefined, optional
        An optional set of RPCs to which this SLI is relevant.
        Telemetry from other methods will not be used to calculate
        performance for this SLI. If omitted, this SLI applies to all
        the Service's methods. For service types that don't support
        breaking down by method, setting this field will result in an
        error.
    version : [str], default is Undefined, optional
        The set of API versions to which this SLI is relevant.
        Telemetry from other API versions will not be used to
        calculate performance for this SLI. If omitted,
        this SLI applies to all API versions. For service types
        that don't support breaking down by version, setting this
        field will result in an error.
    """


    availability?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0]

    latency?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0]

    location?: [str]

    method?: [str]

    version?: [str]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0AvailabilityItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 basic sli performance items0 availability items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether an availability SLI is enabled or not. Must be set to true. Defaults to true.
    """


    enabled?: bool


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0BasicSliPerformanceItems0LatencyItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 basic sli performance items0 latency items0

    Attributes
    ----------
    threshold : str, default is Undefined, optional
        A duration string, e.g. 10s.
        Good service is defined to be the count of requests made to
        this service that return in no more than threshold.
    """


    threshold?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 performance items0

    Attributes
    ----------
    distributionCut : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0], default is Undefined, optional
        Used when good_service is defined by a count of values aggregated in a
        Distribution that fall into a good range. The total_service is the
        total count of all values aggregated in the Distribution.
        Defines a distribution TimeSeries filter and thresholds used for
        measuring good service and total service.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    goodTotalRatio : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0], default is Undefined, optional
        A means to compute a ratio of good_service to total_service.
        Defines computing this ratio with two TimeSeries monitoring filters
        Must specify exactly two of good, bad, and total service filters.
        The relationship good_service + bad_service = total_service
        will be assumed.
        Exactly one of distribution_cut or good_total_ratio can be set.
        Structure is documented below.
    """


    distributionCut?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0]

    goodTotalRatio?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 performance items0 distribution cut items0

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        aggregating values to quantify the good service provided.
        Must have ValueType = DISTRIBUTION and
        MetricKind = DELTA or MetricKind = CUMULATIVE.
    range : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    """


    distributionFilter?: str

    range?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0]


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0DistributionCutItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 performance items0 distribution cut items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0GoodTotalRatioThresholdItems0PerformanceItems0GoodTotalRatioItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 good total ratio threshold items0 performance items0 good total ratio items0

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying bad service provided, either demanded service that
        was not provided or demanded service that was of inadequate
        quality.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    goodServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying good service provided.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    totalServiceFilter : str, default is Undefined, optional
        A TimeSeries monitoring filter
        quantifying total demanded service.
        Must have ValueType = DOUBLE or ValueType = INT64 and
        must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        Exactly two of good_service_filter,bad_service_filter,total_service_filter
        must be set (good + bad = total is assumed).
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricMeanInRangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 metric mean in range items0

    Attributes
    ----------
    range : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    timeSeries : str, default is Undefined, optional
        A monitoring filter
        specifying the TimeSeries to use for evaluating window
        quality. The provided TimeSeries must have
        ValueType = INT64 or ValueType = DOUBLE and
        MetricKind = GAUGE.
        Summed value X should satisfy
        range.min <= X <= range.max for a good window.
    """


    range?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0]

    timeSeries?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricMeanInRangeItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 metric mean in range items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricSumInRangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 metric sum in range items0

    Attributes
    ----------
    range : [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0], default is Undefined, optional
        Range of numerical values. The computed good_service
        will be the count of values x in the Distribution such
        that range.min <= x <= range.max. inclusive of min and
        max. Open ranges can be defined by setting
        just one of min or max. Summed value X should satisfy
        range.min <= X <= range.max for a good window.
        Structure is documented below.
    timeSeries : str, default is Undefined, optional
        A monitoring filter
        specifying the TimeSeries to use for evaluating window
        quality. The provided TimeSeries must have
        ValueType = INT64 or ValueType = DOUBLE and
        MetricKind = GAUGE.
        Summed value X should satisfy
        range.min <= X <= range.max for a good window.
    """


    range?: [MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0]

    timeSeries?: str


schema MonitoringGcpUpboundIoV1beta1SLOStatusAtProviderWindowsBasedSliItems0MetricSumInRangeItems0RangeItems0:
    """
    monitoring gcp upbound io v1beta1 s l o status at provider windows based sli items0 metric sum in range items0 range items0

    Attributes
    ----------
    max : float, default is Undefined, optional
        max value for the range (inclusive). If not given,
        will be set to 0
    min : float, default is Undefined, optional
        Min value for the range (inclusive). If not given,
        will be set to 0
    """


    max?: float

    min?: float


schema MonitoringGcpUpboundIoV1beta1SLOStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


