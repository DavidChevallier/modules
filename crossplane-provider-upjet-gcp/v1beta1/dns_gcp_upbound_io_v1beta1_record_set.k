"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RecordSet:
    """
    RecordSet is the Schema for the RecordSets API. Manages a set of DNS records within Google Cloud DNS.

    Attributes
    ----------
    apiVersion : str, default is "dns.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RecordSet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DNSGcpUpboundIoV1beta1RecordSetSpec, default is Undefined, required
        spec
    status : DNSGcpUpboundIoV1beta1RecordSetStatus, default is Undefined, optional
        status
    """


    apiVersion: "dns.gcp.upbound.io/v1beta1" = "dns.gcp.upbound.io/v1beta1"

    kind: "RecordSet" = "RecordSet"

    metadata?: v1.ObjectMeta

    spec: DNSGcpUpboundIoV1beta1RecordSetSpec

    status?: DNSGcpUpboundIoV1beta1RecordSetStatus


schema DNSGcpUpboundIoV1beta1RecordSetSpec:
    """
    RecordSetSpec defines the desired state of RecordSet

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DNSGcpUpboundIoV1beta1RecordSetSpecForProvider, default is Undefined, required
        for provider
    initProvider : DNSGcpUpboundIoV1beta1RecordSetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DNSGcpUpboundIoV1beta1RecordSetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DNSGcpUpboundIoV1beta1RecordSetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DNSGcpUpboundIoV1beta1RecordSetSpecForProvider

    initProvider?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DNSGcpUpboundIoV1beta1RecordSetSpecProviderConfigRef

    publishConnectionDetailsTo?: DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DNSGcpUpboundIoV1beta1RecordSetSpecWriteConnectionSecretToRef


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProvider:
    """
    DNS gcp upbound io v1beta1 record set spec for provider

    Attributes
    ----------
    managedZone : str, default is Undefined, optional
        The name of the zone in which this record set will
        reside.
    managedZoneRef : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneRef, default is Undefined, optional
        managed zone ref
    managedZoneSelector : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneSelector, default is Undefined, optional
        managed zone selector
    name : str, default is Undefined, optional
        The DNS name this record set will apply to.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    routingPolicy : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0], default is Undefined, optional
        The configuration for steering traffic based on query.
        Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type.
        Structure is documented below.
    rrdatas : [str], default is Undefined, optional
        The string data for the records in this record set
        whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \" if you don't want your string to get split on spaces.g. "first255characters\" \"morecharacters").
    ttl : float, default is Undefined, optional
        The time-to-live of this record set (seconds).
    $type : str, default is Undefined, optional
        The DNS record set type.
    """


    managedZone?: str

    managedZoneRef?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneRef

    managedZoneSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneSelector

    name?: str

    project?: str

    routingPolicy?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0]

    rrdatas?: [str]

    ttl?: float

    $type?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneRef:
    """
    Reference to a ManagedZone in dns to populate managedZone.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneSelector:
    """
    Selector for a ManagedZone in dns to populate managedZone.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderManagedZoneSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0

    Attributes
    ----------
    enableGeoFencing : bool, default is Undefined, optional
        Specifies whether to enable fencing for geo queries.
    geo : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0], default is Undefined, optional
        The configuration for Geolocation based routing policy.
        Structure is document below.
    primaryBackup : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0], default is Undefined, optional
        The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy.
        Structure is document below.
    wrr : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0], default is Undefined, optional
        The configuration for Weighted Round Robin based routing policy.
        Structure is document below.
    """


    enableGeoFencing?: bool

    geo?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0]

    primaryBackup?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0]

    wrr?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 geo items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    location : str, default is Undefined, optional
        The location name defined in Google Cloud.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0]

    location?: str

    rrdatas?: [str]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 geo items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 geo items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 primary backup items0

    Attributes
    ----------
    backupGeo : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0], default is Undefined, optional
        The backup geo targets, which provide a regional failover policy for the otherwise global primary targets.
        Structure is document above.
    enableGeoFencingForBackups : bool, default is Undefined, optional
        Specifies whether to enable fencing for backup geo queries.
    primary : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0], default is Undefined, optional
        The list of global primary targets to be health checked.
        Structure is document below.
    trickleRatio : float, default is Undefined, optional
        Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.
    """


    backupGeo?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0]

    enableGeoFencingForBackups?: bool

    primary?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0]

    trickleRatio?: float


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 primary backup items0 backup geo items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    location : str, default is Undefined, optional
        The location name defined in Google Cloud.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0]

    location?: str

    rrdatas?: [str]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 primary backup items0 backup geo items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 primary backup items0 backup geo items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 primary backup items0 primary items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 primary backup items0 primary items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipAddressRef : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelector, default is Undefined, optional
        ip address selector
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    networkUrlRef : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    projectRef : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRef, default is Undefined, optional
        project ref
    projectSelector : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelector, default is Undefined, optional
        project selector
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    regionRef : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRef, default is Undefined, optional
        region ref
    regionSelector : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelector, default is Undefined, optional
        region selector
    """


    ipAddress?: str

    ipAddressRef?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRef

    ipAddressSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelector

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    networkUrlRef?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRef

    networkUrlSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelector

    port?: str

    project?: str

    projectRef?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRef

    projectSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelector

    region?: str

    regionRef?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRef

    regionSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelector


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRef:
    """
    Reference to a ForwardingRule in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelector:
    """
    Selector for a ForwardingRule in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRef:
    """
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelector:
    """
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRef:
    """
    Reference to a ForwardingRule in compute to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelector:
    """
    Selector for a ForwardingRule in compute to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRef:
    """
    Reference to a ForwardingRule in compute to populate region.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelector:
    """
    Selector for a ForwardingRule in compute to populate region.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 wrr items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    weight : float, default is Undefined, optional
        The ratio of traffic routed to the target.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0]

    rrdatas?: [str]

    weight?: float


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 wrr items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecForProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec for provider routing policy items0 wrr items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    managedZone : str, default is Undefined, optional
        The name of the zone in which this record set will
        reside.
    managedZoneRef : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneRef, default is Undefined, optional
        managed zone ref
    managedZoneSelector : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneSelector, default is Undefined, optional
        managed zone selector
    name : str, default is Undefined, optional
        The DNS name this record set will apply to.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    routingPolicy : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0], default is Undefined, optional
        The configuration for steering traffic based on query.
        Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type.
        Structure is documented below.
    rrdatas : [str], default is Undefined, optional
        The string data for the records in this record set
        whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \" if you don't want your string to get split on spaces.g. "first255characters\" \"morecharacters").
    ttl : float, default is Undefined, optional
        The time-to-live of this record set (seconds).
    $type : str, default is Undefined, optional
        The DNS record set type.
    """


    managedZone?: str

    managedZoneRef?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneRef

    managedZoneSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneSelector

    name?: str

    project?: str

    routingPolicy?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0]

    rrdatas?: [str]

    ttl?: float

    $type?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneRef:
    """
    Reference to a ManagedZone in dns to populate managedZone.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneSelector:
    """
    Selector for a ManagedZone in dns to populate managedZone.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderManagedZoneSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0

    Attributes
    ----------
    enableGeoFencing : bool, default is Undefined, optional
        Specifies whether to enable fencing for geo queries.
    geo : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0], default is Undefined, optional
        The configuration for Geolocation based routing policy.
        Structure is document below.
    primaryBackup : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0], default is Undefined, optional
        The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy.
        Structure is document below.
    wrr : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0], default is Undefined, optional
        The configuration for Weighted Round Robin based routing policy.
        Structure is document below.
    """


    enableGeoFencing?: bool

    geo?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0]

    primaryBackup?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0]

    wrr?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 geo items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    location : str, default is Undefined, optional
        The location name defined in Google Cloud.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0]

    location?: str

    rrdatas?: [str]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 geo items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 geo items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 primary backup items0

    Attributes
    ----------
    backupGeo : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0], default is Undefined, optional
        The backup geo targets, which provide a regional failover policy for the otherwise global primary targets.
        Structure is document above.
    enableGeoFencingForBackups : bool, default is Undefined, optional
        Specifies whether to enable fencing for backup geo queries.
    primary : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0], default is Undefined, optional
        The list of global primary targets to be health checked.
        Structure is document below.
    trickleRatio : float, default is Undefined, optional
        Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.
    """


    backupGeo?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0]

    enableGeoFencingForBackups?: bool

    primary?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0]

    trickleRatio?: float


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 primary backup items0 backup geo items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    location : str, default is Undefined, optional
        The location name defined in Google Cloud.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0]

    location?: str

    rrdatas?: [str]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 primary backup items0 backup geo items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 primary backup items0 backup geo items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 primary backup items0 primary items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 primary backup items0 primary items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipAddressRef : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelector, default is Undefined, optional
        ip address selector
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    networkUrlRef : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRef, default is Undefined, optional
        network Url ref
    networkUrlSelector : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelector, default is Undefined, optional
        network Url selector
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    projectRef : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRef, default is Undefined, optional
        project ref
    projectSelector : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelector, default is Undefined, optional
        project selector
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    regionRef : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRef, default is Undefined, optional
        region ref
    regionSelector : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelector, default is Undefined, optional
        region selector
    """


    ipAddress?: str

    ipAddressRef?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRef

    ipAddressSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelector

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    networkUrlRef?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRef

    networkUrlSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelector

    port?: str

    project?: str

    projectRef?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRef

    projectSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelector

    region?: str

    regionRef?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRef

    regionSelector?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelector


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRef:
    """
    Reference to a ForwardingRule in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelector:
    """
    Selector for a ForwardingRule in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0IPAddressSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRef:
    """
    Reference to a Network in compute to populate networkUrl.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelector:
    """
    Selector for a Network in compute to populate networkUrl.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0NetworkURLSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRef:
    """
    Reference to a ForwardingRule in compute to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelector:
    """
    Selector for a ForwardingRule in compute to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0ProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRef:
    """
    Reference to a ForwardingRule in compute to populate region.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelector:
    """
    Selector for a ForwardingRule in compute to populate region.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelectorPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0RegionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 wrr items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    weight : float, default is Undefined, optional
        The ratio of traffic routed to the target.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0]

    rrdatas?: [str]

    weight?: float


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 wrr items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetSpecInitProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set spec init provider routing policy items0 wrr items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecProviderConfigRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToConfigRef

    metadata?: DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToMetadata

    name: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToConfigRefPolicy


schema DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSGcpUpboundIoV1beta1RecordSetSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DNSGcpUpboundIoV1beta1RecordSetSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DNSGcpUpboundIoV1beta1RecordSetStatus:
    """
    RecordSetStatus defines the observed state of RecordSet.

    Attributes
    ----------
    atProvider : DNSGcpUpboundIoV1beta1RecordSetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DNSGcpUpboundIoV1beta1RecordSetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DNSGcpUpboundIoV1beta1RecordSetStatusAtProvider

    conditions?: [DNSGcpUpboundIoV1beta1RecordSetStatusConditionsItems0]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProvider:
    """
    DNS gcp upbound io v1beta1 record set status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/managedZones/{{zone}}/rrsets/{{name}}/{{type}}
    managedZone : str, default is Undefined, optional
        The name of the zone in which this record set will
        reside.
    name : str, default is Undefined, optional
        The DNS name this record set will apply to.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    routingPolicy : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0], default is Undefined, optional
        The configuration for steering traffic based on query.
        Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type.
        Structure is documented below.
    rrdatas : [str], default is Undefined, optional
        The string data for the records in this record set
        whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \" if you don't want your string to get split on spaces.g. "first255characters\" \"morecharacters").
    ttl : float, default is Undefined, optional
        The time-to-live of this record set (seconds).
    $type : str, default is Undefined, optional
        The DNS record set type.
    """


    id?: str

    managedZone?: str

    name?: str

    project?: str

    routingPolicy?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0]

    rrdatas?: [str]

    ttl?: float

    $type?: str


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0

    Attributes
    ----------
    enableGeoFencing : bool, default is Undefined, optional
        Specifies whether to enable fencing for geo queries.
    geo : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0], default is Undefined, optional
        The configuration for Geolocation based routing policy.
        Structure is document below.
    primaryBackup : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0], default is Undefined, optional
        The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy.
        Structure is document below.
    wrr : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0], default is Undefined, optional
        The configuration for Weighted Round Robin based routing policy.
        Structure is document below.
    """


    enableGeoFencing?: bool

    geo?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0]

    primaryBackup?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0]

    wrr?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 geo items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    location : str, default is Undefined, optional
        The location name defined in Google Cloud.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0]

    location?: str

    rrdatas?: [str]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 geo items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0GeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 geo items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 primary backup items0

    Attributes
    ----------
    backupGeo : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0], default is Undefined, optional
        The backup geo targets, which provide a regional failover policy for the otherwise global primary targets.
        Structure is document above.
    enableGeoFencingForBackups : bool, default is Undefined, optional
        Specifies whether to enable fencing for backup geo queries.
    primary : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0], default is Undefined, optional
        The list of global primary targets to be health checked.
        Structure is document below.
    trickleRatio : float, default is Undefined, optional
        Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.
    """


    backupGeo?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0]

    enableGeoFencingForBackups?: bool

    primary?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0]

    trickleRatio?: float


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 primary backup items0 backup geo items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    location : str, default is Undefined, optional
        The location name defined in Google Cloud.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0]

    location?: str

    rrdatas?: [str]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 primary backup items0 backup geo items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0BackupGeoItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 primary backup items0 backup geo items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 primary backup items0 primary items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0PrimaryBackupItems0PrimaryItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 primary backup items0 primary items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 wrr items0

    Attributes
    ----------
    healthCheckedTargets : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0], default is Undefined, optional
        The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set.
        Structure is document below.
    rrdatas : [str], default is Undefined, optional
        Same as rrdatas above.
    weight : float, default is Undefined, optional
        The ratio of traffic routed to the target.
    """


    healthCheckedTargets?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0]

    rrdatas?: [str]

    weight?: float


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 wrr items0 health checked targets items0

    Attributes
    ----------
    internalLoadBalancers : [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0], default is Undefined, optional
        The list of internal load balancers to health check.
        Structure is document below.
    """


    internalLoadBalancers?: [DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0]


schema DNSGcpUpboundIoV1beta1RecordSetStatusAtProviderRoutingPolicyItems0WrrItems0HealthCheckedTargetsItems0InternalLoadBalancersItems0:
    """
    DNS gcp upbound io v1beta1 record set status at provider routing policy items0 wrr items0 health checked targets items0 internal load balancers items0

    Attributes
    ----------
    ipAddress : str, default is Undefined, optional
        The frontend IP address of the load balancer.
    ipProtocol : str, default is Undefined, optional
        The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: ["tcp", "udp"]
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. This value is case-sensitive. Possible values: ["regionalL4ilb", "regionalL7ilb", "globalL7ilb"]
    networkUrl : str, default is Undefined, optional
        The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.
    port : str, default is Undefined, optional
        The configured port of the load balancer.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the load balancer. Only needed for regional load balancers.
    """


    ipAddress?: str

    ipProtocol?: str

    loadBalancerType?: str

    networkUrl?: str

    port?: str

    project?: str

    region?: str


schema DNSGcpUpboundIoV1beta1RecordSetStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


