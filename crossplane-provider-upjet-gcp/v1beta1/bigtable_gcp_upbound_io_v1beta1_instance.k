"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API. Creates a Google Bigtable instance.

    Attributes
    ----------
    apiVersion : str, default is "bigtable.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BigtableGcpUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : BigtableGcpUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "bigtable.gcp.upbound.io/v1beta1" = "bigtable.gcp.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: BigtableGcpUpboundIoV1beta1InstanceSpec

    status?: BigtableGcpUpboundIoV1beta1InstanceStatus


schema BigtableGcpUpboundIoV1beta1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BigtableGcpUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : BigtableGcpUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BigtableGcpUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BigtableGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BigtableGcpUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: BigtableGcpUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BigtableGcpUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BigtableGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema BigtableGcpUpboundIoV1beta1InstanceSpecForProvider:
    """
    bigtable gcp upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    cluster : [BigtableGcpUpboundIoV1beta1InstanceSpecForProviderClusterItems0], default is Undefined, optional
        A block of cluster configuration options. This can be specified at least once, and up
        to as many as possible within 8 cloud regions. Removing the field entirely from the config will cause the provider
        to default to the backend value. See structure below.
    deletionProtection : bool, default is Undefined, optional
        deletion protection
    displayName : str, default is Undefined, optional
        The human-readable display name of the Bigtable instance. Defaults to the instance name.
    instanceType : str, default is Undefined, optional
        The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
        It is recommended to leave this field unspecified since the distinction between "DEVELOPMENT" and "PRODUCTION" instances is going away,
        and all instances will become "PRODUCTION" instances. This means that new and existing "DEVELOPMENT" instances will be converted to
        "PRODUCTION" instances. It is recommended for users to use "PRODUCTION" instances in any case, since a 1-node "PRODUCTION" instance
        is functionally identical to a "DEVELOPMENT" instance, but without the accompanying restrictions.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to the resource. Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    """


    cluster?: [BigtableGcpUpboundIoV1beta1InstanceSpecForProviderClusterItems0]

    deletionProtection?: bool

    displayName?: str

    instanceType?: str

    labels?: {str:str}

    project?: str


schema BigtableGcpUpboundIoV1beta1InstanceSpecForProviderClusterItems0:
    """
    bigtable gcp upbound io v1beta1 instance spec for provider cluster items0

    Attributes
    ----------
    autoscalingConfig : [BigtableGcpUpboundIoV1beta1InstanceSpecForProviderClusterItems0AutoscalingConfigItems0], default is Undefined, optional
        Autoscaling config for the cluster, contains the following arguments:
    clusterId : str, default is Undefined, optional
        The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
    kmsKeyName : str, default is Undefined, optional
        Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
    numNodes : float, default is Undefined, optional
        The number of nodes in the cluster.
        If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
    storageType : str, default is Undefined, optional
        The storage type to use. One of "SSD" or
        "HDD". Defaults to "SSD".
    zone : str, default is Undefined, optional
        The zone to create the Cloud Bigtable cluster in. If it not
        specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
        Bigtable instances are noted on the Cloud Bigtable locations page.
    """


    autoscalingConfig?: [BigtableGcpUpboundIoV1beta1InstanceSpecForProviderClusterItems0AutoscalingConfigItems0]

    clusterId?: str

    kmsKeyName?: str

    numNodes?: float

    storageType?: str

    zone?: str


schema BigtableGcpUpboundIoV1beta1InstanceSpecForProviderClusterItems0AutoscalingConfigItems0:
    """
    bigtable gcp upbound io v1beta1 instance spec for provider cluster items0 autoscaling config items0

    Attributes
    ----------
    cpuTarget : float, default is Undefined, optional
        The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
    maxNodes : float, default is Undefined, optional
        The maximum number of nodes for autoscaling.
    minNodes : float, default is Undefined, optional
        The minimum number of nodes for autoscaling.
    storageTarget : float, default is Undefined, optional
        The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
    """


    cpuTarget?: float

    maxNodes?: float

    minNodes?: float

    storageTarget?: float


schema BigtableGcpUpboundIoV1beta1InstanceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cluster : [BigtableGcpUpboundIoV1beta1InstanceSpecInitProviderClusterItems0], default is Undefined, optional
        A block of cluster configuration options. This can be specified at least once, and up
        to as many as possible within 8 cloud regions. Removing the field entirely from the config will cause the provider
        to default to the backend value. See structure below.
    deletionProtection : bool, default is Undefined, optional
        deletion protection
    displayName : str, default is Undefined, optional
        The human-readable display name of the Bigtable instance. Defaults to the instance name.
    instanceType : str, default is Undefined, optional
        The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
        It is recommended to leave this field unspecified since the distinction between "DEVELOPMENT" and "PRODUCTION" instances is going away,
        and all instances will become "PRODUCTION" instances. This means that new and existing "DEVELOPMENT" instances will be converted to
        "PRODUCTION" instances. It is recommended for users to use "PRODUCTION" instances in any case, since a 1-node "PRODUCTION" instance
        is functionally identical to a "DEVELOPMENT" instance, but without the accompanying restrictions.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to the resource. Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    """


    cluster?: [BigtableGcpUpboundIoV1beta1InstanceSpecInitProviderClusterItems0]

    deletionProtection?: bool

    displayName?: str

    instanceType?: str

    labels?: {str:str}

    project?: str


schema BigtableGcpUpboundIoV1beta1InstanceSpecInitProviderClusterItems0:
    """
    bigtable gcp upbound io v1beta1 instance spec init provider cluster items0

    Attributes
    ----------
    autoscalingConfig : [BigtableGcpUpboundIoV1beta1InstanceSpecInitProviderClusterItems0AutoscalingConfigItems0], default is Undefined, optional
        Autoscaling config for the cluster, contains the following arguments:
    clusterId : str, default is Undefined, optional
        The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
    kmsKeyName : str, default is Undefined, optional
        Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
    numNodes : float, default is Undefined, optional
        The number of nodes in the cluster.
        If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
    storageType : str, default is Undefined, optional
        The storage type to use. One of "SSD" or
        "HDD". Defaults to "SSD".
    zone : str, default is Undefined, optional
        The zone to create the Cloud Bigtable cluster in. If it not
        specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
        Bigtable instances are noted on the Cloud Bigtable locations page.
    """


    autoscalingConfig?: [BigtableGcpUpboundIoV1beta1InstanceSpecInitProviderClusterItems0AutoscalingConfigItems0]

    clusterId?: str

    kmsKeyName?: str

    numNodes?: float

    storageType?: str

    zone?: str


schema BigtableGcpUpboundIoV1beta1InstanceSpecInitProviderClusterItems0AutoscalingConfigItems0:
    """
    bigtable gcp upbound io v1beta1 instance spec init provider cluster items0 autoscaling config items0

    Attributes
    ----------
    cpuTarget : float, default is Undefined, optional
        The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
    maxNodes : float, default is Undefined, optional
        The maximum number of nodes for autoscaling.
    minNodes : float, default is Undefined, optional
        The minimum number of nodes for autoscaling.
    storageTarget : float, default is Undefined, optional
        The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
    """


    cpuTarget?: float

    maxNodes?: float

    minNodes?: float

    storageTarget?: float


schema BigtableGcpUpboundIoV1beta1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema BigtableGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BigtableGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BigtableGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BigtableGcpUpboundIoV1beta1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : BigtableGcpUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BigtableGcpUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: BigtableGcpUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [BigtableGcpUpboundIoV1beta1InstanceStatusConditionsItems0]


schema BigtableGcpUpboundIoV1beta1InstanceStatusAtProvider:
    """
    bigtable gcp upbound io v1beta1 instance status at provider

    Attributes
    ----------
    cluster : [BigtableGcpUpboundIoV1beta1InstanceStatusAtProviderClusterItems0], default is Undefined, optional
        A block of cluster configuration options. This can be specified at least once, and up
        to as many as possible within 8 cloud regions. Removing the field entirely from the config will cause the provider
        to default to the backend value. See structure below.
    deletionProtection : bool, default is Undefined, optional
        deletion protection
    displayName : str, default is Undefined, optional
        The human-readable display name of the Bigtable instance. Defaults to the instance name.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/instances/{{name}}
    instanceType : str, default is Undefined, optional
        The instance type to create. One of "DEVELOPMENT" or "PRODUCTION". Defaults to "PRODUCTION".
        It is recommended to leave this field unspecified since the distinction between "DEVELOPMENT" and "PRODUCTION" instances is going away,
        and all instances will become "PRODUCTION" instances. This means that new and existing "DEVELOPMENT" instances will be converted to
        "PRODUCTION" instances. It is recommended for users to use "PRODUCTION" instances in any case, since a 1-node "PRODUCTION" instance
        is functionally identical to a "DEVELOPMENT" instance, but without the accompanying restrictions.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to the resource. Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs. If it
        is not provided, the provider project is used.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource and default labels configured on the provider.
    """


    cluster?: [BigtableGcpUpboundIoV1beta1InstanceStatusAtProviderClusterItems0]

    deletionProtection?: bool

    displayName?: str

    effectiveLabels?: {str:str}

    id?: str

    instanceType?: str

    labels?: {str:str}

    project?: str

    terraformLabels?: {str:str}


schema BigtableGcpUpboundIoV1beta1InstanceStatusAtProviderClusterItems0:
    """
    bigtable gcp upbound io v1beta1 instance status at provider cluster items0

    Attributes
    ----------
    autoscalingConfig : [BigtableGcpUpboundIoV1beta1InstanceStatusAtProviderClusterItems0AutoscalingConfigItems0], default is Undefined, optional
        Autoscaling config for the cluster, contains the following arguments:
    clusterId : str, default is Undefined, optional
        The ID of the Cloud Bigtable cluster. Must be 6-30 characters and must only contain hyphens, lowercase letters and numbers.
    kmsKeyName : str, default is Undefined, optional
        Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the cloudkms.cryptoKeyEncrypterDecrypter role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster.
    numNodes : float, default is Undefined, optional
        The number of nodes in the cluster.
        If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
    state : str, default is Undefined, optional
        describes the current state of the cluster.
    storageType : str, default is Undefined, optional
        The storage type to use. One of "SSD" or
        "HDD". Defaults to "SSD".
    zone : str, default is Undefined, optional
        The zone to create the Cloud Bigtable cluster in. If it not
        specified, the provider zone is used. Each cluster must have a different zone in the same region. Zones that support
        Bigtable instances are noted on the Cloud Bigtable locations page.
    """


    autoscalingConfig?: [BigtableGcpUpboundIoV1beta1InstanceStatusAtProviderClusterItems0AutoscalingConfigItems0]

    clusterId?: str

    kmsKeyName?: str

    numNodes?: float

    state?: str

    storageType?: str

    zone?: str


schema BigtableGcpUpboundIoV1beta1InstanceStatusAtProviderClusterItems0AutoscalingConfigItems0:
    """
    bigtable gcp upbound io v1beta1 instance status at provider cluster items0 autoscaling config items0

    Attributes
    ----------
    cpuTarget : float, default is Undefined, optional
        The target CPU utilization for autoscaling, in percentage. Must be between 10 and 80.
    maxNodes : float, default is Undefined, optional
        The maximum number of nodes for autoscaling.
    minNodes : float, default is Undefined, optional
        The minimum number of nodes for autoscaling.
    storageTarget : float, default is Undefined, optional
        The target storage utilization for autoscaling, in GB, for each node in a cluster. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16 TiB) for an HDD cluster. If not set, whatever is already set for the cluster will not change, or if the cluster is just being created, it will use the default value of 2560 for SSD clusters and 8192 for HDD clusters.
    """


    cpuTarget?: float

    maxNodes?: float

    minNodes?: float

    storageTarget?: float


schema BigtableGcpUpboundIoV1beta1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


