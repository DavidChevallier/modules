"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    """
    Cluster is the Schema for the Clusters API. Manages a Cloud Dataproc cluster resource.

    Attributes
    ----------
    apiVersion : str, default is "dataproc.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DataprocGcpUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : DataprocGcpUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "dataproc.gcp.upbound.io/v1beta1" = "dataproc.gcp.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: DataprocGcpUpboundIoV1beta1ClusterSpec

    status?: DataprocGcpUpboundIoV1beta1ClusterStatus


schema DataprocGcpUpboundIoV1beta1ClusterSpec:
    """
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DataprocGcpUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : DataprocGcpUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DataprocGcpUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DataprocGcpUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DataprocGcpUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: DataprocGcpUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DataprocGcpUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DataprocGcpUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProvider:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    clusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0], default is Undefined, optional
        Allows you to configure various aspects of the cluster.
        Structure defined below.
    gracefulDecommissionTimeout : str, default is Undefined, optional
        Does not affect auto scaling decomissioning from an autoscaling policy.
        Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress.
        Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs).
        Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of
        Duration).
        Only supported on Dataproc image versions 1.2 and higher.
        For more context see the docs
    labels : {str:str}, default is Undefined, optional
        Note: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field effective_labels for all of the labels present on the resource.
    name : str, default is Undefined, optional
        The name of the cluster, unique within the project and
        zone.
    project : str, default is Undefined, optional
        The ID of the project in which the cluster will exist. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region in which the cluster and associated nodes will be created in.
        Defaults to global.
    virtualClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0], default is Undefined, optional
        Allows you to configure a virtual Dataproc on GKE cluster.
        Structure defined below.
    """


    clusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0]

    gracefulDecommissionTimeout?: str

    labels?: {str:str}

    name?: str

    project?: str

    region?: str

    virtualClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0

    Attributes
    ----------
    autoscalingConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AutoscalingConfigItems0], default is Undefined, optional
        The autoscaling policy config associated with the cluster.
        Note that once set, if autoscaling_config is the only field set in cluster_config, it can
        only be removed by setting policy_uri = "", rather than removing the whole block.
        Structure defined below.
    auxiliaryNodeGroups : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0], default is Undefined, optional
        A Dataproc NodeGroup resource is a group of Dataproc cluster nodes that execute an assigned role.
        Structure defined below.
    dataprocMetricConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0DataprocMetricConfigItems0], default is Undefined, optional
        The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
        Structure defined below.
    encryptionConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0EncryptionConfigItems0], default is Undefined, optional
        The Customer managed encryption keys settings for the cluster.
        Structure defined below.
    endpointConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0EndpointConfigItems0], default is Undefined, optional
        The config settings for port access on the cluster.
        Structure defined below.
    gceClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0], default is Undefined, optional
        Common config settings for resources of Google Compute Engine cluster
        instances, applicable to all instances in the cluster. Structure defined below.
    initializationAction : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0InitializationActionItems0], default is Undefined, optional
        Commands to execute on each node after config is completed.
        You can specify multiple versions of these. Structure defined below.
    lifecycleConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0LifecycleConfigItems0], default is Undefined, optional
        The settings for auto deletion cluster schedule.
        Structure defined below.
    masterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the master instances
        in a cluster. Structure defined below.
    metastoreConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MetastoreConfigItems0], default is Undefined, optional
        The config setting for metastore service with the cluster.
        Structure defined below.
    preemptibleWorkerConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the additional
        instances in a cluster. Structure defined below.
    securityConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SecurityConfigItems0], default is Undefined, optional
        Security related configuration. Structure defined below.
    softwareConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SoftwareConfigItems0], default is Undefined, optional
        The config settings for software inside the cluster.
        Structure defined below.
    stagingBucket : str, default is Undefined, optional
        The Cloud Storage staging bucket used to stage files,
        such as Hadoop jars, between client machines and the cluster.
        Note: If you don't explicitly specify a staging_bucket
        then GCP will auto create / assign one for you. However, you are not guaranteed
        an auto generated bucket which is solely dedicated to your cluster; it may be shared
        with other clusters in the same region/zone also choosing to use the auto generation
        option.
    tempBucket : str, default is Undefined, optional
        The Cloud Storage temp bucket used to store ephemeral cluster
        and jobs data, such as Spark and MapReduce history files.
        Note: If you don't explicitly specify a temp_bucket then GCP will auto create / assign one for you.
    workerConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the worker instances
        in a cluster. Structure defined below.
    """


    autoscalingConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AutoscalingConfigItems0]

    auxiliaryNodeGroups?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0]

    dataprocMetricConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0DataprocMetricConfigItems0]

    encryptionConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0EncryptionConfigItems0]

    endpointConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0EndpointConfigItems0]

    gceClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0]

    initializationAction?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0InitializationActionItems0]

    lifecycleConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0LifecycleConfigItems0]

    masterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0]

    metastoreConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MetastoreConfigItems0]

    preemptibleWorkerConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0]

    securityConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SecurityConfigItems0]

    softwareConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SoftwareConfigItems0]

    stagingBucket?: str

    tempBucket?: str

    workerConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AutoscalingConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 autoscaling config items0

    Attributes
    ----------
    policyUri : str, default is Undefined, optional
        The autoscaling policy used by the cluster.
    """


    policyUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 auxiliary node groups items0

    Attributes
    ----------
    nodeGroup : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0], default is Undefined, optional
        Node group configuration.
    nodeGroupId : str, default is Undefined, optional
        node group Id
    """


    nodeGroup?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0]

    nodeGroupId?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 auxiliary node groups items0 node group items0

    Attributes
    ----------
    nodeGroupConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0], default is Undefined, optional
        The node group instance group configuration.
    roles : [str], default is Undefined, optional
        The roles associated with the GKE node pool.
        One of "DEFAULT", "CONTROLLER", "SPARK_DRIVER" or "SPARK_EXECUTOR".
    """


    nodeGroupConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0]

    roles?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    minCpuPlatform : str, default is Undefined, optional
        Minimum CPU platform to be used by this instance.
        The instance may be scheduled on the specified or a newer CPU platform.
        Specify the friendly names of CPU platforms, such as "Intel Haswell" or "Intel Sandy Bridge".
    numInstances : float, default is Undefined, optional
        Specifies the number of master nodes to create.
        Please set a number greater than 0. Node Group must have at least 1 instance.
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0]

    machineType?: str

    minCpuPlatform?: str

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0DataprocMetricConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 dataproc metric config items0

    Attributes
    ----------
    metrics : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0], default is Undefined, optional
        Metrics sources to enable.
    """


    metrics?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 dataproc metric config items0 metrics items0

    Attributes
    ----------
    metricOverrides : [str], default is Undefined, optional
        One or more [available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) to collect for the metric course.
    metricSource : str, default is Undefined, optional
        A source for the collection of Dataproc OSS metrics (see available OSS metrics).
    """


    metricOverrides?: [str]

    metricSource?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0EncryptionConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 encryption config items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS key name to use for PD disk encryption for
        all instances in the cluster.
    """


    kmsKeyName?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0EndpointConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 endpoint config items0

    Attributes
    ----------
    enableHttpPortAccess : bool, default is Undefined, optional
        The flag to enable http access to specific ports
        on the cluster from external sources (aka Component Gateway). Defaults to false.
    """


    enableHttpPortAccess?: bool


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 gce cluster config items0

    Attributes
    ----------
    internalIpOnly : bool, default is Undefined, optional
        By default, clusters are not restricted to internal IP addresses,
        and will have ephemeral external IP addresses assigned to each instance. If set to true, all
        instances in the cluster will only have internal IP addresses. Note: Private Google Access
        (also known as privateIpGoogleAccess) must be enabled on the subnetwork that the cluster
        will be launched in.
    metadata : {str:str}, default is Undefined, optional
        A map of the Compute Engine metadata entries to add to all instances
        (see Project and instance metadata).
    network : str, default is Undefined, optional
        The name or self_link of the Google Compute Engine
        network to the cluster will be part of. Conflicts with subnetwork.
        If neither is specified, this defaults to the "default" network.
    nodeGroupAffinity : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0], default is Undefined, optional
        Node Group Affinity for sole-tenant clusters.
    reservationAffinity : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0], default is Undefined, optional
        Reservation Affinity for consuming zonal reservation.
    serviceAccount : str, default is Undefined, optional
        The service account to be used by the Node VMs.
        If not specified, the "default" service account is used.
    serviceAccountRef : DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountScopes : [str], default is Undefined, optional
        The set of Google API scopes
        to be made available on all of the node VMs under the service_account
        specified. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
    serviceAccountSelector : DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelector, default is Undefined, optional
        service account selector
    shieldedInstanceConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        Shielded Instance Config for clusters using Compute Engine Shielded VMs.
    subnetwork : str, default is Undefined, optional
        The name or self_link of the Google Compute Engine
        subnetwork the cluster will be part of. Conflicts with network.
    tags : [str], default is Undefined, optional
        The list of instance tags applied to instances in the cluster.
        Tags are used to identify valid sources or targets for network firewalls.
    zone : str, default is Undefined, optional
        The GCP zone where your data is stored and used (i.e. where
        the master and the worker nodes will be created in). If region is set to 'global' (default)
        then zone is mandatory, otherwise GCP is able to make use of Auto Zone Placement
        to determine this automatically for you.
        Note: This setting additionally determines and restricts
        which computing resources are available for use with other configs such as
        cluster_config.master_config.machine_type and cluster_config.worker_config.machine_type.
    """


    internalIpOnly?: bool

    metadata?: {str:str}

    network?: str

    nodeGroupAffinity?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0]

    reservationAffinity?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0]

    serviceAccount?: str

    serviceAccountRef?: DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRef

    serviceAccountScopes?: [str]

    serviceAccountSelector?: DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelector

    shieldedInstanceConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0]

    subnetwork?: str

    tags?: [str]

    zone?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 gce cluster config items0 node group affinity items0

    Attributes
    ----------
    nodeGroupUri : str, default is Undefined, optional
        The URI of a sole-tenant node group resource that the cluster will be created on.
    """


    nodeGroupUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 gce cluster config items0 reservation affinity items0

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        Corresponds to the type of reservation consumption.
    key : str, default is Undefined, optional
        Corresponds to the label key of reservation resource.
    values : [str], default is Undefined, optional
        Corresponds to the label values of reservation resource.
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRefPolicy


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelectorPolicy


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 gce cluster config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Defines whether instances have integrity monitoring enabled.
    enableSecureBoot : bool, default is Undefined, optional
        Defines whether instances have Secure Boot enabled.
    enableVtpm : bool, default is Undefined, optional
        Defines whether instances have the vTPM enabled.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0InitializationActionItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 initialization action items0

    Attributes
    ----------
    script : str, default is Undefined, optional
        The script to be executed during initialization of the cluster.
        The script must be a GCS file with a gs:// prefix.
    timeoutSec : float, default is Undefined, optional
        The maximum duration (in seconds) which script is
        allowed to take to execute its action. GCP will default to a predetermined
        computed value if not set (currently 300).
    """


    script?: str

    timeoutSec?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0LifecycleConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 lifecycle config items0

    Attributes
    ----------
    autoDeleteTime : str, default is Undefined, optional
        The time when cluster will be auto-deleted.
        A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
        Example: "2014-10-02T15:01:23.045123456Z".
    idleDeleteTtl : str, default is Undefined, optional
        The duration to keep the cluster alive while idling
        (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
    """


    autoDeleteTime?: str

    idleDeleteTtl?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 master config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    imageUri : str, default is Undefined, optional
        The URI for the image to use for this worker.  See the guide
        for more information.
    machineType : str, default is Undefined, optional
        The name of a Google Compute Engine machine type
        to create for the master. If not specified, GCP will default to a predetermined
        computed value (currently n1-standard-4).
    minCpuPlatform : str, default is Undefined, optional
        The name of a minimum generation of CPU family
        for the master. If not specified, GCP will default to a predetermined computed value
        for each zone. See the guide
        for details about which CPU families are available (and defaulted) for each zone.
    numInstances : float, default is Undefined, optional
        Specifies the number of master nodes to create.
        If not specified, GCP will default to a predetermined computed value (currently 1).
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0]

    imageUri?: str

    machineType?: str

    minCpuPlatform?: str

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 master config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 master config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0MetastoreConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 metastore config items0

    Attributes
    ----------
    dataprocMetastoreService : str, default is Undefined, optional
        Resource name of an existing Dataproc Metastore service.
    """


    dataprocMetastoreService?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 preemptible worker config items0

    Attributes
    ----------
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    instanceFlexibilityPolicy : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0], default is Undefined, optional
        Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
    numInstances : float, default is Undefined, optional
        Specifies the number of preemptible nodes to create.
        Defaults to 0.
    preemptibility : str, default is Undefined, optional
        Specifies the preemptibility of the secondary workers. The default value is PREEMPTIBLE
        Accepted values are:
    """


    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0]

    instanceFlexibilityPolicy?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0]

    numInstances?: float

    preemptibility?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 preemptible worker config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 preemptible worker config items0 instance flexibility policy items0

    Attributes
    ----------
    instanceSelectionList : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0], default is Undefined, optional
        List of instance selection options that the group will use when creating new VMs.
    """


    instanceSelectionList?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 preemptible worker config items0 instance flexibility policy items0 instance selection list items0

    Attributes
    ----------
    machineTypes : [str], default is Undefined, optional
        Full machine-type names, e.g. "n1-standard-16".
    rank : float, default is Undefined, optional
        Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
    """


    machineTypes?: [str]

    rank?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SecurityConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 security config items0

    Attributes
    ----------
    kerberosConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0], default is Undefined, optional
        Kerberos Configuration
    """


    kerberosConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 security config items0 kerberos config items0

    Attributes
    ----------
    crossRealmTrustAdminServer : str, default is Undefined, optional
        The admin server (IP or hostname) for the
        remote trusted realm in a cross realm trust relationship.
    crossRealmTrustKdc : str, default is Undefined, optional
        The KDC (IP or hostname) for the
        remote trusted realm in a cross realm trust relationship.
    crossRealmTrustRealm : str, default is Undefined, optional
        The remote realm the Dataproc on-cluster KDC will
        trust, should the user enable cross realm trust.
    crossRealmTrustSharedPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS
        encrypted file containing the shared password between the on-cluster Kerberos realm
        and the remote trusted realm, in a cross realm trust relationship.
    enableKerberos : bool, default is Undefined, optional
        Flag to indicate whether to Kerberize the cluster.
    kdcDbKeyUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the master key of the KDC database.
    keyPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the password to the user provided key. For the self-signed certificate, this password
        is generated by Dataproc.
    keystorePasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the password to the user provided keystore. For the self-signed certificated, the password
        is generated by Dataproc.
    keystoreUri : str, default is Undefined, optional
        The Cloud Storage URI of the keystore file used for SSL encryption.
        If not provided, Dataproc will provide a self-signed certificate.
    kmsKeyUri : str, default is Undefined, optional
        The URI of the KMS key used to encrypt various sensitive files.
    realm : str, default is Undefined, optional
        The name of the on-cluster Kerberos realm. If not specified, the
        uppercased domain of hostnames will be the realm.
    rootPrincipalPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file
        containing the root principal password.
    tgtLifetimeHours : float, default is Undefined, optional
        The lifetime of the ticket granting ticket, in hours.
    truststorePasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file
        containing the password to the user provided truststore. For the self-signed
        certificate, this password is generated by Dataproc.
    truststoreUri : str, default is Undefined, optional
        The Cloud Storage URI of the truststore file used for
        SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
    """


    crossRealmTrustAdminServer?: str

    crossRealmTrustKdc?: str

    crossRealmTrustRealm?: str

    crossRealmTrustSharedPasswordUri?: str

    enableKerberos?: bool

    kdcDbKeyUri?: str

    keyPasswordUri?: str

    keystorePasswordUri?: str

    keystoreUri?: str

    kmsKeyUri?: str

    realm?: str

    rootPrincipalPasswordUri?: str

    tgtLifetimeHours?: float

    truststorePasswordUri?: str

    truststoreUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0SoftwareConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 software config items0

    Attributes
    ----------
    imageVersion : str, default is Undefined, optional
        The Cloud Dataproc image version to use
        for the cluster - this controls the sets of software versions
        installed onto the nodes when you create clusters. If not specified, defaults to the
        latest version. For a list of valid versions see
        Cloud Dataproc versions
    optionalComponents : [str], default is Undefined, optional
        The set of optional components to activate on the cluster. See Available Optional Components.
    overrideProperties : {str:str}, default is Undefined, optional
        A list of override and additional properties (key/value pairs)
        used to modify various aspects of the common configuration files used when creating
        a cluster. For a list of valid properties please see
        Cluster properties
    """


    imageVersion?: str

    optionalComponents?: [str]

    overrideProperties?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 worker config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    imageUri : str, default is Undefined, optional
        The URI for the image to use for this worker.  See the guide
        for more information.
    machineType : str, default is Undefined, optional
        The name of a Google Compute Engine machine type
        to create for the worker nodes. If not specified, GCP will default to a predetermined
        computed value (currently n1-standard-4).
    minCpuPlatform : str, default is Undefined, optional
        The name of a minimum generation of CPU family
        for the master. If not specified, GCP will default to a predetermined computed value
        for each zone. See the guide
        for details about which CPU families are available (and defaulted) for each zone.
    minNumInstances : float, default is Undefined, optional
        The minimum number of primary worker instances to create.  If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.
    numInstances : float, default is Undefined, optional
        Specifies the number of worker nodes to create.
        If not specified, GCP will default to a predetermined computed value (currently 2).
        There is currently a beta feature which allows you to run a
        Single Node Cluster.
        In order to take advantage of this you need to set
        "dataproc:dataproc.allow.zero.workers" = "true" in
        cluster_config.software_config.properties
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0]

    imageUri?: str

    machineType?: str

    minCpuPlatform?: str

    minNumInstances?: float

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 worker config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider cluster config items0 worker config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0

    Attributes
    ----------
    auxiliaryServicesConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0], default is Undefined, optional
        Configuration of auxiliary services used by this cluster.
        Structure defined below.
    kubernetesClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0], default is Undefined, optional
        The configuration for running the Dataproc cluster on Kubernetes.
        Structure defined below.
    stagingBucket : str, default is Undefined, optional
        The Cloud Storage staging bucket used to stage files,
        such as Hadoop jars, between client machines and the cluster.
        Note: If you don't explicitly specify a staging_bucket
        then GCP will auto create / assign one for you. However, you are not guaranteed
        an auto generated bucket which is solely dedicated to your cluster; it may be shared
        with other clusters in the same region/zone also choosing to use the auto generation
        option.
    """


    auxiliaryServicesConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0]

    kubernetesClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0]

    stagingBucket?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 auxiliary services config items0

    Attributes
    ----------
    metastoreConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0], default is Undefined, optional
        The config setting for metastore service with the cluster.
        Structure defined below.
    sparkHistoryServerConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0], default is Undefined, optional
        The Spark History Server configuration for the workload.
    """


    metastoreConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0]

    sparkHistoryServerConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 auxiliary services config items0 metastore config items0

    Attributes
    ----------
    dataprocMetastoreService : str, default is Undefined, optional
        Resource name of an existing Dataproc Metastore service.
    """


    dataprocMetastoreService?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 auxiliary services config items0 spark history server config items0

    Attributes
    ----------
    dataprocCluster : str, default is Undefined, optional
        Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.
    """


    dataprocCluster?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0

    Attributes
    ----------
    gkeClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0], default is Undefined, optional
        The configuration for running the Dataproc cluster on GKE.
    kubernetesNamespace : str, default is Undefined, optional
        A namespace within the Kubernetes cluster to deploy into.
        If this namespace does not exist, it is created.
        If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
        If not specified, the name of the Dataproc Cluster is used.
    kubernetesSoftwareConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0], default is Undefined, optional
        The software configuration for this Dataproc cluster running on Kubernetes.
    """


    gkeClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0]

    kubernetesNamespace?: str

    kubernetesSoftwareConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0

    Attributes
    ----------
    gkeClusterTarget : str, default is Undefined, optional
        A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster
        (the GKE cluster can be zonal or regional)
    nodePoolTarget : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0], default is Undefined, optional
        GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT
        GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget.
        Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
    """


    gkeClusterTarget?: str

    nodePoolTarget?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0

    Attributes
    ----------
    nodePool : str, default is Undefined, optional
        The target GKE node pool.
    nodePoolConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0], default is Undefined, optional
        (Input only) The configuration for the GKE node pool.
        If specified, Dataproc attempts to create a node pool with the specified shape.
        If one with the same name already exists, it is verified against all specified fields.
        If a field differs, the virtual cluster creation will fail.
    roles : [str], default is Undefined, optional
        The roles associated with the GKE node pool.
        One of "DEFAULT", "CONTROLLER", "SPARK_DRIVER" or "SPARK_EXECUTOR".
    """


    nodePool?: str

    nodePoolConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0]

    roles?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0

    Attributes
    ----------
    autoscaling : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0], default is Undefined, optional
        The autoscaler configuration for this node pool.
        The autoscaler is enabled only when a valid configuration is present.
    config : [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0], default is Undefined, optional
        The node pool configuration.
    locations : [str], default is Undefined, optional
        The list of Compute Engine zones where node pool nodes associated
        with a Dataproc on GKE virtual cluster will be located.
    """


    autoscaling?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0]

    config?: [DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0]

    locations?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0 autoscaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        The maximum number of nodes in the node pool. Must be >= minNodeCount, and must be > 0.
    minNodeCount : float, default is Undefined, optional
        The minimum number of nodes in the node pool. Must be >= 0 and <= maxNodeCount.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0 config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        The number of local SSD disks to attach to the node,
        which is limited by the maximum number of disks allowable per zone.
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    minCpuPlatform : str, default is Undefined, optional
        Minimum CPU platform to be used by this instance.
        The instance may be scheduled on the specified or a newer CPU platform.
        Specify the friendly names of CPU platforms, such as "Intel Haswell" or "Intel Sandy Bridge".
    preemptible : bool, default is Undefined, optional
        Whether the nodes are created as preemptible VM instances.
        Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the
        CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
    spot : bool, default is Undefined, optional
        Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
    """


    localSsdCount?: float

    machineType?: str

    minCpuPlatform?: str

    preemptible?: bool

    spot?: bool


schema DataprocGcpUpboundIoV1beta1ClusterSpecForProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec for provider virtual cluster config items0 kubernetes cluster config items0 kubernetes software config items0

    Attributes
    ----------
    componentVersion : {str:str}, default is Undefined, optional
        The components that should be installed in this Dataproc cluster. The key must be a string from the
        KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
    properties : {str:str}, default is Undefined, optional
        The properties to set on daemon config files. Property keys are specified in prefix:property format,
        for example spark:spark.kubernetes.container.image.
    """


    componentVersion?: {str:str}

    properties?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    clusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0], default is Undefined, optional
        Allows you to configure various aspects of the cluster.
        Structure defined below.
    gracefulDecommissionTimeout : str, default is Undefined, optional
        Does not affect auto scaling decomissioning from an autoscaling policy.
        Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress.
        Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs).
        Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of
        Duration).
        Only supported on Dataproc image versions 1.2 and higher.
        For more context see the docs
    labels : {str:str}, default is Undefined, optional
        Note: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field effective_labels for all of the labels present on the resource.
    name : str, default is Undefined, optional
        The name of the cluster, unique within the project and
        zone.
    project : str, default is Undefined, optional
        The ID of the project in which the cluster will exist. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region in which the cluster and associated nodes will be created in.
        Defaults to global.
    virtualClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0], default is Undefined, optional
        Allows you to configure a virtual Dataproc on GKE cluster.
        Structure defined below.
    """


    clusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0]

    gracefulDecommissionTimeout?: str

    labels?: {str:str}

    name?: str

    project?: str

    region?: str

    virtualClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0

    Attributes
    ----------
    autoscalingConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AutoscalingConfigItems0], default is Undefined, optional
        The autoscaling policy config associated with the cluster.
        Note that once set, if autoscaling_config is the only field set in cluster_config, it can
        only be removed by setting policy_uri = "", rather than removing the whole block.
        Structure defined below.
    auxiliaryNodeGroups : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0], default is Undefined, optional
        A Dataproc NodeGroup resource is a group of Dataproc cluster nodes that execute an assigned role.
        Structure defined below.
    dataprocMetricConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0DataprocMetricConfigItems0], default is Undefined, optional
        The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
        Structure defined below.
    encryptionConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0EncryptionConfigItems0], default is Undefined, optional
        The Customer managed encryption keys settings for the cluster.
        Structure defined below.
    endpointConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0EndpointConfigItems0], default is Undefined, optional
        The config settings for port access on the cluster.
        Structure defined below.
    gceClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0], default is Undefined, optional
        Common config settings for resources of Google Compute Engine cluster
        instances, applicable to all instances in the cluster. Structure defined below.
    initializationAction : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0InitializationActionItems0], default is Undefined, optional
        Commands to execute on each node after config is completed.
        You can specify multiple versions of these. Structure defined below.
    lifecycleConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0LifecycleConfigItems0], default is Undefined, optional
        The settings for auto deletion cluster schedule.
        Structure defined below.
    masterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the master instances
        in a cluster. Structure defined below.
    metastoreConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MetastoreConfigItems0], default is Undefined, optional
        The config setting for metastore service with the cluster.
        Structure defined below.
    preemptibleWorkerConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the additional
        instances in a cluster. Structure defined below.
    securityConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SecurityConfigItems0], default is Undefined, optional
        Security related configuration. Structure defined below.
    softwareConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SoftwareConfigItems0], default is Undefined, optional
        The config settings for software inside the cluster.
        Structure defined below.
    stagingBucket : str, default is Undefined, optional
        The Cloud Storage staging bucket used to stage files,
        such as Hadoop jars, between client machines and the cluster.
        Note: If you don't explicitly specify a staging_bucket
        then GCP will auto create / assign one for you. However, you are not guaranteed
        an auto generated bucket which is solely dedicated to your cluster; it may be shared
        with other clusters in the same region/zone also choosing to use the auto generation
        option.
    tempBucket : str, default is Undefined, optional
        The Cloud Storage temp bucket used to store ephemeral cluster
        and jobs data, such as Spark and MapReduce history files.
        Note: If you don't explicitly specify a temp_bucket then GCP will auto create / assign one for you.
    workerConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the worker instances
        in a cluster. Structure defined below.
    """


    autoscalingConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AutoscalingConfigItems0]

    auxiliaryNodeGroups?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0]

    dataprocMetricConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0DataprocMetricConfigItems0]

    encryptionConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0EncryptionConfigItems0]

    endpointConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0EndpointConfigItems0]

    gceClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0]

    initializationAction?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0InitializationActionItems0]

    lifecycleConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0LifecycleConfigItems0]

    masterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0]

    metastoreConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MetastoreConfigItems0]

    preemptibleWorkerConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0]

    securityConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SecurityConfigItems0]

    softwareConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SoftwareConfigItems0]

    stagingBucket?: str

    tempBucket?: str

    workerConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AutoscalingConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 autoscaling config items0

    Attributes
    ----------
    policyUri : str, default is Undefined, optional
        The autoscaling policy used by the cluster.
    """


    policyUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 auxiliary node groups items0

    Attributes
    ----------
    nodeGroup : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0], default is Undefined, optional
        Node group configuration.
    nodeGroupId : str, default is Undefined, optional
        node group Id
    """


    nodeGroup?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0]

    nodeGroupId?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 auxiliary node groups items0 node group items0

    Attributes
    ----------
    nodeGroupConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0], default is Undefined, optional
        The node group instance group configuration.
    roles : [str], default is Undefined, optional
        The roles associated with the GKE node pool.
        One of "DEFAULT", "CONTROLLER", "SPARK_DRIVER" or "SPARK_EXECUTOR".
    """


    nodeGroupConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0]

    roles?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    minCpuPlatform : str, default is Undefined, optional
        Minimum CPU platform to be used by this instance.
        The instance may be scheduled on the specified or a newer CPU platform.
        Specify the friendly names of CPU platforms, such as "Intel Haswell" or "Intel Sandy Bridge".
    numInstances : float, default is Undefined, optional
        Specifies the number of master nodes to create.
        Please set a number greater than 0. Node Group must have at least 1 instance.
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0]

    machineType?: str

    minCpuPlatform?: str

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0DataprocMetricConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 dataproc metric config items0

    Attributes
    ----------
    metrics : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0], default is Undefined, optional
        Metrics sources to enable.
    """


    metrics?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 dataproc metric config items0 metrics items0

    Attributes
    ----------
    metricOverrides : [str], default is Undefined, optional
        One or more [available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) to collect for the metric course.
    metricSource : str, default is Undefined, optional
        A source for the collection of Dataproc OSS metrics (see available OSS metrics).
    """


    metricOverrides?: [str]

    metricSource?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0EncryptionConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 encryption config items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS key name to use for PD disk encryption for
        all instances in the cluster.
    """


    kmsKeyName?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0EndpointConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 endpoint config items0

    Attributes
    ----------
    enableHttpPortAccess : bool, default is Undefined, optional
        The flag to enable http access to specific ports
        on the cluster from external sources (aka Component Gateway). Defaults to false.
    """


    enableHttpPortAccess?: bool


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 gce cluster config items0

    Attributes
    ----------
    internalIpOnly : bool, default is Undefined, optional
        By default, clusters are not restricted to internal IP addresses,
        and will have ephemeral external IP addresses assigned to each instance. If set to true, all
        instances in the cluster will only have internal IP addresses. Note: Private Google Access
        (also known as privateIpGoogleAccess) must be enabled on the subnetwork that the cluster
        will be launched in.
    metadata : {str:str}, default is Undefined, optional
        A map of the Compute Engine metadata entries to add to all instances
        (see Project and instance metadata).
    network : str, default is Undefined, optional
        The name or self_link of the Google Compute Engine
        network to the cluster will be part of. Conflicts with subnetwork.
        If neither is specified, this defaults to the "default" network.
    nodeGroupAffinity : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0], default is Undefined, optional
        Node Group Affinity for sole-tenant clusters.
    reservationAffinity : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0], default is Undefined, optional
        Reservation Affinity for consuming zonal reservation.
    serviceAccount : str, default is Undefined, optional
        The service account to be used by the Node VMs.
        If not specified, the "default" service account is used.
    serviceAccountRef : DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountScopes : [str], default is Undefined, optional
        The set of Google API scopes
        to be made available on all of the node VMs under the service_account
        specified. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
    serviceAccountSelector : DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelector, default is Undefined, optional
        service account selector
    shieldedInstanceConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        Shielded Instance Config for clusters using Compute Engine Shielded VMs.
    subnetwork : str, default is Undefined, optional
        The name or self_link of the Google Compute Engine
        subnetwork the cluster will be part of. Conflicts with network.
    tags : [str], default is Undefined, optional
        The list of instance tags applied to instances in the cluster.
        Tags are used to identify valid sources or targets for network firewalls.
    zone : str, default is Undefined, optional
        The GCP zone where your data is stored and used (i.e. where
        the master and the worker nodes will be created in). If region is set to 'global' (default)
        then zone is mandatory, otherwise GCP is able to make use of Auto Zone Placement
        to determine this automatically for you.
        Note: This setting additionally determines and restricts
        which computing resources are available for use with other configs such as
        cluster_config.master_config.machine_type and cluster_config.worker_config.machine_type.
    """


    internalIpOnly?: bool

    metadata?: {str:str}

    network?: str

    nodeGroupAffinity?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0]

    reservationAffinity?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0]

    serviceAccount?: str

    serviceAccountRef?: DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRef

    serviceAccountScopes?: [str]

    serviceAccountSelector?: DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelector

    shieldedInstanceConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0]

    subnetwork?: str

    tags?: [str]

    zone?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 gce cluster config items0 node group affinity items0

    Attributes
    ----------
    nodeGroupUri : str, default is Undefined, optional
        The URI of a sole-tenant node group resource that the cluster will be created on.
    """


    nodeGroupUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 gce cluster config items0 reservation affinity items0

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        Corresponds to the type of reservation consumption.
    key : str, default is Undefined, optional
        Corresponds to the label key of reservation resource.
    values : [str], default is Undefined, optional
        Corresponds to the label values of reservation resource.
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRefPolicy


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelectorPolicy


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ServiceAccountSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 gce cluster config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Defines whether instances have integrity monitoring enabled.
    enableSecureBoot : bool, default is Undefined, optional
        Defines whether instances have Secure Boot enabled.
    enableVtpm : bool, default is Undefined, optional
        Defines whether instances have the vTPM enabled.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0InitializationActionItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 initialization action items0

    Attributes
    ----------
    script : str, default is Undefined, optional
        The script to be executed during initialization of the cluster.
        The script must be a GCS file with a gs:// prefix.
    timeoutSec : float, default is Undefined, optional
        The maximum duration (in seconds) which script is
        allowed to take to execute its action. GCP will default to a predetermined
        computed value if not set (currently 300).
    """


    script?: str

    timeoutSec?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0LifecycleConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 lifecycle config items0

    Attributes
    ----------
    autoDeleteTime : str, default is Undefined, optional
        The time when cluster will be auto-deleted.
        A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
        Example: "2014-10-02T15:01:23.045123456Z".
    idleDeleteTtl : str, default is Undefined, optional
        The duration to keep the cluster alive while idling
        (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
    """


    autoDeleteTime?: str

    idleDeleteTtl?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 master config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    imageUri : str, default is Undefined, optional
        The URI for the image to use for this worker.  See the guide
        for more information.
    machineType : str, default is Undefined, optional
        The name of a Google Compute Engine machine type
        to create for the master. If not specified, GCP will default to a predetermined
        computed value (currently n1-standard-4).
    minCpuPlatform : str, default is Undefined, optional
        The name of a minimum generation of CPU family
        for the master. If not specified, GCP will default to a predetermined computed value
        for each zone. See the guide
        for details about which CPU families are available (and defaulted) for each zone.
    numInstances : float, default is Undefined, optional
        Specifies the number of master nodes to create.
        If not specified, GCP will default to a predetermined computed value (currently 1).
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0]

    imageUri?: str

    machineType?: str

    minCpuPlatform?: str

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 master config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 master config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0MetastoreConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 metastore config items0

    Attributes
    ----------
    dataprocMetastoreService : str, default is Undefined, optional
        Resource name of an existing Dataproc Metastore service.
    """


    dataprocMetastoreService?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 preemptible worker config items0

    Attributes
    ----------
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    instanceFlexibilityPolicy : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0], default is Undefined, optional
        Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
    numInstances : float, default is Undefined, optional
        Specifies the number of preemptible nodes to create.
        Defaults to 0.
    preemptibility : str, default is Undefined, optional
        Specifies the preemptibility of the secondary workers. The default value is PREEMPTIBLE
        Accepted values are:
    """


    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0]

    instanceFlexibilityPolicy?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0]

    numInstances?: float

    preemptibility?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 preemptible worker config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 preemptible worker config items0 instance flexibility policy items0

    Attributes
    ----------
    instanceSelectionList : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0], default is Undefined, optional
        List of instance selection options that the group will use when creating new VMs.
    """


    instanceSelectionList?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 preemptible worker config items0 instance flexibility policy items0 instance selection list items0

    Attributes
    ----------
    machineTypes : [str], default is Undefined, optional
        Full machine-type names, e.g. "n1-standard-16".
    rank : float, default is Undefined, optional
        Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
    """


    machineTypes?: [str]

    rank?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SecurityConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 security config items0

    Attributes
    ----------
    kerberosConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0], default is Undefined, optional
        Kerberos Configuration
    """


    kerberosConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 security config items0 kerberos config items0

    Attributes
    ----------
    crossRealmTrustAdminServer : str, default is Undefined, optional
        The admin server (IP or hostname) for the
        remote trusted realm in a cross realm trust relationship.
    crossRealmTrustKdc : str, default is Undefined, optional
        The KDC (IP or hostname) for the
        remote trusted realm in a cross realm trust relationship.
    crossRealmTrustRealm : str, default is Undefined, optional
        The remote realm the Dataproc on-cluster KDC will
        trust, should the user enable cross realm trust.
    crossRealmTrustSharedPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS
        encrypted file containing the shared password between the on-cluster Kerberos realm
        and the remote trusted realm, in a cross realm trust relationship.
    enableKerberos : bool, default is Undefined, optional
        Flag to indicate whether to Kerberize the cluster.
    kdcDbKeyUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the master key of the KDC database.
    keyPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the password to the user provided key. For the self-signed certificate, this password
        is generated by Dataproc.
    keystorePasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the password to the user provided keystore. For the self-signed certificated, the password
        is generated by Dataproc.
    keystoreUri : str, default is Undefined, optional
        The Cloud Storage URI of the keystore file used for SSL encryption.
        If not provided, Dataproc will provide a self-signed certificate.
    kmsKeyUri : str, default is Undefined, optional
        The URI of the KMS key used to encrypt various sensitive files.
    realm : str, default is Undefined, optional
        The name of the on-cluster Kerberos realm. If not specified, the
        uppercased domain of hostnames will be the realm.
    rootPrincipalPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file
        containing the root principal password.
    tgtLifetimeHours : float, default is Undefined, optional
        The lifetime of the ticket granting ticket, in hours.
    truststorePasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file
        containing the password to the user provided truststore. For the self-signed
        certificate, this password is generated by Dataproc.
    truststoreUri : str, default is Undefined, optional
        The Cloud Storage URI of the truststore file used for
        SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
    """


    crossRealmTrustAdminServer?: str

    crossRealmTrustKdc?: str

    crossRealmTrustRealm?: str

    crossRealmTrustSharedPasswordUri?: str

    enableKerberos?: bool

    kdcDbKeyUri?: str

    keyPasswordUri?: str

    keystorePasswordUri?: str

    keystoreUri?: str

    kmsKeyUri?: str

    realm?: str

    rootPrincipalPasswordUri?: str

    tgtLifetimeHours?: float

    truststorePasswordUri?: str

    truststoreUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0SoftwareConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 software config items0

    Attributes
    ----------
    imageVersion : str, default is Undefined, optional
        The Cloud Dataproc image version to use
        for the cluster - this controls the sets of software versions
        installed onto the nodes when you create clusters. If not specified, defaults to the
        latest version. For a list of valid versions see
        Cloud Dataproc versions
    optionalComponents : [str], default is Undefined, optional
        The set of optional components to activate on the cluster. See Available Optional Components.
    overrideProperties : {str:str}, default is Undefined, optional
        A list of override and additional properties (key/value pairs)
        used to modify various aspects of the common configuration files used when creating
        a cluster. For a list of valid properties please see
        Cluster properties
    """


    imageVersion?: str

    optionalComponents?: [str]

    overrideProperties?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 worker config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    imageUri : str, default is Undefined, optional
        The URI for the image to use for this worker.  See the guide
        for more information.
    machineType : str, default is Undefined, optional
        The name of a Google Compute Engine machine type
        to create for the worker nodes. If not specified, GCP will default to a predetermined
        computed value (currently n1-standard-4).
    minCpuPlatform : str, default is Undefined, optional
        The name of a minimum generation of CPU family
        for the master. If not specified, GCP will default to a predetermined computed value
        for each zone. See the guide
        for details about which CPU families are available (and defaulted) for each zone.
    minNumInstances : float, default is Undefined, optional
        The minimum number of primary worker instances to create.  If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.
    numInstances : float, default is Undefined, optional
        Specifies the number of worker nodes to create.
        If not specified, GCP will default to a predetermined computed value (currently 2).
        There is currently a beta feature which allows you to run a
        Single Node Cluster.
        In order to take advantage of this you need to set
        "dataproc:dataproc.allow.zero.workers" = "true" in
        cluster_config.software_config.properties
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0]

    imageUri?: str

    machineType?: str

    minCpuPlatform?: str

    minNumInstances?: float

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 worker config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider cluster config items0 worker config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0

    Attributes
    ----------
    auxiliaryServicesConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0], default is Undefined, optional
        Configuration of auxiliary services used by this cluster.
        Structure defined below.
    kubernetesClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0], default is Undefined, optional
        The configuration for running the Dataproc cluster on Kubernetes.
        Structure defined below.
    stagingBucket : str, default is Undefined, optional
        The Cloud Storage staging bucket used to stage files,
        such as Hadoop jars, between client machines and the cluster.
        Note: If you don't explicitly specify a staging_bucket
        then GCP will auto create / assign one for you. However, you are not guaranteed
        an auto generated bucket which is solely dedicated to your cluster; it may be shared
        with other clusters in the same region/zone also choosing to use the auto generation
        option.
    """


    auxiliaryServicesConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0]

    kubernetesClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0]

    stagingBucket?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 auxiliary services config items0

    Attributes
    ----------
    metastoreConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0], default is Undefined, optional
        The config setting for metastore service with the cluster.
        Structure defined below.
    sparkHistoryServerConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0], default is Undefined, optional
        The Spark History Server configuration for the workload.
    """


    metastoreConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0]

    sparkHistoryServerConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 auxiliary services config items0 metastore config items0

    Attributes
    ----------
    dataprocMetastoreService : str, default is Undefined, optional
        Resource name of an existing Dataproc Metastore service.
    """


    dataprocMetastoreService?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 auxiliary services config items0 spark history server config items0

    Attributes
    ----------
    dataprocCluster : str, default is Undefined, optional
        Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.
    """


    dataprocCluster?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0

    Attributes
    ----------
    gkeClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0], default is Undefined, optional
        The configuration for running the Dataproc cluster on GKE.
    kubernetesNamespace : str, default is Undefined, optional
        A namespace within the Kubernetes cluster to deploy into.
        If this namespace does not exist, it is created.
        If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
        If not specified, the name of the Dataproc Cluster is used.
    kubernetesSoftwareConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0], default is Undefined, optional
        The software configuration for this Dataproc cluster running on Kubernetes.
    """


    gkeClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0]

    kubernetesNamespace?: str

    kubernetesSoftwareConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0

    Attributes
    ----------
    gkeClusterTarget : str, default is Undefined, optional
        A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster
        (the GKE cluster can be zonal or regional)
    nodePoolTarget : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0], default is Undefined, optional
        GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT
        GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget.
        Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
    """


    gkeClusterTarget?: str

    nodePoolTarget?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0

    Attributes
    ----------
    nodePool : str, default is Undefined, optional
        The target GKE node pool.
    nodePoolConfig : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0], default is Undefined, optional
        (Input only) The configuration for the GKE node pool.
        If specified, Dataproc attempts to create a node pool with the specified shape.
        If one with the same name already exists, it is verified against all specified fields.
        If a field differs, the virtual cluster creation will fail.
    roles : [str], default is Undefined, optional
        The roles associated with the GKE node pool.
        One of "DEFAULT", "CONTROLLER", "SPARK_DRIVER" or "SPARK_EXECUTOR".
    """


    nodePool?: str

    nodePoolConfig?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0]

    roles?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0

    Attributes
    ----------
    autoscaling : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0], default is Undefined, optional
        The autoscaler configuration for this node pool.
        The autoscaler is enabled only when a valid configuration is present.
    config : [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0], default is Undefined, optional
        The node pool configuration.
    locations : [str], default is Undefined, optional
        The list of Compute Engine zones where node pool nodes associated
        with a Dataproc on GKE virtual cluster will be located.
    """


    autoscaling?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0]

    config?: [DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0]

    locations?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0 autoscaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        The maximum number of nodes in the node pool. Must be >= minNodeCount, and must be > 0.
    minNodeCount : float, default is Undefined, optional
        The minimum number of nodes in the node pool. Must be >= 0 and <= maxNodeCount.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0 config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        The number of local SSD disks to attach to the node,
        which is limited by the maximum number of disks allowable per zone.
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    minCpuPlatform : str, default is Undefined, optional
        Minimum CPU platform to be used by this instance.
        The instance may be scheduled on the specified or a newer CPU platform.
        Specify the friendly names of CPU platforms, such as "Intel Haswell" or "Intel Sandy Bridge".
    preemptible : bool, default is Undefined, optional
        Whether the nodes are created as preemptible VM instances.
        Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the
        CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
    spot : bool, default is Undefined, optional
        Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
    """


    localSsdCount?: float

    machineType?: str

    minCpuPlatform?: str

    preemptible?: bool

    spot?: bool


schema DataprocGcpUpboundIoV1beta1ClusterSpecInitProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster spec init provider virtual cluster config items0 kubernetes cluster config items0 kubernetes software config items0

    Attributes
    ----------
    componentVersion : {str:str}, default is Undefined, optional
        The components that should be installed in this Dataproc cluster. The key must be a string from the
        KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
    properties : {str:str}, default is Undefined, optional
        The properties to set on daemon config files. Property keys are specified in prefix:property format,
        for example spark:spark.kubernetes.container.image.
    """


    componentVersion?: {str:str}

    properties?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DataprocGcpUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DataprocGcpUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema DataprocGcpUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataprocGcpUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DataprocGcpUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DataprocGcpUpboundIoV1beta1ClusterStatus:
    """
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : DataprocGcpUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DataprocGcpUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DataprocGcpUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [DataprocGcpUpboundIoV1beta1ClusterStatusConditionsItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProvider:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    clusterConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0], default is Undefined, optional
        Allows you to configure various aspects of the cluster.
        Structure defined below.
    effectiveLabels : {str:str}, default is Undefined, optional
        (Computed) The list of labels (key/value pairs) to be applied to
        instances in the cluster. GCP generates some itself including goog-dataproc-cluster-name
        which is the name of the cluster.
    gracefulDecommissionTimeout : str, default is Undefined, optional
        Does not affect auto scaling decomissioning from an autoscaling policy.
        Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress.
        Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs).
        Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of
        Duration).
        Only supported on Dataproc image versions 1.2 and higher.
        For more context see the docs
    id : str, default is Undefined, optional
        id
    labels : {str:str}, default is Undefined, optional
        Note: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field effective_labels for all of the labels present on the resource.
    name : str, default is Undefined, optional
        The name of the cluster, unique within the project and
        zone.
    project : str, default is Undefined, optional
        The ID of the project in which the cluster will exist. If it
        is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region in which the cluster and associated nodes will be created in.
        Defaults to global.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource and default labels configured on the provider.
    virtualClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0], default is Undefined, optional
        Allows you to configure a virtual Dataproc on GKE cluster.
        Structure defined below.
    """


    clusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0]

    effectiveLabels?: {str:str}

    gracefulDecommissionTimeout?: str

    id?: str

    labels?: {str:str}

    name?: str

    project?: str

    region?: str

    terraformLabels?: {str:str}

    virtualClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0

    Attributes
    ----------
    autoscalingConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AutoscalingConfigItems0], default is Undefined, optional
        The autoscaling policy config associated with the cluster.
        Note that once set, if autoscaling_config is the only field set in cluster_config, it can
        only be removed by setting policy_uri = "", rather than removing the whole block.
        Structure defined below.
    auxiliaryNodeGroups : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0], default is Undefined, optional
        A Dataproc NodeGroup resource is a group of Dataproc cluster nodes that execute an assigned role.
        Structure defined below.
    bucket : str, default is Undefined, optional
        The name of the cloud storage bucket ultimately used to house the staging data
        for the cluster. If staging_bucket is specified, it will contain this value, otherwise
        it will be the auto generated name.
    dataprocMetricConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0DataprocMetricConfigItems0], default is Undefined, optional
        The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
        Structure defined below.
    encryptionConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0EncryptionConfigItems0], default is Undefined, optional
        The Customer managed encryption keys settings for the cluster.
        Structure defined below.
    endpointConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0EndpointConfigItems0], default is Undefined, optional
        The config settings for port access on the cluster.
        Structure defined below.
    gceClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0], default is Undefined, optional
        Common config settings for resources of Google Compute Engine cluster
        instances, applicable to all instances in the cluster. Structure defined below.
    initializationAction : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0InitializationActionItems0], default is Undefined, optional
        Commands to execute on each node after config is completed.
        You can specify multiple versions of these. Structure defined below.
    lifecycleConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0LifecycleConfigItems0], default is Undefined, optional
        The settings for auto deletion cluster schedule.
        Structure defined below.
    masterConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the master instances
        in a cluster. Structure defined below.
    metastoreConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MetastoreConfigItems0], default is Undefined, optional
        The config setting for metastore service with the cluster.
        Structure defined below.
    preemptibleWorkerConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the additional
        instances in a cluster. Structure defined below.
    securityConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SecurityConfigItems0], default is Undefined, optional
        Security related configuration. Structure defined below.
    softwareConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SoftwareConfigItems0], default is Undefined, optional
        The config settings for software inside the cluster.
        Structure defined below.
    stagingBucket : str, default is Undefined, optional
        The Cloud Storage staging bucket used to stage files,
        such as Hadoop jars, between client machines and the cluster.
        Note: If you don't explicitly specify a staging_bucket
        then GCP will auto create / assign one for you. However, you are not guaranteed
        an auto generated bucket which is solely dedicated to your cluster; it may be shared
        with other clusters in the same region/zone also choosing to use the auto generation
        option.
    tempBucket : str, default is Undefined, optional
        The Cloud Storage temp bucket used to store ephemeral cluster
        and jobs data, such as Spark and MapReduce history files.
        Note: If you don't explicitly specify a temp_bucket then GCP will auto create / assign one for you.
    workerConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0], default is Undefined, optional
        The Google Compute Engine config settings for the worker instances
        in a cluster. Structure defined below.
    """


    autoscalingConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AutoscalingConfigItems0]

    auxiliaryNodeGroups?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0]

    bucket?: str

    dataprocMetricConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0DataprocMetricConfigItems0]

    encryptionConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0EncryptionConfigItems0]

    endpointConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0EndpointConfigItems0]

    gceClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0]

    initializationAction?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0InitializationActionItems0]

    lifecycleConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0LifecycleConfigItems0]

    masterConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0]

    metastoreConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MetastoreConfigItems0]

    preemptibleWorkerConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0]

    securityConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SecurityConfigItems0]

    softwareConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SoftwareConfigItems0]

    stagingBucket?: str

    tempBucket?: str

    workerConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AutoscalingConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 autoscaling config items0

    Attributes
    ----------
    policyUri : str, default is Undefined, optional
        The autoscaling policy used by the cluster.
    """


    policyUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 auxiliary node groups items0

    Attributes
    ----------
    nodeGroup : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0], default is Undefined, optional
        Node group configuration.
    nodeGroupId : str, default is Undefined, optional
        node group Id
    """


    nodeGroup?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0]

    nodeGroupId?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 auxiliary node groups items0 node group items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the cluster, unique within the project and
        zone.
    nodeGroupConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0], default is Undefined, optional
        The node group instance group configuration.
    roles : [str], default is Undefined, optional
        The roles associated with the GKE node pool.
        One of "DEFAULT", "CONTROLLER", "SPARK_DRIVER" or "SPARK_EXECUTOR".
    """


    name?: str

    nodeGroupConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0]

    roles?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    instanceNames : [str], default is Undefined, optional
        List of worker instance names which have been assigned
        to the cluster.
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    minCpuPlatform : str, default is Undefined, optional
        Minimum CPU platform to be used by this instance.
        The instance may be scheduled on the specified or a newer CPU platform.
        Specify the friendly names of CPU platforms, such as "Intel Haswell" or "Intel Sandy Bridge".
    numInstances : float, default is Undefined, optional
        Specifies the number of master nodes to create.
        Please set a number greater than 0. Node Group must have at least 1 instance.
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0]

    instanceNames?: [str]

    machineType?: str

    minCpuPlatform?: str

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0AuxiliaryNodeGroupsItems0NodeGroupItems0NodeGroupConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 auxiliary node groups items0 node group items0 node group config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0DataprocMetricConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 dataproc metric config items0

    Attributes
    ----------
    metrics : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0], default is Undefined, optional
        Metrics sources to enable.
    """


    metrics?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0DataprocMetricConfigItems0MetricsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 dataproc metric config items0 metrics items0

    Attributes
    ----------
    metricOverrides : [str], default is Undefined, optional
        One or more [available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) to collect for the metric course.
    metricSource : str, default is Undefined, optional
        A source for the collection of Dataproc OSS metrics (see available OSS metrics).
    """


    metricOverrides?: [str]

    metricSource?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0EncryptionConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 encryption config items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        The Cloud KMS key name to use for PD disk encryption for
        all instances in the cluster.
    """


    kmsKeyName?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0EndpointConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 endpoint config items0

    Attributes
    ----------
    enableHttpPortAccess : bool, default is Undefined, optional
        The flag to enable http access to specific ports
        on the cluster from external sources (aka Component Gateway). Defaults to false.
    httpPorts : {str:str}, default is Undefined, optional
        The map of port descriptions to URLs. Will only be populated if
        enable_http_port_access is true.
    """


    enableHttpPortAccess?: bool

    httpPorts?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 gce cluster config items0

    Attributes
    ----------
    internalIpOnly : bool, default is Undefined, optional
        By default, clusters are not restricted to internal IP addresses,
        and will have ephemeral external IP addresses assigned to each instance. If set to true, all
        instances in the cluster will only have internal IP addresses. Note: Private Google Access
        (also known as privateIpGoogleAccess) must be enabled on the subnetwork that the cluster
        will be launched in.
    metadata : {str:str}, default is Undefined, optional
        A map of the Compute Engine metadata entries to add to all instances
        (see Project and instance metadata).
    network : str, default is Undefined, optional
        The name or self_link of the Google Compute Engine
        network to the cluster will be part of. Conflicts with subnetwork.
        If neither is specified, this defaults to the "default" network.
    nodeGroupAffinity : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0], default is Undefined, optional
        Node Group Affinity for sole-tenant clusters.
    reservationAffinity : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0], default is Undefined, optional
        Reservation Affinity for consuming zonal reservation.
    serviceAccount : str, default is Undefined, optional
        The service account to be used by the Node VMs.
        If not specified, the "default" service account is used.
    serviceAccountScopes : [str], default is Undefined, optional
        The set of Google API scopes
        to be made available on all of the node VMs under the service_account
        specified. Both OAuth2 URLs and gcloud
        short names are supported. To allow full access to all Cloud APIs, use the
        cloud-platform scope. See a complete list of scopes here.
    shieldedInstanceConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        Shielded Instance Config for clusters using Compute Engine Shielded VMs.
    subnetwork : str, default is Undefined, optional
        The name or self_link of the Google Compute Engine
        subnetwork the cluster will be part of. Conflicts with network.
    tags : [str], default is Undefined, optional
        The list of instance tags applied to instances in the cluster.
        Tags are used to identify valid sources or targets for network firewalls.
    zone : str, default is Undefined, optional
        The GCP zone where your data is stored and used (i.e. where
        the master and the worker nodes will be created in). If region is set to 'global' (default)
        then zone is mandatory, otherwise GCP is able to make use of Auto Zone Placement
        to determine this automatically for you.
        Note: This setting additionally determines and restricts
        which computing resources are available for use with other configs such as
        cluster_config.master_config.machine_type and cluster_config.worker_config.machine_type.
    """


    internalIpOnly?: bool

    metadata?: {str:str}

    network?: str

    nodeGroupAffinity?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0]

    reservationAffinity?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0]

    serviceAccount?: str

    serviceAccountScopes?: [str]

    shieldedInstanceConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0]

    subnetwork?: str

    tags?: [str]

    zone?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0NodeGroupAffinityItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 gce cluster config items0 node group affinity items0

    Attributes
    ----------
    nodeGroupUri : str, default is Undefined, optional
        The URI of a sole-tenant node group resource that the cluster will be created on.
    """


    nodeGroupUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0ReservationAffinityItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 gce cluster config items0 reservation affinity items0

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        Corresponds to the type of reservation consumption.
    key : str, default is Undefined, optional
        Corresponds to the label key of reservation resource.
    values : [str], default is Undefined, optional
        Corresponds to the label values of reservation resource.
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0GceClusterConfigItems0ShieldedInstanceConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 gce cluster config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Defines whether instances have integrity monitoring enabled.
    enableSecureBoot : bool, default is Undefined, optional
        Defines whether instances have Secure Boot enabled.
    enableVtpm : bool, default is Undefined, optional
        Defines whether instances have the vTPM enabled.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0InitializationActionItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 initialization action items0

    Attributes
    ----------
    script : str, default is Undefined, optional
        The script to be executed during initialization of the cluster.
        The script must be a GCS file with a gs:// prefix.
    timeoutSec : float, default is Undefined, optional
        The maximum duration (in seconds) which script is
        allowed to take to execute its action. GCP will default to a predetermined
        computed value if not set (currently 300).
    """


    script?: str

    timeoutSec?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0LifecycleConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 lifecycle config items0

    Attributes
    ----------
    autoDeleteTime : str, default is Undefined, optional
        The time when cluster will be auto-deleted.
        A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
        Example: "2014-10-02T15:01:23.045123456Z".
    idleDeleteTtl : str, default is Undefined, optional
        The duration to keep the cluster alive while idling
        (no jobs running). After this TTL, the cluster will be deleted. Valid range: [10m, 14d].
    idleStartTime : str, default is Undefined, optional
        Time when the cluster became idle
        (most recent job finished) and became eligible for deletion due to idleness.
    """


    autoDeleteTime?: str

    idleDeleteTtl?: str

    idleStartTime?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 master config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    imageUri : str, default is Undefined, optional
        The URI for the image to use for this worker.  See the guide
        for more information.
    instanceNames : [str], default is Undefined, optional
        List of worker instance names which have been assigned
        to the cluster.
    machineType : str, default is Undefined, optional
        The name of a Google Compute Engine machine type
        to create for the master. If not specified, GCP will default to a predetermined
        computed value (currently n1-standard-4).
    minCpuPlatform : str, default is Undefined, optional
        The name of a minimum generation of CPU family
        for the master. If not specified, GCP will default to a predetermined computed value
        for each zone. See the guide
        for details about which CPU families are available (and defaulted) for each zone.
    numInstances : float, default is Undefined, optional
        Specifies the number of master nodes to create.
        If not specified, GCP will default to a predetermined computed value (currently 1).
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0]

    imageUri?: str

    instanceNames?: [str]

    machineType?: str

    minCpuPlatform?: str

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 master config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MasterConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 master config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0MetastoreConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 metastore config items0

    Attributes
    ----------
    dataprocMetastoreService : str, default is Undefined, optional
        Resource name of an existing Dataproc Metastore service.
    """


    dataprocMetastoreService?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 preemptible worker config items0

    Attributes
    ----------
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    instanceFlexibilityPolicy : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0], default is Undefined, optional
        Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
    instanceNames : [str], default is Undefined, optional
        List of worker instance names which have been assigned
        to the cluster.
    numInstances : float, default is Undefined, optional
        Specifies the number of preemptible nodes to create.
        Defaults to 0.
    preemptibility : str, default is Undefined, optional
        Specifies the preemptibility of the secondary workers. The default value is PREEMPTIBLE
        Accepted values are:
    """


    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0]

    instanceFlexibilityPolicy?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0]

    instanceNames?: [str]

    numInstances?: float

    preemptibility?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 preemptible worker config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 preemptible worker config items0 instance flexibility policy items0

    Attributes
    ----------
    instanceSelectionList : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0], default is Undefined, optional
        List of instance selection options that the group will use when creating new VMs.
    instanceSelectionResults : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionResultsItems0], default is Undefined, optional
        instance selection results
    """


    instanceSelectionList?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0]

    instanceSelectionResults?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionResultsItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionListItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 preemptible worker config items0 instance flexibility policy items0 instance selection list items0

    Attributes
    ----------
    machineTypes : [str], default is Undefined, optional
        Full machine-type names, e.g. "n1-standard-16".
    rank : float, default is Undefined, optional
        Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
    """


    machineTypes?: [str]

    rank?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0PreemptibleWorkerConfigItems0InstanceFlexibilityPolicyItems0InstanceSelectionResultsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 preemptible worker config items0 instance flexibility policy items0 instance selection results items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    vmCount : float, default is Undefined, optional
        vm count
    """


    machineType?: str

    vmCount?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SecurityConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 security config items0

    Attributes
    ----------
    kerberosConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0], default is Undefined, optional
        Kerberos Configuration
    """


    kerberosConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SecurityConfigItems0KerberosConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 security config items0 kerberos config items0

    Attributes
    ----------
    crossRealmTrustAdminServer : str, default is Undefined, optional
        The admin server (IP or hostname) for the
        remote trusted realm in a cross realm trust relationship.
    crossRealmTrustKdc : str, default is Undefined, optional
        The KDC (IP or hostname) for the
        remote trusted realm in a cross realm trust relationship.
    crossRealmTrustRealm : str, default is Undefined, optional
        The remote realm the Dataproc on-cluster KDC will
        trust, should the user enable cross realm trust.
    crossRealmTrustSharedPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS
        encrypted file containing the shared password between the on-cluster Kerberos realm
        and the remote trusted realm, in a cross realm trust relationship.
    enableKerberos : bool, default is Undefined, optional
        Flag to indicate whether to Kerberize the cluster.
    kdcDbKeyUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the master key of the KDC database.
    keyPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the password to the user provided key. For the self-signed certificate, this password
        is generated by Dataproc.
    keystorePasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file containing
        the password to the user provided keystore. For the self-signed certificated, the password
        is generated by Dataproc.
    keystoreUri : str, default is Undefined, optional
        The Cloud Storage URI of the keystore file used for SSL encryption.
        If not provided, Dataproc will provide a self-signed certificate.
    kmsKeyUri : str, default is Undefined, optional
        The URI of the KMS key used to encrypt various sensitive files.
    realm : str, default is Undefined, optional
        The name of the on-cluster Kerberos realm. If not specified, the
        uppercased domain of hostnames will be the realm.
    rootPrincipalPasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file
        containing the root principal password.
    tgtLifetimeHours : float, default is Undefined, optional
        The lifetime of the ticket granting ticket, in hours.
    truststorePasswordUri : str, default is Undefined, optional
        The Cloud Storage URI of a KMS encrypted file
        containing the password to the user provided truststore. For the self-signed
        certificate, this password is generated by Dataproc.
    truststoreUri : str, default is Undefined, optional
        The Cloud Storage URI of the truststore file used for
        SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
    """


    crossRealmTrustAdminServer?: str

    crossRealmTrustKdc?: str

    crossRealmTrustRealm?: str

    crossRealmTrustSharedPasswordUri?: str

    enableKerberos?: bool

    kdcDbKeyUri?: str

    keyPasswordUri?: str

    keystorePasswordUri?: str

    keystoreUri?: str

    kmsKeyUri?: str

    realm?: str

    rootPrincipalPasswordUri?: str

    tgtLifetimeHours?: float

    truststorePasswordUri?: str

    truststoreUri?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0SoftwareConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 software config items0

    Attributes
    ----------
    imageVersion : str, default is Undefined, optional
        The Cloud Dataproc image version to use
        for the cluster - this controls the sets of software versions
        installed onto the nodes when you create clusters. If not specified, defaults to the
        latest version. For a list of valid versions see
        Cloud Dataproc versions
    optionalComponents : [str], default is Undefined, optional
        The set of optional components to activate on the cluster. See Available Optional Components.
    overrideProperties : {str:str}, default is Undefined, optional
        A list of override and additional properties (key/value pairs)
        used to modify various aspects of the common configuration files used when creating
        a cluster. For a list of valid properties please see
        Cluster properties
    properties : {str:str}, default is Undefined, optional
        The properties to set on daemon config files. Property keys are specified in prefix:property format,
        for example spark:spark.kubernetes.container.image.
    """


    imageVersion?: str

    optionalComponents?: [str]

    overrideProperties?: {str:str}

    properties?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 worker config items0

    Attributes
    ----------
    accelerators : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for these instances. Can be specified multiple times.
    diskConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0], default is Undefined, optional
        Disk Config
    imageUri : str, default is Undefined, optional
        The URI for the image to use for this worker.  See the guide
        for more information.
    instanceNames : [str], default is Undefined, optional
        List of worker instance names which have been assigned
        to the cluster.
    machineType : str, default is Undefined, optional
        The name of a Google Compute Engine machine type
        to create for the worker nodes. If not specified, GCP will default to a predetermined
        computed value (currently n1-standard-4).
    minCpuPlatform : str, default is Undefined, optional
        The name of a minimum generation of CPU family
        for the master. If not specified, GCP will default to a predetermined computed value
        for each zone. See the guide
        for details about which CPU families are available (and defaulted) for each zone.
    minNumInstances : float, default is Undefined, optional
        The minimum number of primary worker instances to create.  If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.
    numInstances : float, default is Undefined, optional
        Specifies the number of worker nodes to create.
        If not specified, GCP will default to a predetermined computed value (currently 2).
        There is currently a beta feature which allows you to run a
        Single Node Cluster.
        In order to take advantage of this you need to set
        "dataproc:dataproc.allow.zero.workers" = "true" in
        cluster_config.software_config.properties
    """


    accelerators?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0]

    diskConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0]

    imageUri?: str

    instanceNames?: [str]

    machineType?: str

    minCpuPlatform?: str

    minNumInstances?: float

    numInstances?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0AcceleratorsItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 worker config items0 accelerators items0

    Attributes
    ----------
    acceleratorCount : float, default is Undefined, optional
        The number of the accelerator cards of this type exposed to this instance. Often restricted to one of 1, 2, 4, or 8.
    acceleratorType : str, default is Undefined, optional
        The short name of the accelerator type to expose to this instance. For example, nvidia-tesla-k80.
    """


    acceleratorCount?: float

    acceleratorType?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderClusterConfigItems0WorkerConfigItems0DiskConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider cluster config items0 worker config items0 disk config items0

    Attributes
    ----------
    bootDiskSizeGb : float, default is Undefined, optional
        Size of the primary disk attached to each node, specified
        in GB. The primary disk contains the boot volume and system libraries, and the
        smallest allowed disk size is 10GB. GCP will default to a predetermined
        computed value if not set (currently 500GB). Note: If SSDs are not
        attached, it also contains the HDFS data blocks and Hadoop working directories.
    bootDiskType : str, default is Undefined, optional
        The disk type of the primary disk attached to each node.
        One of "pd-ssd" or "pd-standard". Defaults to "pd-standard".
    numLocalSsds : float, default is Undefined, optional
        The amount of local SSD disks that will be
        attached to each master cluster node. Defaults to 0.
    """


    bootDiskSizeGb?: float

    bootDiskType?: str

    numLocalSsds?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0

    Attributes
    ----------
    auxiliaryServicesConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0], default is Undefined, optional
        Configuration of auxiliary services used by this cluster.
        Structure defined below.
    kubernetesClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0], default is Undefined, optional
        The configuration for running the Dataproc cluster on Kubernetes.
        Structure defined below.
    stagingBucket : str, default is Undefined, optional
        The Cloud Storage staging bucket used to stage files,
        such as Hadoop jars, between client machines and the cluster.
        Note: If you don't explicitly specify a staging_bucket
        then GCP will auto create / assign one for you. However, you are not guaranteed
        an auto generated bucket which is solely dedicated to your cluster; it may be shared
        with other clusters in the same region/zone also choosing to use the auto generation
        option.
    """


    auxiliaryServicesConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0]

    kubernetesClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0]

    stagingBucket?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 auxiliary services config items0

    Attributes
    ----------
    metastoreConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0], default is Undefined, optional
        The config setting for metastore service with the cluster.
        Structure defined below.
    sparkHistoryServerConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0], default is Undefined, optional
        The Spark History Server configuration for the workload.
    """


    metastoreConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0]

    sparkHistoryServerConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0MetastoreConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 auxiliary services config items0 metastore config items0

    Attributes
    ----------
    dataprocMetastoreService : str, default is Undefined, optional
        Resource name of an existing Dataproc Metastore service.
    """


    dataprocMetastoreService?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0AuxiliaryServicesConfigItems0SparkHistoryServerConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 auxiliary services config items0 spark history server config items0

    Attributes
    ----------
    dataprocCluster : str, default is Undefined, optional
        Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.
    """


    dataprocCluster?: str


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0

    Attributes
    ----------
    gkeClusterConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0], default is Undefined, optional
        The configuration for running the Dataproc cluster on GKE.
    kubernetesNamespace : str, default is Undefined, optional
        A namespace within the Kubernetes cluster to deploy into.
        If this namespace does not exist, it is created.
        If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
        If not specified, the name of the Dataproc Cluster is used.
    kubernetesSoftwareConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0], default is Undefined, optional
        The software configuration for this Dataproc cluster running on Kubernetes.
    """


    gkeClusterConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0]

    kubernetesNamespace?: str

    kubernetesSoftwareConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0

    Attributes
    ----------
    gkeClusterTarget : str, default is Undefined, optional
        A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster
        (the GKE cluster can be zonal or regional)
    nodePoolTarget : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0], default is Undefined, optional
        GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT
        GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget.
        Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
    """


    gkeClusterTarget?: str

    nodePoolTarget?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0

    Attributes
    ----------
    nodePool : str, default is Undefined, optional
        The target GKE node pool.
    nodePoolConfig : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0], default is Undefined, optional
        (Input only) The configuration for the GKE node pool.
        If specified, Dataproc attempts to create a node pool with the specified shape.
        If one with the same name already exists, it is verified against all specified fields.
        If a field differs, the virtual cluster creation will fail.
    roles : [str], default is Undefined, optional
        The roles associated with the GKE node pool.
        One of "DEFAULT", "CONTROLLER", "SPARK_DRIVER" or "SPARK_EXECUTOR".
    """


    nodePool?: str

    nodePoolConfig?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0]

    roles?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0

    Attributes
    ----------
    autoscaling : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0], default is Undefined, optional
        The autoscaler configuration for this node pool.
        The autoscaler is enabled only when a valid configuration is present.
    config : [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0], default is Undefined, optional
        The node pool configuration.
    locations : [str], default is Undefined, optional
        The list of Compute Engine zones where node pool nodes associated
        with a Dataproc on GKE virtual cluster will be located.
    """


    autoscaling?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0]

    config?: [DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0]

    locations?: [str]


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0AutoscalingItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0 autoscaling items0

    Attributes
    ----------
    maxNodeCount : float, default is Undefined, optional
        The maximum number of nodes in the node pool. Must be >= minNodeCount, and must be > 0.
    minNodeCount : float, default is Undefined, optional
        The minimum number of nodes in the node pool. Must be >= 0 and <= maxNodeCount.
    """


    maxNodeCount?: float

    minNodeCount?: float


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0GkeClusterConfigItems0NodePoolTargetItems0NodePoolConfigItems0ConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0 gke cluster config items0 node pool target items0 node pool config items0 config items0

    Attributes
    ----------
    localSsdCount : float, default is Undefined, optional
        The number of local SSD disks to attach to the node,
        which is limited by the maximum number of disks allowable per zone.
    machineType : str, default is Undefined, optional
        The name of a Compute Engine machine type.
    minCpuPlatform : str, default is Undefined, optional
        Minimum CPU platform to be used by this instance.
        The instance may be scheduled on the specified or a newer CPU platform.
        Specify the friendly names of CPU platforms, such as "Intel Haswell" or "Intel Sandy Bridge".
    preemptible : bool, default is Undefined, optional
        Whether the nodes are created as preemptible VM instances.
        Preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the
        CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
    spot : bool, default is Undefined, optional
        Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
    """


    localSsdCount?: float

    machineType?: str

    minCpuPlatform?: str

    preemptible?: bool

    spot?: bool


schema DataprocGcpUpboundIoV1beta1ClusterStatusAtProviderVirtualClusterConfigItems0KubernetesClusterConfigItems0KubernetesSoftwareConfigItems0:
    """
    dataproc gcp upbound io v1beta1 cluster status at provider virtual cluster config items0 kubernetes cluster config items0 kubernetes software config items0

    Attributes
    ----------
    componentVersion : {str:str}, default is Undefined, optional
        The components that should be installed in this Dataproc cluster. The key must be a string from the
        KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
    properties : {str:str}, default is Undefined, optional
        The properties to set on daemon config files. Property keys are specified in prefix:property format,
        for example spark:spark.kubernetes.container.image.
    """


    componentVersion?: {str:str}

    properties?: {str:str}


schema DataprocGcpUpboundIoV1beta1ClusterStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


