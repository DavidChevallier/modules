"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Environment:
    """
    Environment is the Schema for the Environments API. An environment for running orchestration tasks.

    Attributes
    ----------
    apiVersion : str, default is "composer.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Environment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComposerGcpUpboundIoV1beta1EnvironmentSpec, default is Undefined, required
        spec
    status : ComposerGcpUpboundIoV1beta1EnvironmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "composer.gcp.upbound.io/v1beta1" = "composer.gcp.upbound.io/v1beta1"

    kind: "Environment" = "Environment"

    metadata?: v1.ObjectMeta

    spec: ComposerGcpUpboundIoV1beta1EnvironmentSpec

    status?: ComposerGcpUpboundIoV1beta1EnvironmentStatus


schema ComposerGcpUpboundIoV1beta1EnvironmentSpec:
    """
    EnvironmentSpec defines the desired state of Environment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProvider

    initProvider?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRef

    publishConnectionDetailsTo?: ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProvider:
    """
    composer gcp upbound io v1beta1 environment spec for provider

    Attributes
    ----------
    config : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0], default is Undefined, optional
        Configuration parameters for this environment  Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        User-defined labels for this environment. The labels map can contain
        no more than 64 entries. Entries of the labels map are UTF8 strings
        that comply with the following restrictions:
        Label keys must be between 1 and 63 characters long and must conform
        to the following regular expression: [a-z]([-a-z0-9]*[a-z0-9])?.
        Label values must be between 0 and 63 characters long and must
        conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?.
        No more than 64 labels can be associated with a given environment.
        Both keys and values must be <= 128 bytes in size.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    projectRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    region : str, default is Undefined, required
        The location or Compute Engine region for the environment.
    storageConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderStorageConfigItems0], default is Undefined, optional
        Configuration options for storage used by Composer environment. Structure is documented below.
    """


    config?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0]

    labels?: {str:str}

    project?: str

    projectRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectRef

    projectSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectSelector

    region: str

    storageConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderStorageConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0

    Attributes
    ----------
    dataRetentionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DataRetentionConfigItems0], default is Undefined, optional
        Configuration setting for airflow data rentention mechanism. Structure is
        documented below.
    databaseConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DatabaseConfigItems0], default is Undefined, optional
        The configuration settings for Cloud SQL instance used internally
        by Apache Airflow software.
    encryptionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0EncryptionConfigItems0], default is Undefined, optional
        The encryption options for the Cloud Composer environment and its
        dependencies.
    environmentSize : str, default is Undefined, optional
        The environment size controls the performance parameters of the managed
        Cloud Composer infrastructure that includes the Airflow database. Values for
        environment size are ENVIRONMENT_SIZE_SMALL, ENVIRONMENT_SIZE_MEDIUM,
        and ENVIRONMENT_SIZE_LARGE.
    maintenanceWindow : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MaintenanceWindowItems0], default is Undefined, optional
        The configuration settings for Cloud Composer maintenance windows.
    masterAuthorizedNetworksConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MasterAuthorizedNetworksConfigItems0], default is Undefined, optional
        Configuration options for the master authorized networks feature. Enabled
        master authorized networks will disallow all external traffic to access
        Kubernetes master through HTTPS except traffic from the given CIDR blocks,
        Google Compute Engine Public IPs and Google Prod IPs. Structure is
        documented below.
    nodeConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0], default is Undefined, optional
        The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
    nodeCount : float, default is Undefined, optional
        The number of nodes in the Kubernetes Engine cluster of the environment.
    privateEnvironmentConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0PrivateEnvironmentConfigItems0], default is Undefined, optional
        The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
    recoveryConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0RecoveryConfigItems0], default is Undefined, optional
        The configuration settings for recovery. Structure is documented below.
    resilienceMode : str, default is Undefined, optional
        The resilience mode states whether high resilience is enabled for
        the environment or not. Values for resilience mode are HIGH_RESILIENCE
        for high resilience and STANDARD_RESILIENCE for standard
        resilience.
    softwareConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0SoftwareConfigItems0], default is Undefined, optional
        The configuration settings for software inside the environment.  Structure is documented below.
    webServerConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerConfigItems0], default is Undefined, optional
        The configuration settings for the Airflow web server App Engine instance.
    webServerNetworkAccessControl : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerNetworkAccessControlItems0], default is Undefined, optional
        The network-level access control policy for the Airflow web server.
        If unspecified, no network-level access restrictions are applied.
    workloadsConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0], default is Undefined, optional
        The Kubernetes workloads configuration for GKE cluster associated with the
        Cloud Composer environment.
    """


    dataRetentionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DataRetentionConfigItems0]

    databaseConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DatabaseConfigItems0]

    encryptionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0EncryptionConfigItems0]

    environmentSize?: str

    maintenanceWindow?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MaintenanceWindowItems0]

    masterAuthorizedNetworksConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MasterAuthorizedNetworksConfigItems0]

    nodeConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0]

    nodeCount?: float

    privateEnvironmentConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0PrivateEnvironmentConfigItems0]

    recoveryConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0RecoveryConfigItems0]

    resilienceMode?: str

    softwareConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0SoftwareConfigItems0]

    webServerConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerConfigItems0]

    webServerNetworkAccessControl?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerNetworkAccessControlItems0]

    workloadsConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DataRetentionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 data retention config items0

    Attributes
    ----------
    taskLogsRetentionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0], default is Undefined, optional
        The configuration setting for Task Logs. Structure is
        documented below.
    """


    taskLogsRetentionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 data retention config items0 task logs retention config items0

    Attributes
    ----------
    storageMode : str, default is Undefined, optional
        The mode of storage for Airflow workers task logs. Values for storage mode are
        CLOUD_LOGGING_ONLY to only store logs in cloud logging and
        CLOUD_LOGGING_AND_CLOUD_STORAGE to store logs in cloud logging and cloud storage.
    """


    storageMode?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0DatabaseConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 database config items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    zone : str, default is Undefined, optional
        The Compute Engine zone in which to deploy the VMs running the
        Apache Airflow software, specified as the zone name or
        relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
        belong to the enclosing environment's project and region.
    """


    machineType?: str

    zone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0EncryptionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 encryption config items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Customer-managed Encryption Key available through Google's Key Management Service. It must
        be the fully qualified resource name,
        i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
    """


    kmsKeyName?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MaintenanceWindowItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 maintenance window items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        Maintenance window end time. It is used only to calculate the duration of the maintenance window.
        The value for end-time must be in the future, relative to 'start_time'.
    recurrence : str, default is Undefined, optional
        Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
        The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
        Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
    startTime : str, default is Undefined, optional
        Start time of the first recurrence of the maintenance window.
    """


    endTime?: str

    recurrence?: str

    startTime?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MasterAuthorizedNetworksConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 master authorized networks config items0

    Attributes
    ----------
    cidrBlocks : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0], default is Undefined, optional
        cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is documented below.
    enabled : bool, default is Undefined, optional
        When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
    """


    cidrBlocks?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0]

    enabled?: bool


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 master authorized networks config items0 cidr blocks items0

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr_block must be specified in CIDR notation.
    displayName : str, default is Undefined, optional
        display_name is a field for users to identify CIDR blocks.
    """


    cidrBlock?: str

    displayName?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 node config items0

    Attributes
    ----------
    diskSizeGb : float, default is Undefined, optional
        The disk size in GB used for node VMs. Minimum size is 20GB.
        If unspecified, defaults to 100GB. Cannot be updated.
    enableIpMasqAgent : bool, default is Undefined, optional
        Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines
        nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for
        all destination addresses, except between pods traffic.
        See the documentation.
    ipAllocationPolicy : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0], default is Undefined, optional
        Configuration for controlling how IPs are allocated in the GKE cluster.
        Structure is documented below.
        Cannot be updated.
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    network : str, default is Undefined, optional
        The Compute Engine network to be used for machine
        communications, specified as a self-link, relative resource name
        (for example "projects/{project}/global/networks/{network}"), by name.
    networkRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkSelector, default is Undefined, optional
        network selector
    oauthScopes : [str], default is Undefined, optional
        The set of Google API scopes to be made available on all node
        VMs. Cannot be updated. If empty, defaults to
        ["https://www.googleapis.com/auth/cloud-platform"].
    serviceAccount : str, default is Undefined, optional
        The Google Cloud Platform Service Account to be used by the
        node VMs. If a service account is not specified, the "default"
        Compute Engine service account is used. Cannot be updated. If given,
        note that the service account must have roles/composer.worker
        for any GCP resources created under the Cloud Composer Environment.
    serviceAccountRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountSelector, default is Undefined, optional
        service account selector
    subnetwork : str, default is Undefined, optional
        The Compute Engine subnetwork to be used for machine
        communications, specified as a self-link, relative resource name (for example,
        "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
        network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
    subnetworkRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkSelector, default is Undefined, optional
        subnetwork selector
    tags : [str], default is Undefined, optional
        The list of instance tags applied to all node VMs. Tags are
        used to identify valid sources or targets for network
        firewalls. Each tag within the list must comply with RFC1035.
        Cannot be updated.
    zone : str, default is Undefined, optional
        The Compute Engine zone in which to deploy the VMs running the
        Apache Airflow software, specified as the zone name or
        relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
        belong to the enclosing environment's project and region.
    """


    diskSizeGb?: float

    enableIpMasqAgent?: bool

    ipAllocationPolicy?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0]

    machineType?: str

    network?: str

    networkRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkRef

    networkSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkSelector

    oauthScopes?: [str]

    serviceAccount?: str

    serviceAccountRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountRef

    serviceAccountSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountSelector

    subnetwork?: str

    subnetworkRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkRef

    subnetworkSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkSelector

    tags?: [str]

    zone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 node config items0 IP allocation policy items0

    Attributes
    ----------
    clusterIpv4CidrBlock : str, default is Undefined, optional
        The IP address range used to allocate IP addresses to pods in the cluster.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
        Set to blank to have GKE choose a range with the default size.
        Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
        Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
        (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
        Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
    clusterSecondaryRangeName : str, default is Undefined, optional
        The name of the cluster's secondary range used to allocate IP addresses to pods.
        Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
    servicesIpv4CidrBlock : str, default is Undefined, optional
        The IP address range used to allocate IP addresses in this cluster.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
        Set to blank to have GKE choose a range with the default size.
        Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
        Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
        (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
        Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
    servicesSecondaryRangeName : str, default is Undefined, optional
        The name of the services' secondary range used to allocate IP addresses to the cluster.
        Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
    useIpAliases : bool, default is Undefined, optional
        Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
        Defaults to true if the ip_allocation_policy block is present in config.
    """


    clusterIpv4CidrBlock?: str

    clusterSecondaryRangeName?: str

    servicesIpv4CidrBlock?: str

    servicesSecondaryRangeName?: str

    useIpAliases?: bool


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0NetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0ServiceAccountSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkRef:
    """
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkSelector:
    """
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0NodeConfigItems0SubnetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0PrivateEnvironmentConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 private environment config items0

    Attributes
    ----------
    cloudComposerConnectionSubnetwork : str, default is Undefined, optional
        When specified, the environment will use Private Service Connect instead of VPC peerings to connect
        to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP
        address from this subnetwork. This field is supported for Cloud Composer environments in
        versions composer-2.*.*-airflow-*.*.* and newer.
    cloudComposerNetworkIpv4CidrBlock : str, default is Undefined, optional
        cloud composer network Ipv4 cidr block
    cloudSqlIpv4CidrBlock : str, default is Undefined, optional
        The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
    connectionType : str, default is Undefined, optional
        Mode of internal communication within the Composer environment. Must be one
        of "VPC_PEERING" or "PRIVATE_SERVICE_CONNECT".
    enablePrivateEndpoint : bool, default is Undefined, optional
        If true, access to the public endpoint of the GKE cluster is denied.
        If this field is set to true, the ip_allocation_policy.use_ip_aliases field must
        also be set to true for Cloud Composer 1 environments.
    enablePrivatelyUsedPublicIps : bool, default is Undefined, optional
        When enabled, IPs from public (non-RFC1918) ranges can be used for
        ip_allocation_policy.cluster_ipv4_cidr_block and ip_allocation_policy.service_ipv4_cidr_block.
    masterIpv4CidrBlock : str, default is Undefined, optional
        The IP range in CIDR notation to use for the hosted master network. This range is used
        for assigning internal IP addresses to the cluster master or set of masters and to the
        internal load balancer virtual IP. This range must not overlap with any other ranges
        in use within the cluster's network.
        If left blank, the default value of is used. See documentation for default values per region.
    webServerIpv4CidrBlock : str, default is Undefined, optional
        The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
    """


    cloudComposerConnectionSubnetwork?: str

    cloudComposerNetworkIpv4CidrBlock?: str

    cloudSqlIpv4CidrBlock?: str

    connectionType?: str

    enablePrivateEndpoint?: bool

    enablePrivatelyUsedPublicIps?: bool

    masterIpv4CidrBlock?: str

    webServerIpv4CidrBlock?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0RecoveryConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 recovery config items0

    Attributes
    ----------
    scheduledSnapshotsConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0], default is Undefined, optional
        The recovery configuration settings for the Cloud Composer environment.
    """


    scheduledSnapshotsConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 recovery config items0 scheduled snapshots config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
    snapshotCreationSchedule : str, default is Undefined, optional
        Snapshot schedule, in the unix-cron format.
    snapshotLocation : str, default is Undefined, optional
        The URI of a bucket folder where to save the snapshot.
    timeZone : str, default is Undefined, optional
        A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
    """


    enabled?: bool

    snapshotCreationSchedule?: str

    snapshotLocation?: str

    timeZone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0SoftwareConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 software config items0

    Attributes
    ----------
    airflowConfigOverrides : {str:str}, default is Undefined, optional
        Apache Airflow configuration properties to override. Property keys contain the section and property names,
        separated by a hyphen, for example "core-dags_are_paused_at_creation".
    envVariables : {str:str}, default is Undefined, optional
        Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
        Environment variable names must match the regular expression [a-zA-Z_][a-zA-Z0-9_]*.
        They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
        AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+), and they cannot match any of the following reserved names:
    imageVersion : str, default is Undefined, optional
        image version
    pypiPackages : {str:str}, default is Undefined, optional
        Custom Python Package Index (PyPI) packages to be installed
        in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
        version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
        pinning it to a version specifier, use the empty string as the value.
    pythonVersion : str, default is Undefined, optional
        The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
        Can be set to '2' or '3'. If not specified, the default is '3'.
    schedulerCount : float, default is Undefined, optional
        The number of schedulers for Airflow.
    """


    airflowConfigOverrides?: {str:str}

    envVariables?: {str:str}

    imageVersion?: str

    pypiPackages?: {str:str}

    pythonVersion?: str

    schedulerCount?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 web server config items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    """


    machineType?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerNetworkAccessControlItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 web server network access control items0

    Attributes
    ----------
    allowedIpRange : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0], default is Undefined, optional
        A collection of allowed IP ranges with descriptions. Structure is documented below.
    """


    allowedIpRange?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 web server network access control items0 allowed IP range items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of this ip range.
    value : str, default is Undefined, optional
        IP address or range, defined using CIDR notation, of requests that this rule applies to.
        Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334.
        IP range prefixes should be properly truncated. For example,
        1.2.3.4/24 should be truncated to 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 should be truncated to 2001:db8::/32.
    """


    description?: str

    value?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 workloads config items0

    Attributes
    ----------
    scheduler : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0SchedulerItems0], default is Undefined, optional
        Configuration for resources used by Airflow schedulers.
    triggerer : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0TriggererItems0], default is Undefined, optional
        Configuration for resources used by Airflow triggerer.
    webServer : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0WebServerItems0], default is Undefined, optional
        Configuration for resources used by Airflow web server.
    worker : [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0WorkerItems0], default is Undefined, optional
        Configuration for resources used by Airflow workers.
    """


    scheduler?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0SchedulerItems0]

    triggerer?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0TriggererItems0]

    webServer?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0WebServerItems0]

    worker?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0WorkerItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0SchedulerItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 workloads config items0 scheduler items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of Airflow triggerers.
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    count?: float

    cpu?: float

    memoryGb?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0TriggererItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 workloads config items0 triggerer items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of Airflow triggerers.
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    """


    count?: float

    cpu?: float

    memoryGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0WebServerItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 workloads config items0 web server items0

    Attributes
    ----------
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    cpu?: float

    memoryGb?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderConfigItems0WorkloadsConfigItems0WorkerItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider config items0 workloads config items0 worker items0

    Attributes
    ----------
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    maxCount : float, default is Undefined, optional
        The maximum number of Airflow workers that the environment can run. The number of workers in the
        environment does not go above this number, even if a higher number of workers is required to
        handle the load.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    minCount : float, default is Undefined, optional
        The minimum number of Airflow workers that the environment can run. The number of workers in the
        environment does not go above this number, even if a lower number of workers can handle the load.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    cpu?: float

    maxCount?: float

    memoryGb?: float

    minCount?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecForProviderStorageConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec for provider storage config items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of an existing Cloud Storage bucket to be used by the environment.
    """


    bucket?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    config : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0], default is Undefined, optional
        Configuration parameters for this environment  Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        User-defined labels for this environment. The labels map can contain
        no more than 64 entries. Entries of the labels map are UTF8 strings
        that comply with the following restrictions:
        Label keys must be between 1 and 63 characters long and must conform
        to the following regular expression: [a-z]([-a-z0-9]*[a-z0-9])?.
        Label values must be between 0 and 63 characters long and must
        conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?.
        No more than 64 labels can be associated with a given environment.
        Both keys and values must be <= 128 bytes in size.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    projectRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectSelector, default is Undefined, optional
        project selector
    storageConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderStorageConfigItems0], default is Undefined, optional
        Configuration options for storage used by Composer environment. Structure is documented below.
    """


    config?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0]

    labels?: {str:str}

    project?: str

    projectRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectRef

    projectSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectSelector

    storageConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderStorageConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0

    Attributes
    ----------
    dataRetentionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DataRetentionConfigItems0], default is Undefined, optional
        Configuration setting for airflow data rentention mechanism. Structure is
        documented below.
    databaseConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DatabaseConfigItems0], default is Undefined, optional
        The configuration settings for Cloud SQL instance used internally
        by Apache Airflow software.
    encryptionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0EncryptionConfigItems0], default is Undefined, optional
        The encryption options for the Cloud Composer environment and its
        dependencies.
    environmentSize : str, default is Undefined, optional
        The environment size controls the performance parameters of the managed
        Cloud Composer infrastructure that includes the Airflow database. Values for
        environment size are ENVIRONMENT_SIZE_SMALL, ENVIRONMENT_SIZE_MEDIUM,
        and ENVIRONMENT_SIZE_LARGE.
    maintenanceWindow : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MaintenanceWindowItems0], default is Undefined, optional
        The configuration settings for Cloud Composer maintenance windows.
    masterAuthorizedNetworksConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MasterAuthorizedNetworksConfigItems0], default is Undefined, optional
        Configuration options for the master authorized networks feature. Enabled
        master authorized networks will disallow all external traffic to access
        Kubernetes master through HTTPS except traffic from the given CIDR blocks,
        Google Compute Engine Public IPs and Google Prod IPs. Structure is
        documented below.
    nodeConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0], default is Undefined, optional
        The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
    nodeCount : float, default is Undefined, optional
        The number of nodes in the Kubernetes Engine cluster of the environment.
    privateEnvironmentConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0PrivateEnvironmentConfigItems0], default is Undefined, optional
        The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
    recoveryConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0RecoveryConfigItems0], default is Undefined, optional
        The configuration settings for recovery. Structure is documented below.
    resilienceMode : str, default is Undefined, optional
        The resilience mode states whether high resilience is enabled for
        the environment or not. Values for resilience mode are HIGH_RESILIENCE
        for high resilience and STANDARD_RESILIENCE for standard
        resilience.
    softwareConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0SoftwareConfigItems0], default is Undefined, optional
        The configuration settings for software inside the environment.  Structure is documented below.
    webServerConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerConfigItems0], default is Undefined, optional
        The configuration settings for the Airflow web server App Engine instance.
    webServerNetworkAccessControl : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerNetworkAccessControlItems0], default is Undefined, optional
        The network-level access control policy for the Airflow web server.
        If unspecified, no network-level access restrictions are applied.
    workloadsConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0], default is Undefined, optional
        The Kubernetes workloads configuration for GKE cluster associated with the
        Cloud Composer environment.
    """


    dataRetentionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DataRetentionConfigItems0]

    databaseConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DatabaseConfigItems0]

    encryptionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0EncryptionConfigItems0]

    environmentSize?: str

    maintenanceWindow?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MaintenanceWindowItems0]

    masterAuthorizedNetworksConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MasterAuthorizedNetworksConfigItems0]

    nodeConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0]

    nodeCount?: float

    privateEnvironmentConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0PrivateEnvironmentConfigItems0]

    recoveryConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0RecoveryConfigItems0]

    resilienceMode?: str

    softwareConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0SoftwareConfigItems0]

    webServerConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerConfigItems0]

    webServerNetworkAccessControl?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerNetworkAccessControlItems0]

    workloadsConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DataRetentionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 data retention config items0

    Attributes
    ----------
    taskLogsRetentionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0], default is Undefined, optional
        The configuration setting for Task Logs. Structure is
        documented below.
    """


    taskLogsRetentionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 data retention config items0 task logs retention config items0

    Attributes
    ----------
    storageMode : str, default is Undefined, optional
        The mode of storage for Airflow workers task logs. Values for storage mode are
        CLOUD_LOGGING_ONLY to only store logs in cloud logging and
        CLOUD_LOGGING_AND_CLOUD_STORAGE to store logs in cloud logging and cloud storage.
    """


    storageMode?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0DatabaseConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 database config items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    zone : str, default is Undefined, optional
        The Compute Engine zone in which to deploy the VMs running the
        Apache Airflow software, specified as the zone name or
        relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
        belong to the enclosing environment's project and region.
    """


    machineType?: str

    zone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0EncryptionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 encryption config items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Customer-managed Encryption Key available through Google's Key Management Service. It must
        be the fully qualified resource name,
        i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
    """


    kmsKeyName?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MaintenanceWindowItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 maintenance window items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        Maintenance window end time. It is used only to calculate the duration of the maintenance window.
        The value for end-time must be in the future, relative to 'start_time'.
    recurrence : str, default is Undefined, optional
        Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
        The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
        Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
    startTime : str, default is Undefined, optional
        Start time of the first recurrence of the maintenance window.
    """


    endTime?: str

    recurrence?: str

    startTime?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MasterAuthorizedNetworksConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 master authorized networks config items0

    Attributes
    ----------
    cidrBlocks : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0], default is Undefined, optional
        cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is documented below.
    enabled : bool, default is Undefined, optional
        When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
    """


    cidrBlocks?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0]

    enabled?: bool


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 master authorized networks config items0 cidr blocks items0

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr_block must be specified in CIDR notation.
    displayName : str, default is Undefined, optional
        display_name is a field for users to identify CIDR blocks.
    """


    cidrBlock?: str

    displayName?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 node config items0

    Attributes
    ----------
    diskSizeGb : float, default is Undefined, optional
        The disk size in GB used for node VMs. Minimum size is 20GB.
        If unspecified, defaults to 100GB. Cannot be updated.
    enableIpMasqAgent : bool, default is Undefined, optional
        Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines
        nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for
        all destination addresses, except between pods traffic.
        See the documentation.
    ipAllocationPolicy : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0], default is Undefined, optional
        Configuration for controlling how IPs are allocated in the GKE cluster.
        Structure is documented below.
        Cannot be updated.
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    network : str, default is Undefined, optional
        The Compute Engine network to be used for machine
        communications, specified as a self-link, relative resource name
        (for example "projects/{project}/global/networks/{network}"), by name.
    networkRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkSelector, default is Undefined, optional
        network selector
    oauthScopes : [str], default is Undefined, optional
        The set of Google API scopes to be made available on all node
        VMs. Cannot be updated. If empty, defaults to
        ["https://www.googleapis.com/auth/cloud-platform"].
    serviceAccount : str, default is Undefined, optional
        The Google Cloud Platform Service Account to be used by the
        node VMs. If a service account is not specified, the "default"
        Compute Engine service account is used. Cannot be updated. If given,
        note that the service account must have roles/composer.worker
        for any GCP resources created under the Cloud Composer Environment.
    serviceAccountRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountSelector, default is Undefined, optional
        service account selector
    subnetwork : str, default is Undefined, optional
        The Compute Engine subnetwork to be used for machine
        communications, specified as a self-link, relative resource name (for example,
        "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
        network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
    subnetworkRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    subnetworkSelector : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkSelector, default is Undefined, optional
        subnetwork selector
    tags : [str], default is Undefined, optional
        The list of instance tags applied to all node VMs. Tags are
        used to identify valid sources or targets for network
        firewalls. Each tag within the list must comply with RFC1035.
        Cannot be updated.
    zone : str, default is Undefined, optional
        The Compute Engine zone in which to deploy the VMs running the
        Apache Airflow software, specified as the zone name or
        relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
        belong to the enclosing environment's project and region.
    """


    diskSizeGb?: float

    enableIpMasqAgent?: bool

    ipAllocationPolicy?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0]

    machineType?: str

    network?: str

    networkRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkRef

    networkSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkSelector

    oauthScopes?: [str]

    serviceAccount?: str

    serviceAccountRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountRef

    serviceAccountSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountSelector

    subnetwork?: str

    subnetworkRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkRef

    subnetworkSelector?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkSelector

    tags?: [str]

    zone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 node config items0 IP allocation policy items0

    Attributes
    ----------
    clusterIpv4CidrBlock : str, default is Undefined, optional
        The IP address range used to allocate IP addresses to pods in the cluster.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
        Set to blank to have GKE choose a range with the default size.
        Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
        Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
        (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
        Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
    clusterSecondaryRangeName : str, default is Undefined, optional
        The name of the cluster's secondary range used to allocate IP addresses to pods.
        Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
    servicesIpv4CidrBlock : str, default is Undefined, optional
        The IP address range used to allocate IP addresses in this cluster.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
        Set to blank to have GKE choose a range with the default size.
        Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
        Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
        (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
        Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
    servicesSecondaryRangeName : str, default is Undefined, optional
        The name of the services' secondary range used to allocate IP addresses to the cluster.
        Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
    useIpAliases : bool, default is Undefined, optional
        Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
        Defaults to true if the ip_allocation_policy block is present in config.
    """


    clusterIpv4CidrBlock?: str

    clusterSecondaryRangeName?: str

    servicesIpv4CidrBlock?: str

    servicesSecondaryRangeName?: str

    useIpAliases?: bool


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0NetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountRef:
    """
    Reference to a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountSelector:
    """
    Selector for a ServiceAccount in cloudplatform to populate serviceAccount.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0ServiceAccountSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkRef:
    """
    Reference to a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkSelector:
    """
    Selector for a Subnetwork in compute to populate subnetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0NodeConfigItems0SubnetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0PrivateEnvironmentConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 private environment config items0

    Attributes
    ----------
    cloudComposerConnectionSubnetwork : str, default is Undefined, optional
        When specified, the environment will use Private Service Connect instead of VPC peerings to connect
        to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP
        address from this subnetwork. This field is supported for Cloud Composer environments in
        versions composer-2.*.*-airflow-*.*.* and newer.
    cloudComposerNetworkIpv4CidrBlock : str, default is Undefined, optional
        cloud composer network Ipv4 cidr block
    cloudSqlIpv4CidrBlock : str, default is Undefined, optional
        The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
    connectionType : str, default is Undefined, optional
        Mode of internal communication within the Composer environment. Must be one
        of "VPC_PEERING" or "PRIVATE_SERVICE_CONNECT".
    enablePrivateEndpoint : bool, default is Undefined, optional
        If true, access to the public endpoint of the GKE cluster is denied.
        If this field is set to true, the ip_allocation_policy.use_ip_aliases field must
        also be set to true for Cloud Composer 1 environments.
    enablePrivatelyUsedPublicIps : bool, default is Undefined, optional
        When enabled, IPs from public (non-RFC1918) ranges can be used for
        ip_allocation_policy.cluster_ipv4_cidr_block and ip_allocation_policy.service_ipv4_cidr_block.
    masterIpv4CidrBlock : str, default is Undefined, optional
        The IP range in CIDR notation to use for the hosted master network. This range is used
        for assigning internal IP addresses to the cluster master or set of masters and to the
        internal load balancer virtual IP. This range must not overlap with any other ranges
        in use within the cluster's network.
        If left blank, the default value of is used. See documentation for default values per region.
    webServerIpv4CidrBlock : str, default is Undefined, optional
        The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
    """


    cloudComposerConnectionSubnetwork?: str

    cloudComposerNetworkIpv4CidrBlock?: str

    cloudSqlIpv4CidrBlock?: str

    connectionType?: str

    enablePrivateEndpoint?: bool

    enablePrivatelyUsedPublicIps?: bool

    masterIpv4CidrBlock?: str

    webServerIpv4CidrBlock?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0RecoveryConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 recovery config items0

    Attributes
    ----------
    scheduledSnapshotsConfig : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0], default is Undefined, optional
        The recovery configuration settings for the Cloud Composer environment.
    """


    scheduledSnapshotsConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 recovery config items0 scheduled snapshots config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
    snapshotCreationSchedule : str, default is Undefined, optional
        Snapshot schedule, in the unix-cron format.
    snapshotLocation : str, default is Undefined, optional
        The URI of a bucket folder where to save the snapshot.
    timeZone : str, default is Undefined, optional
        A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
    """


    enabled?: bool

    snapshotCreationSchedule?: str

    snapshotLocation?: str

    timeZone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0SoftwareConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 software config items0

    Attributes
    ----------
    airflowConfigOverrides : {str:str}, default is Undefined, optional
        Apache Airflow configuration properties to override. Property keys contain the section and property names,
        separated by a hyphen, for example "core-dags_are_paused_at_creation".
    envVariables : {str:str}, default is Undefined, optional
        Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
        Environment variable names must match the regular expression [a-zA-Z_][a-zA-Z0-9_]*.
        They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
        AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+), and they cannot match any of the following reserved names:
    imageVersion : str, default is Undefined, optional
        image version
    pypiPackages : {str:str}, default is Undefined, optional
        Custom Python Package Index (PyPI) packages to be installed
        in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
        version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
        pinning it to a version specifier, use the empty string as the value.
    pythonVersion : str, default is Undefined, optional
        The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
        Can be set to '2' or '3'. If not specified, the default is '3'.
    schedulerCount : float, default is Undefined, optional
        The number of schedulers for Airflow.
    """


    airflowConfigOverrides?: {str:str}

    envVariables?: {str:str}

    imageVersion?: str

    pypiPackages?: {str:str}

    pythonVersion?: str

    schedulerCount?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 web server config items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    """


    machineType?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerNetworkAccessControlItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 web server network access control items0

    Attributes
    ----------
    allowedIpRange : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0], default is Undefined, optional
        A collection of allowed IP ranges with descriptions. Structure is documented below.
    """


    allowedIpRange?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 web server network access control items0 allowed IP range items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of this ip range.
    value : str, default is Undefined, optional
        IP address or range, defined using CIDR notation, of requests that this rule applies to.
        Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334.
        IP range prefixes should be properly truncated. For example,
        1.2.3.4/24 should be truncated to 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 should be truncated to 2001:db8::/32.
    """


    description?: str

    value?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 workloads config items0

    Attributes
    ----------
    scheduler : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0SchedulerItems0], default is Undefined, optional
        Configuration for resources used by Airflow schedulers.
    triggerer : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0TriggererItems0], default is Undefined, optional
        Configuration for resources used by Airflow triggerer.
    webServer : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0WebServerItems0], default is Undefined, optional
        Configuration for resources used by Airflow web server.
    worker : [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0WorkerItems0], default is Undefined, optional
        Configuration for resources used by Airflow workers.
    """


    scheduler?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0SchedulerItems0]

    triggerer?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0TriggererItems0]

    webServer?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0WebServerItems0]

    worker?: [ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0WorkerItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0SchedulerItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 workloads config items0 scheduler items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of Airflow triggerers.
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    count?: float

    cpu?: float

    memoryGb?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0TriggererItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 workloads config items0 triggerer items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of Airflow triggerers.
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    """


    count?: float

    cpu?: float

    memoryGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0WebServerItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 workloads config items0 web server items0

    Attributes
    ----------
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    cpu?: float

    memoryGb?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderConfigItems0WorkloadsConfigItems0WorkerItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider config items0 workloads config items0 worker items0

    Attributes
    ----------
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    maxCount : float, default is Undefined, optional
        The maximum number of Airflow workers that the environment can run. The number of workers in the
        environment does not go above this number, even if a higher number of workers is required to
        handle the load.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    minCount : float, default is Undefined, optional
        The minimum number of Airflow workers that the environment can run. The number of workers in the
        environment does not go above this number, even if a lower number of workers can handle the load.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    cpu?: float

    maxCount?: float

    memoryGb?: float

    minCount?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectRef:
    """
    Reference to a Project in cloudplatform to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectSelector:
    """
    Selector for a Project in cloudplatform to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectSelectorPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderProjectSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecInitProviderStorageConfigItems0:
    """
    composer gcp upbound io v1beta1 environment spec init provider storage config items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of an existing Cloud Storage bucket to be used by the environment.
    """


    bucket?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef

    metadata?: ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata

    name: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatus:
    """
    EnvironmentStatus defines the observed state of Environment.

    Attributes
    ----------
    atProvider : ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComposerGcpUpboundIoV1beta1EnvironmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProvider

    conditions?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusConditionsItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProvider:
    """
    composer gcp upbound io v1beta1 environment status at provider

    Attributes
    ----------
    config : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0], default is Undefined, optional
        Configuration parameters for this environment  Structure is documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{region}}/environments/{{name}}
    labels : {str:str}, default is Undefined, optional
        User-defined labels for this environment. The labels map can contain
        no more than 64 entries. Entries of the labels map are UTF8 strings
        that comply with the following restrictions:
        Label keys must be between 1 and 63 characters long and must conform
        to the following regular expression: [a-z]([-a-z0-9]*[a-z0-9])?.
        Label values must be between 0 and 63 characters long and must
        conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?.
        No more than 64 labels can be associated with a given environment.
        Both keys and values must be <= 128 bytes in size.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The location or Compute Engine region for the environment.
    storageConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderStorageConfigItems0], default is Undefined, optional
        Configuration options for storage used by Composer environment. Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource and default labels configured on the provider.
    """


    config?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0]

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    project?: str

    region?: str

    storageConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderStorageConfigItems0]

    terraformLabels?: {str:str}


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0

    Attributes
    ----------
    airflowUri : str, default is Undefined, optional
        The URI of the Apache Airflow Web UI hosted within this
        environment.
    dagGcsPrefix : str, default is Undefined, optional
        The Cloud Storage prefix of the DAGs for this environment.
        Although Cloud Storage objects reside in a flat namespace, a
        hierarchical file tree can be simulated using '/'-delimited
        object name prefixes. DAG objects for this environment
        reside in a simulated directory with this prefix.
    dataRetentionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DataRetentionConfigItems0], default is Undefined, optional
        Configuration setting for airflow data rentention mechanism. Structure is
        documented below.
    databaseConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DatabaseConfigItems0], default is Undefined, optional
        The configuration settings for Cloud SQL instance used internally
        by Apache Airflow software.
    encryptionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0EncryptionConfigItems0], default is Undefined, optional
        The encryption options for the Cloud Composer environment and its
        dependencies.
    environmentSize : str, default is Undefined, optional
        The environment size controls the performance parameters of the managed
        Cloud Composer infrastructure that includes the Airflow database. Values for
        environment size are ENVIRONMENT_SIZE_SMALL, ENVIRONMENT_SIZE_MEDIUM,
        and ENVIRONMENT_SIZE_LARGE.
    gkeCluster : str, default is Undefined, optional
        The Kubernetes Engine cluster used to run this environment.
    maintenanceWindow : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MaintenanceWindowItems0], default is Undefined, optional
        The configuration settings for Cloud Composer maintenance windows.
    masterAuthorizedNetworksConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MasterAuthorizedNetworksConfigItems0], default is Undefined, optional
        Configuration options for the master authorized networks feature. Enabled
        master authorized networks will disallow all external traffic to access
        Kubernetes master through HTTPS except traffic from the given CIDR blocks,
        Google Compute Engine Public IPs and Google Prod IPs. Structure is
        documented below.
    nodeConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0NodeConfigItems0], default is Undefined, optional
        The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
    nodeCount : float, default is Undefined, optional
        The number of nodes in the Kubernetes Engine cluster of the environment.
    privateEnvironmentConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0PrivateEnvironmentConfigItems0], default is Undefined, optional
        The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
    recoveryConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0RecoveryConfigItems0], default is Undefined, optional
        The configuration settings for recovery. Structure is documented below.
    resilienceMode : str, default is Undefined, optional
        The resilience mode states whether high resilience is enabled for
        the environment or not. Values for resilience mode are HIGH_RESILIENCE
        for high resilience and STANDARD_RESILIENCE for standard
        resilience.
    softwareConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0SoftwareConfigItems0], default is Undefined, optional
        The configuration settings for software inside the environment.  Structure is documented below.
    webServerConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerConfigItems0], default is Undefined, optional
        The configuration settings for the Airflow web server App Engine instance.
    webServerNetworkAccessControl : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerNetworkAccessControlItems0], default is Undefined, optional
        The network-level access control policy for the Airflow web server.
        If unspecified, no network-level access restrictions are applied.
    workloadsConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0], default is Undefined, optional
        The Kubernetes workloads configuration for GKE cluster associated with the
        Cloud Composer environment.
    """


    airflowUri?: str

    dagGcsPrefix?: str

    dataRetentionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DataRetentionConfigItems0]

    databaseConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DatabaseConfigItems0]

    encryptionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0EncryptionConfigItems0]

    environmentSize?: str

    gkeCluster?: str

    maintenanceWindow?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MaintenanceWindowItems0]

    masterAuthorizedNetworksConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MasterAuthorizedNetworksConfigItems0]

    nodeConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0NodeConfigItems0]

    nodeCount?: float

    privateEnvironmentConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0PrivateEnvironmentConfigItems0]

    recoveryConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0RecoveryConfigItems0]

    resilienceMode?: str

    softwareConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0SoftwareConfigItems0]

    webServerConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerConfigItems0]

    webServerNetworkAccessControl?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerNetworkAccessControlItems0]

    workloadsConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DataRetentionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 data retention config items0

    Attributes
    ----------
    taskLogsRetentionConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0], default is Undefined, optional
        The configuration setting for Task Logs. Structure is
        documented below.
    """


    taskLogsRetentionConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DataRetentionConfigItems0TaskLogsRetentionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 data retention config items0 task logs retention config items0

    Attributes
    ----------
    storageMode : str, default is Undefined, optional
        The mode of storage for Airflow workers task logs. Values for storage mode are
        CLOUD_LOGGING_ONLY to only store logs in cloud logging and
        CLOUD_LOGGING_AND_CLOUD_STORAGE to store logs in cloud logging and cloud storage.
    """


    storageMode?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0DatabaseConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 database config items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    zone : str, default is Undefined, optional
        The Compute Engine zone in which to deploy the VMs running the
        Apache Airflow software, specified as the zone name or
        relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
        belong to the enclosing environment's project and region.
    """


    machineType?: str

    zone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0EncryptionConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 encryption config items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Customer-managed Encryption Key available through Google's Key Management Service. It must
        be the fully qualified resource name,
        i.e. projects/project-id/locations/location/keyRings/keyring/cryptoKeys/key. Cannot be updated.
    """


    kmsKeyName?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MaintenanceWindowItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 maintenance window items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        Maintenance window end time. It is used only to calculate the duration of the maintenance window.
        The value for end-time must be in the future, relative to 'start_time'.
    recurrence : str, default is Undefined, optional
        Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) 'RRULE'.
        The only allowed values for 'FREQ' field are 'FREQ=DAILY' and 'FREQ=WEEKLY;BYDAY=...'.
        Example values: 'FREQ=WEEKLY;BYDAY=TU,WE', 'FREQ=DAILY'.
    startTime : str, default is Undefined, optional
        Start time of the first recurrence of the maintenance window.
    """


    endTime?: str

    recurrence?: str

    startTime?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MasterAuthorizedNetworksConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 master authorized networks config items0

    Attributes
    ----------
    cidrBlocks : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0], default is Undefined, optional
        cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS. Structure is documented below.
    enabled : bool, default is Undefined, optional
        When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
    """


    cidrBlocks?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0]

    enabled?: bool


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0MasterAuthorizedNetworksConfigItems0CidrBlocksItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 master authorized networks config items0 cidr blocks items0

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr_block must be specified in CIDR notation.
    displayName : str, default is Undefined, optional
        display_name is a field for users to identify CIDR blocks.
    """


    cidrBlock?: str

    displayName?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0NodeConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 node config items0

    Attributes
    ----------
    diskSizeGb : float, default is Undefined, optional
        The disk size in GB used for node VMs. Minimum size is 20GB.
        If unspecified, defaults to 100GB. Cannot be updated.
    enableIpMasqAgent : bool, default is Undefined, optional
        Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines
        nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for
        all destination addresses, except between pods traffic.
        See the documentation.
    ipAllocationPolicy : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0], default is Undefined, optional
        Configuration for controlling how IPs are allocated in the GKE cluster.
        Structure is documented below.
        Cannot be updated.
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    network : str, default is Undefined, optional
        The Compute Engine network to be used for machine
        communications, specified as a self-link, relative resource name
        (for example "projects/{project}/global/networks/{network}"), by name.
    oauthScopes : [str], default is Undefined, optional
        The set of Google API scopes to be made available on all node
        VMs. Cannot be updated. If empty, defaults to
        ["https://www.googleapis.com/auth/cloud-platform"].
    serviceAccount : str, default is Undefined, optional
        The Google Cloud Platform Service Account to be used by the
        node VMs. If a service account is not specified, the "default"
        Compute Engine service account is used. Cannot be updated. If given,
        note that the service account must have roles/composer.worker
        for any GCP resources created under the Cloud Composer Environment.
    subnetwork : str, default is Undefined, optional
        The Compute Engine subnetwork to be used for machine
        communications, specified as a self-link, relative resource name (for example,
        "projects/{project}/regions/{region}/subnetworks/{subnetwork}"), or by name. If subnetwork is provided,
        network must also be provided and the subnetwork must belong to the enclosing environment's project and region.
    tags : [str], default is Undefined, optional
        The list of instance tags applied to all node VMs. Tags are
        used to identify valid sources or targets for network
        firewalls. Each tag within the list must comply with RFC1035.
        Cannot be updated.
    zone : str, default is Undefined, optional
        The Compute Engine zone in which to deploy the VMs running the
        Apache Airflow software, specified as the zone name or
        relative resource name (e.g. "projects/{project}/zones/{zone}"). Must
        belong to the enclosing environment's project and region.
    """


    diskSizeGb?: float

    enableIpMasqAgent?: bool

    ipAllocationPolicy?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0]

    machineType?: str

    network?: str

    oauthScopes?: [str]

    serviceAccount?: str

    subnetwork?: str

    tags?: [str]

    zone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0NodeConfigItems0IPAllocationPolicyItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 node config items0 IP allocation policy items0

    Attributes
    ----------
    clusterIpv4CidrBlock : str, default is Undefined, optional
        The IP address range used to allocate IP addresses to pods in the cluster.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
        Set to blank to have GKE choose a range with the default size.
        Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
        Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
        (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
        Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
    clusterSecondaryRangeName : str, default is Undefined, optional
        The name of the cluster's secondary range used to allocate IP addresses to pods.
        Specify either cluster_secondary_range_name or cluster_ipv4_cidr_block but not both.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
    servicesIpv4CidrBlock : str, default is Undefined, optional
        The IP address range used to allocate IP addresses in this cluster.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
        Set to blank to have GKE choose a range with the default size.
        Set to /netmask (e.g. /14) to have GKE choose a range with a specific netmask.
        Set to a CIDR notation (e.g. 10.96.0.0/14) from the RFC-1918 private networks
        (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to pick a specific range to use.
        Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
    servicesSecondaryRangeName : str, default is Undefined, optional
        The name of the services' secondary range used to allocate IP addresses to the cluster.
        Specify either services_secondary_range_name or services_ipv4_cidr_block but not both.
        For Cloud Composer 1 environments, this field is applicable only when use_ip_aliases is true.
    useIpAliases : bool, default is Undefined, optional
        Whether or not to enable Alias IPs in the GKE cluster. If true, a VPC-native cluster is created.
        Defaults to true if the ip_allocation_policy block is present in config.
    """


    clusterIpv4CidrBlock?: str

    clusterSecondaryRangeName?: str

    servicesIpv4CidrBlock?: str

    servicesSecondaryRangeName?: str

    useIpAliases?: bool


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0PrivateEnvironmentConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 private environment config items0

    Attributes
    ----------
    cloudComposerConnectionSubnetwork : str, default is Undefined, optional
        When specified, the environment will use Private Service Connect instead of VPC peerings to connect
        to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP
        address from this subnetwork. This field is supported for Cloud Composer environments in
        versions composer-2.*.*-airflow-*.*.* and newer.
    cloudComposerNetworkIpv4CidrBlock : str, default is Undefined, optional
        cloud composer network Ipv4 cidr block
    cloudSqlIpv4CidrBlock : str, default is Undefined, optional
        The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block
    connectionType : str, default is Undefined, optional
        Mode of internal communication within the Composer environment. Must be one
        of "VPC_PEERING" or "PRIVATE_SERVICE_CONNECT".
    enablePrivateEndpoint : bool, default is Undefined, optional
        If true, access to the public endpoint of the GKE cluster is denied.
        If this field is set to true, the ip_allocation_policy.use_ip_aliases field must
        also be set to true for Cloud Composer 1 environments.
    enablePrivatelyUsedPublicIps : bool, default is Undefined, optional
        When enabled, IPs from public (non-RFC1918) ranges can be used for
        ip_allocation_policy.cluster_ipv4_cidr_block and ip_allocation_policy.service_ipv4_cidr_block.
    masterIpv4CidrBlock : str, default is Undefined, optional
        The IP range in CIDR notation to use for the hosted master network. This range is used
        for assigning internal IP addresses to the cluster master or set of masters and to the
        internal load balancer virtual IP. This range must not overlap with any other ranges
        in use within the cluster's network.
        If left blank, the default value of is used. See documentation for default values per region.
    webServerIpv4CidrBlock : str, default is Undefined, optional
        The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block.
    """


    cloudComposerConnectionSubnetwork?: str

    cloudComposerNetworkIpv4CidrBlock?: str

    cloudSqlIpv4CidrBlock?: str

    connectionType?: str

    enablePrivateEndpoint?: bool

    enablePrivatelyUsedPublicIps?: bool

    masterIpv4CidrBlock?: str

    webServerIpv4CidrBlock?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0RecoveryConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 recovery config items0

    Attributes
    ----------
    scheduledSnapshotsConfig : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0], default is Undefined, optional
        The recovery configuration settings for the Cloud Composer environment.
    """


    scheduledSnapshotsConfig?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0RecoveryConfigItems0ScheduledSnapshotsConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 recovery config items0 scheduled snapshots config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
    snapshotCreationSchedule : str, default is Undefined, optional
        Snapshot schedule, in the unix-cron format.
    snapshotLocation : str, default is Undefined, optional
        The URI of a bucket folder where to save the snapshot.
    timeZone : str, default is Undefined, optional
        A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
    """


    enabled?: bool

    snapshotCreationSchedule?: str

    snapshotLocation?: str

    timeZone?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0SoftwareConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 software config items0

    Attributes
    ----------
    airflowConfigOverrides : {str:str}, default is Undefined, optional
        Apache Airflow configuration properties to override. Property keys contain the section and property names,
        separated by a hyphen, for example "core-dags_are_paused_at_creation".
    envVariables : {str:str}, default is Undefined, optional
        Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes.
        Environment variable names must match the regular expression [a-zA-Z_][a-zA-Z0-9_]*.
        They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression
        AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+), and they cannot match any of the following reserved names:
    imageVersion : str, default is Undefined, optional
        image version
    pypiPackages : {str:str}, default is Undefined, optional
        Custom Python Package Index (PyPI) packages to be installed
        in the environment. Keys refer to the lowercase package name (e.g. "numpy"). Values are the lowercase extras and
        version specifier (e.g. "==1.12.0", "[devel,gcp_api]", "[devel]>=1.8.2, <1.9.2"). To specify a package without
        pinning it to a version specifier, use the empty string as the value.
    pythonVersion : str, default is Undefined, optional
        The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
        Can be set to '2' or '3'. If not specified, the default is '3'.
    schedulerCount : float, default is Undefined, optional
        The number of schedulers for Airflow.
    """


    airflowConfigOverrides?: {str:str}

    envVariables?: {str:str}

    imageVersion?: str

    pypiPackages?: {str:str}

    pythonVersion?: str

    schedulerCount?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 web server config items0

    Attributes
    ----------
    machineType : str, default is Undefined, optional
        Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2,
        composer-n1-webserver-4 or composer-n1-webserver-8.
        Value custom is returned only in response, if Airflow web server parameters were
        manually changed to a non-standard values.
    """


    machineType?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerNetworkAccessControlItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 web server network access control items0

    Attributes
    ----------
    allowedIpRange : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0], default is Undefined, optional
        A collection of allowed IP ranges with descriptions. Structure is documented below.
    """


    allowedIpRange?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WebServerNetworkAccessControlItems0AllowedIPRangeItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 web server network access control items0 allowed IP range items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of this ip range.
    value : str, default is Undefined, optional
        IP address or range, defined using CIDR notation, of requests that this rule applies to.
        Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334.
        IP range prefixes should be properly truncated. For example,
        1.2.3.4/24 should be truncated to 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 should be truncated to 2001:db8::/32.
    """


    description?: str

    value?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 workloads config items0

    Attributes
    ----------
    scheduler : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0SchedulerItems0], default is Undefined, optional
        Configuration for resources used by Airflow schedulers.
    triggerer : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0TriggererItems0], default is Undefined, optional
        Configuration for resources used by Airflow triggerer.
    webServer : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0WebServerItems0], default is Undefined, optional
        Configuration for resources used by Airflow web server.
    worker : [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0WorkerItems0], default is Undefined, optional
        Configuration for resources used by Airflow workers.
    """


    scheduler?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0SchedulerItems0]

    triggerer?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0TriggererItems0]

    webServer?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0WebServerItems0]

    worker?: [ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0WorkerItems0]


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0SchedulerItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 workloads config items0 scheduler items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of Airflow triggerers.
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    count?: float

    cpu?: float

    memoryGb?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0TriggererItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 workloads config items0 triggerer items0

    Attributes
    ----------
    count : float, default is Undefined, optional
        The number of Airflow triggerers.
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    """


    count?: float

    cpu?: float

    memoryGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0WebServerItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 workloads config items0 web server items0

    Attributes
    ----------
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    cpu?: float

    memoryGb?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderConfigItems0WorkloadsConfigItems0WorkerItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider config items0 workloads config items0 worker items0

    Attributes
    ----------
    cpu : float, default is Undefined, optional
        The number of CPUs for a single Airflow worker.
    maxCount : float, default is Undefined, optional
        The maximum number of Airflow workers that the environment can run. The number of workers in the
        environment does not go above this number, even if a higher number of workers is required to
        handle the load.
    memoryGb : float, default is Undefined, optional
        The amount of memory (GB) for a single Airflow worker.
    minCount : float, default is Undefined, optional
        The minimum number of Airflow workers that the environment can run. The number of workers in the
        environment does not go above this number, even if a lower number of workers can handle the load.
    storageGb : float, default is Undefined, optional
        The amount of storage (GB) for the Airflow web server.
    """


    cpu?: float

    maxCount?: float

    memoryGb?: float

    minCount?: float

    storageGb?: float


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusAtProviderStorageConfigItems0:
    """
    composer gcp upbound io v1beta1 environment status at provider storage config items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of an existing Cloud Storage bucket to be used by the environment.
    """


    bucket?: str


schema ComposerGcpUpboundIoV1beta1EnvironmentStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


