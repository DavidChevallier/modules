"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API. A Google Cloud Memcache instance.

    Attributes
    ----------
    apiVersion : str, default is "memcache.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MemcacheGcpUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : MemcacheGcpUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "memcache.gcp.upbound.io/v1beta1" = "memcache.gcp.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: MemcacheGcpUpboundIoV1beta1InstanceSpec

    status?: MemcacheGcpUpboundIoV1beta1InstanceStatus


schema MemcacheGcpUpboundIoV1beta1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MemcacheGcpUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : MemcacheGcpUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MemcacheGcpUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MemcacheGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MemcacheGcpUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: MemcacheGcpUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MemcacheGcpUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MemcacheGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProvider:
    """
    memcache gcp upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    authorizedNetwork : str, default is Undefined, optional
        The full name of the GCE network to connect the instance to.  If not provided,
        'default' will be used.
    authorizedNetworkRef : MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRef, default is Undefined, optional
        authorized network ref
    authorizedNetworkSelector : MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelector, default is Undefined, optional
        authorized network selector
    displayName : str, default is Undefined, optional
        A user-visible name for the instance.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    maintenancePolicy : [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0], default is Undefined, optional
        Maintenance policy for an instance.
        Structure is documented below.
    memcacheParameters : [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMemcacheParametersItems0], default is Undefined, optional
        User-specified parameters for this memcache instance.
        Structure is documented below.
    memcacheVersion : str, default is Undefined, optional
        The major version of Memcached software. If not provided, latest supported version will be used.
        Currently the latest supported major version is MEMCACHE_1_5. The minor version will be automatically
        determined by our system based on the latest supported minor version.
        Default value is MEMCACHE_1_5.
        Possible values are: MEMCACHE_1_5, MEMCACHE_1_6_15.
    name : str, default is Undefined, optional
        The resource name of the instance.
    nodeConfig : [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderNodeConfigItems0], default is Undefined, optional
        Configuration for memcache nodes.
        Structure is documented below.
    nodeCount : float, default is Undefined, optional
        Number of nodes in the memcache instance.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the Memcache instance. If it is not provided, the provider region is used.
    reservedIpRangeId : [str], default is Undefined, optional
        Contains the name of allocated IP address ranges associated with
        the private service access connection for example, "test-default"
        associated with IP range 10.0.0.0/29.
    zones : [str], default is Undefined, optional
        Zones where memcache nodes should be provisioned.  If not
        provided, all zones will be used.
    """


    authorizedNetwork?: str

    authorizedNetworkRef?: MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRef

    authorizedNetworkSelector?: MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelector

    displayName?: str

    labels?: {str:str}

    maintenancePolicy?: [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0]

    memcacheParameters?: [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMemcacheParametersItems0]

    memcacheVersion?: str

    name?: str

    nodeConfig?: [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderNodeConfigItems0]

    nodeCount?: float

    project?: str

    region?: str

    reservedIpRangeId?: [str]

    zones?: [str]


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRef:
    """
    Reference to a Connection in servicenetworking to populate authorizedNetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRefPolicy


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelector:
    """
    Selector for a Connection in servicenetworking to populate authorizedNetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelectorPolicy


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderAuthorizedNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0:
    """
    memcache gcp upbound io v1beta1 instance spec for provider maintenance policy items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of what this policy is for.
        Create/Update methods return INVALID_ARGUMENT if the
        length is greater than 512.
    weeklyMaintenanceWindow : [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0], default is Undefined, optional
        Required. Maintenance window that is applied to resources covered by this policy.
        Minimum 1. For the current version, the maximum number of weekly_maintenance_windows
        is expected to be one.
        Structure is documented below.
    """


    description?: str

    weeklyMaintenanceWindow?: [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0:
    """
    memcache gcp upbound io v1beta1 instance spec for provider maintenance policy items0 weekly maintenance window items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        Required. The day of week that maintenance updates occur.
    duration : str, default is Undefined, optional
        Required. The length of the maintenance window, ranging from 3 hours to 8 hours.
        A duration in seconds with up to nine fractional digits,
        terminated by 's'. Example: "3.5s".
    startTime : [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0], default is Undefined, optional
        Required. Start time of the window in UTC time.
        Structure is documented below.
    """


    day?: str

    duration?: str

    startTime?: [MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0:
    """
    memcache gcp upbound io v1beta1 instance spec for provider maintenance policy items0 weekly maintenance window items0 start time items0

    Attributes
    ----------
    hours : float, default is Undefined, optional
        Hours of day in 24 hour format. Should be from 0 to 23.
        An API may choose to allow the value "24:00:00" for scenarios like business closing time.
    minutes : float, default is Undefined, optional
        Minutes of hour of day. Must be from 0 to 59.
    nanos : float, default is Undefined, optional
        Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    seconds : float, default is Undefined, optional
        Seconds of minutes of the time. Must normally be from 0 to 59.
        An API may allow the value 60 if it allows leap-seconds.
    """


    hours?: float

    minutes?: float

    nanos?: float

    seconds?: float


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderMemcacheParametersItems0:
    """
    memcache gcp upbound io v1beta1 instance spec for provider memcache parameters items0

    Attributes
    ----------
    params : {str:str}, default is Undefined, optional
        User-defined set of parameters to use in the memcache process.
    """


    params?: {str:str}


schema MemcacheGcpUpboundIoV1beta1InstanceSpecForProviderNodeConfigItems0:
    """
    memcache gcp upbound io v1beta1 instance spec for provider node config items0

    Attributes
    ----------
    cpuCount : float, default is Undefined, optional
        Number of CPUs per node.
    memorySizeMb : float, default is Undefined, optional
        Memory size in Mebibytes for each memcache node.
    """


    cpuCount?: float

    memorySizeMb?: float


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    authorizedNetwork : str, default is Undefined, optional
        The full name of the GCE network to connect the instance to.  If not provided,
        'default' will be used.
    authorizedNetworkRef : MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRef, default is Undefined, optional
        authorized network ref
    authorizedNetworkSelector : MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelector, default is Undefined, optional
        authorized network selector
    displayName : str, default is Undefined, optional
        A user-visible name for the instance.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    maintenancePolicy : [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0], default is Undefined, optional
        Maintenance policy for an instance.
        Structure is documented below.
    memcacheParameters : [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMemcacheParametersItems0], default is Undefined, optional
        User-specified parameters for this memcache instance.
        Structure is documented below.
    memcacheVersion : str, default is Undefined, optional
        The major version of Memcached software. If not provided, latest supported version will be used.
        Currently the latest supported major version is MEMCACHE_1_5. The minor version will be automatically
        determined by our system based on the latest supported minor version.
        Default value is MEMCACHE_1_5.
        Possible values are: MEMCACHE_1_5, MEMCACHE_1_6_15.
    name : str, default is Undefined, optional
        The resource name of the instance.
    nodeConfig : [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderNodeConfigItems0], default is Undefined, optional
        Configuration for memcache nodes.
        Structure is documented below.
    nodeCount : float, default is Undefined, optional
        Number of nodes in the memcache instance.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the Memcache instance. If it is not provided, the provider region is used.
    reservedIpRangeId : [str], default is Undefined, optional
        Contains the name of allocated IP address ranges associated with
        the private service access connection for example, "test-default"
        associated with IP range 10.0.0.0/29.
    zones : [str], default is Undefined, optional
        Zones where memcache nodes should be provisioned.  If not
        provided, all zones will be used.
    """


    authorizedNetwork?: str

    authorizedNetworkRef?: MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRef

    authorizedNetworkSelector?: MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelector

    displayName?: str

    labels?: {str:str}

    maintenancePolicy?: [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0]

    memcacheParameters?: [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMemcacheParametersItems0]

    memcacheVersion?: str

    name?: str

    nodeConfig?: [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderNodeConfigItems0]

    nodeCount?: float

    project?: str

    region?: str

    reservedIpRangeId?: [str]

    zones?: [str]


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRef:
    """
    Reference to a Connection in servicenetworking to populate authorizedNetwork.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRefPolicy


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelector:
    """
    Selector for a Connection in servicenetworking to populate authorizedNetwork.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelectorPolicy


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderAuthorizedNetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0:
    """
    memcache gcp upbound io v1beta1 instance spec init provider maintenance policy items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of what this policy is for.
        Create/Update methods return INVALID_ARGUMENT if the
        length is greater than 512.
    weeklyMaintenanceWindow : [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0], default is Undefined, optional
        Required. Maintenance window that is applied to resources covered by this policy.
        Minimum 1. For the current version, the maximum number of weekly_maintenance_windows
        is expected to be one.
        Structure is documented below.
    """


    description?: str

    weeklyMaintenanceWindow?: [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0:
    """
    memcache gcp upbound io v1beta1 instance spec init provider maintenance policy items0 weekly maintenance window items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        Required. The day of week that maintenance updates occur.
    duration : str, default is Undefined, optional
        Required. The length of the maintenance window, ranging from 3 hours to 8 hours.
        A duration in seconds with up to nine fractional digits,
        terminated by 's'. Example: "3.5s".
    startTime : [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0], default is Undefined, optional
        Required. Start time of the window in UTC time.
        Structure is documented below.
    """


    day?: str

    duration?: str

    startTime?: [MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0:
    """
    memcache gcp upbound io v1beta1 instance spec init provider maintenance policy items0 weekly maintenance window items0 start time items0

    Attributes
    ----------
    hours : float, default is Undefined, optional
        Hours of day in 24 hour format. Should be from 0 to 23.
        An API may choose to allow the value "24:00:00" for scenarios like business closing time.
    minutes : float, default is Undefined, optional
        Minutes of hour of day. Must be from 0 to 59.
    nanos : float, default is Undefined, optional
        Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    seconds : float, default is Undefined, optional
        Seconds of minutes of the time. Must normally be from 0 to 59.
        An API may allow the value 60 if it allows leap-seconds.
    """


    hours?: float

    minutes?: float

    nanos?: float

    seconds?: float


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderMemcacheParametersItems0:
    """
    memcache gcp upbound io v1beta1 instance spec init provider memcache parameters items0

    Attributes
    ----------
    params : {str:str}, default is Undefined, optional
        User-defined set of parameters to use in the memcache process.
    """


    params?: {str:str}


schema MemcacheGcpUpboundIoV1beta1InstanceSpecInitProviderNodeConfigItems0:
    """
    memcache gcp upbound io v1beta1 instance spec init provider node config items0

    Attributes
    ----------
    cpuCount : float, default is Undefined, optional
        Number of CPUs per node.
    memorySizeMb : float, default is Undefined, optional
        Memory size in Mebibytes for each memcache node.
    """


    cpuCount?: float

    memorySizeMb?: float


schema MemcacheGcpUpboundIoV1beta1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemcacheGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemcacheGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema MemcacheGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemcacheGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MemcacheGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MemcacheGcpUpboundIoV1beta1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : MemcacheGcpUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MemcacheGcpUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MemcacheGcpUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [MemcacheGcpUpboundIoV1beta1InstanceStatusConditionsItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProvider:
    """
    memcache gcp upbound io v1beta1 instance status at provider

    Attributes
    ----------
    authorizedNetwork : str, default is Undefined, optional
        The full name of the GCE network to connect the instance to.  If not provided,
        'default' will be used.
    createTime : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    discoveryEndpoint : str, default is Undefined, optional
        Endpoint for Discovery API
    displayName : str, default is Undefined, optional
        A user-visible name for the instance.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{region}}/instances/{{name}}
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    maintenancePolicy : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0], default is Undefined, optional
        Maintenance policy for an instance.
        Structure is documented below.
    maintenanceSchedule : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenanceScheduleItems0], default is Undefined, optional
        Output only. Published maintenance schedule.
        Structure is documented below.
    memcacheFullVersion : str, default is Undefined, optional
        The full version of memcached server running on this instance.
    memcacheNodes : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMemcacheNodesItems0], default is Undefined, optional
        Additional information about the instance state, if available.
        Structure is documented below.
    memcacheParameters : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMemcacheParametersItems0], default is Undefined, optional
        User-specified parameters for this memcache instance.
        Structure is documented below.
    memcacheVersion : str, default is Undefined, optional
        The major version of Memcached software. If not provided, latest supported version will be used.
        Currently the latest supported major version is MEMCACHE_1_5. The minor version will be automatically
        determined by our system based on the latest supported minor version.
        Default value is MEMCACHE_1_5.
        Possible values are: MEMCACHE_1_5, MEMCACHE_1_6_15.
    name : str, default is Undefined, optional
        The resource name of the instance.
    nodeConfig : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderNodeConfigItems0], default is Undefined, optional
        Configuration for memcache nodes.
        Structure is documented below.
    nodeCount : float, default is Undefined, optional
        Number of nodes in the memcache instance.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the Memcache instance. If it is not provided, the provider region is used.
    reservedIpRangeId : [str], default is Undefined, optional
        Contains the name of allocated IP address ranges associated with
        the private service access connection for example, "test-default"
        associated with IP range 10.0.0.0/29.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    zones : [str], default is Undefined, optional
        Zones where memcache nodes should be provisioned.  If not
        provided, all zones will be used.
    """


    authorizedNetwork?: str

    createTime?: str

    discoveryEndpoint?: str

    displayName?: str

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    maintenancePolicy?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0]

    maintenanceSchedule?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenanceScheduleItems0]

    memcacheFullVersion?: str

    memcacheNodes?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMemcacheNodesItems0]

    memcacheParameters?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMemcacheParametersItems0]

    memcacheVersion?: str

    name?: str

    nodeConfig?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderNodeConfigItems0]

    nodeCount?: float

    project?: str

    region?: str

    reservedIpRangeId?: [str]

    terraformLabels?: {str:str}

    zones?: [str]


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider maintenance policy items0

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        (Output)
        Output only. The time when the policy was created.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits
    description : str, default is Undefined, optional
        Optional. Description of what this policy is for.
        Create/Update methods return INVALID_ARGUMENT if the
        length is greater than 512.
    updateTime : str, default is Undefined, optional
        (Output)
        Output only. The time when the policy was updated.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    weeklyMaintenanceWindow : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0], default is Undefined, optional
        Required. Maintenance window that is applied to resources covered by this policy.
        Minimum 1. For the current version, the maximum number of weekly_maintenance_windows
        is expected to be one.
        Structure is documented below.
    """


    createTime?: str

    description?: str

    updateTime?: str

    weeklyMaintenanceWindow?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider maintenance policy items0 weekly maintenance window items0

    Attributes
    ----------
    day : str, default is Undefined, optional
        Required. The day of week that maintenance updates occur.
    duration : str, default is Undefined, optional
        Required. The length of the maintenance window, ranging from 3 hours to 8 hours.
        A duration in seconds with up to nine fractional digits,
        terminated by 's'. Example: "3.5s".
    startTime : [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0], default is Undefined, optional
        Required. Start time of the window in UTC time.
        Structure is documented below.
    """


    day?: str

    duration?: str

    startTime?: [MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0]


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenancePolicyItems0WeeklyMaintenanceWindowItems0StartTimeItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider maintenance policy items0 weekly maintenance window items0 start time items0

    Attributes
    ----------
    hours : float, default is Undefined, optional
        Hours of day in 24 hour format. Should be from 0 to 23.
        An API may choose to allow the value "24:00:00" for scenarios like business closing time.
    minutes : float, default is Undefined, optional
        Minutes of hour of day. Must be from 0 to 59.
    nanos : float, default is Undefined, optional
        Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
    seconds : float, default is Undefined, optional
        Seconds of minutes of the time. Must normally be from 0 to 59.
        An API may allow the value 60 if it allows leap-seconds.
    """


    hours?: float

    minutes?: float

    nanos?: float

    seconds?: float


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMaintenanceScheduleItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider maintenance schedule items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        (Output)
        Output only. The end time of any upcoming scheduled maintenance for this instance.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    scheduleDeadlineTime : str, default is Undefined, optional
        (Output)
        Output only. The deadline that the maintenance schedule start time
        can not go beyond, including reschedule.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    startTime : str, default is Undefined, optional
        (Output)
        Output only. The start time of any upcoming scheduled maintenance for this instance.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
        resolution and up to nine fractional digits.
    """


    endTime?: str

    scheduleDeadlineTime?: str

    startTime?: str


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMemcacheNodesItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider memcache nodes items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        (Output)
        Hostname or IP address of the Memcached node used by the clients to connect to the Memcached server on this node.
    nodeId : str, default is Undefined, optional
        (Output)
        Identifier of the Memcached node. The node id does not include project or location like the Memcached instance name.
    port : float, default is Undefined, optional
        (Output)
        The port number of the Memcached server on this node.
    state : str, default is Undefined, optional
        (Output)
        Current state of the Memcached node.
    zone : str, default is Undefined, optional
        (Output)
        Location (GCP Zone) for the Memcached node.
    """


    host?: str

    nodeId?: str

    port?: float

    state?: str

    zone?: str


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderMemcacheParametersItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider memcache parameters items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        (Output)
        This is a unique ID associated with this set of parameters.
    params : {str:str}, default is Undefined, optional
        User-defined set of parameters to use in the memcache process.
    """


    id?: str

    params?: {str:str}


schema MemcacheGcpUpboundIoV1beta1InstanceStatusAtProviderNodeConfigItems0:
    """
    memcache gcp upbound io v1beta1 instance status at provider node config items0

    Attributes
    ----------
    cpuCount : float, default is Undefined, optional
        Number of CPUs per node.
    memorySizeMb : float, default is Undefined, optional
        Memory size in Mebibytes for each memcache node.
    """


    cpuCount?: float

    memorySizeMb?: float


schema MemcacheGcpUpboundIoV1beta1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


