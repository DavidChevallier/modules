"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UptimeCheckConfig:
    """
    UptimeCheckConfig is the Schema for the UptimeCheckConfigs API. This message configures which resources and services to monitor for availability.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UptimeCheckConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpec, default is Undefined, required
        spec
    status : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.gcp.upbound.io/v1beta1" = "monitoring.gcp.upbound.io/v1beta1"

    kind: "UptimeCheckConfig" = "UptimeCheckConfig"

    metadata?: v1.ObjectMeta

    spec: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpec

    status?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatus


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpec:
    """
    UptimeCheckConfigSpec defines the desired state of UptimeCheckConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProvider

    initProvider?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecWriteConnectionSecretToRef


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProvider:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider

    Attributes
    ----------
    checkerType : str, default is Undefined, optional
        The checker type to use for the check. If the monitored resource type is servicedirectory_service, checker_type must be set to VPC_CHECKERS.
        Possible values are: STATIC_IP_CHECKERS, VPC_CHECKERS.
    contentMatchers : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderContentMatchersItems0], default is Undefined, optional
        The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and other entries will be ignored. The server will look for an exact match of the string in the page response's content. This field is optional and should only be specified if a content match is required.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced.
    httpCheck : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0], default is Undefined, optional
        Contains information needed to make an HTTP or HTTPS check.
        Structure is documented below.
    monitoredResource : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderMonitoredResourceItems0], default is Undefined, optional
        The [monitored resource]
        (https://cloud.google.com/monitoring/api/resources) associated with the
        configuration. The following monitored resource types are supported for
        uptime checks:
    period : str, default is Undefined, optional
        How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    resourceGroup : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0], default is Undefined, optional
        The group resource associated with the configuration.
        Structure is documented below.
    selectedRegions : [str], default is Undefined, optional
        The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error message is returned. Not specifying this field will result in uptime checks running from all regions.
    syntheticMonitor : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0], default is Undefined, optional
        A Synthetic Monitor deployed to a Cloud Functions V2 instance.
        Structure is documented below.
    tcpCheck : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderTCPCheckItems0], default is Undefined, optional
        Contains information needed to make a TCP check.
        Structure is documented below.
    timeout : str, default is Undefined, optional
        The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted formats
    userLabels : {str:str}, default is Undefined, optional
        User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects. The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
    """


    checkerType?: str

    contentMatchers?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderContentMatchersItems0]

    displayName?: str

    httpCheck?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0]

    monitoredResource?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderMonitoredResourceItems0]

    period?: str

    project?: str

    resourceGroup?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0]

    selectedRegions?: [str]

    syntheticMonitor?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0]

    tcpCheck?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderTCPCheckItems0]

    timeout?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderContentMatchersItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider content matchers items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        String or regex content to match (max 1024 bytes)
    jsonPathMatcher : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderContentMatchersItems0JSONPathMatcherItems0], default is Undefined, optional
        Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
        Structure is documented below.
    matcher : str, default is Undefined, optional
        The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
        Default value is CONTAINS_STRING.
        Possible values are: CONTAINS_STRING, NOT_CONTAINS_STRING, MATCHES_REGEX, NOT_MATCHES_REGEX, MATCHES_JSON_PATH, NOT_MATCHES_JSON_PATH.
    """


    content?: str

    jsonPathMatcher?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderContentMatchersItems0JSONPathMatcherItems0]

    matcher?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderContentMatchersItems0JSONPathMatcherItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider content matchers items0 JSON path matcher items0

    Attributes
    ----------
    jsonMatcher : str, default is Undefined, optional
        Options to perform JSONPath content matching.
        Default value is EXACT_MATCH.
        Possible values are: EXACT_MATCH, REGEX_MATCH.
    jsonPath : str, default is Undefined, optional
        JSONPath within the response output pointing to the expected ContentMatcher::content to match against.
    """


    jsonMatcher?: str

    jsonPath?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider HTTP check items0

    Attributes
    ----------
    acceptedResponseStatusCodes : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0], default is Undefined, optional
        If present, the check will only pass if the HTTP response status code is in this set of status codes. If empty, the HTTP status code will only pass if the HTTP status code is 200-299.
        Structure is documented below.
    authInfo : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AuthInfoItems0], default is Undefined, optional
        The authentication information. Optional when creating an HTTP check; defaults to empty.
        Structure is documented below.
    body : str, default is Undefined, optional
        The request body associated with the HTTP POST request. If content_type is URL_ENCODED, the body passed in must be URL-encoded. Users can provide a Content-Length header via the headers field or the API will do so. If the request_method is GET and body is not empty, the API will return an error. The maximum byte size is 1 megabyte. Note - As with all bytes fields JSON representations are base64 encoded. e.g. foo=bar in URL-encoded form is foo%3Dbar and in base64 encoding is Zm9vJTI1M0RiYXI=.
    contentType : str, default is Undefined, optional
        The content type to use for the check.
        Possible values are: TYPE_UNSPECIFIED, URL_ENCODED, USER_PROVIDED.
    customContentType : str, default is Undefined, optional
        A user provided content type header to use for the check. The invalid configurations outlined in the content_type field apply to custom_content_type, as well as the following 1. content_typeisURL_ENCODEDandcustom_content_typeis set. 2.content_typeisUSER_PROVIDEDandcustom_content_type` is not set.
    headers : {str:str}, default is Undefined, optional
        The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described in RFC 2616 (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.
    maskHeaders : bool, default is Undefined, optional
        Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to true then the headers will be obscured with ******.
    path : str, default is Undefined, optional
        The path to the page to run the check against. Will be combined with the host (specified within the MonitoredResource) and port to construct the full URL. If the provided path does not begin with /, a / will be prepended automatically. Optional (defaults to /).
    pingConfig : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0PingConfigItems0], default is Undefined, optional
        Contains information needed to add pings to an HTTP check.
        Structure is documented below.
    port : float, default is Undefined, optional
        The port to the page to run the check against. Will be combined with host (specified within the monitored_resource) and path to construct the full URL. Optional (defaults to 80 without SSL, or 443 with SSL).
    requestMethod : str, default is Undefined, optional
        The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.
        Default value is GET.
        Possible values are: METHOD_UNSPECIFIED, GET, POST.
    useSsl : bool, default is Undefined, optional
        If true, use HTTPS instead of HTTP to run the check.
    validateSsl : bool, default is Undefined, optional
        Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitored_resource is set to uptime_url. If use_ssl is false, setting validate_ssl to true has no effect.
    """


    acceptedResponseStatusCodes?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0]

    authInfo?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AuthInfoItems0]

    body?: str

    contentType?: str

    customContentType?: str

    headers?: {str:str}

    maskHeaders?: bool

    path?: str

    pingConfig?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0PingConfigItems0]

    port?: float

    requestMethod?: str

    useSsl?: bool

    validateSsl?: bool


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider HTTP check items0 accepted response status codes items0

    Attributes
    ----------
    statusClass : str, default is Undefined, optional
        A class of status codes to accept.
        Possible values are: STATUS_CLASS_1XX, STATUS_CLASS_2XX, STATUS_CLASS_3XX, STATUS_CLASS_4XX, STATUS_CLASS_5XX, STATUS_CLASS_ANY.
    statusValue : float, default is Undefined, optional
        A status code to accept.
    """


    statusClass?: str

    statusValue?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AuthInfoItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider HTTP check items0 auth info items0

    Attributes
    ----------
    passwordSecretRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AuthInfoItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    username : str, default is Undefined, optional
        The username to authenticate.
    """


    passwordSecretRef: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AuthInfoItems0PasswordSecretRef

    username?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0AuthInfoItems0PasswordSecretRef:
    """
    The password to authenticate.
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderHTTPCheckItems0PingConfigItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider HTTP check items0 ping config items0

    Attributes
    ----------
    pingsCount : float, default is Undefined, optional
        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
    """


    pingsCount?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderMonitoredResourceItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider monitored resource items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels project_id, instance_id, and zone.
    $type : str, default is Undefined, optional
        The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types and Logging resource types.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider resource group items0

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The group of resources being monitored. Should be the name of a group
    groupIdRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDSelector, default is Undefined, optional
        group Id selector
    resourceType : str, default is Undefined, optional
        The resource type of the group members.
        Possible values are: RESOURCE_TYPE_UNSPECIFIED, INSTANCE, AWS_ELB_LOAD_BALANCER.
    """


    groupId?: str

    groupIdRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDRef

    groupIdSelector?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDSelector

    resourceType?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDRef:
    """
    Reference to a Group in monitoring to populate groupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDRefPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDSelector:
    """
    Selector for a Group in monitoring to populate groupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderResourceGroupItems0GroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider synthetic monitor items0

    Attributes
    ----------
    cloudFunctionV2 : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0], default is Undefined, optional
        Target a Synthetic Monitor GCFv2 Instance
        Structure is documented below.
    """


    cloudFunctionV2?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0]


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider synthetic monitor items0 cloud function v2 items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The fully qualified name of the cloud function resource.
    nameRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRef, default is Undefined, optional
        name ref
    nameSelector : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRef

    nameSelector?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelector


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRef:
    """
    Reference to a Function in cloudfunctions2 to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRefPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelector:
    """
    Selector for a Function in cloudfunctions2 to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderTCPCheckItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider TCP check items0

    Attributes
    ----------
    pingConfig : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderTCPCheckItems0PingConfigItems0], default is Undefined, optional
        Contains information needed to add pings to a TCP check.
        Structure is documented below.
    port : float, default is Undefined, optional
        The port to the page to run the check against. Will be combined with host (specified within the monitored_resource) to construct the full URL.
    """


    pingConfig?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderTCPCheckItems0PingConfigItems0]

    port?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecForProviderTCPCheckItems0PingConfigItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec for provider TCP check items0 ping config items0

    Attributes
    ----------
    pingsCount : float, default is Undefined, optional
        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
    """


    pingsCount?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    checkerType : str, default is Undefined, optional
        The checker type to use for the check. If the monitored resource type is servicedirectory_service, checker_type must be set to VPC_CHECKERS.
        Possible values are: STATIC_IP_CHECKERS, VPC_CHECKERS.
    contentMatchers : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderContentMatchersItems0], default is Undefined, optional
        The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and other entries will be ignored. The server will look for an exact match of the string in the page response's content. This field is optional and should only be specified if a content match is required.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced.
    httpCheck : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0], default is Undefined, optional
        Contains information needed to make an HTTP or HTTPS check.
        Structure is documented below.
    monitoredResource : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderMonitoredResourceItems0], default is Undefined, optional
        The [monitored resource]
        (https://cloud.google.com/monitoring/api/resources) associated with the
        configuration. The following monitored resource types are supported for
        uptime checks:
    period : str, default is Undefined, optional
        How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    resourceGroup : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0], default is Undefined, optional
        The group resource associated with the configuration.
        Structure is documented below.
    selectedRegions : [str], default is Undefined, optional
        The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error message is returned. Not specifying this field will result in uptime checks running from all regions.
    syntheticMonitor : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0], default is Undefined, optional
        A Synthetic Monitor deployed to a Cloud Functions V2 instance.
        Structure is documented below.
    tcpCheck : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderTCPCheckItems0], default is Undefined, optional
        Contains information needed to make a TCP check.
        Structure is documented below.
    timeout : str, default is Undefined, optional
        The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted formats
    userLabels : {str:str}, default is Undefined, optional
        User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects. The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
    """


    checkerType?: str

    contentMatchers?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderContentMatchersItems0]

    displayName?: str

    httpCheck?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0]

    monitoredResource?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderMonitoredResourceItems0]

    period?: str

    project?: str

    resourceGroup?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0]

    selectedRegions?: [str]

    syntheticMonitor?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0]

    tcpCheck?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderTCPCheckItems0]

    timeout?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderContentMatchersItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider content matchers items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        String or regex content to match (max 1024 bytes)
    jsonPathMatcher : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderContentMatchersItems0JSONPathMatcherItems0], default is Undefined, optional
        Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
        Structure is documented below.
    matcher : str, default is Undefined, optional
        The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
        Default value is CONTAINS_STRING.
        Possible values are: CONTAINS_STRING, NOT_CONTAINS_STRING, MATCHES_REGEX, NOT_MATCHES_REGEX, MATCHES_JSON_PATH, NOT_MATCHES_JSON_PATH.
    """


    content?: str

    jsonPathMatcher?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderContentMatchersItems0JSONPathMatcherItems0]

    matcher?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderContentMatchersItems0JSONPathMatcherItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider content matchers items0 JSON path matcher items0

    Attributes
    ----------
    jsonMatcher : str, default is Undefined, optional
        Options to perform JSONPath content matching.
        Default value is EXACT_MATCH.
        Possible values are: EXACT_MATCH, REGEX_MATCH.
    jsonPath : str, default is Undefined, optional
        JSONPath within the response output pointing to the expected ContentMatcher::content to match against.
    """


    jsonMatcher?: str

    jsonPath?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider HTTP check items0

    Attributes
    ----------
    acceptedResponseStatusCodes : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0], default is Undefined, optional
        If present, the check will only pass if the HTTP response status code is in this set of status codes. If empty, the HTTP status code will only pass if the HTTP status code is 200-299.
        Structure is documented below.
    authInfo : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0AuthInfoItems0], default is Undefined, optional
        The authentication information. Optional when creating an HTTP check; defaults to empty.
        Structure is documented below.
    body : str, default is Undefined, optional
        The request body associated with the HTTP POST request. If content_type is URL_ENCODED, the body passed in must be URL-encoded. Users can provide a Content-Length header via the headers field or the API will do so. If the request_method is GET and body is not empty, the API will return an error. The maximum byte size is 1 megabyte. Note - As with all bytes fields JSON representations are base64 encoded. e.g. foo=bar in URL-encoded form is foo%3Dbar and in base64 encoding is Zm9vJTI1M0RiYXI=.
    contentType : str, default is Undefined, optional
        The content type to use for the check.
        Possible values are: TYPE_UNSPECIFIED, URL_ENCODED, USER_PROVIDED.
    customContentType : str, default is Undefined, optional
        A user provided content type header to use for the check. The invalid configurations outlined in the content_type field apply to custom_content_type, as well as the following 1. content_typeisURL_ENCODEDandcustom_content_typeis set. 2.content_typeisUSER_PROVIDEDandcustom_content_type` is not set.
    headers : {str:str}, default is Undefined, optional
        The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described in RFC 2616 (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.
    maskHeaders : bool, default is Undefined, optional
        Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to true then the headers will be obscured with ******.
    path : str, default is Undefined, optional
        The path to the page to run the check against. Will be combined with the host (specified within the MonitoredResource) and port to construct the full URL. If the provided path does not begin with /, a / will be prepended automatically. Optional (defaults to /).
    pingConfig : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0PingConfigItems0], default is Undefined, optional
        Contains information needed to add pings to an HTTP check.
        Structure is documented below.
    port : float, default is Undefined, optional
        The port to the page to run the check against. Will be combined with host (specified within the monitored_resource) and path to construct the full URL. Optional (defaults to 80 without SSL, or 443 with SSL).
    requestMethod : str, default is Undefined, optional
        The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.
        Default value is GET.
        Possible values are: METHOD_UNSPECIFIED, GET, POST.
    useSsl : bool, default is Undefined, optional
        If true, use HTTPS instead of HTTP to run the check.
    validateSsl : bool, default is Undefined, optional
        Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitored_resource is set to uptime_url. If use_ssl is false, setting validate_ssl to true has no effect.
    """


    acceptedResponseStatusCodes?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0]

    authInfo?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0AuthInfoItems0]

    body?: str

    contentType?: str

    customContentType?: str

    headers?: {str:str}

    maskHeaders?: bool

    path?: str

    pingConfig?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0PingConfigItems0]

    port?: float

    requestMethod?: str

    useSsl?: bool

    validateSsl?: bool


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider HTTP check items0 accepted response status codes items0

    Attributes
    ----------
    statusClass : str, default is Undefined, optional
        A class of status codes to accept.
        Possible values are: STATUS_CLASS_1XX, STATUS_CLASS_2XX, STATUS_CLASS_3XX, STATUS_CLASS_4XX, STATUS_CLASS_5XX, STATUS_CLASS_ANY.
    statusValue : float, default is Undefined, optional
        A status code to accept.
    """


    statusClass?: str

    statusValue?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0AuthInfoItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider HTTP check items0 auth info items0

    Attributes
    ----------
    username : str, default is Undefined, optional
        The username to authenticate.
    """


    username?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderHTTPCheckItems0PingConfigItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider HTTP check items0 ping config items0

    Attributes
    ----------
    pingsCount : float, default is Undefined, optional
        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
    """


    pingsCount?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderMonitoredResourceItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider monitored resource items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels project_id, instance_id, and zone.
    $type : str, default is Undefined, optional
        The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types and Logging resource types.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider resource group items0

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The group of resources being monitored. Should be the name of a group
    groupIdRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDSelector, default is Undefined, optional
        group Id selector
    resourceType : str, default is Undefined, optional
        The resource type of the group members.
        Possible values are: RESOURCE_TYPE_UNSPECIFIED, INSTANCE, AWS_ELB_LOAD_BALANCER.
    """


    groupId?: str

    groupIdRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDRef

    groupIdSelector?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDSelector

    resourceType?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDRef:
    """
    Reference to a Group in monitoring to populate groupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDRefPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDSelector:
    """
    Selector for a Group in monitoring to populate groupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderResourceGroupItems0GroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider synthetic monitor items0

    Attributes
    ----------
    cloudFunctionV2 : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0], default is Undefined, optional
        Target a Synthetic Monitor GCFv2 Instance
        Structure is documented below.
    """


    cloudFunctionV2?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0]


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider synthetic monitor items0 cloud function v2 items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The fully qualified name of the cloud function resource.
    nameRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRef, default is Undefined, optional
        name ref
    nameSelector : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelector, default is Undefined, optional
        name selector
    """


    name?: str

    nameRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRef

    nameSelector?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelector


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRef:
    """
    Reference to a Function in cloudfunctions2 to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRefPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelector:
    """
    Selector for a Function in cloudfunctions2 to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelectorPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderSyntheticMonitorItems0CloudFunctionV2Items0NameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderTCPCheckItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider TCP check items0

    Attributes
    ----------
    pingConfig : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderTCPCheckItems0PingConfigItems0], default is Undefined, optional
        Contains information needed to add pings to a TCP check.
        Structure is documented below.
    port : float, default is Undefined, optional
        The port to the page to run the check against. Will be combined with host (specified within the monitored_resource) to construct the full URL.
    """


    pingConfig?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderTCPCheckItems0PingConfigItems0]

    port?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecInitProviderTCPCheckItems0PingConfigItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config spec init provider TCP check items0 ping config items0

    Attributes
    ----------
    pingsCount : float, default is Undefined, optional
        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
    """


    pingsCount?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecProviderConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatus:
    """
    UptimeCheckConfigStatus defines the observed state of UptimeCheckConfig.

    Attributes
    ----------
    atProvider : MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProvider

    conditions?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusConditionsItems0]


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProvider:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider

    Attributes
    ----------
    checkerType : str, default is Undefined, optional
        The checker type to use for the check. If the monitored resource type is servicedirectory_service, checker_type must be set to VPC_CHECKERS.
        Possible values are: STATIC_IP_CHECKERS, VPC_CHECKERS.
    contentMatchers : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderContentMatchersItems0], default is Undefined, optional
        The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and other entries will be ignored. The server will look for an exact match of the string in the page response's content. This field is optional and should only be specified if a content match is required.
        Structure is documented below.
    displayName : str, default is Undefined, optional
        A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver Workspace in order to make it easier to identify; however, uniqueness is not enforced.
    httpCheck : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0], default is Undefined, optional
        Contains information needed to make an HTTP or HTTPS check.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    monitoredResource : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderMonitoredResourceItems0], default is Undefined, optional
        The [monitored resource]
        (https://cloud.google.com/monitoring/api/resources) associated with the
        configuration. The following monitored resource types are supported for
        uptime checks:
    name : str, default is Undefined, optional
        A unique resource name for this UptimeCheckConfig. The format is projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
    period : str, default is Undefined, optional
        How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    resourceGroup : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderResourceGroupItems0], default is Undefined, optional
        The group resource associated with the configuration.
        Structure is documented below.
    selectedRegions : [str], default is Undefined, optional
        The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error message is returned. Not specifying this field will result in uptime checks running from all regions.
    syntheticMonitor : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderSyntheticMonitorItems0], default is Undefined, optional
        A Synthetic Monitor deployed to a Cloud Functions V2 instance.
        Structure is documented below.
    tcpCheck : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderTCPCheckItems0], default is Undefined, optional
        Contains information needed to make a TCP check.
        Structure is documented below.
    timeout : str, default is Undefined, optional
        The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted formats
    uptimeCheckId : str, default is Undefined, optional
        The id of the uptime check
    userLabels : {str:str}, default is Undefined, optional
        User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects. The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
    """


    checkerType?: str

    contentMatchers?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderContentMatchersItems0]

    displayName?: str

    httpCheck?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0]

    id?: str

    monitoredResource?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderMonitoredResourceItems0]

    name?: str

    period?: str

    project?: str

    resourceGroup?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderResourceGroupItems0]

    selectedRegions?: [str]

    syntheticMonitor?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderSyntheticMonitorItems0]

    tcpCheck?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderTCPCheckItems0]

    timeout?: str

    uptimeCheckId?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderContentMatchersItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider content matchers items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        String or regex content to match (max 1024 bytes)
    jsonPathMatcher : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderContentMatchersItems0JSONPathMatcherItems0], default is Undefined, optional
        Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
        Structure is documented below.
    matcher : str, default is Undefined, optional
        The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
        Default value is CONTAINS_STRING.
        Possible values are: CONTAINS_STRING, NOT_CONTAINS_STRING, MATCHES_REGEX, NOT_MATCHES_REGEX, MATCHES_JSON_PATH, NOT_MATCHES_JSON_PATH.
    """


    content?: str

    jsonPathMatcher?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderContentMatchersItems0JSONPathMatcherItems0]

    matcher?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderContentMatchersItems0JSONPathMatcherItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider content matchers items0 JSON path matcher items0

    Attributes
    ----------
    jsonMatcher : str, default is Undefined, optional
        Options to perform JSONPath content matching.
        Default value is EXACT_MATCH.
        Possible values are: EXACT_MATCH, REGEX_MATCH.
    jsonPath : str, default is Undefined, optional
        JSONPath within the response output pointing to the expected ContentMatcher::content to match against.
    """


    jsonMatcher?: str

    jsonPath?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider HTTP check items0

    Attributes
    ----------
    acceptedResponseStatusCodes : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0], default is Undefined, optional
        If present, the check will only pass if the HTTP response status code is in this set of status codes. If empty, the HTTP status code will only pass if the HTTP status code is 200-299.
        Structure is documented below.
    authInfo : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0AuthInfoItems0], default is Undefined, optional
        The authentication information. Optional when creating an HTTP check; defaults to empty.
        Structure is documented below.
    body : str, default is Undefined, optional
        The request body associated with the HTTP POST request. If content_type is URL_ENCODED, the body passed in must be URL-encoded. Users can provide a Content-Length header via the headers field or the API will do so. If the request_method is GET and body is not empty, the API will return an error. The maximum byte size is 1 megabyte. Note - As with all bytes fields JSON representations are base64 encoded. e.g. foo=bar in URL-encoded form is foo%3Dbar and in base64 encoding is Zm9vJTI1M0RiYXI=.
    contentType : str, default is Undefined, optional
        The content type to use for the check.
        Possible values are: TYPE_UNSPECIFIED, URL_ENCODED, USER_PROVIDED.
    customContentType : str, default is Undefined, optional
        A user provided content type header to use for the check. The invalid configurations outlined in the content_type field apply to custom_content_type, as well as the following 1. content_typeisURL_ENCODEDandcustom_content_typeis set. 2.content_typeisUSER_PROVIDEDandcustom_content_type` is not set.
    headers : {str:str}, default is Undefined, optional
        The list of headers to send as part of the uptime check request. If two headers have the same key and different values, they should be entered as a single header, with the value being a comma-separated list of all the desired values as described in RFC 2616 (page 31). Entering two separate headers with the same key in a Create call will cause the first to be overwritten by the second. The maximum number of headers allowed is 100.
    maskHeaders : bool, default is Undefined, optional
        Boolean specifying whether to encrypt the header information. Encryption should be specified for any headers related to authentication that you do not wish to be seen when retrieving the configuration. The server will be responsible for encrypting the headers. On Get/List calls, if mask_headers is set to true then the headers will be obscured with ******.
    path : str, default is Undefined, optional
        The path to the page to run the check against. Will be combined with the host (specified within the MonitoredResource) and port to construct the full URL. If the provided path does not begin with /, a / will be prepended automatically. Optional (defaults to /).
    pingConfig : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0PingConfigItems0], default is Undefined, optional
        Contains information needed to add pings to an HTTP check.
        Structure is documented below.
    port : float, default is Undefined, optional
        The port to the page to run the check against. Will be combined with host (specified within the monitored_resource) and path to construct the full URL. Optional (defaults to 80 without SSL, or 443 with SSL).
    requestMethod : str, default is Undefined, optional
        The HTTP request method to use for the check. If set to METHOD_UNSPECIFIED then request_method defaults to GET.
        Default value is GET.
        Possible values are: METHOD_UNSPECIFIED, GET, POST.
    useSsl : bool, default is Undefined, optional
        If true, use HTTPS instead of HTTP to run the check.
    validateSsl : bool, default is Undefined, optional
        Boolean specifying whether to include SSL certificate validation as a part of the Uptime check. Only applies to checks where monitored_resource is set to uptime_url. If use_ssl is false, setting validate_ssl to true has no effect.
    """


    acceptedResponseStatusCodes?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0]

    authInfo?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0AuthInfoItems0]

    body?: str

    contentType?: str

    customContentType?: str

    headers?: {str:str}

    maskHeaders?: bool

    path?: str

    pingConfig?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0PingConfigItems0]

    port?: float

    requestMethod?: str

    useSsl?: bool

    validateSsl?: bool


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0AcceptedResponseStatusCodesItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider HTTP check items0 accepted response status codes items0

    Attributes
    ----------
    statusClass : str, default is Undefined, optional
        A class of status codes to accept.
        Possible values are: STATUS_CLASS_1XX, STATUS_CLASS_2XX, STATUS_CLASS_3XX, STATUS_CLASS_4XX, STATUS_CLASS_5XX, STATUS_CLASS_ANY.
    statusValue : float, default is Undefined, optional
        A status code to accept.
    """


    statusClass?: str

    statusValue?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0AuthInfoItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider HTTP check items0 auth info items0

    Attributes
    ----------
    username : str, default is Undefined, optional
        The username to authenticate.
    """


    username?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderHTTPCheckItems0PingConfigItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider HTTP check items0 ping config items0

    Attributes
    ----------
    pingsCount : float, default is Undefined, optional
        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
    """


    pingsCount?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderMonitoredResourceItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider monitored resource items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels project_id, instance_id, and zone.
    $type : str, default is Undefined, optional
        The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types and Logging resource types.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderResourceGroupItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider resource group items0

    Attributes
    ----------
    groupId : str, default is Undefined, optional
        The group of resources being monitored. Should be the name of a group
    resourceType : str, default is Undefined, optional
        The resource type of the group members.
        Possible values are: RESOURCE_TYPE_UNSPECIFIED, INSTANCE, AWS_ELB_LOAD_BALANCER.
    """


    groupId?: str

    resourceType?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderSyntheticMonitorItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider synthetic monitor items0

    Attributes
    ----------
    cloudFunctionV2 : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderSyntheticMonitorItems0CloudFunctionV2Items0], default is Undefined, optional
        Target a Synthetic Monitor GCFv2 Instance
        Structure is documented below.
    """


    cloudFunctionV2?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderSyntheticMonitorItems0CloudFunctionV2Items0]


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderSyntheticMonitorItems0CloudFunctionV2Items0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider synthetic monitor items0 cloud function v2 items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The fully qualified name of the cloud function resource.
    """


    name?: str


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderTCPCheckItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider TCP check items0

    Attributes
    ----------
    pingConfig : [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderTCPCheckItems0PingConfigItems0], default is Undefined, optional
        Contains information needed to add pings to a TCP check.
        Structure is documented below.
    port : float, default is Undefined, optional
        The port to the page to run the check against. Will be combined with host (specified within the monitored_resource) to construct the full URL.
    """


    pingConfig?: [MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderTCPCheckItems0PingConfigItems0]

    port?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusAtProviderTCPCheckItems0PingConfigItems0:
    """
    monitoring gcp upbound io v1beta1 uptime check config status at provider TCP check items0 ping config items0

    Attributes
    ----------
    pingsCount : float, default is Undefined, optional
        Number of ICMP pings. A maximum of 3 ICMP pings is currently supported.
    """


    pingsCount?: float


schema MonitoringGcpUpboundIoV1beta1UptimeCheckConfigStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


