"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ServicePerimeter:
    """
    ServicePerimeter is the Schema for the ServicePerimeters API. ServicePerimeter describes a set of GCP resources which can freely import and export data amongst themselves, but not export outside of the ServicePerimeter.

    Attributes
    ----------
    apiVersion : str, default is "accesscontextmanager.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServicePerimeter", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpec, default is Undefined, required
        spec
    status : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatus, default is Undefined, optional
        status
    """


    apiVersion: "accesscontextmanager.gcp.upbound.io/v1beta1" = "accesscontextmanager.gcp.upbound.io/v1beta1"

    kind: "ServicePerimeter" = "ServicePerimeter"

    metadata?: v1.ObjectMeta

    spec: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpec

    status?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatus


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpec:
    """
    ServicePerimeterSpec defines the desired state of ServicePerimeter

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProvider, default is Undefined, required
        for provider
    initProvider : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProvider

    initProvider?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecProviderConfigRef

    publishConnectionDetailsTo?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecWriteConnectionSecretToRef


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProvider:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the ServicePerimeter and its use. Does not affect
        behavior.
    name : str, default is Undefined, optional
        Resource name for the ServicePerimeter. The short_name component must
        begin with a letter and only include alphanumeric and '_'.
        Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}
    parent : str, default is Undefined, optional
        The AccessPolicy this ServicePerimeter lives in.
        Format: accessPolicies/{policy_id}
    perimeterType : str, default is Undefined, optional
        Specifies the type of the Perimeter. There are two types: regular and
        bridge. Regular Service Perimeter contains resources, access levels,
        and restricted services. Every resource can be in at most
        ONE regular Service Perimeter.
        In addition to being in a regular service perimeter, a resource can also
        be in zero or more perimeter bridges. A perimeter bridge only contains
        resources. Cross project operations are permitted if all effected
        resources share some perimeter (whether bridge or regular). Perimeter
        Bridge does not contain access levels or services: those are governed
        entirely by the regular perimeter that resource is in.
        Perimeter Bridges are typically useful when building more complex
        topologies with many independent perimeters that need to share some data
        with a common perimeter, but should not be able to share data among
        themselves.
        Default value is PERIMETER_TYPE_REGULAR.
        Possible values are: PERIMETER_TYPE_REGULAR, PERIMETER_TYPE_BRIDGE.
    spec : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0], default is Undefined, optional
        Proposed (or dry run) ServicePerimeter configuration.
        This configuration allows to specify and test ServicePerimeter configuration
        without enforcing actual access restrictions. Only allowed to be set when
        the useExplicitDryRunSpec flag is set.
        Structure is documented below.
    status : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0], default is Undefined, optional
        ServicePerimeter configuration. Specifies sets of resources,
        restricted services and access levels that determine
        perimeter content and boundaries.
        Structure is documented below.
    title : str, default is Undefined, optional
        Human readable title. Must be unique within the Policy.
    useExplicitDryRunSpec : bool, default is Undefined, optional
        Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists
        for all Service Perimeters, and that spec is identical to the status for those
        Service Perimeters. When this flag is set, it inhibits the generation of the
        implicit spec, thereby allowing the user to explicitly provide a
        configuration ("spec") to use in a dry-run version of the Service Perimeter.
        This allows the user to test changes to the enforced config ("status") without
        actually enforcing them. This testing is done through analyzing the differences
        between currently enforced and suggested restrictions. useExplicitDryRunSpec must
        bet set to True if any of the fields in the spec are set to non-default values.
    """


    description?: str

    name?: str

    parent?: str

    perimeterType?: str

    spec?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0]

    status?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0]

    title?: str

    useExplicitDryRunSpec?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0

    Attributes
    ----------
    accessLevels : [str], default is Undefined, optional
        A list of AccessLevel resource names that allow resources within
        the ServicePerimeter to be accessed from the internet.
        AccessLevels listed must be in the same policy as this
        ServicePerimeter. Referencing a nonexistent AccessLevel is a
        syntax error. If no AccessLevel names are listed, resources within
        the perimeter can only be accessed via GCP calls with request
        origins within the perimeter. For Service Perimeter Bridge, must
        be empty.
        Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
    accessLevelsRefs : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsRefsItems0], default is Undefined, optional
        References to AccessLevel to populate accessLevels.
    accessLevelsSelector : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsSelector, default is Undefined, optional
        access levels selector
    egressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0], default is Undefined, optional
        List of EgressPolicies to apply to the perimeter. A perimeter may
        have multiple EgressPolicies, each of which is evaluated separately.
        Access is granted if any EgressPolicy grants it. Must be empty for
        a perimeter bridge.
        Structure is documented below.
    ingressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0], default is Undefined, optional
        List of IngressPolicies to apply to the perimeter. A perimeter may
        have multiple IngressPolicies, each of which is evaluated
        separately. Access is granted if any Ingress Policy grants it.
        Must be empty for a perimeter bridge.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    restrictedServices : [str], default is Undefined, optional
        GCP services that are subject to the Service Perimeter
        restrictions. Must contain a list of services. For example, if
        storage.googleapis.com is specified, access to the storage
        buckets inside the perimeter must meet the perimeter's access
        restrictions.
    vpcAccessibleServices : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0VpcAccessibleServicesItems0], default is Undefined, optional
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
        Structure is documented below.
    """


    accessLevels?: [str]

    accessLevelsRefs?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsRefsItems0]

    accessLevelsSelector?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsSelector

    egressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0]

    ingressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0]

    resources?: [str]

    restrictedServices?: [str]

    vpcAccessibleServices?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0VpcAccessibleServicesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsRefsItems0Policy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsSelector:
    """
    Selector for a list of AccessLevel to populate accessLevels.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0AccessLevelsSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 egress policies items0

    Attributes
    ----------
    egressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressFromItems0], default is Undefined, optional
        Defines conditions on the source of a request causing this EgressPolicy to apply.
        Structure is documented below.
    egressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and destination resources that
        cause this EgressPolicy to apply.
        Structure is documented below.
    """


    egressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressFromItems0]

    egressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 egress policies items0 egress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sourceRestriction : str, default is Undefined, optional
        Whether to enforce traffic restrictions based on sources field. If the sources field is non-empty, then this field must be set to SOURCE_RESTRICTION_ENABLED.
        Possible values are: SOURCE_RESTRICTION_UNSPECIFIED, SOURCE_RESTRICTION_ENABLED, SOURCE_RESTRICTION_DISABLED.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sourceRestriction?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 egress policies items0 egress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    """


    accessLevel?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 egress policies items0 egress to items0

    Attributes
    ----------
    externalResources : [str], default is Undefined, optional
        A list of external resources that are allowed to be accessed. A request
        matches if it contains an external resource in this list (Example:
        s3://bucket/path). Currently '*' is not allowed.
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    externalResources?: [str]

    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 egress policies items0 egress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 egress policies items0 egress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 ingress policies items0

    Attributes
    ----------
    ingressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressFromItems0], default is Undefined, optional
        Defines the conditions on the source of a request causing this IngressPolicy
        to apply.
        Structure is documented below.
    ingressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and request destination that cause
        this IngressPolicy to apply.
        Structure is documented below.
    """


    ingressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressFromItems0]

    ingressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 ingress policies items0 ingress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 ingress policies items0 ingress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    resource : str, default is Undefined, optional
        A Google Cloud resource that is allowed to ingress the perimeter.
        Requests from these resources will be allowed to access perimeter data.
        Currently only projects are allowed. Format projects/{project_number}
        The project may be in any Google Cloud organization, not just the
        organization that the perimeter is defined in. * is not allowed, the case
        of allowing all Google Cloud resources only is not supported.
    """


    accessLevel?: str

    resource?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 ingress policies items0 ingress to items0

    Attributes
    ----------
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 ingress policies items0 ingress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 ingress policies items0 ingress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderSpecItems0VpcAccessibleServicesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider spec items0 vpc accessible services items0

    Attributes
    ----------
    allowedServices : [str], default is Undefined, optional
        The list of APIs usable within the Service Perimeter.
        Must be empty unless enableRestriction is True.
    enableRestriction : bool, default is Undefined, optional
        Whether to restrict API calls within the Service Perimeter to the
        list of APIs specified in 'allowedServices'.
    """


    allowedServices?: [str]

    enableRestriction?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0

    Attributes
    ----------
    accessLevels : [str], default is Undefined, optional
        A list of AccessLevel resource names that allow resources within
        the ServicePerimeter to be accessed from the internet.
        AccessLevels listed must be in the same policy as this
        ServicePerimeter. Referencing a nonexistent AccessLevel is a
        syntax error. If no AccessLevel names are listed, resources within
        the perimeter can only be accessed via GCP calls with request
        origins within the perimeter. For Service Perimeter Bridge, must
        be empty.
        Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
    accessLevelsRefs : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsRefsItems0], default is Undefined, optional
        References to AccessLevel to populate accessLevels.
    accessLevelsSelector : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsSelector, default is Undefined, optional
        access levels selector
    egressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0], default is Undefined, optional
        List of EgressPolicies to apply to the perimeter. A perimeter may
        have multiple EgressPolicies, each of which is evaluated separately.
        Access is granted if any EgressPolicy grants it. Must be empty for
        a perimeter bridge.
        Structure is documented below.
    ingressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0], default is Undefined, optional
        List of IngressPolicies to apply to the perimeter. A perimeter may
        have multiple IngressPolicies, each of which is evaluated
        separately. Access is granted if any Ingress Policy grants it.
        Must be empty for a perimeter bridge.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    restrictedServices : [str], default is Undefined, optional
        GCP services that are subject to the Service Perimeter
        restrictions. Must contain a list of services. For example, if
        storage.googleapis.com is specified, access to the storage
        buckets inside the perimeter must meet the perimeter's access
        restrictions.
    vpcAccessibleServices : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0VpcAccessibleServicesItems0], default is Undefined, optional
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
        Structure is documented below.
    """


    accessLevels?: [str]

    accessLevelsRefs?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsRefsItems0]

    accessLevelsSelector?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsSelector

    egressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0]

    ingressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0]

    resources?: [str]

    restrictedServices?: [str]

    vpcAccessibleServices?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0VpcAccessibleServicesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsRefsItems0Policy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsSelector:
    """
    Selector for a list of AccessLevel to populate accessLevels.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0AccessLevelsSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 egress policies items0

    Attributes
    ----------
    egressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressFromItems0], default is Undefined, optional
        Defines conditions on the source of a request causing this EgressPolicy to apply.
        Structure is documented below.
    egressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and destination resources that
        cause this EgressPolicy to apply.
        Structure is documented below.
    """


    egressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressFromItems0]

    egressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 egress policies items0 egress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sourceRestriction : str, default is Undefined, optional
        Whether to enforce traffic restrictions based on sources field. If the sources field is non-empty, then this field must be set to SOURCE_RESTRICTION_ENABLED.
        Possible values are: SOURCE_RESTRICTION_UNSPECIFIED, SOURCE_RESTRICTION_ENABLED, SOURCE_RESTRICTION_DISABLED.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sourceRestriction?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 egress policies items0 egress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    """


    accessLevel?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 egress policies items0 egress to items0

    Attributes
    ----------
    externalResources : [str], default is Undefined, optional
        A list of external resources that are allowed to be accessed. A request
        matches if it contains an external resource in this list (Example:
        s3://bucket/path). Currently '*' is not allowed.
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    externalResources?: [str]

    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 egress policies items0 egress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 egress policies items0 egress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 ingress policies items0

    Attributes
    ----------
    ingressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0], default is Undefined, optional
        Defines the conditions on the source of a request causing this IngressPolicy
        to apply.
        Structure is documented below.
    ingressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and request destination that cause
        this IngressPolicy to apply.
        Structure is documented below.
    """


    ingressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0]

    ingressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 ingress policies items0 ingress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 ingress policies items0 ingress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    accessLevelRef : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRef, default is Undefined, optional
        access level ref
    accessLevelSelector : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelector, default is Undefined, optional
        access level selector
    resource : str, default is Undefined, optional
        A Google Cloud resource that is allowed to ingress the perimeter.
        Requests from these resources will be allowed to access perimeter data.
        Currently only projects are allowed. Format projects/{project_number}
        The project may be in any Google Cloud organization, not just the
        organization that the perimeter is defined in. * is not allowed, the case
        of allowing all Google Cloud resources only is not supported.
    """


    accessLevel?: str

    accessLevelRef?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRef

    accessLevelSelector?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelector

    resource?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRef:
    """
    Reference to a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelector:
    """
    Selector for a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 ingress policies items0 ingress to items0

    Attributes
    ----------
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 ingress policies items0 ingress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 ingress policies items0 ingress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecForProviderStatusItems0VpcAccessibleServicesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec for provider status items0 vpc accessible services items0

    Attributes
    ----------
    allowedServices : [str], default is Undefined, optional
        The list of APIs usable within the Service Perimeter.
        Must be empty unless enableRestriction is True.
    enableRestriction : bool, default is Undefined, optional
        Whether to restrict API calls within the Service Perimeter to the
        list of APIs specified in 'allowedServices'.
    """


    allowedServices?: [str]

    enableRestriction?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the ServicePerimeter and its use. Does not affect
        behavior.
    name : str, default is Undefined, optional
        Resource name for the ServicePerimeter. The short_name component must
        begin with a letter and only include alphanumeric and '_'.
        Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}
    parent : str, default is Undefined, optional
        The AccessPolicy this ServicePerimeter lives in.
        Format: accessPolicies/{policy_id}
    perimeterType : str, default is Undefined, optional
        Specifies the type of the Perimeter. There are two types: regular and
        bridge. Regular Service Perimeter contains resources, access levels,
        and restricted services. Every resource can be in at most
        ONE regular Service Perimeter.
        In addition to being in a regular service perimeter, a resource can also
        be in zero or more perimeter bridges. A perimeter bridge only contains
        resources. Cross project operations are permitted if all effected
        resources share some perimeter (whether bridge or regular). Perimeter
        Bridge does not contain access levels or services: those are governed
        entirely by the regular perimeter that resource is in.
        Perimeter Bridges are typically useful when building more complex
        topologies with many independent perimeters that need to share some data
        with a common perimeter, but should not be able to share data among
        themselves.
        Default value is PERIMETER_TYPE_REGULAR.
        Possible values are: PERIMETER_TYPE_REGULAR, PERIMETER_TYPE_BRIDGE.
    spec : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0], default is Undefined, optional
        Proposed (or dry run) ServicePerimeter configuration.
        This configuration allows to specify and test ServicePerimeter configuration
        without enforcing actual access restrictions. Only allowed to be set when
        the useExplicitDryRunSpec flag is set.
        Structure is documented below.
    status : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0], default is Undefined, optional
        ServicePerimeter configuration. Specifies sets of resources,
        restricted services and access levels that determine
        perimeter content and boundaries.
        Structure is documented below.
    title : str, default is Undefined, optional
        Human readable title. Must be unique within the Policy.
    useExplicitDryRunSpec : bool, default is Undefined, optional
        Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists
        for all Service Perimeters, and that spec is identical to the status for those
        Service Perimeters. When this flag is set, it inhibits the generation of the
        implicit spec, thereby allowing the user to explicitly provide a
        configuration ("spec") to use in a dry-run version of the Service Perimeter.
        This allows the user to test changes to the enforced config ("status") without
        actually enforcing them. This testing is done through analyzing the differences
        between currently enforced and suggested restrictions. useExplicitDryRunSpec must
        bet set to True if any of the fields in the spec are set to non-default values.
    """


    description?: str

    name?: str

    parent?: str

    perimeterType?: str

    spec?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0]

    status?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0]

    title?: str

    useExplicitDryRunSpec?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0

    Attributes
    ----------
    accessLevels : [str], default is Undefined, optional
        A list of AccessLevel resource names that allow resources within
        the ServicePerimeter to be accessed from the internet.
        AccessLevels listed must be in the same policy as this
        ServicePerimeter. Referencing a nonexistent AccessLevel is a
        syntax error. If no AccessLevel names are listed, resources within
        the perimeter can only be accessed via GCP calls with request
        origins within the perimeter. For Service Perimeter Bridge, must
        be empty.
        Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
    accessLevelsRefs : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsRefsItems0], default is Undefined, optional
        References to AccessLevel to populate accessLevels.
    accessLevelsSelector : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsSelector, default is Undefined, optional
        access levels selector
    egressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0], default is Undefined, optional
        List of EgressPolicies to apply to the perimeter. A perimeter may
        have multiple EgressPolicies, each of which is evaluated separately.
        Access is granted if any EgressPolicy grants it. Must be empty for
        a perimeter bridge.
        Structure is documented below.
    ingressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0], default is Undefined, optional
        List of IngressPolicies to apply to the perimeter. A perimeter may
        have multiple IngressPolicies, each of which is evaluated
        separately. Access is granted if any Ingress Policy grants it.
        Must be empty for a perimeter bridge.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    restrictedServices : [str], default is Undefined, optional
        GCP services that are subject to the Service Perimeter
        restrictions. Must contain a list of services. For example, if
        storage.googleapis.com is specified, access to the storage
        buckets inside the perimeter must meet the perimeter's access
        restrictions.
    vpcAccessibleServices : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0VpcAccessibleServicesItems0], default is Undefined, optional
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
        Structure is documented below.
    """


    accessLevels?: [str]

    accessLevelsRefs?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsRefsItems0]

    accessLevelsSelector?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsSelector

    egressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0]

    ingressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0]

    resources?: [str]

    restrictedServices?: [str]

    vpcAccessibleServices?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0VpcAccessibleServicesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsRefsItems0Policy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsSelector:
    """
    Selector for a list of AccessLevel to populate accessLevels.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0AccessLevelsSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 egress policies items0

    Attributes
    ----------
    egressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressFromItems0], default is Undefined, optional
        Defines conditions on the source of a request causing this EgressPolicy to apply.
        Structure is documented below.
    egressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and destination resources that
        cause this EgressPolicy to apply.
        Structure is documented below.
    """


    egressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressFromItems0]

    egressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 egress policies items0 egress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sourceRestriction : str, default is Undefined, optional
        Whether to enforce traffic restrictions based on sources field. If the sources field is non-empty, then this field must be set to SOURCE_RESTRICTION_ENABLED.
        Possible values are: SOURCE_RESTRICTION_UNSPECIFIED, SOURCE_RESTRICTION_ENABLED, SOURCE_RESTRICTION_DISABLED.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sourceRestriction?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 egress policies items0 egress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    """


    accessLevel?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 egress policies items0 egress to items0

    Attributes
    ----------
    externalResources : [str], default is Undefined, optional
        A list of external resources that are allowed to be accessed. A request
        matches if it contains an external resource in this list (Example:
        s3://bucket/path). Currently '*' is not allowed.
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    externalResources?: [str]

    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 egress policies items0 egress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 egress policies items0 egress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 ingress policies items0

    Attributes
    ----------
    ingressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressFromItems0], default is Undefined, optional
        Defines the conditions on the source of a request causing this IngressPolicy
        to apply.
        Structure is documented below.
    ingressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and request destination that cause
        this IngressPolicy to apply.
        Structure is documented below.
    """


    ingressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressFromItems0]

    ingressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 ingress policies items0 ingress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 ingress policies items0 ingress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    resource : str, default is Undefined, optional
        A Google Cloud resource that is allowed to ingress the perimeter.
        Requests from these resources will be allowed to access perimeter data.
        Currently only projects are allowed. Format projects/{project_number}
        The project may be in any Google Cloud organization, not just the
        organization that the perimeter is defined in. * is not allowed, the case
        of allowing all Google Cloud resources only is not supported.
    """


    accessLevel?: str

    resource?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 ingress policies items0 ingress to items0

    Attributes
    ----------
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 ingress policies items0 ingress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 ingress policies items0 ingress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderSpecItems0VpcAccessibleServicesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider spec items0 vpc accessible services items0

    Attributes
    ----------
    allowedServices : [str], default is Undefined, optional
        The list of APIs usable within the Service Perimeter.
        Must be empty unless enableRestriction is True.
    enableRestriction : bool, default is Undefined, optional
        Whether to restrict API calls within the Service Perimeter to the
        list of APIs specified in 'allowedServices'.
    """


    allowedServices?: [str]

    enableRestriction?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0

    Attributes
    ----------
    accessLevels : [str], default is Undefined, optional
        A list of AccessLevel resource names that allow resources within
        the ServicePerimeter to be accessed from the internet.
        AccessLevels listed must be in the same policy as this
        ServicePerimeter. Referencing a nonexistent AccessLevel is a
        syntax error. If no AccessLevel names are listed, resources within
        the perimeter can only be accessed via GCP calls with request
        origins within the perimeter. For Service Perimeter Bridge, must
        be empty.
        Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
    accessLevelsRefs : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsRefsItems0], default is Undefined, optional
        References to AccessLevel to populate accessLevels.
    accessLevelsSelector : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsSelector, default is Undefined, optional
        access levels selector
    egressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0], default is Undefined, optional
        List of EgressPolicies to apply to the perimeter. A perimeter may
        have multiple EgressPolicies, each of which is evaluated separately.
        Access is granted if any EgressPolicy grants it. Must be empty for
        a perimeter bridge.
        Structure is documented below.
    ingressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0], default is Undefined, optional
        List of IngressPolicies to apply to the perimeter. A perimeter may
        have multiple IngressPolicies, each of which is evaluated
        separately. Access is granted if any Ingress Policy grants it.
        Must be empty for a perimeter bridge.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    restrictedServices : [str], default is Undefined, optional
        GCP services that are subject to the Service Perimeter
        restrictions. Must contain a list of services. For example, if
        storage.googleapis.com is specified, access to the storage
        buckets inside the perimeter must meet the perimeter's access
        restrictions.
    vpcAccessibleServices : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0VpcAccessibleServicesItems0], default is Undefined, optional
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
        Structure is documented below.
    """


    accessLevels?: [str]

    accessLevelsRefs?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsRefsItems0]

    accessLevelsSelector?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsSelector

    egressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0]

    ingressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0]

    resources?: [str]

    restrictedServices?: [str]

    vpcAccessibleServices?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0VpcAccessibleServicesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsRefsItems0Policy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsSelector:
    """
    Selector for a list of AccessLevel to populate accessLevels.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0AccessLevelsSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 egress policies items0

    Attributes
    ----------
    egressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressFromItems0], default is Undefined, optional
        Defines conditions on the source of a request causing this EgressPolicy to apply.
        Structure is documented below.
    egressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and destination resources that
        cause this EgressPolicy to apply.
        Structure is documented below.
    """


    egressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressFromItems0]

    egressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 egress policies items0 egress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sourceRestriction : str, default is Undefined, optional
        Whether to enforce traffic restrictions based on sources field. If the sources field is non-empty, then this field must be set to SOURCE_RESTRICTION_ENABLED.
        Possible values are: SOURCE_RESTRICTION_UNSPECIFIED, SOURCE_RESTRICTION_ENABLED, SOURCE_RESTRICTION_DISABLED.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sourceRestriction?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 egress policies items0 egress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    """


    accessLevel?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 egress policies items0 egress to items0

    Attributes
    ----------
    externalResources : [str], default is Undefined, optional
        A list of external resources that are allowed to be accessed. A request
        matches if it contains an external resource in this list (Example:
        s3://bucket/path). Currently '*' is not allowed.
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    externalResources?: [str]

    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 egress policies items0 egress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 egress policies items0 egress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 ingress policies items0

    Attributes
    ----------
    ingressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0], default is Undefined, optional
        Defines the conditions on the source of a request causing this IngressPolicy
        to apply.
        Structure is documented below.
    ingressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and request destination that cause
        this IngressPolicy to apply.
        Structure is documented below.
    """


    ingressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0]

    ingressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 ingress policies items0 ingress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 ingress policies items0 ingress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    accessLevelRef : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRef, default is Undefined, optional
        access level ref
    accessLevelSelector : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelector, default is Undefined, optional
        access level selector
    resource : str, default is Undefined, optional
        A Google Cloud resource that is allowed to ingress the perimeter.
        Requests from these resources will be allowed to access perimeter data.
        Currently only projects are allowed. Format projects/{project_number}
        The project may be in any Google Cloud organization, not just the
        organization that the perimeter is defined in. * is not allowed, the case
        of allowing all Google Cloud resources only is not supported.
    """


    accessLevel?: str

    accessLevelRef?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRef

    accessLevelSelector?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelector

    resource?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRef:
    """
    Reference to a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelector:
    """
    Selector for a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0AccessLevelSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 ingress policies items0 ingress to items0

    Attributes
    ----------
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 ingress policies items0 ingress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 ingress policies items0 ingress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecInitProviderStatusItems0VpcAccessibleServicesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter spec init provider status items0 vpc accessible services items0

    Attributes
    ----------
    allowedServices : [str], default is Undefined, optional
        The list of APIs usable within the Service Perimeter.
        Must be empty unless enableRestriction is True.
    enableRestriction : bool, default is Undefined, optional
        Whether to restrict API calls within the Service Perimeter to the
        list of APIs specified in 'allowedServices'.
    """


    allowedServices?: [str]

    enableRestriction?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecProviderConfigRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToConfigRef

    metadata?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToMetadata

    name: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToConfigRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatus:
    """
    ServicePerimeterStatus defines the observed state of ServicePerimeter.

    Attributes
    ----------
    atProvider : AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProvider

    conditions?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusConditionsItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProvider:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        Time the AccessPolicy was created in UTC.
    description : str, default is Undefined, optional
        Description of the ServicePerimeter and its use. Does not affect
        behavior.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    name : str, default is Undefined, optional
        Resource name for the ServicePerimeter. The short_name component must
        begin with a letter and only include alphanumeric and '_'.
        Format: accessPolicies/{policy_id}/servicePerimeters/{short_name}
    parent : str, default is Undefined, optional
        The AccessPolicy this ServicePerimeter lives in.
        Format: accessPolicies/{policy_id}
    perimeterType : str, default is Undefined, optional
        Specifies the type of the Perimeter. There are two types: regular and
        bridge. Regular Service Perimeter contains resources, access levels,
        and restricted services. Every resource can be in at most
        ONE regular Service Perimeter.
        In addition to being in a regular service perimeter, a resource can also
        be in zero or more perimeter bridges. A perimeter bridge only contains
        resources. Cross project operations are permitted if all effected
        resources share some perimeter (whether bridge or regular). Perimeter
        Bridge does not contain access levels or services: those are governed
        entirely by the regular perimeter that resource is in.
        Perimeter Bridges are typically useful when building more complex
        topologies with many independent perimeters that need to share some data
        with a common perimeter, but should not be able to share data among
        themselves.
        Default value is PERIMETER_TYPE_REGULAR.
        Possible values are: PERIMETER_TYPE_REGULAR, PERIMETER_TYPE_BRIDGE.
    spec : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0], default is Undefined, optional
        Proposed (or dry run) ServicePerimeter configuration.
        This configuration allows to specify and test ServicePerimeter configuration
        without enforcing actual access restrictions. Only allowed to be set when
        the useExplicitDryRunSpec flag is set.
        Structure is documented below.
    status : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0], default is Undefined, optional
        ServicePerimeter configuration. Specifies sets of resources,
        restricted services and access levels that determine
        perimeter content and boundaries.
        Structure is documented below.
    title : str, default is Undefined, optional
        Human readable title. Must be unique within the Policy.
    updateTime : str, default is Undefined, optional
        Time the AccessPolicy was updated in UTC.
    useExplicitDryRunSpec : bool, default is Undefined, optional
        Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists
        for all Service Perimeters, and that spec is identical to the status for those
        Service Perimeters. When this flag is set, it inhibits the generation of the
        implicit spec, thereby allowing the user to explicitly provide a
        configuration ("spec") to use in a dry-run version of the Service Perimeter.
        This allows the user to test changes to the enforced config ("status") without
        actually enforcing them. This testing is done through analyzing the differences
        between currently enforced and suggested restrictions. useExplicitDryRunSpec must
        bet set to True if any of the fields in the spec are set to non-default values.
    """


    createTime?: str

    description?: str

    id?: str

    name?: str

    parent?: str

    perimeterType?: str

    spec?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0]

    status?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0]

    title?: str

    updateTime?: str

    useExplicitDryRunSpec?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0

    Attributes
    ----------
    accessLevels : [str], default is Undefined, optional
        A list of AccessLevel resource names that allow resources within
        the ServicePerimeter to be accessed from the internet.
        AccessLevels listed must be in the same policy as this
        ServicePerimeter. Referencing a nonexistent AccessLevel is a
        syntax error. If no AccessLevel names are listed, resources within
        the perimeter can only be accessed via GCP calls with request
        origins within the perimeter. For Service Perimeter Bridge, must
        be empty.
        Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
    egressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0], default is Undefined, optional
        List of EgressPolicies to apply to the perimeter. A perimeter may
        have multiple EgressPolicies, each of which is evaluated separately.
        Access is granted if any EgressPolicy grants it. Must be empty for
        a perimeter bridge.
        Structure is documented below.
    ingressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0], default is Undefined, optional
        List of IngressPolicies to apply to the perimeter. A perimeter may
        have multiple IngressPolicies, each of which is evaluated
        separately. Access is granted if any Ingress Policy grants it.
        Must be empty for a perimeter bridge.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    restrictedServices : [str], default is Undefined, optional
        GCP services that are subject to the Service Perimeter
        restrictions. Must contain a list of services. For example, if
        storage.googleapis.com is specified, access to the storage
        buckets inside the perimeter must meet the perimeter's access
        restrictions.
    vpcAccessibleServices : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0VpcAccessibleServicesItems0], default is Undefined, optional
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
        Structure is documented below.
    """


    accessLevels?: [str]

    egressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0]

    ingressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0]

    resources?: [str]

    restrictedServices?: [str]

    vpcAccessibleServices?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0VpcAccessibleServicesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 egress policies items0

    Attributes
    ----------
    egressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressFromItems0], default is Undefined, optional
        Defines conditions on the source of a request causing this EgressPolicy to apply.
        Structure is documented below.
    egressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and destination resources that
        cause this EgressPolicy to apply.
        Structure is documented below.
    """


    egressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressFromItems0]

    egressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 egress policies items0 egress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sourceRestriction : str, default is Undefined, optional
        Whether to enforce traffic restrictions based on sources field. If the sources field is non-empty, then this field must be set to SOURCE_RESTRICTION_ENABLED.
        Possible values are: SOURCE_RESTRICTION_UNSPECIFIED, SOURCE_RESTRICTION_ENABLED, SOURCE_RESTRICTION_DISABLED.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sourceRestriction?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 egress policies items0 egress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    """


    accessLevel?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 egress policies items0 egress to items0

    Attributes
    ----------
    externalResources : [str], default is Undefined, optional
        A list of external resources that are allowed to be accessed. A request
        matches if it contains an external resource in this list (Example:
        s3://bucket/path). Currently '*' is not allowed.
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    externalResources?: [str]

    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 egress policies items0 egress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 egress policies items0 egress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 ingress policies items0

    Attributes
    ----------
    ingressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressFromItems0], default is Undefined, optional
        Defines the conditions on the source of a request causing this IngressPolicy
        to apply.
        Structure is documented below.
    ingressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and request destination that cause
        this IngressPolicy to apply.
        Structure is documented below.
    """


    ingressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressFromItems0]

    ingressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 ingress policies items0 ingress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 ingress policies items0 ingress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    resource : str, default is Undefined, optional
        A Google Cloud resource that is allowed to ingress the perimeter.
        Requests from these resources will be allowed to access perimeter data.
        Currently only projects are allowed. Format projects/{project_number}
        The project may be in any Google Cloud organization, not just the
        organization that the perimeter is defined in. * is not allowed, the case
        of allowing all Google Cloud resources only is not supported.
    """


    accessLevel?: str

    resource?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 ingress policies items0 ingress to items0

    Attributes
    ----------
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 ingress policies items0 ingress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 ingress policies items0 ingress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderSpecItems0VpcAccessibleServicesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider spec items0 vpc accessible services items0

    Attributes
    ----------
    allowedServices : [str], default is Undefined, optional
        The list of APIs usable within the Service Perimeter.
        Must be empty unless enableRestriction is True.
    enableRestriction : bool, default is Undefined, optional
        Whether to restrict API calls within the Service Perimeter to the
        list of APIs specified in 'allowedServices'.
    """


    allowedServices?: [str]

    enableRestriction?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0

    Attributes
    ----------
    accessLevels : [str], default is Undefined, optional
        A list of AccessLevel resource names that allow resources within
        the ServicePerimeter to be accessed from the internet.
        AccessLevels listed must be in the same policy as this
        ServicePerimeter. Referencing a nonexistent AccessLevel is a
        syntax error. If no AccessLevel names are listed, resources within
        the perimeter can only be accessed via GCP calls with request
        origins within the perimeter. For Service Perimeter Bridge, must
        be empty.
        Format: accessPolicies/{policy_id}/accessLevels/{access_level_name}
    egressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0], default is Undefined, optional
        List of EgressPolicies to apply to the perimeter. A perimeter may
        have multiple EgressPolicies, each of which is evaluated separately.
        Access is granted if any EgressPolicy grants it. Must be empty for
        a perimeter bridge.
        Structure is documented below.
    ingressPolicies : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0], default is Undefined, optional
        List of IngressPolicies to apply to the perimeter. A perimeter may
        have multiple IngressPolicies, each of which is evaluated
        separately. Access is granted if any Ingress Policy grants it.
        Must be empty for a perimeter bridge.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    restrictedServices : [str], default is Undefined, optional
        GCP services that are subject to the Service Perimeter
        restrictions. Must contain a list of services. For example, if
        storage.googleapis.com is specified, access to the storage
        buckets inside the perimeter must meet the perimeter's access
        restrictions.
    vpcAccessibleServices : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0VpcAccessibleServicesItems0], default is Undefined, optional
        Specifies how APIs are allowed to communicate within the Service
        Perimeter.
        Structure is documented below.
    """


    accessLevels?: [str]

    egressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0]

    ingressPolicies?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0]

    resources?: [str]

    restrictedServices?: [str]

    vpcAccessibleServices?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0VpcAccessibleServicesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 egress policies items0

    Attributes
    ----------
    egressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressFromItems0], default is Undefined, optional
        Defines conditions on the source of a request causing this EgressPolicy to apply.
        Structure is documented below.
    egressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and destination resources that
        cause this EgressPolicy to apply.
        Structure is documented below.
    """


    egressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressFromItems0]

    egressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 egress policies items0 egress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sourceRestriction : str, default is Undefined, optional
        Whether to enforce traffic restrictions based on sources field. If the sources field is non-empty, then this field must be set to SOURCE_RESTRICTION_ENABLED.
        Possible values are: SOURCE_RESTRICTION_UNSPECIFIED, SOURCE_RESTRICTION_ENABLED, SOURCE_RESTRICTION_DISABLED.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sourceRestriction?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 egress policies items0 egress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    """


    accessLevel?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 egress policies items0 egress to items0

    Attributes
    ----------
    externalResources : [str], default is Undefined, optional
        A list of external resources that are allowed to be accessed. A request
        matches if it contains an external resource in this list (Example:
        s3://bucket/path). Currently '*' is not allowed.
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    externalResources?: [str]

    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 egress policies items0 egress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0EgressPoliciesItems0EgressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 egress policies items0 egress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 ingress policies items0

    Attributes
    ----------
    ingressFrom : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressFromItems0], default is Undefined, optional
        Defines the conditions on the source of a request causing this IngressPolicy
        to apply.
        Structure is documented below.
    ingressTo : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0], default is Undefined, optional
        Defines the conditions on the ApiOperation and request destination that cause
        this IngressPolicy to apply.
        Structure is documented below.
    """


    ingressFrom?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressFromItems0]

    ingressTo?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressFromItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 ingress policies items0 ingress from items0

    Attributes
    ----------
    identities : [str], default is Undefined, optional
        A list of identities that are allowed access through this ingress policy.
        Should be in the format of email address. The email address should represent
        individual user or service account only.
    identityType : str, default is Undefined, optional
        Specifies the type of identities that are allowed access from outside the
        perimeter. If left unspecified, then members of identities field will be
        allowed access.
        Possible values are: IDENTITY_TYPE_UNSPECIFIED, ANY_IDENTITY, ANY_USER_ACCOUNT, ANY_SERVICE_ACCOUNT.
    sources : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0], default is Undefined, optional
        Sources that this IngressPolicy authorizes access from.
        Structure is documented below.
    """


    identities?: [str]

    identityType?: str

    sources?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressFromItems0SourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 ingress policies items0 ingress from items0 sources items0

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        An AccessLevel resource name that allow resources within the
        ServicePerimeters to be accessed from the internet. AccessLevels listed
        must be in the same policy as this ServicePerimeter. Referencing a nonexistent
        AccessLevel will cause an error. If no AccessLevel names are listed,
        resources within the perimeter can only be accessed via Google Cloud calls
        with request origins within the perimeter.
        Example accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.
        If * is specified, then all IngressSources will be allowed.
    resource : str, default is Undefined, optional
        A Google Cloud resource that is allowed to ingress the perimeter.
        Requests from these resources will be allowed to access perimeter data.
        Currently only projects are allowed. Format projects/{project_number}
        The project may be in any Google Cloud organization, not just the
        organization that the perimeter is defined in. * is not allowed, the case
        of allowing all Google Cloud resources only is not supported.
    """


    accessLevel?: str

    resource?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 ingress policies items0 ingress to items0

    Attributes
    ----------
    operations : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0], default is Undefined, optional
        A list of ApiOperations the sources specified in corresponding IngressFrom
        are allowed to perform in this ServicePerimeter.
        Structure is documented below.
    resources : [str], default is Undefined, optional
        A list of GCP resources that are inside of the service perimeter.
        Currently only projects are allowed.
        Format: projects/{project_number}
    """


    operations?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0]

    resources?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 ingress policies items0 ingress to items0 operations items0

    Attributes
    ----------
    methodSelectors : [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0], default is Undefined, optional
        API methods or permissions to allow. Method or permission must belong to
        the service specified by serviceName field. A single MethodSelector entry
        with * specified for the method field will allow all methods AND
        permissions for the service specified in serviceName.
        Structure is documented below.
    serviceName : str, default is Undefined, optional
        The name of the API whose methods or permissions the IngressPolicy or
        EgressPolicy want to allow. A single ApiOperation with serviceName
        field set to * will allow all methods AND permissions for all services.
    """


    methodSelectors?: [AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0]

    serviceName?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0IngressPoliciesItems0IngressToItems0OperationsItems0MethodSelectorsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 ingress policies items0 ingress to items0 operations items0 method selectors items0

    Attributes
    ----------
    method : str, default is Undefined, optional
        Value for method should be a valid method name for the corresponding
        serviceName in ApiOperation. If * used as value for method, then
        ALL methods and permissions are allowed.
    permission : str, default is Undefined, optional
        Value for permission should be a valid Cloud IAM permission for the
        corresponding serviceName in ApiOperation.
    """


    method?: str

    permission?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusAtProviderStatusItems0VpcAccessibleServicesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 service perimeter status at provider status items0 vpc accessible services items0

    Attributes
    ----------
    allowedServices : [str], default is Undefined, optional
        The list of APIs usable within the Service Perimeter.
        Must be empty unless enableRestriction is True.
    enableRestriction : bool, default is Undefined, optional
        Whether to restrict API calls within the Service Perimeter to the
        list of APIs specified in 'allowedServices'.
    """


    allowedServices?: [str]

    enableRestriction?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1ServicePerimeterStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


