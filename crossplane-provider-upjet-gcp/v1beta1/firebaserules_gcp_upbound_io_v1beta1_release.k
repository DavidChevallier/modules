"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Release:
    """
    Release is the Schema for the Releases API.

    Attributes
    ----------
    apiVersion : str, default is "firebaserules.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Release", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FirebaserulesGcpUpboundIoV1beta1ReleaseSpec, default is Undefined, required
        spec
    status : FirebaserulesGcpUpboundIoV1beta1ReleaseStatus, default is Undefined, optional
        status
    """


    apiVersion: "firebaserules.gcp.upbound.io/v1beta1" = "firebaserules.gcp.upbound.io/v1beta1"

    kind: "Release" = "Release"

    metadata?: v1.ObjectMeta

    spec: FirebaserulesGcpUpboundIoV1beta1ReleaseSpec

    status?: FirebaserulesGcpUpboundIoV1beta1ReleaseStatus


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpec:
    """
    ReleaseSpec defines the desired state of Release

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProvider, default is Undefined, required
        for provider
    initProvider : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProvider

    initProvider?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecProviderConfigRef

    publishConnectionDetailsTo?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecWriteConnectionSecretToRef


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProvider:
    """
    firebaserules gcp upbound io v1beta1 release spec for provider

    Attributes
    ----------
    project : str, default is Undefined, optional
        The project for the resource
    rulesetName : str, default is Undefined, optional
        Name of the Ruleset referred to by this Release. The Ruleset must exist for the Release to be created.
    rulesetNameRef : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameRef, default is Undefined, optional
        ruleset name ref
    rulesetNameSelector : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameSelector, default is Undefined, optional
        ruleset name selector
    """


    project?: str

    rulesetName?: str

    rulesetNameRef?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameRef

    rulesetNameSelector?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameSelector


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameRef:
    """
    Reference to a Ruleset to populate rulesetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameRefPolicy


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameSelector:
    """
    Selector for a Ruleset to populate rulesetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameSelectorPolicy


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecForProviderRulesetNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    project : str, default is Undefined, optional
        The project for the resource
    rulesetName : str, default is Undefined, optional
        Name of the Ruleset referred to by this Release. The Ruleset must exist for the Release to be created.
    rulesetNameRef : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameRef, default is Undefined, optional
        ruleset name ref
    rulesetNameSelector : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameSelector, default is Undefined, optional
        ruleset name selector
    """


    project?: str

    rulesetName?: str

    rulesetNameRef?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameRef

    rulesetNameSelector?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameSelector


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameRef:
    """
    Reference to a Ruleset to populate rulesetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameRefPolicy


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameSelector:
    """
    Selector for a Ruleset to populate rulesetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameSelectorPolicy


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecInitProviderRulesetNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecProviderConfigRefPolicy


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToConfigRef

    metadata?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToMetadata

    name: str


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToConfigRefPolicy


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema FirebaserulesGcpUpboundIoV1beta1ReleaseSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema FirebaserulesGcpUpboundIoV1beta1ReleaseStatus:
    """
    ReleaseStatus defines the observed state of Release.

    Attributes
    ----------
    atProvider : FirebaserulesGcpUpboundIoV1beta1ReleaseStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [FirebaserulesGcpUpboundIoV1beta1ReleaseStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: FirebaserulesGcpUpboundIoV1beta1ReleaseStatusAtProvider

    conditions?: [FirebaserulesGcpUpboundIoV1beta1ReleaseStatusConditionsItems0]


schema FirebaserulesGcpUpboundIoV1beta1ReleaseStatusAtProvider:
    """
    firebaserules gcp upbound io v1beta1 release status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        Output only. Time the release was created.
    disabled : bool, default is Undefined, optional
        Disable the release to keep it from being served. The response code of NOT_FOUND will be given for executables generated from this Release.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/releases/{{name}}
    project : str, default is Undefined, optional
        The project for the resource
    rulesetName : str, default is Undefined, optional
        Name of the Ruleset referred to by this Release. The Ruleset must exist for the Release to be created.
    updateTime : str, default is Undefined, optional
        Output only. Time the release was updated.
    """


    createTime?: str

    disabled?: bool

    id?: str

    project?: str

    rulesetName?: str

    updateTime?: str


schema FirebaserulesGcpUpboundIoV1beta1ReleaseStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


