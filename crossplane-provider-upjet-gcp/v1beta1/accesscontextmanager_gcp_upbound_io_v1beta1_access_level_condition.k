"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AccessLevelCondition:
    """
    AccessLevelCondition is the Schema for the AccessLevelConditions API. Allows configuring a single access level condition to be appended to an access level's conditions.

    Attributes
    ----------
    apiVersion : str, default is "accesscontextmanager.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AccessLevelCondition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpec, default is Undefined, required
        spec
    status : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatus, default is Undefined, optional
        status
    """


    apiVersion: "accesscontextmanager.gcp.upbound.io/v1beta1" = "accesscontextmanager.gcp.upbound.io/v1beta1"

    kind: "AccessLevelCondition" = "AccessLevelCondition"

    metadata?: v1.ObjectMeta

    spec: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpec

    status?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatus


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpec:
    """
    AccessLevelConditionSpec defines the desired state of AccessLevelCondition

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProvider, default is Undefined, required
        for provider
    initProvider : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProvider

    initProvider?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecProviderConfigRef

    publishConnectionDetailsTo?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecWriteConnectionSecretToRef


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProvider:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec for provider

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        The name of the Access Level to add this condition to.
    accessLevelRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelRef, default is Undefined, optional
        access level ref
    accessLevelSelector : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelSelector, default is Undefined, optional
        access level selector
    devicePolicy : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderDevicePolicyItems0], default is Undefined, optional
        Device specific restrictions, all restrictions must hold for
        the Condition to be true. If not specified, all devices are
        allowed.
        Structure is documented below.
    ipSubnetworks : [str], default is Undefined, optional
        A list of CIDR block IP subnetwork specification. May be IPv4
        or IPv6.
        Note that for a CIDR IP address block, the specified IP address
        portion must be properly truncated (i.e. all the host bits must
        be zero) or the input is considered malformed. For example,
        "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
        for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
        is not. The originating IP of a request must be in one of the
        listed subnets in order for this Condition to be true.
        If empty, all IP addresses are allowed.
    members : [str], default is Undefined, optional
        An allowed list of members (users, service accounts).
        Using groups is not supported yet.
        The signed-in user originating the request must be a part of one
        of the provided members. If not specified, a request may come
        from any user (logged in/not logged in, not present in any
        groups, etc.).
        Formats: user:{emailid}, serviceAccount:{emailid}
    negate : bool, default is Undefined, optional
        Whether to negate the Condition. If true, the Condition becomes
        a NAND over its non-empty fields, each field must be false for
        the Condition overall to be satisfied. Defaults to false.
    regions : [str], default is Undefined, optional
        The request must originate from one of the provided
        countries/regions.
        Format: A valid ISO 3166-1 alpha-2 code.
    requiredAccessLevels : [str], default is Undefined, optional
        A list of other access levels defined in the same Policy,
        referenced by resource name. Referencing an AccessLevel which
        does not exist is an error. All access levels listed must be
        granted for the Condition to be true.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    vpcNetworkSources : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderVpcNetworkSourcesItems0], default is Undefined, optional
        The request must originate from one of the provided VPC networks in Google Cloud. Cannot specify this field together with ip_subnetworks.
        Structure is documented below.
    """


    accessLevel?: str

    accessLevelRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelRef

    accessLevelSelector?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelSelector

    devicePolicy?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderDevicePolicyItems0]

    ipSubnetworks?: [str]

    members?: [str]

    negate?: bool

    regions?: [str]

    requiredAccessLevels?: [str]

    vpcNetworkSources?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderVpcNetworkSourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelRef:
    """
    Reference to a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelSelector:
    """
    Selector for a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderAccessLevelSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderDevicePolicyItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec for provider device policy items0

    Attributes
    ----------
    allowedDeviceManagementLevels : [str], default is Undefined, optional
        A list of allowed device management levels.
        An empty list allows all management levels.
        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
    allowedEncryptionStatuses : [str], default is Undefined, optional
        A list of allowed encryptions statuses.
        An empty list allows all statuses.
        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
    osConstraints : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderDevicePolicyItems0OsConstraintsItems0], default is Undefined, optional
        A list of allowed OS versions.
        An empty list allows all types and all versions.
        Structure is documented below.
    requireAdminApproval : bool, default is Undefined, optional
        Whether the device needs to be approved by the customer admin.
    requireCorpOwned : bool, default is Undefined, optional
        Whether the device needs to be corp owned.
    requireScreenLock : bool, default is Undefined, optional
        Whether or not screenlock is required for the DevicePolicy
        to be true. Defaults to false.
    """


    allowedDeviceManagementLevels?: [str]

    allowedEncryptionStatuses?: [str]

    osConstraints?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderDevicePolicyItems0OsConstraintsItems0]

    requireAdminApproval?: bool

    requireCorpOwned?: bool

    requireScreenLock?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderDevicePolicyItems0OsConstraintsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec for provider device policy items0 os constraints items0

    Attributes
    ----------
    minimumVersion : str, default is Undefined, optional
        The minimum allowed OS version. If not set, any version
        of this OS satisfies the constraint.
        Format: "major.minor.patch" such as "10.5.301", "9.2.1".
    osType : str, default is Undefined, optional
        The operating system type of the device.
        Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
    """


    minimumVersion?: str

    osType?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderVpcNetworkSourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec for provider vpc network sources items0

    Attributes
    ----------
    vpcSubnetwork : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderVpcNetworkSourcesItems0VpcSubnetworkItems0], default is Undefined, optional
        Sub networks within a VPC network.
        Structure is documented below.
    """


    vpcSubnetwork?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderVpcNetworkSourcesItems0VpcSubnetworkItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecForProviderVpcNetworkSourcesItems0VpcSubnetworkItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec for provider vpc network sources items0 vpc subnetwork items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires compute.network.get permission to be granted to caller.
    vpcIpSubnetworks : [str], default is Undefined, optional
        CIDR block IP subnetwork specification. Must be IPv4.
    """


    network?: str

    vpcIpSubnetworks?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        The name of the Access Level to add this condition to.
    accessLevelRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelRef, default is Undefined, optional
        access level ref
    accessLevelSelector : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelSelector, default is Undefined, optional
        access level selector
    devicePolicy : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderDevicePolicyItems0], default is Undefined, optional
        Device specific restrictions, all restrictions must hold for
        the Condition to be true. If not specified, all devices are
        allowed.
        Structure is documented below.
    ipSubnetworks : [str], default is Undefined, optional
        A list of CIDR block IP subnetwork specification. May be IPv4
        or IPv6.
        Note that for a CIDR IP address block, the specified IP address
        portion must be properly truncated (i.e. all the host bits must
        be zero) or the input is considered malformed. For example,
        "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
        for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
        is not. The originating IP of a request must be in one of the
        listed subnets in order for this Condition to be true.
        If empty, all IP addresses are allowed.
    members : [str], default is Undefined, optional
        An allowed list of members (users, service accounts).
        Using groups is not supported yet.
        The signed-in user originating the request must be a part of one
        of the provided members. If not specified, a request may come
        from any user (logged in/not logged in, not present in any
        groups, etc.).
        Formats: user:{emailid}, serviceAccount:{emailid}
    negate : bool, default is Undefined, optional
        Whether to negate the Condition. If true, the Condition becomes
        a NAND over its non-empty fields, each field must be false for
        the Condition overall to be satisfied. Defaults to false.
    regions : [str], default is Undefined, optional
        The request must originate from one of the provided
        countries/regions.
        Format: A valid ISO 3166-1 alpha-2 code.
    requiredAccessLevels : [str], default is Undefined, optional
        A list of other access levels defined in the same Policy,
        referenced by resource name. Referencing an AccessLevel which
        does not exist is an error. All access levels listed must be
        granted for the Condition to be true.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    vpcNetworkSources : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderVpcNetworkSourcesItems0], default is Undefined, optional
        The request must originate from one of the provided VPC networks in Google Cloud. Cannot specify this field together with ip_subnetworks.
        Structure is documented below.
    """


    accessLevel?: str

    accessLevelRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelRef

    accessLevelSelector?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelSelector

    devicePolicy?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderDevicePolicyItems0]

    ipSubnetworks?: [str]

    members?: [str]

    negate?: bool

    regions?: [str]

    requiredAccessLevels?: [str]

    vpcNetworkSources?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderVpcNetworkSourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelRef:
    """
    Reference to a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelSelector:
    """
    Selector for a AccessLevel in accesscontextmanager to populate accessLevel.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelSelectorPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderAccessLevelSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderDevicePolicyItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec init provider device policy items0

    Attributes
    ----------
    allowedDeviceManagementLevels : [str], default is Undefined, optional
        A list of allowed device management levels.
        An empty list allows all management levels.
        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
    allowedEncryptionStatuses : [str], default is Undefined, optional
        A list of allowed encryptions statuses.
        An empty list allows all statuses.
        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
    osConstraints : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderDevicePolicyItems0OsConstraintsItems0], default is Undefined, optional
        A list of allowed OS versions.
        An empty list allows all types and all versions.
        Structure is documented below.
    requireAdminApproval : bool, default is Undefined, optional
        Whether the device needs to be approved by the customer admin.
    requireCorpOwned : bool, default is Undefined, optional
        Whether the device needs to be corp owned.
    requireScreenLock : bool, default is Undefined, optional
        Whether or not screenlock is required for the DevicePolicy
        to be true. Defaults to false.
    """


    allowedDeviceManagementLevels?: [str]

    allowedEncryptionStatuses?: [str]

    osConstraints?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderDevicePolicyItems0OsConstraintsItems0]

    requireAdminApproval?: bool

    requireCorpOwned?: bool

    requireScreenLock?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderDevicePolicyItems0OsConstraintsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec init provider device policy items0 os constraints items0

    Attributes
    ----------
    minimumVersion : str, default is Undefined, optional
        The minimum allowed OS version. If not set, any version
        of this OS satisfies the constraint.
        Format: "major.minor.patch" such as "10.5.301", "9.2.1".
    osType : str, default is Undefined, optional
        The operating system type of the device.
        Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
    """


    minimumVersion?: str

    osType?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderVpcNetworkSourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec init provider vpc network sources items0

    Attributes
    ----------
    vpcSubnetwork : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderVpcNetworkSourcesItems0VpcSubnetworkItems0], default is Undefined, optional
        Sub networks within a VPC network.
        Structure is documented below.
    """


    vpcSubnetwork?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderVpcNetworkSourcesItems0VpcSubnetworkItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecInitProviderVpcNetworkSourcesItems0VpcSubnetworkItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition spec init provider vpc network sources items0 vpc subnetwork items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires compute.network.get permission to be granted to caller.
    vpcIpSubnetworks : [str], default is Undefined, optional
        CIDR block IP subnetwork specification. Must be IPv4.
    """


    network?: str

    vpcIpSubnetworks?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecProviderConfigRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToConfigRef

    metadata?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToMetadata

    name: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToConfigRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatus:
    """
    AccessLevelConditionStatus defines the observed state of AccessLevelCondition.

    Attributes
    ----------
    atProvider : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProvider

    conditions?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusConditionsItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProvider:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition status at provider

    Attributes
    ----------
    accessLevel : str, default is Undefined, optional
        The name of the Access Level to add this condition to.
    devicePolicy : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderDevicePolicyItems0], default is Undefined, optional
        Device specific restrictions, all restrictions must hold for
        the Condition to be true. If not specified, all devices are
        allowed.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{access_level}}
    ipSubnetworks : [str], default is Undefined, optional
        A list of CIDR block IP subnetwork specification. May be IPv4
        or IPv6.
        Note that for a CIDR IP address block, the specified IP address
        portion must be properly truncated (i.e. all the host bits must
        be zero) or the input is considered malformed. For example,
        "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
        for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
        is not. The originating IP of a request must be in one of the
        listed subnets in order for this Condition to be true.
        If empty, all IP addresses are allowed.
    members : [str], default is Undefined, optional
        An allowed list of members (users, service accounts).
        Using groups is not supported yet.
        The signed-in user originating the request must be a part of one
        of the provided members. If not specified, a request may come
        from any user (logged in/not logged in, not present in any
        groups, etc.).
        Formats: user:{emailid}, serviceAccount:{emailid}
    negate : bool, default is Undefined, optional
        Whether to negate the Condition. If true, the Condition becomes
        a NAND over its non-empty fields, each field must be false for
        the Condition overall to be satisfied. Defaults to false.
    regions : [str], default is Undefined, optional
        The request must originate from one of the provided
        countries/regions.
        Format: A valid ISO 3166-1 alpha-2 code.
    requiredAccessLevels : [str], default is Undefined, optional
        A list of other access levels defined in the same Policy,
        referenced by resource name. Referencing an AccessLevel which
        does not exist is an error. All access levels listed must be
        granted for the Condition to be true.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    vpcNetworkSources : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderVpcNetworkSourcesItems0], default is Undefined, optional
        The request must originate from one of the provided VPC networks in Google Cloud. Cannot specify this field together with ip_subnetworks.
        Structure is documented below.
    """


    accessLevel?: str

    devicePolicy?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderDevicePolicyItems0]

    id?: str

    ipSubnetworks?: [str]

    members?: [str]

    negate?: bool

    regions?: [str]

    requiredAccessLevels?: [str]

    vpcNetworkSources?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderVpcNetworkSourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderDevicePolicyItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition status at provider device policy items0

    Attributes
    ----------
    allowedDeviceManagementLevels : [str], default is Undefined, optional
        A list of allowed device management levels.
        An empty list allows all management levels.
        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
    allowedEncryptionStatuses : [str], default is Undefined, optional
        A list of allowed encryptions statuses.
        An empty list allows all statuses.
        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
    osConstraints : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderDevicePolicyItems0OsConstraintsItems0], default is Undefined, optional
        A list of allowed OS versions.
        An empty list allows all types and all versions.
        Structure is documented below.
    requireAdminApproval : bool, default is Undefined, optional
        Whether the device needs to be approved by the customer admin.
    requireCorpOwned : bool, default is Undefined, optional
        Whether the device needs to be corp owned.
    requireScreenLock : bool, default is Undefined, optional
        Whether or not screenlock is required for the DevicePolicy
        to be true. Defaults to false.
    """


    allowedDeviceManagementLevels?: [str]

    allowedEncryptionStatuses?: [str]

    osConstraints?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderDevicePolicyItems0OsConstraintsItems0]

    requireAdminApproval?: bool

    requireCorpOwned?: bool

    requireScreenLock?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderDevicePolicyItems0OsConstraintsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition status at provider device policy items0 os constraints items0

    Attributes
    ----------
    minimumVersion : str, default is Undefined, optional
        The minimum allowed OS version. If not set, any version
        of this OS satisfies the constraint.
        Format: "major.minor.patch" such as "10.5.301", "9.2.1".
    osType : str, default is Undefined, optional
        The operating system type of the device.
        Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
    """


    minimumVersion?: str

    osType?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderVpcNetworkSourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition status at provider vpc network sources items0

    Attributes
    ----------
    vpcSubnetwork : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderVpcNetworkSourcesItems0VpcSubnetworkItems0], default is Undefined, optional
        Sub networks within a VPC network.
        Structure is documented below.
    """


    vpcSubnetwork?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderVpcNetworkSourcesItems0VpcSubnetworkItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusAtProviderVpcNetworkSourcesItems0VpcSubnetworkItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level condition status at provider vpc network sources items0 vpc subnetwork items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires compute.network.get permission to be granted to caller.
    vpcIpSubnetworks : [str], default is Undefined, optional
        CIDR block IP subnetwork specification. Must be IPv4.
    """


    network?: str

    vpcIpSubnetworks?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelConditionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


