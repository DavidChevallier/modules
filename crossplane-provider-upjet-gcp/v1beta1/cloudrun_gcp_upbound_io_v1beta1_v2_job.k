"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema V2Job:
    """
    V2Job is the Schema for the V2Jobs API. A Cloud Run Job resource that references a container image which is run to completion.

    Attributes
    ----------
    apiVersion : str, default is "cloudrun.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "V2Job", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudrunGcpUpboundIoV1beta1V2JobSpec, default is Undefined, required
        spec
    status : CloudrunGcpUpboundIoV1beta1V2JobStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudrun.gcp.upbound.io/v1beta1" = "cloudrun.gcp.upbound.io/v1beta1"

    kind: "V2Job" = "V2Job"

    metadata?: v1.ObjectMeta

    spec: CloudrunGcpUpboundIoV1beta1V2JobSpec

    status?: CloudrunGcpUpboundIoV1beta1V2JobStatus


schema CloudrunGcpUpboundIoV1beta1V2JobSpec:
    """
    V2JobSpec defines the desired state of V2Job

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudrunGcpUpboundIoV1beta1V2JobSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudrunGcpUpboundIoV1beta1V2JobSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudrunGcpUpboundIoV1beta1V2JobSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudrunGcpUpboundIoV1beta1V2JobSpecForProvider

    initProvider?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecWriteConnectionSecretToRef


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProvider:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
        This field follows Kubernetes annotations' namespacing, limits, and rules.
    binaryAuthorization : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderBinaryAuthorizationItems0], default is Undefined, optional
        Settings for the Binary Authorization feature.
        Structure is documented below.
    client : str, default is Undefined, optional
        Arbitrary identifier for the API client.
    clientVersion : str, default is Undefined, optional
        Arbitrary version identifier for the API client.
    labels : {str:str}, default is Undefined, optional
        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter,
        or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
        https://cloud.google.com/run/docs/configuring/labels.
        Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
    launchStage : str, default is Undefined, optional
        The launch stage as defined by Google Cloud Platform Launch Stages. Cloud Run supports ALPHA, BETA, and GA.
        If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
        For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
        Possible values are: UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
    location : str, default is Undefined, required
        The location of the cloud run job
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    template : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0], default is Undefined, optional
        The template used to create executions for this Job.
        Structure is documented below.
    """


    annotations?: {str:str}

    binaryAuthorization?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderBinaryAuthorizationItems0]

    client?: str

    clientVersion?: str

    labels?: {str:str}

    launchStage?: str

    location: str

    project?: str

    template?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderBinaryAuthorizationItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider binary authorization items0

    Attributes
    ----------
    breakglassJustification : str, default is Undefined, optional
        If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
    useDefault : bool, default is Undefined, optional
        If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
    """


    breakglassJustification?: str

    useDefault?: bool


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
        This field follows Kubernetes annotations' namespacing, limits, and rules.
    labels : {str:str}, default is Undefined, optional
        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter,
        or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
        https://cloud.google.com/run/docs/configuring/labels.
        Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
    parallelism : float, default is Undefined, optional
        Specifies the maximum desired number of tasks the execution should run at given time. Must be <= taskCount. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.
    taskCount : float, default is Undefined, optional
        Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
    template : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0], default is Undefined, optional
        Describes the task(s) that will be created when executing an execution
        Structure is documented below.
    """


    annotations?: {str:str}

    labels?: {str:str}

    parallelism?: float

    taskCount?: float

    template?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0

    Attributes
    ----------
    containers : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0], default is Undefined, optional
        Holds the single container that defines the unit of execution for this task.
        Structure is documented below.
    encryptionKey : str, default is Undefined, optional
        A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
    executionEnvironment : str, default is Undefined, optional
        The execution environment being used to host this Task.
        Possible values are: EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2.
    maxRetries : float, default is Undefined, optional
        Number of retries allowed per Task, before marking this Task failed.
    serviceAccount : str, default is Undefined, optional
        Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
    timeout : str, default is Undefined, optional
        Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
        A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
    volumes : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0], default is Undefined, optional
        A list of Volumes to make available to containers.
        Structure is documented below.
    vpcAccess : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VpcAccessItems0], default is Undefined, optional
        VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
        Structure is documented below.
    """


    containers?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0]

    encryptionKey?: str

    executionEnvironment?: str

    maxRetries?: float

    serviceAccount?: str

    timeout?: str

    volumes?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0]

    vpcAccess?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VpcAccessItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Structure is documented below.
    image : str, default is Undefined, optional
        URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images
    name : str, default is Undefined, optional
        Volume's name.
    ports : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
        If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on
        Structure is documented below.
    resources : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0], default is Undefined, optional
        Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
        Structure is documented below.
    volumeMounts : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume to mount into the container's filesystem.
        Structure is documented below.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
    """


    args?: [str]

    command?: [str]

    env?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0]

    image?: str

    name?: str

    ports?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0]

    resources?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0]

    volumeMounts?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0]

    workingDir?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Volume's name.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes
    valueSource : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0], default is Undefined, optional
        Source for the environment variable's value.
        Structure is documented below.
    """


    name?: str

    value?: str

    valueSource?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0 env items0 value source items0

    Attributes
    ----------
    secretKeyRef : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0], default is Undefined, optional
        Selects a secret and a specific version from Cloud Secret Manager.
        Structure is documented below.
    """


    secretKeyRef?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0 env items0 value source items0 secret key ref items0

    Attributes
    ----------
    secret : str, default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    secretRef : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelector, default is Undefined, optional
        secret selector
    version : str, default is Undefined, optional
        The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
    """


    secret?: str

    secretRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRef

    secretSelector?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelector

    version?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRefPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0 ports items0

    Attributes
    ----------
    containerPort : float, default is Undefined, optional
        Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
    name : str, default is Undefined, optional
        Volume's name.
    """


    containerPort?: float

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0 resources items0

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        Only memory and CPU are supported. Use key cpu for CPU limit and memory for memory limit. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
    """


    limits?: {str:str}


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
    name : str, default is Undefined, optional
        Volume's name.
    """


    mountPath?: str

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 volumes items0

    Attributes
    ----------
    cloudSqlInstance : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0], default is Undefined, optional
        For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
        Structure is documented below.
    name : str, default is Undefined, optional
        Volume's name.
    secret : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0], default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    """


    cloudSqlInstance?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0]

    name?: str

    secret?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 volumes items0 cloud SQL instance items0

    Attributes
    ----------
    instances : [str], default is Undefined, optional
        The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
    """


    instances?: [str]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 volumes items0 secret items0

    Attributes
    ----------
    defaultMode : float, default is Undefined, optional
        Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
    items : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0], default is Undefined, optional
        If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
        Structure is documented below.
    secret : str, default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    secretRef : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelector, default is Undefined, optional
        secret selector
    """


    defaultMode?: float

    items?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0]

    secret?: str

    secretRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRef

    secretSelector?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelector


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 volumes items0 secret items0 items items0

    Attributes
    ----------
    mode : float, default is Undefined, optional
        Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
    path : str, default is Undefined, optional
        The relative path of the secret in the container.
    version : str, default is Undefined, optional
        The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
    """


    mode?: float

    path?: str

    version?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRefPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VpcAccessItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 vpc access items0

    Attributes
    ----------
    connector : str, default is Undefined, optional
        VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
    egress : str, default is Undefined, optional
        Traffic VPC egress settings.
        Possible values are: ALL_TRAFFIC, PRIVATE_RANGES_ONLY.
    networkInterfaces : [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0], default is Undefined, optional
        Direct VPC egress settings. Currently only single network interface is supported.
        Structure is documented below.
    """


    connector?: str

    egress?: str

    networkInterfaces?: [CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecForProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec for provider template items0 template items0 vpc access items0 network interfaces items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
        network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
        looked up from the subnetwork.
    subnetwork : str, default is Undefined, optional
        The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
        network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
        subnetwork with the same name with the network will be used.
    tags : [str], default is Undefined, optional
        Network tags applied to this Cloud Run job.
    """


    network?: str

    subnetwork?: str

    tags?: [str]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
        This field follows Kubernetes annotations' namespacing, limits, and rules.
    binaryAuthorization : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderBinaryAuthorizationItems0], default is Undefined, optional
        Settings for the Binary Authorization feature.
        Structure is documented below.
    client : str, default is Undefined, optional
        Arbitrary identifier for the API client.
    clientVersion : str, default is Undefined, optional
        Arbitrary version identifier for the API client.
    labels : {str:str}, default is Undefined, optional
        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter,
        or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
        https://cloud.google.com/run/docs/configuring/labels.
        Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
    launchStage : str, default is Undefined, optional
        The launch stage as defined by Google Cloud Platform Launch Stages. Cloud Run supports ALPHA, BETA, and GA.
        If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
        For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
        Possible values are: UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    template : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0], default is Undefined, optional
        The template used to create executions for this Job.
        Structure is documented below.
    """


    annotations?: {str:str}

    binaryAuthorization?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderBinaryAuthorizationItems0]

    client?: str

    clientVersion?: str

    labels?: {str:str}

    launchStage?: str

    project?: str

    template?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderBinaryAuthorizationItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider binary authorization items0

    Attributes
    ----------
    breakglassJustification : str, default is Undefined, optional
        If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
    useDefault : bool, default is Undefined, optional
        If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
    """


    breakglassJustification?: str

    useDefault?: bool


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
        This field follows Kubernetes annotations' namespacing, limits, and rules.
    labels : {str:str}, default is Undefined, optional
        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter,
        or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
        https://cloud.google.com/run/docs/configuring/labels.
        Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
    parallelism : float, default is Undefined, optional
        Specifies the maximum desired number of tasks the execution should run at given time. Must be <= taskCount. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.
    taskCount : float, default is Undefined, optional
        Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
    template : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0], default is Undefined, optional
        Describes the task(s) that will be created when executing an execution
        Structure is documented below.
    """


    annotations?: {str:str}

    labels?: {str:str}

    parallelism?: float

    taskCount?: float

    template?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0

    Attributes
    ----------
    containers : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0], default is Undefined, optional
        Holds the single container that defines the unit of execution for this task.
        Structure is documented below.
    encryptionKey : str, default is Undefined, optional
        A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
    executionEnvironment : str, default is Undefined, optional
        The execution environment being used to host this Task.
        Possible values are: EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2.
    maxRetries : float, default is Undefined, optional
        Number of retries allowed per Task, before marking this Task failed.
    serviceAccount : str, default is Undefined, optional
        Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
    timeout : str, default is Undefined, optional
        Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
        A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
    volumes : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0], default is Undefined, optional
        A list of Volumes to make available to containers.
        Structure is documented below.
    vpcAccess : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VpcAccessItems0], default is Undefined, optional
        VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
        Structure is documented below.
    """


    containers?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0]

    encryptionKey?: str

    executionEnvironment?: str

    maxRetries?: float

    serviceAccount?: str

    timeout?: str

    volumes?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0]

    vpcAccess?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VpcAccessItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Structure is documented below.
    image : str, default is Undefined, optional
        URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images
    name : str, default is Undefined, optional
        Volume's name.
    ports : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
        If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on
        Structure is documented below.
    resources : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0], default is Undefined, optional
        Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
        Structure is documented below.
    volumeMounts : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume to mount into the container's filesystem.
        Structure is documented below.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
    """


    args?: [str]

    command?: [str]

    env?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0]

    image?: str

    name?: str

    ports?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0]

    resources?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0]

    volumeMounts?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0]

    workingDir?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Volume's name.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes
    valueSource : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0], default is Undefined, optional
        Source for the environment variable's value.
        Structure is documented below.
    """


    name?: str

    value?: str

    valueSource?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0 env items0 value source items0

    Attributes
    ----------
    secretKeyRef : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0], default is Undefined, optional
        Selects a secret and a specific version from Cloud Secret Manager.
        Structure is documented below.
    """


    secretKeyRef?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0 env items0 value source items0 secret key ref items0

    Attributes
    ----------
    secret : str, default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    secretRef : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelector, default is Undefined, optional
        secret selector
    version : str, default is Undefined, optional
        The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
    """


    secret?: str

    secretRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRef

    secretSelector?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelector

    version?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRefPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0 ports items0

    Attributes
    ----------
    containerPort : float, default is Undefined, optional
        Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
    name : str, default is Undefined, optional
        Volume's name.
    """


    containerPort?: float

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0 resources items0

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        Only memory and CPU are supported. Use key cpu for CPU limit and memory for memory limit. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
    """


    limits?: {str:str}


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
    name : str, default is Undefined, optional
        Volume's name.
    """


    mountPath?: str

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 volumes items0

    Attributes
    ----------
    cloudSqlInstance : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0], default is Undefined, optional
        For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
        Structure is documented below.
    name : str, default is Undefined, optional
        Volume's name.
    secret : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0], default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    """


    cloudSqlInstance?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0]

    name?: str

    secret?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 volumes items0 cloud SQL instance items0

    Attributes
    ----------
    instances : [str], default is Undefined, optional
        The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
    """


    instances?: [str]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 volumes items0 secret items0

    Attributes
    ----------
    defaultMode : float, default is Undefined, optional
        Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
    items : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0], default is Undefined, optional
        If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
        Structure is documented below.
    secret : str, default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    secretRef : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRef, default is Undefined, optional
        secret ref
    secretSelector : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelector, default is Undefined, optional
        secret selector
    """


    defaultMode?: float

    items?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0]

    secret?: str

    secretRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRef

    secretSelector?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelector


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 volumes items0 secret items0 items items0

    Attributes
    ----------
    mode : float, default is Undefined, optional
        Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
    path : str, default is Undefined, optional
        The relative path of the secret in the container.
    version : str, default is Undefined, optional
        The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
    """


    mode?: float

    path?: str

    version?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRef:
    """
    Reference to a Secret in secretmanager to populate secret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRefPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelector:
    """
    Selector for a Secret in secretmanager to populate secret.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelectorPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0SecretSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VpcAccessItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 vpc access items0

    Attributes
    ----------
    connector : str, default is Undefined, optional
        VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
    egress : str, default is Undefined, optional
        Traffic VPC egress settings.
        Possible values are: ALL_TRAFFIC, PRIVATE_RANGES_ONLY.
    networkInterfaces : [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0], default is Undefined, optional
        Direct VPC egress settings. Currently only single network interface is supported.
        Structure is documented below.
    """


    connector?: str

    egress?: str

    networkInterfaces?: [CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecInitProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job spec init provider template items0 template items0 vpc access items0 network interfaces items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
        network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
        looked up from the subnetwork.
    subnetwork : str, default is Undefined, optional
        The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
        network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
        subnetwork with the same name with the network will be used.
    tags : [str], default is Undefined, optional
        Network tags applied to this Cloud Run job.
    """


    network?: str

    subnetwork?: str

    tags?: [str]


schema CloudrunGcpUpboundIoV1beta1V2JobSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecProviderConfigRefPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudrunGcpUpboundIoV1beta1V2JobSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudrunGcpUpboundIoV1beta1V2JobSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatus:
    """
    V2JobStatus defines the observed state of V2Job.

    Attributes
    ----------
    atProvider : CloudrunGcpUpboundIoV1beta1V2JobStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudrunGcpUpboundIoV1beta1V2JobStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CloudrunGcpUpboundIoV1beta1V2JobStatusAtProvider

    conditions?: [CloudrunGcpUpboundIoV1beta1V2JobStatusConditionsItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProvider:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
        This field follows Kubernetes annotations' namespacing, limits, and rules.
    binaryAuthorization : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderBinaryAuthorizationItems0], default is Undefined, optional
        Settings for the Binary Authorization feature.
        Structure is documented below.
    client : str, default is Undefined, optional
        Arbitrary identifier for the API client.
    clientVersion : str, default is Undefined, optional
        Arbitrary version identifier for the API client.
    conditions : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderConditionsItems0], default is Undefined, optional
        The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
        Structure is documented below.
    createTime : str, default is Undefined, optional
        The creation time.
    creator : str, default is Undefined, optional
        Email address of the authenticated creator.
    deleteTime : str, default is Undefined, optional
        The deletion time.
    effectiveAnnotations : {str:str}, default is Undefined, optional
        effective annotations
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    etag : str, default is Undefined, optional
        A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
    executionCount : float, default is Undefined, optional
        Number of executions created for this job.
    expireTime : str, default is Undefined, optional
        For a deleted resource, the time after which it will be permamently deleted.
    generation : str, default is Undefined, optional
        A number that monotonically increases every time the user modifies the desired state.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/jobs/{{name}}
    labels : {str:str}, default is Undefined, optional
        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter,
        or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
        https://cloud.google.com/run/docs/configuring/labels.
        Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
    lastModifier : str, default is Undefined, optional
        Email address of the last authenticated modifier.
    latestCreatedExecution : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderLatestCreatedExecutionItems0], default is Undefined, optional
        Name of the last created execution.
        Structure is documented below.
    launchStage : str, default is Undefined, optional
        The launch stage as defined by Google Cloud Platform Launch Stages. Cloud Run supports ALPHA, BETA, and GA.
        If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
        For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
        Possible values are: UNIMPLEMENTED, PRELAUNCH, EARLY_ACCESS, ALPHA, BETA, GA, DEPRECATED.
    location : str, default is Undefined, optional
        The location of the cloud run job
    observedGeneration : str, default is Undefined, optional
        The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud Run.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    reconciling : bool, default is Undefined, optional
        Returns true if the Job is currently being acted upon by the system to bring it into the desired state.
        When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
        If reconciliation succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and latestCreatedExecution.
        If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in terminalCondition and conditions
    template : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0], default is Undefined, optional
        The template used to create executions for this Job.
        Structure is documented below.
    terminalCondition : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTerminalConditionItems0], default is Undefined, optional
        The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    uid : str, default is Undefined, optional
        Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
    updateTime : str, default is Undefined, optional
        The last-modified time.
    """


    annotations?: {str:str}

    binaryAuthorization?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderBinaryAuthorizationItems0]

    client?: str

    clientVersion?: str

    conditions?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderConditionsItems0]

    createTime?: str

    creator?: str

    deleteTime?: str

    effectiveAnnotations?: {str:str}

    effectiveLabels?: {str:str}

    etag?: str

    executionCount?: float

    expireTime?: str

    generation?: str

    id?: str

    labels?: {str:str}

    lastModifier?: str

    latestCreatedExecution?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderLatestCreatedExecutionItems0]

    launchStage?: str

    location?: str

    observedGeneration?: str

    project?: str

    reconciling?: bool

    template?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0]

    terminalCondition?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTerminalConditionItems0]

    terraformLabels?: {str:str}

    uid?: str

    updateTime?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderBinaryAuthorizationItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider binary authorization items0

    Attributes
    ----------
    breakglassJustification : str, default is Undefined, optional
        If present, indicates to use Breakglass using this justification. If useDefault is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
    useDefault : bool, default is Undefined, optional
        If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
    """


    breakglassJustification?: str

    useDefault?: bool


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderConditionsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider conditions items0

    Attributes
    ----------
    executionReason : str, default is Undefined, optional
        (Output)
        A reason for the execution condition.
    lastTransitionTime : str, default is Undefined, optional
        (Output)
        Last time the condition transitioned from one status to another.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    message : str, default is Undefined, optional
        (Output)
        Human readable message indicating details about the current status.
    reason : str, default is Undefined, optional
        (Output)
        A common (service-level) reason for this condition.
    revisionReason : str, default is Undefined, optional
        (Output)
        A reason for the revision condition.
    severity : str, default is Undefined, optional
        (Output)
        How to interpret failures of this condition, one of Error, Warning, Info
    state : str, default is Undefined, optional
        (Output)
        State of the condition.
    $type : str, default is Undefined, optional
        (Output)
        type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
    """


    executionReason?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    revisionReason?: str

    severity?: str

    state?: str

    $type?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderLatestCreatedExecutionItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider latest created execution items0

    Attributes
    ----------
    completionTime : str, default is Undefined, optional
        (Output)
        Completion timestamp of the execution.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    createTime : str, default is Undefined, optional
        (Output)
        Creation timestamp of the execution.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    name : str, default is Undefined, optional
        (Output)
        Name of the execution.
    """


    completionTime?: str

    createTime?: str

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        Cloud Run API v2 does not support annotations with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate.
        This field follows Kubernetes annotations' namespacing, limits, and rules.
    labels : {str:str}, default is Undefined, optional
        Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter,
        or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
        https://cloud.google.com/run/docs/configuring/labels.
        Cloud Run API v2 does not support labels with run.googleapis.com, cloud.googleapis.com, serving.knative.dev, or autoscaling.knative.dev namespaces, and they will be rejected.
        All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
    parallelism : float, default is Undefined, optional
        Specifies the maximum desired number of tasks the execution should run at given time. Must be <= taskCount. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.
    taskCount : float, default is Undefined, optional
        Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
    template : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0], default is Undefined, optional
        Describes the task(s) that will be created when executing an execution
        Structure is documented below.
    """


    annotations?: {str:str}

    labels?: {str:str}

    parallelism?: float

    taskCount?: float

    template?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0

    Attributes
    ----------
    containers : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0], default is Undefined, optional
        Holds the single container that defines the unit of execution for this task.
        Structure is documented below.
    encryptionKey : str, default is Undefined, optional
        A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
    executionEnvironment : str, default is Undefined, optional
        The execution environment being used to host this Task.
        Possible values are: EXECUTION_ENVIRONMENT_GEN1, EXECUTION_ENVIRONMENT_GEN2.
    maxRetries : float, default is Undefined, optional
        Number of retries allowed per Task, before marking this Task failed.
    serviceAccount : str, default is Undefined, optional
        Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
    timeout : str, default is Undefined, optional
        Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
        A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
    volumes : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0], default is Undefined, optional
        A list of Volumes to make available to containers.
        Structure is documented below.
    vpcAccess : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VpcAccessItems0], default is Undefined, optional
        VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
        Structure is documented below.
    """


    containers?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0]

    encryptionKey?: str

    executionEnvironment?: str

    maxRetries?: float

    serviceAccount?: str

    timeout?: str

    volumes?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0]

    vpcAccess?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VpcAccessItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
        Structure is documented below.
    image : str, default is Undefined, optional
        URL of the Container image in Google Container Registry or Google Artifact Registry. More info: https://kubernetes.io/docs/concepts/containers/images
    name : str, default is Undefined, optional
        Volume's name.
    ports : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible.
        If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on
        Structure is documented below.
    resources : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0], default is Undefined, optional
        Compute Resource requirements by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
        Structure is documented below.
    volumeMounts : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0], default is Undefined, optional
        Volume to mount into the container's filesystem.
        Structure is documented below.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
    """


    args?: [str]

    command?: [str]

    env?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0]

    image?: str

    name?: str

    ports?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0]

    resources?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0]

    volumeMounts?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0]

    workingDir?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0 env items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Volume's name.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes
    valueSource : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0], default is Undefined, optional
        Source for the environment variable's value.
        Structure is documented below.
    """


    name?: str

    value?: str

    valueSource?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0 env items0 value source items0

    Attributes
    ----------
    secretKeyRef : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0], default is Undefined, optional
        Selects a secret and a specific version from Cloud Secret Manager.
        Structure is documented below.
    """


    secretKeyRef?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0EnvItems0ValueSourceItems0SecretKeyRefItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0 env items0 value source items0 secret key ref items0

    Attributes
    ----------
    secret : str, default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    version : str, default is Undefined, optional
        The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
    """


    secret?: str

    version?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0PortsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0 ports items0

    Attributes
    ----------
    containerPort : float, default is Undefined, optional
        Port number the container listens on. This must be a valid TCP port number, 0 < containerPort < 65536.
    name : str, default is Undefined, optional
        Volume's name.
    """


    containerPort?: float

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0ResourcesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0 resources items0

    Attributes
    ----------
    limits : {str:str}, default is Undefined, optional
        Only memory and CPU are supported. Use key cpu for CPU limit and memory for memory limit. Note: The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
    """


    limits?: {str:str}


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0ContainersItems0VolumeMountsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 containers items0 volume mounts items0

    Attributes
    ----------
    mountPath : str, default is Undefined, optional
        Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be /cloudsql. All instances defined in the Volume will be available as /cloudsql/[instance]. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
    name : str, default is Undefined, optional
        Volume's name.
    """


    mountPath?: str

    name?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 volumes items0

    Attributes
    ----------
    cloudSqlInstance : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0], default is Undefined, optional
        For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
        Structure is documented below.
    name : str, default is Undefined, optional
        Volume's name.
    secret : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0], default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    """


    cloudSqlInstance?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0]

    name?: str

    secret?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0CloudSQLInstanceItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 volumes items0 cloud SQL instance items0

    Attributes
    ----------
    instances : [str], default is Undefined, optional
        The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
    """


    instances?: [str]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 volumes items0 secret items0

    Attributes
    ----------
    defaultMode : float, default is Undefined, optional
        Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting.
    items : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0], default is Undefined, optional
        If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
        Structure is documented below.
    secret : str, default is Undefined, optional
        Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        Structure is documented below.
    """


    defaultMode?: float

    items?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0]

    secret?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VolumesItems0SecretItems0ItemsItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 volumes items0 secret items0 items items0

    Attributes
    ----------
    mode : float, default is Undefined, optional
        Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used.
    path : str, default is Undefined, optional
        The relative path of the secret in the container.
    version : str, default is Undefined, optional
        The Cloud Secret Manager secret version. Can be 'latest' for the latest value or an integer for a specific version.
    """


    mode?: float

    path?: str

    version?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VpcAccessItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 vpc access items0

    Attributes
    ----------
    connector : str, default is Undefined, optional
        VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
    egress : str, default is Undefined, optional
        Traffic VPC egress settings.
        Possible values are: ALL_TRAFFIC, PRIVATE_RANGES_ONLY.
    networkInterfaces : [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0], default is Undefined, optional
        Direct VPC egress settings. Currently only single network interface is supported.
        Structure is documented below.
    """


    connector?: str

    egress?: str

    networkInterfaces?: [CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTemplateItems0TemplateItems0VpcAccessItems0NetworkInterfacesItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider template items0 template items0 vpc access items0 network interfaces items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
        network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
        looked up from the subnetwork.
    subnetwork : str, default is Undefined, optional
        The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
        network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
        subnetwork with the same name with the network will be used.
    tags : [str], default is Undefined, optional
        Network tags applied to this Cloud Run job.
    """


    network?: str

    subnetwork?: str

    tags?: [str]


schema CloudrunGcpUpboundIoV1beta1V2JobStatusAtProviderTerminalConditionItems0:
    """
    cloudrun gcp upbound io v1beta1 v2 job status at provider terminal condition items0

    Attributes
    ----------
    executionReason : str, default is Undefined, optional
        (Output)
        A reason for the execution condition.
    lastTransitionTime : str, default is Undefined, optional
        (Output)
        Last time the condition transitioned from one status to another.
        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    message : str, default is Undefined, optional
        (Output)
        Human readable message indicating details about the current status.
    reason : str, default is Undefined, optional
        (Output)
        A common (service-level) reason for this condition.
    revisionReason : str, default is Undefined, optional
        (Output)
        A reason for the revision condition.
    severity : str, default is Undefined, optional
        (Output)
        How to interpret failures of this condition, one of Error, Warning, Info
    state : str, default is Undefined, optional
        (Output)
        State of the condition.
    $type : str, default is Undefined, optional
        (Output)
        type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
    """


    executionReason?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    revisionReason?: str

    severity?: str

    state?: str

    $type?: str


schema CloudrunGcpUpboundIoV1beta1V2JobStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


