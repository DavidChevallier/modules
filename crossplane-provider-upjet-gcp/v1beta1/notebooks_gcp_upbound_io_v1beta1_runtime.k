"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Runtime:
    """
    Runtime is the Schema for the Runtimes API. A Cloud AI Platform Notebook runtime.

    Attributes
    ----------
    apiVersion : str, default is "notebooks.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Runtime", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NotebooksGcpUpboundIoV1beta1RuntimeSpec, default is Undefined, required
        spec
    status : NotebooksGcpUpboundIoV1beta1RuntimeStatus, default is Undefined, optional
        status
    """


    apiVersion: "notebooks.gcp.upbound.io/v1beta1" = "notebooks.gcp.upbound.io/v1beta1"

    kind: "Runtime" = "Runtime"

    metadata?: v1.ObjectMeta

    spec: NotebooksGcpUpboundIoV1beta1RuntimeSpec

    status?: NotebooksGcpUpboundIoV1beta1RuntimeStatus


schema NotebooksGcpUpboundIoV1beta1RuntimeSpec:
    """
    RuntimeSpec defines the desired state of Runtime

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NotebooksGcpUpboundIoV1beta1RuntimeSpecForProvider, default is Undefined, required
        for provider
    initProvider : NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NotebooksGcpUpboundIoV1beta1RuntimeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NotebooksGcpUpboundIoV1beta1RuntimeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NotebooksGcpUpboundIoV1beta1RuntimeSpecForProvider

    initProvider?: NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NotebooksGcpUpboundIoV1beta1RuntimeSpecProviderConfigRef

    publishConnectionDetailsTo?: NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NotebooksGcpUpboundIoV1beta1RuntimeSpecWriteConnectionSecretToRef


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProvider:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider

    Attributes
    ----------
    accessConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderAccessConfigItems0], default is Undefined, optional
        The config settings for accessing runtime.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    location : str, default is Undefined, required
        A reference to the zone where the machine resides.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    softwareConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderSoftwareConfigItems0], default is Undefined, optional
        The config settings for software inside the runtime.
        Structure is documented below.
    virtualMachine : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0], default is Undefined, optional
        Use a Compute Engine VM image to start the managed notebook instance.
        Structure is documented below.
    """


    accessConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderAccessConfigItems0]

    labels?: {str:str}

    location: str

    project?: str

    softwareConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderSoftwareConfigItems0]

    virtualMachine?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderAccessConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider access config items0

    Attributes
    ----------
    accessType : str, default is Undefined, optional
        The type of access mode this instance. For valid values, see
        https://cloud.google.com/vertex-ai/docs/workbench/reference/ rest/v1/projects.locations.runtimes#RuntimeAccessType.
    runtimeOwner : str, default is Undefined, optional
        The owner of this runtime after creation. Format: alias@example.com.
        Currently supports one owner only.
    """


    accessType?: str

    runtimeOwner?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderSoftwareConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider software config items0

    Attributes
    ----------
    customGpuDriverPath : str, default is Undefined, optional
        Specify a custom Cloud Storage path where the GPU driver is stored.
        If not specified, we'll automatically choose from official GPU drivers.
    enableHealthMonitoring : bool, default is Undefined, optional
        Verifies core internal services are running. Default: True.
    idleShutdown : bool, default is Undefined, optional
        Runtime will automatically shutdown after idle_shutdown_time.
        Default: True
    idleShutdownTimeout : float, default is Undefined, optional
        Time in minutes to wait before shuting down runtime.
        Default: 180 minutes
    installGpuDriver : bool, default is Undefined, optional
        Install Nvidia Driver automatically.
    kernels : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderSoftwareConfigItems0KernelsItems0], default is Undefined, optional
        Use a list of container images to use as Kernels in the notebook instance.
        Structure is documented below.
    notebookUpgradeSchedule : str, default is Undefined, optional
        Cron expression in UTC timezone for schedule instance auto upgrade.
        Please follow the cron format.
    postStartupScript : str, default is Undefined, optional
        Path to a Bash script that automatically runs after a notebook instance
        fully boots up. The path must be a URL or
        Cloud Storage path (gs://path-to-file/file-name).
    postStartupScriptBehavior : str, default is Undefined, optional
        Behavior for the post startup script.
        Possible values are: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED, RUN_EVERY_START, DOWNLOAD_AND_RUN_EVERY_START.
    """


    customGpuDriverPath?: str

    enableHealthMonitoring?: bool

    idleShutdown?: bool

    idleShutdownTimeout?: float

    installGpuDriver?: bool

    kernels?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderSoftwareConfigItems0KernelsItems0]

    notebookUpgradeSchedule?: str

    postStartupScript?: str

    postStartupScriptBehavior?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderSoftwareConfigItems0KernelsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider software config items0 kernels items0

    Attributes
    ----------
    repository : str, default is Undefined, optional
        The path to the container image repository.
        For example: gcr.io/{project_id}/{imageName}
    tag : str, default is Undefined, optional
        The tag of the container image. If not specified, this defaults to the latest tag.
    """


    repository?: str

    tag?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0

    Attributes
    ----------
    virtualMachineConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0], default is Undefined, optional
        Virtual Machine configuration settings.
        Structure is documented below.
    """


    virtualMachineConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0

    Attributes
    ----------
    acceleratorConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for this runtime.
        Structure is documented below.
    containerImages : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0], default is Undefined, optional
        Use a list of container images to start the notebook instance.
        Structure is documented below.
    dataDisk : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0], default is Undefined, optional
        Data disk option configuration settings.
        Structure is documented below.
    encryptionConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0], default is Undefined, optional
        Encryption settings for virtual machine data disk.
        Structure is documented below.
    internalIpOnly : bool, default is Undefined, optional
        If true, runtime will only have internal IP addresses. By default,
        runtimes are not restricted to internal IP addresses, and will
        have ephemeral external IP addresses assigned to each vm. This
        internal_ip_only restriction can only be enabled for subnetwork
        enabled networks, and all dependencies must be configured to be
        accessible without external IP addresses.
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    machineType : str, default is Undefined, optional
        The Compute Engine machine type used for runtimes.
    metadata : {str:str}, default is Undefined, optional
        The Compute Engine metadata entries to add to virtual machine.
        (see [Project and instance metadata](https://cloud.google.com
        /compute/docs/storing-retrieving-metadata#project_and_instance
        _metadata)).
    network : str, default is Undefined, optional
        The Compute Engine network to be used for machine communications.
        Cannot be specified with subnetwork. If neither network nor
        subnet is specified, the "default" network of the project is
        used, if it exists. A full URL or partial URI. Examples:
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. This may be gVNIC
        or VirtioNet.
        Possible values are: UNSPECIFIED_NIC_TYPE, VIRTIO_NET, GVNIC.
    reservedIpRange : str, default is Undefined, optional
        Reserved IP Range name is used for VPC Peering. The
        subnetwork allocation will use the range name if it's assigned.
    shieldedInstanceConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        Shielded VM Instance configuration settings.
        Structure is documented below.
    subnet : str, default is Undefined, optional
        The Compute Engine subnetwork to be used for machine
        communications. Cannot be specified with network. A full URL or
        partial URI are valid. Examples:
    tags : [str], default is Undefined, optional
        The Compute Engine tags to add to runtime (see [Tagging instances]
        (https://cloud.google.com/compute/docs/
        label-or-tag-resources#tags)).
    """


    acceleratorConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0]

    containerImages?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0]

    dataDisk?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0]

    encryptionConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0]

    internalIpOnly?: bool

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    network?: str

    nicType?: str

    reservedIpRange?: str

    shieldedInstanceConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0]

    subnet?: str

    tags?: [str]


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0 accelerator config items0

    Attributes
    ----------
    coreCount : float, default is Undefined, optional
        Count of cores of this accelerator.
    $type : str, default is Undefined, optional
        Specifies the type of the disk, either SCRATCH or PERSISTENT.
        If not specified, the default is PERSISTENT.
    """


    coreCount?: float

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0 container images items0

    Attributes
    ----------
    repository : str, default is Undefined, optional
        The path to the container image repository.
        For example: gcr.io/{project_id}/{imageName}
    tag : str, default is Undefined, optional
        The tag of the container image. If not specified, this defaults to the latest tag.
    """


    repository?: str

    tag?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0 data disk items0

    Attributes
    ----------
    initializeParams : [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0], default is Undefined, optional
        Input only. Specifies the parameters for a new disk that will
        be created alongside the new instance. Use initialization
        parameters to create boot disks or local SSDs attached to the
        new instance. This property is mutually exclusive with the
        source property; you can only define one or the other, but not
        both.
        Structure is documented below.
    interface : str, default is Undefined, optional
        "Specifies the disk interface to use for attaching this disk,
        which is either SCSI or NVME. The default is SCSI. Persistent
        disks must always use SCSI and the request will fail if you attempt
        to attach a persistent disk in any other format than SCSI. Local SSDs
        can use either NVME or SCSI. For performance characteristics of SCSI
        over NVMe, see Local SSD performance. Valid values: * NVME * SCSI".
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If not specified, the default is to attach
        the disk in READ_WRITE mode.
    source : str, default is Undefined, optional
        Specifies a valid partial or full URL to an existing
        Persistent Disk resource.
    $type : str, default is Undefined, optional
        Specifies the type of the disk, either SCRATCH or PERSISTENT.
        If not specified, the default is PERSISTENT.
    """


    initializeParams?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0]

    interface?: str

    mode?: str

    source?: str

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0 data disk items0 initialize params items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Provide this property when creating the disk.
    diskName : str, default is Undefined, optional
        Specifies the disk name. If not specified, the default is
        to use the name of the instance. If the disk with the
        instance name exists already in the given zone/region, a
        new name will be automatically generated.
    diskSizeGb : float, default is Undefined, optional
        Specifies the size of the disk in base-2 GB. If not
        specified, the disk will be the same size as the image
        (usually 10GB). If specified, the size must be equal to
        or larger than 10GB. Default 100 GB.
    diskType : str, default is Undefined, optional
        The type of the boot disk attached to this runtime,
        defaults to standard persistent disk. For valid values,
        see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#disktype
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    """


    description?: str

    diskName?: str

    diskSizeGb?: float

    diskType?: str

    labels?: {str:str}


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0 encryption config items0

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer-managed
        encryption key used to protect a resource, such as a disks.
        It has the following format:
        projects/{PROJECT_ID}/locations/{REGION}/keyRings/ {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}
    """


    kmsKey?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecForProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec for provider virtual machine items0 virtual machine config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Defines whether the instance has integrity monitoring enabled.
        Enables monitoring and attestation of the boot integrity of
        the instance. The attestation is performed against the
        integrity policy baseline. This baseline is initially derived
        from the implicitly trusted boot image when the instance is
        created. Enabled by default.
    enableSecureBoot : bool, default is Undefined, optional
        Defines whether the instance has Secure Boot enabled.Secure
        Boot helps ensure that the system only runs authentic software
        by verifying the digital signature of all boot components, and
        halting the boot process if signature verification fails.
        Disabled by default.
    enableVtpm : bool, default is Undefined, optional
        Defines whether the instance has the vTPM enabled. Enabled by
        default.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderAccessConfigItems0], default is Undefined, optional
        The config settings for accessing runtime.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    softwareConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderSoftwareConfigItems0], default is Undefined, optional
        The config settings for software inside the runtime.
        Structure is documented below.
    virtualMachine : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0], default is Undefined, optional
        Use a Compute Engine VM image to start the managed notebook instance.
        Structure is documented below.
    """


    accessConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderAccessConfigItems0]

    labels?: {str:str}

    project?: str

    softwareConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderSoftwareConfigItems0]

    virtualMachine?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderAccessConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider access config items0

    Attributes
    ----------
    accessType : str, default is Undefined, optional
        The type of access mode this instance. For valid values, see
        https://cloud.google.com/vertex-ai/docs/workbench/reference/ rest/v1/projects.locations.runtimes#RuntimeAccessType.
    runtimeOwner : str, default is Undefined, optional
        The owner of this runtime after creation. Format: alias@example.com.
        Currently supports one owner only.
    """


    accessType?: str

    runtimeOwner?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderSoftwareConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider software config items0

    Attributes
    ----------
    customGpuDriverPath : str, default is Undefined, optional
        Specify a custom Cloud Storage path where the GPU driver is stored.
        If not specified, we'll automatically choose from official GPU drivers.
    enableHealthMonitoring : bool, default is Undefined, optional
        Verifies core internal services are running. Default: True.
    idleShutdown : bool, default is Undefined, optional
        Runtime will automatically shutdown after idle_shutdown_time.
        Default: True
    idleShutdownTimeout : float, default is Undefined, optional
        Time in minutes to wait before shuting down runtime.
        Default: 180 minutes
    installGpuDriver : bool, default is Undefined, optional
        Install Nvidia Driver automatically.
    kernels : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderSoftwareConfigItems0KernelsItems0], default is Undefined, optional
        Use a list of container images to use as Kernels in the notebook instance.
        Structure is documented below.
    notebookUpgradeSchedule : str, default is Undefined, optional
        Cron expression in UTC timezone for schedule instance auto upgrade.
        Please follow the cron format.
    postStartupScript : str, default is Undefined, optional
        Path to a Bash script that automatically runs after a notebook instance
        fully boots up. The path must be a URL or
        Cloud Storage path (gs://path-to-file/file-name).
    postStartupScriptBehavior : str, default is Undefined, optional
        Behavior for the post startup script.
        Possible values are: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED, RUN_EVERY_START, DOWNLOAD_AND_RUN_EVERY_START.
    """


    customGpuDriverPath?: str

    enableHealthMonitoring?: bool

    idleShutdown?: bool

    idleShutdownTimeout?: float

    installGpuDriver?: bool

    kernels?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderSoftwareConfigItems0KernelsItems0]

    notebookUpgradeSchedule?: str

    postStartupScript?: str

    postStartupScriptBehavior?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderSoftwareConfigItems0KernelsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider software config items0 kernels items0

    Attributes
    ----------
    repository : str, default is Undefined, optional
        The path to the container image repository.
        For example: gcr.io/{project_id}/{imageName}
    tag : str, default is Undefined, optional
        The tag of the container image. If not specified, this defaults to the latest tag.
    """


    repository?: str

    tag?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0

    Attributes
    ----------
    virtualMachineConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0], default is Undefined, optional
        Virtual Machine configuration settings.
        Structure is documented below.
    """


    virtualMachineConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0

    Attributes
    ----------
    acceleratorConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for this runtime.
        Structure is documented below.
    containerImages : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0], default is Undefined, optional
        Use a list of container images to start the notebook instance.
        Structure is documented below.
    dataDisk : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0], default is Undefined, optional
        Data disk option configuration settings.
        Structure is documented below.
    encryptionConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0], default is Undefined, optional
        Encryption settings for virtual machine data disk.
        Structure is documented below.
    internalIpOnly : bool, default is Undefined, optional
        If true, runtime will only have internal IP addresses. By default,
        runtimes are not restricted to internal IP addresses, and will
        have ephemeral external IP addresses assigned to each vm. This
        internal_ip_only restriction can only be enabled for subnetwork
        enabled networks, and all dependencies must be configured to be
        accessible without external IP addresses.
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    machineType : str, default is Undefined, optional
        The Compute Engine machine type used for runtimes.
    metadata : {str:str}, default is Undefined, optional
        The Compute Engine metadata entries to add to virtual machine.
        (see [Project and instance metadata](https://cloud.google.com
        /compute/docs/storing-retrieving-metadata#project_and_instance
        _metadata)).
    network : str, default is Undefined, optional
        The Compute Engine network to be used for machine communications.
        Cannot be specified with subnetwork. If neither network nor
        subnet is specified, the "default" network of the project is
        used, if it exists. A full URL or partial URI. Examples:
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. This may be gVNIC
        or VirtioNet.
        Possible values are: UNSPECIFIED_NIC_TYPE, VIRTIO_NET, GVNIC.
    reservedIpRange : str, default is Undefined, optional
        Reserved IP Range name is used for VPC Peering. The
        subnetwork allocation will use the range name if it's assigned.
    shieldedInstanceConfig : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        Shielded VM Instance configuration settings.
        Structure is documented below.
    subnet : str, default is Undefined, optional
        The Compute Engine subnetwork to be used for machine
        communications. Cannot be specified with network. A full URL or
        partial URI are valid. Examples:
    tags : [str], default is Undefined, optional
        The Compute Engine tags to add to runtime (see [Tagging instances]
        (https://cloud.google.com/compute/docs/
        label-or-tag-resources#tags)).
    """


    acceleratorConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0]

    containerImages?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0]

    dataDisk?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0]

    encryptionConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0]

    internalIpOnly?: bool

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    network?: str

    nicType?: str

    reservedIpRange?: str

    shieldedInstanceConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0]

    subnet?: str

    tags?: [str]


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0 accelerator config items0

    Attributes
    ----------
    coreCount : float, default is Undefined, optional
        Count of cores of this accelerator.
    $type : str, default is Undefined, optional
        Specifies the type of the disk, either SCRATCH or PERSISTENT.
        If not specified, the default is PERSISTENT.
    """


    coreCount?: float

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0 container images items0

    Attributes
    ----------
    repository : str, default is Undefined, optional
        The path to the container image repository.
        For example: gcr.io/{project_id}/{imageName}
    tag : str, default is Undefined, optional
        The tag of the container image. If not specified, this defaults to the latest tag.
    """


    repository?: str

    tag?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0 data disk items0

    Attributes
    ----------
    initializeParams : [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0], default is Undefined, optional
        Input only. Specifies the parameters for a new disk that will
        be created alongside the new instance. Use initialization
        parameters to create boot disks or local SSDs attached to the
        new instance. This property is mutually exclusive with the
        source property; you can only define one or the other, but not
        both.
        Structure is documented below.
    interface : str, default is Undefined, optional
        "Specifies the disk interface to use for attaching this disk,
        which is either SCSI or NVME. The default is SCSI. Persistent
        disks must always use SCSI and the request will fail if you attempt
        to attach a persistent disk in any other format than SCSI. Local SSDs
        can use either NVME or SCSI. For performance characteristics of SCSI
        over NVMe, see Local SSD performance. Valid values: * NVME * SCSI".
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If not specified, the default is to attach
        the disk in READ_WRITE mode.
    source : str, default is Undefined, optional
        Specifies a valid partial or full URL to an existing
        Persistent Disk resource.
    $type : str, default is Undefined, optional
        Specifies the type of the disk, either SCRATCH or PERSISTENT.
        If not specified, the default is PERSISTENT.
    """


    initializeParams?: [NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0]

    interface?: str

    mode?: str

    source?: str

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0 data disk items0 initialize params items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Provide this property when creating the disk.
    diskName : str, default is Undefined, optional
        Specifies the disk name. If not specified, the default is
        to use the name of the instance. If the disk with the
        instance name exists already in the given zone/region, a
        new name will be automatically generated.
    diskSizeGb : float, default is Undefined, optional
        Specifies the size of the disk in base-2 GB. If not
        specified, the disk will be the same size as the image
        (usually 10GB). If specified, the size must be equal to
        or larger than 10GB. Default 100 GB.
    diskType : str, default is Undefined, optional
        The type of the boot disk attached to this runtime,
        defaults to standard persistent disk. For valid values,
        see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#disktype
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    """


    description?: str

    diskName?: str

    diskSizeGb?: float

    diskType?: str

    labels?: {str:str}


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0 encryption config items0

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer-managed
        encryption key used to protect a resource, such as a disks.
        It has the following format:
        projects/{PROJECT_ID}/locations/{REGION}/keyRings/ {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}
    """


    kmsKey?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecInitProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime spec init provider virtual machine items0 virtual machine config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Defines whether the instance has integrity monitoring enabled.
        Enables monitoring and attestation of the boot integrity of
        the instance. The attestation is performed against the
        integrity policy baseline. This baseline is initially derived
        from the implicitly trusted boot image when the instance is
        created. Enabled by default.
    enableSecureBoot : bool, default is Undefined, optional
        Defines whether the instance has Secure Boot enabled.Secure
        Boot helps ensure that the system only runs authentic software
        by verifying the digital signature of all boot components, and
        halting the boot process if signature verification fails.
        Disabled by default.
    enableVtpm : bool, default is Undefined, optional
        Defines whether the instance has the vTPM enabled. Enabled by
        default.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NotebooksGcpUpboundIoV1beta1RuntimeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NotebooksGcpUpboundIoV1beta1RuntimeSpecProviderConfigRefPolicy


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToConfigRef

    metadata?: NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToMetadata

    name: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToConfigRefPolicy


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatus:
    """
    RuntimeStatus defines the observed state of Runtime.

    Attributes
    ----------
    atProvider : NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NotebooksGcpUpboundIoV1beta1RuntimeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProvider

    conditions?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusConditionsItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProvider:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider

    Attributes
    ----------
    accessConfig : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderAccessConfigItems0], default is Undefined, optional
        The config settings for accessing runtime.
        Structure is documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    healthState : str, default is Undefined, optional
        The health state of this runtime. For a list of possible output
        values, see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#healthstate.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/runtimes/{{name}}
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    location : str, default is Undefined, optional
        A reference to the zone where the machine resides.
    metrics : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderMetricsItems0], default is Undefined, optional
        Contains Runtime daemon metrics such as Service status and JupyterLab
        status
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    softwareConfig : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderSoftwareConfigItems0], default is Undefined, optional
        The config settings for software inside the runtime.
        Structure is documented below.
    state : str, default is Undefined, optional
        The state of this runtime.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    virtualMachine : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0], default is Undefined, optional
        Use a Compute Engine VM image to start the managed notebook instance.
        Structure is documented below.
    """


    accessConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderAccessConfigItems0]

    effectiveLabels?: {str:str}

    healthState?: str

    id?: str

    labels?: {str:str}

    location?: str

    metrics?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderMetricsItems0]

    project?: str

    softwareConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderSoftwareConfigItems0]

    state?: str

    terraformLabels?: {str:str}

    virtualMachine?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderAccessConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider access config items0

    Attributes
    ----------
    accessType : str, default is Undefined, optional
        The type of access mode this instance. For valid values, see
        https://cloud.google.com/vertex-ai/docs/workbench/reference/ rest/v1/projects.locations.runtimes#RuntimeAccessType.
    proxyUri : str, default is Undefined, optional
        (Output)
        The proxy endpoint that is used to access the runtime.
    runtimeOwner : str, default is Undefined, optional
        The owner of this runtime after creation. Format: alias@example.com.
        Currently supports one owner only.
    """


    accessType?: str

    proxyUri?: str

    runtimeOwner?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderMetricsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider metrics items0

    Attributes
    ----------
    systemMetrics : {str:str}, default is Undefined, optional
        (Output)
        Contains runtime daemon metrics, such as OS and kernels and
        sessions stats.
    """


    systemMetrics?: {str:str}


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderSoftwareConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider software config items0

    Attributes
    ----------
    customGpuDriverPath : str, default is Undefined, optional
        Specify a custom Cloud Storage path where the GPU driver is stored.
        If not specified, we'll automatically choose from official GPU drivers.
    enableHealthMonitoring : bool, default is Undefined, optional
        Verifies core internal services are running. Default: True.
    idleShutdown : bool, default is Undefined, optional
        Runtime will automatically shutdown after idle_shutdown_time.
        Default: True
    idleShutdownTimeout : float, default is Undefined, optional
        Time in minutes to wait before shuting down runtime.
        Default: 180 minutes
    installGpuDriver : bool, default is Undefined, optional
        Install Nvidia Driver automatically.
    kernels : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderSoftwareConfigItems0KernelsItems0], default is Undefined, optional
        Use a list of container images to use as Kernels in the notebook instance.
        Structure is documented below.
    notebookUpgradeSchedule : str, default is Undefined, optional
        Cron expression in UTC timezone for schedule instance auto upgrade.
        Please follow the cron format.
    postStartupScript : str, default is Undefined, optional
        Path to a Bash script that automatically runs after a notebook instance
        fully boots up. The path must be a URL or
        Cloud Storage path (gs://path-to-file/file-name).
    postStartupScriptBehavior : str, default is Undefined, optional
        Behavior for the post startup script.
        Possible values are: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED, RUN_EVERY_START, DOWNLOAD_AND_RUN_EVERY_START.
    upgradeable : bool, default is Undefined, optional
        (Output)
        Bool indicating whether an newer image is available in an image family.
    """


    customGpuDriverPath?: str

    enableHealthMonitoring?: bool

    idleShutdown?: bool

    idleShutdownTimeout?: float

    installGpuDriver?: bool

    kernels?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderSoftwareConfigItems0KernelsItems0]

    notebookUpgradeSchedule?: str

    postStartupScript?: str

    postStartupScriptBehavior?: str

    upgradeable?: bool


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderSoftwareConfigItems0KernelsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider software config items0 kernels items0

    Attributes
    ----------
    repository : str, default is Undefined, optional
        The path to the container image repository.
        For example: gcr.io/{project_id}/{imageName}
    tag : str, default is Undefined, optional
        The tag of the container image. If not specified, this defaults to the latest tag.
    """


    repository?: str

    tag?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0

    Attributes
    ----------
    instanceId : str, default is Undefined, optional
        (Output)
        The unique identifier of the Managed Compute Engine instance.
    instanceName : str, default is Undefined, optional
        (Output)
        The user-friendly name of the Managed Compute Engine instance.
    virtualMachineConfig : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0], default is Undefined, optional
        Virtual Machine configuration settings.
        Structure is documented below.
    """


    instanceId?: str

    instanceName?: str

    virtualMachineConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0]


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0

    Attributes
    ----------
    acceleratorConfig : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0], default is Undefined, optional
        The Compute Engine accelerator configuration for this runtime.
        Structure is documented below.
    containerImages : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0], default is Undefined, optional
        Use a list of container images to start the notebook instance.
        Structure is documented below.
    dataDisk : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0], default is Undefined, optional
        Data disk option configuration settings.
        Structure is documented below.
    encryptionConfig : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0], default is Undefined, optional
        Encryption settings for virtual machine data disk.
        Structure is documented below.
    guestAttributes : {str:str}, default is Undefined, optional
        (Output)
        The Compute Engine guest attributes. (see [Project and instance
        guest attributes](https://cloud.google.com/compute/docs/
        storing-retrieving-metadata#guest_attributes)).
    internalIpOnly : bool, default is Undefined, optional
        If true, runtime will only have internal IP addresses. By default,
        runtimes are not restricted to internal IP addresses, and will
        have ephemeral external IP addresses assigned to each vm. This
        internal_ip_only restriction can only be enabled for subnetwork
        enabled networks, and all dependencies must be configured to be
        accessible without external IP addresses.
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    machineType : str, default is Undefined, optional
        The Compute Engine machine type used for runtimes.
    metadata : {str:str}, default is Undefined, optional
        The Compute Engine metadata entries to add to virtual machine.
        (see [Project and instance metadata](https://cloud.google.com
        /compute/docs/storing-retrieving-metadata#project_and_instance
        _metadata)).
    network : str, default is Undefined, optional
        The Compute Engine network to be used for machine communications.
        Cannot be specified with subnetwork. If neither network nor
        subnet is specified, the "default" network of the project is
        used, if it exists. A full URL or partial URI. Examples:
    nicType : str, default is Undefined, optional
        The type of vNIC to be used on this interface. This may be gVNIC
        or VirtioNet.
        Possible values are: UNSPECIFIED_NIC_TYPE, VIRTIO_NET, GVNIC.
    reservedIpRange : str, default is Undefined, optional
        Reserved IP Range name is used for VPC Peering. The
        subnetwork allocation will use the range name if it's assigned.
    shieldedInstanceConfig : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0], default is Undefined, optional
        Shielded VM Instance configuration settings.
        Structure is documented below.
    subnet : str, default is Undefined, optional
        The Compute Engine subnetwork to be used for machine
        communications. Cannot be specified with network. A full URL or
        partial URI are valid. Examples:
    tags : [str], default is Undefined, optional
        The Compute Engine tags to add to runtime (see [Tagging instances]
        (https://cloud.google.com/compute/docs/
        label-or-tag-resources#tags)).
    zone : str, default is Undefined, optional
        (Output)
        The zone where the virtual machine is located.
    """


    acceleratorConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0]

    containerImages?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0]

    dataDisk?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0]

    encryptionConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0]

    guestAttributes?: {str:str}

    internalIpOnly?: bool

    labels?: {str:str}

    machineType?: str

    metadata?: {str:str}

    network?: str

    nicType?: str

    reservedIpRange?: str

    shieldedInstanceConfig?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0]

    subnet?: str

    tags?: [str]

    zone?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0AcceleratorConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0 accelerator config items0

    Attributes
    ----------
    coreCount : float, default is Undefined, optional
        Count of cores of this accelerator.
    $type : str, default is Undefined, optional
        Specifies the type of the disk, either SCRATCH or PERSISTENT.
        If not specified, the default is PERSISTENT.
    """


    coreCount?: float

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0ContainerImagesItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0 container images items0

    Attributes
    ----------
    repository : str, default is Undefined, optional
        The path to the container image repository.
        For example: gcr.io/{project_id}/{imageName}
    tag : str, default is Undefined, optional
        The tag of the container image. If not specified, this defaults to the latest tag.
    """


    repository?: str

    tag?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0 data disk items0

    Attributes
    ----------
    autoDelete : bool, default is Undefined, optional
        (Output)
        Optional. Specifies whether the disk will be auto-deleted
        when the instance is deleted (but not when the disk is
        detached from the instance).
    boot : bool, default is Undefined, optional
        (Output)
        Optional. Indicates that this is a boot disk. The virtual
        machine will use the first partition of the disk for its
        root filesystem.
    deviceName : str, default is Undefined, optional
        (Output)
        Optional. Specifies a unique device name of your choice
        that is reflected into the /dev/disk/by-id/google-* tree
        of a Linux operating system running within the instance.
        This name can be used to reference the device for mounting,
        resizing, and so on, from within the instance.
        If not specified, the server chooses a default device name
        to apply to this disk, in the form persistent-disk-x, where
        x is a number assigned by Google Compute Engine. This field
        is only applicable for persistent disks.
    guestOsFeatures : [str], default is Undefined, optional
        (Output)
        Indicates a list of features to enable on the guest operating
        system. Applicable only for bootable images. To see a list of
        available features, read https://cloud.google.com/compute/docs/ images/create-delete-deprecate-private-images#guest-os-features
        options.
    index : float, default is Undefined, optional
        (Output)
        Output only. A zero-based index to this disk, where 0 is
        reserved for the boot disk. If you have many disks attached
        to an instance, each disk would have a unique index number.
    initializeParams : [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0], default is Undefined, optional
        Input only. Specifies the parameters for a new disk that will
        be created alongside the new instance. Use initialization
        parameters to create boot disks or local SSDs attached to the
        new instance. This property is mutually exclusive with the
        source property; you can only define one or the other, but not
        both.
        Structure is documented below.
    interface : str, default is Undefined, optional
        "Specifies the disk interface to use for attaching this disk,
        which is either SCSI or NVME. The default is SCSI. Persistent
        disks must always use SCSI and the request will fail if you attempt
        to attach a persistent disk in any other format than SCSI. Local SSDs
        can use either NVME or SCSI. For performance characteristics of SCSI
        over NVMe, see Local SSD performance. Valid values: * NVME * SCSI".
    kind : str, default is Undefined, optional
        (Output)
        Type of the resource. Always compute#attachedDisk for attached
        disks.
    licenses : [str], default is Undefined, optional
        (Output)
        Output only. Any valid publicly visible licenses.
    mode : str, default is Undefined, optional
        The mode in which to attach this disk, either READ_WRITE
        or READ_ONLY. If not specified, the default is to attach
        the disk in READ_WRITE mode.
    source : str, default is Undefined, optional
        Specifies a valid partial or full URL to an existing
        Persistent Disk resource.
    $type : str, default is Undefined, optional
        Specifies the type of the disk, either SCRATCH or PERSISTENT.
        If not specified, the default is PERSISTENT.
    """


    autoDelete?: bool

    boot?: bool

    deviceName?: str

    guestOsFeatures?: [str]

    index?: float

    initializeParams?: [NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0]

    interface?: str

    kind?: str

    licenses?: [str]

    mode?: str

    source?: str

    $type?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0DataDiskItems0InitializeParamsItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0 data disk items0 initialize params items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Provide this property when creating the disk.
    diskName : str, default is Undefined, optional
        Specifies the disk name. If not specified, the default is
        to use the name of the instance. If the disk with the
        instance name exists already in the given zone/region, a
        new name will be automatically generated.
    diskSizeGb : float, default is Undefined, optional
        Specifies the size of the disk in base-2 GB. If not
        specified, the disk will be the same size as the image
        (usually 10GB). If specified, the size must be equal to
        or larger than 10GB. Default 100 GB.
    diskType : str, default is Undefined, optional
        The type of the boot disk attached to this runtime,
        defaults to standard persistent disk. For valid values,
        see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#disktype
    labels : {str:str}, default is Undefined, optional
        The labels to associate with this runtime. Label keys must
        contain 1 to 63 characters, and must conform to [RFC 1035]
        (https://www.ietf.org/rfc/rfc1035.txt). Label values may be
        empty, but, if present, must contain 1 to 63 characters, and must
        conform to RFC 1035. No
        more than 32 labels can be associated with a cluster.
    """


    description?: str

    diskName?: str

    diskSizeGb?: float

    diskType?: str

    labels?: {str:str}


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0EncryptionConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0 encryption config items0

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        The Cloud KMS resource identifier of the customer-managed
        encryption key used to protect a resource, such as a disks.
        It has the following format:
        projects/{PROJECT_ID}/locations/{REGION}/keyRings/ {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}
    """


    kmsKey?: str


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusAtProviderVirtualMachineItems0VirtualMachineConfigItems0ShieldedInstanceConfigItems0:
    """
    notebooks gcp upbound io v1beta1 runtime status at provider virtual machine items0 virtual machine config items0 shielded instance config items0

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Defines whether the instance has integrity monitoring enabled.
        Enables monitoring and attestation of the boot integrity of
        the instance. The attestation is performed against the
        integrity policy baseline. This baseline is initially derived
        from the implicitly trusted boot image when the instance is
        created. Enabled by default.
    enableSecureBoot : bool, default is Undefined, optional
        Defines whether the instance has Secure Boot enabled.Secure
        Boot helps ensure that the system only runs authentic software
        by verifying the digital signature of all boot components, and
        halting the boot process if signature verification fails.
        Disabled by default.
    enableVtpm : bool, default is Undefined, optional
        Defines whether the instance has the vTPM enabled. Enabled by
        default.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema NotebooksGcpUpboundIoV1beta1RuntimeStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


