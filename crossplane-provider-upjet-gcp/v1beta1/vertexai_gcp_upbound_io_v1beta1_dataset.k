"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Dataset:
    """
    Dataset is the Schema for the Datasets API. A collection of DataItems and Annotations on them.

    Attributes
    ----------
    apiVersion : str, default is "vertexai.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Dataset", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : VertexaiGcpUpboundIoV1beta1DatasetSpec, default is Undefined, required
        spec
    status : VertexaiGcpUpboundIoV1beta1DatasetStatus, default is Undefined, optional
        status
    """


    apiVersion: "vertexai.gcp.upbound.io/v1beta1" = "vertexai.gcp.upbound.io/v1beta1"

    kind: "Dataset" = "Dataset"

    metadata?: v1.ObjectMeta

    spec: VertexaiGcpUpboundIoV1beta1DatasetSpec

    status?: VertexaiGcpUpboundIoV1beta1DatasetStatus


schema VertexaiGcpUpboundIoV1beta1DatasetSpec:
    """
    DatasetSpec defines the desired state of Dataset

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : VertexaiGcpUpboundIoV1beta1DatasetSpecForProvider, default is Undefined, required
        for provider
    initProvider : VertexaiGcpUpboundIoV1beta1DatasetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : VertexaiGcpUpboundIoV1beta1DatasetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : VertexaiGcpUpboundIoV1beta1DatasetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: VertexaiGcpUpboundIoV1beta1DatasetSpecForProvider

    initProvider?: VertexaiGcpUpboundIoV1beta1DatasetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: VertexaiGcpUpboundIoV1beta1DatasetSpecProviderConfigRef

    publishConnectionDetailsTo?: VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: VertexaiGcpUpboundIoV1beta1DatasetSpecWriteConnectionSecretToRef


schema VertexaiGcpUpboundIoV1beta1DatasetSpecForProvider:
    """
    vertexai gcp upbound io v1beta1 dataset spec for provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1DatasetSpecForProviderEncryptionSpecItems0], default is Undefined, optional
        Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this Workflow.
    metadataSchemaUri : str, default is Undefined, optional
        Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the dataset. eg us-central1
    """


    displayName?: str

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1DatasetSpecForProviderEncryptionSpecItems0]

    labels?: {str:str}

    metadataSchemaUri?: str

    project?: str

    region?: str


schema VertexaiGcpUpboundIoV1beta1DatasetSpecForProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 dataset spec for provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
        Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1DatasetSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1DatasetSpecInitProviderEncryptionSpecItems0], default is Undefined, optional
        Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this Workflow.
    metadataSchemaUri : str, default is Undefined, optional
        Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the dataset. eg us-central1
    """


    displayName?: str

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1DatasetSpecInitProviderEncryptionSpecItems0]

    labels?: {str:str}

    metadataSchemaUri?: str

    project?: str

    region?: str


schema VertexaiGcpUpboundIoV1beta1DatasetSpecInitProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 dataset spec init provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
        Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1DatasetSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1DatasetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1DatasetSpecProviderConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1DatasetSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToConfigRef

    metadata?: VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToMetadata

    name: str


schema VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToConfigRefPolicy


schema VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema VertexaiGcpUpboundIoV1beta1DatasetSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema VertexaiGcpUpboundIoV1beta1DatasetSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema VertexaiGcpUpboundIoV1beta1DatasetStatus:
    """
    DatasetStatus defines the observed state of Dataset.

    Attributes
    ----------
    atProvider : VertexaiGcpUpboundIoV1beta1DatasetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [VertexaiGcpUpboundIoV1beta1DatasetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: VertexaiGcpUpboundIoV1beta1DatasetStatusAtProvider

    conditions?: [VertexaiGcpUpboundIoV1beta1DatasetStatusConditionsItems0]


schema VertexaiGcpUpboundIoV1beta1DatasetStatusAtProvider:
    """
    vertexai gcp upbound io v1beta1 dataset status at provider

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    displayName : str, default is Undefined, optional
        The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    encryptionSpec : [VertexaiGcpUpboundIoV1beta1DatasetStatusAtProviderEncryptionSpecItems0], default is Undefined, optional
        Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    labels : {str:str}, default is Undefined, optional
        A set of key/value label pairs to assign to this Workflow.
    metadataSchemaUri : str, default is Undefined, optional
        Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
    name : str, default is Undefined, optional
        The resource name of the Dataset. This value is set by Google.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    region : str, default is Undefined, optional
        The region of the dataset. eg us-central1
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
    """


    createTime?: str

    displayName?: str

    effectiveLabels?: {str:str}

    encryptionSpec?: [VertexaiGcpUpboundIoV1beta1DatasetStatusAtProviderEncryptionSpecItems0]

    id?: str

    labels?: {str:str}

    metadataSchemaUri?: str

    name?: str

    project?: str

    region?: str

    terraformLabels?: {str:str}

    updateTime?: str


schema VertexaiGcpUpboundIoV1beta1DatasetStatusAtProviderEncryptionSpecItems0:
    """
    vertexai gcp upbound io v1beta1 dataset status at provider encryption spec items0

    Attributes
    ----------
    kmsKeyName : str, default is Undefined, optional
        Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource.
        Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
    """


    kmsKeyName?: str


schema VertexaiGcpUpboundIoV1beta1DatasetStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


