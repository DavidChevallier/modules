"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Flow:
    """
    Flow is the Schema for the Flows API. Flows represents the conversation flows when you build your chatbot agent.

    Attributes
    ----------
    apiVersion : str, default is "dialogflowcx.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Flow", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DialogflowcxGcpUpboundIoV1beta1FlowSpec, default is Undefined, required
        spec
    status : DialogflowcxGcpUpboundIoV1beta1FlowStatus, default is Undefined, optional
        status
    """


    apiVersion: "dialogflowcx.gcp.upbound.io/v1beta1" = "dialogflowcx.gcp.upbound.io/v1beta1"

    kind: "Flow" = "Flow"

    metadata?: v1.ObjectMeta

    spec: DialogflowcxGcpUpboundIoV1beta1FlowSpec

    status?: DialogflowcxGcpUpboundIoV1beta1FlowStatus


schema DialogflowcxGcpUpboundIoV1beta1FlowSpec:
    """
    FlowSpec defines the desired state of Flow

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProvider, default is Undefined, required
        for provider
    initProvider : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProvider

    initProvider?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecProviderConfigRef

    publishConnectionDetailsTo?: DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecWriteConnectionSecretToRef


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProvider:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider

    Attributes
    ----------
    advancedSettings : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0], default is Undefined, optional
        Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
        Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
        Structure is documented below.
    description : str, default is Undefined, optional
        The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
    displayName : str, default is Undefined, optional
        The human-readable name of the flow.
    eventHandlers : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0], default is Undefined, optional
        A flow's event handlers serve two purposes:
        They are responsible for handling events (e.g. no match, webhook errors) in the flow.
        They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
        Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
        Structure is documented below.
    isDefaultStartFlow : bool, default is Undefined, optional
        Marks this as the Default Start Flow for an agent. When you create an agent, the Default Start Flow is created automatically.
        The Default Start Flow cannot be deleted; deleting the google_dialogflow_cx_flow resource does nothing to the underlying GCP resources.
    languageCode : str, default is Undefined, optional
        The language of the following fields in flow:
        Flow.event_handlers.trigger_fulfillment.messages
        Flow.event_handlers.trigger_fulfillment.conditional_cases
        Flow.transition_routes.trigger_fulfillment.messages
        Flow.transition_routes.trigger_fulfillment.conditional_cases
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    nluSettings : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderNluSettingsItems0], default is Undefined, optional
        NLU related settings of the flow.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The agent to create a flow for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentSelector, default is Undefined, optional
        parent selector
    transitionRouteGroups : [str], default is Undefined, optional
        A flow's transition route group serve two purposes:
        They are responsible for matching the user's first utterances in the flow.
        They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
        Format:projects//locations//agents//flows//transitionRouteGroups/.
    transitionRoutes : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0], default is Undefined, optional
        A flow's transition routes serve two purposes:
        They are responsible for matching the user's first utterances in the flow.
        They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
        TransitionRoutes are evalauted in the following order:
        TransitionRoutes with intent specified.
        TransitionRoutes with only condition specified.
        TransitionRoutes with intent specified are inherited by pages in the flow.
        Structure is documented below.
    """


    advancedSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0]

    description?: str

    displayName?: str

    eventHandlers?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0]

    isDefaultStartFlow?: bool

    languageCode?: str

    nluSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderNluSettingsItems0]

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentSelector

    transitionRouteGroups?: [str]

    transitionRoutes?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider advanced settings items0

    Attributes
    ----------
    audioExportGcsDestination : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0], default is Undefined, optional
        If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels:
    dtmfSettings : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0DtmfSettingsItems0], default is Undefined, optional
        Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
    """


    audioExportGcsDestination?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0]

    dtmfSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0DtmfSettingsItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider advanced settings items0 audio export gcs destination items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        The Google Cloud Storage URI for the exported objects. Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
        Format: gs://bucket/object-name-or-prefix
    """


    uri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderAdvancedSettingsItems0DtmfSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider advanced settings items0 dtmf settings items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
    finishDigit : str, default is Undefined, optional
        The digit that terminates a DTMF digit sequence.
    maxDigits : float, default is Undefined, optional
        Max length of DTMF digits.
    """


    enabled?: bool

    finishDigit?: str

    maxDigits?: float


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0

    Attributes
    ----------
    event : str, default is Undefined, optional
        The name of the event to handle.
    targetFlow : str, default is Undefined, optional
        The target flow to transition to.
        Format: projects//locations//agents//flows/.
    targetPage : str, default is Undefined, optional
        The target page to transition to.
        Format: projects//locations//agents//flows//pages/.
    triggerFulfillment : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0], default is Undefined, optional
        The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
        Structure is documented below.
    """


    event?: str

    targetFlow?: str

    targetPage?: str

    triggerFulfillment?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0

    Attributes
    ----------
    conditionalCases : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0], default is Undefined, optional
        Conditional cases for this fulfillment.
        Structure is documented below.
    messages : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0], default is Undefined, optional
        The list of rich message responses to present to the user.
        Structure is documented below.
    returnPartialResponses : bool, default is Undefined, optional
        Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
    setParameterActions : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0], default is Undefined, optional
        Set parameter values before executing the webhook.
        Structure is documented below.
    tag : str, default is Undefined, optional
        The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
    webhook : str, default is Undefined, optional
        The webhook to call. Format: projects//locations//agents//webhooks/.
    """


    conditionalCases?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0]

    messages?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0]

    returnPartialResponses?: bool

    setParameterActions?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0]

    tag?: str

    webhook?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 conditional cases items0

    Attributes
    ----------
    cases : str, default is Undefined, optional
        A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
        See Case for the schema.
    """


    cases?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
    conversationSuccess : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0], default is Undefined, optional
        Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
        Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
        You may set this, for example:
    liveAgentHandoff : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0], default is Undefined, optional
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
        You may set this, for example:
    outputAudioText : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0], default is Undefined, optional
        A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        Structure is documented below.
    payload : str, default is Undefined, optional
        A custom, platform-specific payload.
    playAudio : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0], default is Undefined, optional
        Specifies an audio clip to be played by the client as part of the response.
        Structure is documented below.
    telephonyTransferCall : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0], default is Undefined, optional
        Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
        Structure is documented below.
    text : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0], default is Undefined, optional
        A collection of text responses.
    """


    channel?: str

    conversationSuccess?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0]

    liveAgentHandoff?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0]

    outputAudioText?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0]

    payload?: str

    playAudio?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0]

    telephonyTransferCall?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0]

    text?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0 conversation success items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0 live agent handoff items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0 output audio text items0

    Attributes
    ----------
    ssml : str, default is Undefined, optional
        The SSML text to be synthesized. For more information, see SSML.
    text : str, default is Undefined, optional
        A collection of text responses.
    """


    ssml?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0 play audio items0

    Attributes
    ----------
    audioUri : str, default is Undefined, optional
        URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
    """


    audioUri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0 telephony transfer call items0

    Attributes
    ----------
    phoneNumber : str, default is Undefined, optional
        Transfer the call to a phone number in E.164 format.
    """


    phoneNumber?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 messages items0 text items0

    Attributes
    ----------
    text : [str], default is Undefined, optional
        A collection of text responses.
    """


    text?: [str]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider event handlers items0 trigger fulfillment items0 set parameter actions items0

    Attributes
    ----------
    parameter : str, default is Undefined, optional
        Display name of the parameter.
    value : str, default is Undefined, optional
        The new JSON-encoded value of the parameter. A null value clears the parameter.
    """


    parameter?: str

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderNluSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider nlu settings items0

    Attributes
    ----------
    classificationThreshold : float, default is Undefined, optional
        To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
        If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
    modelTrainingMode : str, default is Undefined, optional
        Indicates NLU model training mode.
    modelType : str, default is Undefined, optional
        Indicates the type of NLU model.
    """


    classificationThreshold?: float

    modelTrainingMode?: str

    modelType?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        The condition to evaluate against form parameters or session parameters.
        At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
    intent : str, default is Undefined, optional
        The unique identifier of an Intent.
        Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
    targetFlow : str, default is Undefined, optional
        The target flow to transition to.
        Format: projects//locations//agents//flows/.
    targetFlowRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowRef, default is Undefined, optional
        target flow ref
    targetFlowSelector : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowSelector, default is Undefined, optional
        target flow selector
    targetPage : str, default is Undefined, optional
        The target page to transition to.
        Format: projects//locations//agents//flows//pages/.
    triggerFulfillment : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0], default is Undefined, optional
        The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
        Structure is documented below.
    """


    condition?: str

    intent?: str

    targetFlow?: str

    targetFlowRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowRef

    targetFlowSelector?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowSelector

    targetPage?: str

    triggerFulfillment?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowRef:
    """
    Reference to a Agent in dialogflowcx to populate targetFlow.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowSelector:
    """
    Selector for a Agent in dialogflowcx to populate targetFlow.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TargetFlowSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0

    Attributes
    ----------
    conditionalCases : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0], default is Undefined, optional
        Conditional cases for this fulfillment.
        Structure is documented below.
    messages : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0], default is Undefined, optional
        The list of rich message responses to present to the user.
        Structure is documented below.
    returnPartialResponses : bool, default is Undefined, optional
        Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
    setParameterActions : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0], default is Undefined, optional
        Set parameter values before executing the webhook.
        Structure is documented below.
    tag : str, default is Undefined, optional
        The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
    webhook : str, default is Undefined, optional
        The webhook to call. Format: projects//locations//agents//webhooks/.
    """


    conditionalCases?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0]

    messages?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0]

    returnPartialResponses?: bool

    setParameterActions?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0]

    tag?: str

    webhook?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 conditional cases items0

    Attributes
    ----------
    cases : str, default is Undefined, optional
        A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
        See Case for the schema.
    """


    cases?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
    conversationSuccess : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0], default is Undefined, optional
        Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
        Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
        You may set this, for example:
    liveAgentHandoff : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0], default is Undefined, optional
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
        You may set this, for example:
    outputAudioText : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0], default is Undefined, optional
        A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        Structure is documented below.
    payload : str, default is Undefined, optional
        A custom, platform-specific payload.
    playAudio : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0], default is Undefined, optional
        Specifies an audio clip to be played by the client as part of the response.
        Structure is documented below.
    telephonyTransferCall : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0], default is Undefined, optional
        Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
        Structure is documented below.
    text : [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0], default is Undefined, optional
        A collection of text responses.
    """


    channel?: str

    conversationSuccess?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0]

    liveAgentHandoff?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0]

    outputAudioText?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0]

    payload?: str

    playAudio?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0]

    telephonyTransferCall?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0]

    text?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0 conversation success items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0 live agent handoff items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0 output audio text items0

    Attributes
    ----------
    ssml : str, default is Undefined, optional
        The SSML text to be synthesized. For more information, see SSML.
    text : str, default is Undefined, optional
        A collection of text responses.
    """


    ssml?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0 play audio items0

    Attributes
    ----------
    audioUri : str, default is Undefined, optional
        URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
    """


    audioUri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0 telephony transfer call items0

    Attributes
    ----------
    phoneNumber : str, default is Undefined, optional
        Transfer the call to a phone number in E.164 format.
    """


    phoneNumber?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 messages items0 text items0

    Attributes
    ----------
    text : [str], default is Undefined, optional
        A collection of text responses.
    """


    text?: [str]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecForProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec for provider transition routes items0 trigger fulfillment items0 set parameter actions items0

    Attributes
    ----------
    parameter : str, default is Undefined, optional
        Display name of the parameter.
    value : str, default is Undefined, optional
        The new JSON-encoded value of the parameter. A null value clears the parameter.
    """


    parameter?: str

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    advancedSettings : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0], default is Undefined, optional
        Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
        Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
        Structure is documented below.
    description : str, default is Undefined, optional
        The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
    displayName : str, default is Undefined, optional
        The human-readable name of the flow.
    eventHandlers : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0], default is Undefined, optional
        A flow's event handlers serve two purposes:
        They are responsible for handling events (e.g. no match, webhook errors) in the flow.
        They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
        Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
        Structure is documented below.
    isDefaultStartFlow : bool, default is Undefined, optional
        Marks this as the Default Start Flow for an agent. When you create an agent, the Default Start Flow is created automatically.
        The Default Start Flow cannot be deleted; deleting the google_dialogflow_cx_flow resource does nothing to the underlying GCP resources.
    languageCode : str, default is Undefined, optional
        The language of the following fields in flow:
        Flow.event_handlers.trigger_fulfillment.messages
        Flow.event_handlers.trigger_fulfillment.conditional_cases
        Flow.transition_routes.trigger_fulfillment.messages
        Flow.transition_routes.trigger_fulfillment.conditional_cases
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    nluSettings : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderNluSettingsItems0], default is Undefined, optional
        NLU related settings of the flow.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The agent to create a flow for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentSelector, default is Undefined, optional
        parent selector
    transitionRouteGroups : [str], default is Undefined, optional
        A flow's transition route group serve two purposes:
        They are responsible for matching the user's first utterances in the flow.
        They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
        Format:projects//locations//agents//flows//transitionRouteGroups/.
    transitionRoutes : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0], default is Undefined, optional
        A flow's transition routes serve two purposes:
        They are responsible for matching the user's first utterances in the flow.
        They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
        TransitionRoutes are evalauted in the following order:
        TransitionRoutes with intent specified.
        TransitionRoutes with only condition specified.
        TransitionRoutes with intent specified are inherited by pages in the flow.
        Structure is documented below.
    """


    advancedSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0]

    description?: str

    displayName?: str

    eventHandlers?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0]

    isDefaultStartFlow?: bool

    languageCode?: str

    nluSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderNluSettingsItems0]

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentSelector

    transitionRouteGroups?: [str]

    transitionRoutes?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider advanced settings items0

    Attributes
    ----------
    audioExportGcsDestination : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0], default is Undefined, optional
        If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels:
    dtmfSettings : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0DtmfSettingsItems0], default is Undefined, optional
        Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
    """


    audioExportGcsDestination?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0]

    dtmfSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0DtmfSettingsItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider advanced settings items0 audio export gcs destination items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        The Google Cloud Storage URI for the exported objects. Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
        Format: gs://bucket/object-name-or-prefix
    """


    uri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderAdvancedSettingsItems0DtmfSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider advanced settings items0 dtmf settings items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
    finishDigit : str, default is Undefined, optional
        The digit that terminates a DTMF digit sequence.
    maxDigits : float, default is Undefined, optional
        Max length of DTMF digits.
    """


    enabled?: bool

    finishDigit?: str

    maxDigits?: float


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0

    Attributes
    ----------
    event : str, default is Undefined, optional
        The name of the event to handle.
    targetFlow : str, default is Undefined, optional
        The target flow to transition to.
        Format: projects//locations//agents//flows/.
    targetPage : str, default is Undefined, optional
        The target page to transition to.
        Format: projects//locations//agents//flows//pages/.
    triggerFulfillment : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0], default is Undefined, optional
        The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
        Structure is documented below.
    """


    event?: str

    targetFlow?: str

    targetPage?: str

    triggerFulfillment?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0

    Attributes
    ----------
    conditionalCases : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0], default is Undefined, optional
        Conditional cases for this fulfillment.
        Structure is documented below.
    messages : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0], default is Undefined, optional
        The list of rich message responses to present to the user.
        Structure is documented below.
    returnPartialResponses : bool, default is Undefined, optional
        Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
    setParameterActions : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0], default is Undefined, optional
        Set parameter values before executing the webhook.
        Structure is documented below.
    tag : str, default is Undefined, optional
        The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
    webhook : str, default is Undefined, optional
        The webhook to call. Format: projects//locations//agents//webhooks/.
    """


    conditionalCases?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0]

    messages?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0]

    returnPartialResponses?: bool

    setParameterActions?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0]

    tag?: str

    webhook?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 conditional cases items0

    Attributes
    ----------
    cases : str, default is Undefined, optional
        A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
        See Case for the schema.
    """


    cases?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
    conversationSuccess : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0], default is Undefined, optional
        Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
        Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
        You may set this, for example:
    liveAgentHandoff : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0], default is Undefined, optional
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
        You may set this, for example:
    outputAudioText : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0], default is Undefined, optional
        A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        Structure is documented below.
    payload : str, default is Undefined, optional
        A custom, platform-specific payload.
    playAudio : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0], default is Undefined, optional
        Specifies an audio clip to be played by the client as part of the response.
        Structure is documented below.
    telephonyTransferCall : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0], default is Undefined, optional
        Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
        Structure is documented below.
    text : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0], default is Undefined, optional
        A collection of text responses.
    """


    channel?: str

    conversationSuccess?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0]

    liveAgentHandoff?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0]

    outputAudioText?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0]

    payload?: str

    playAudio?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0]

    telephonyTransferCall?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0]

    text?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0 conversation success items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0 live agent handoff items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0 output audio text items0

    Attributes
    ----------
    ssml : str, default is Undefined, optional
        The SSML text to be synthesized. For more information, see SSML.
    text : str, default is Undefined, optional
        A collection of text responses.
    """


    ssml?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0 play audio items0

    Attributes
    ----------
    audioUri : str, default is Undefined, optional
        URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
    """


    audioUri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0 telephony transfer call items0

    Attributes
    ----------
    phoneNumber : str, default is Undefined, optional
        Transfer the call to a phone number in E.164 format.
    """


    phoneNumber?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 messages items0 text items0

    Attributes
    ----------
    text : [str], default is Undefined, optional
        A collection of text responses.
    """


    text?: [str]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider event handlers items0 trigger fulfillment items0 set parameter actions items0

    Attributes
    ----------
    parameter : str, default is Undefined, optional
        Display name of the parameter.
    value : str, default is Undefined, optional
        The new JSON-encoded value of the parameter. A null value clears the parameter.
    """


    parameter?: str

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderNluSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider nlu settings items0

    Attributes
    ----------
    classificationThreshold : float, default is Undefined, optional
        To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
        If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
    modelTrainingMode : str, default is Undefined, optional
        Indicates NLU model training mode.
    modelType : str, default is Undefined, optional
        Indicates the type of NLU model.
    """


    classificationThreshold?: float

    modelTrainingMode?: str

    modelType?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        The condition to evaluate against form parameters or session parameters.
        At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
    intent : str, default is Undefined, optional
        The unique identifier of an Intent.
        Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
    targetFlow : str, default is Undefined, optional
        The target flow to transition to.
        Format: projects//locations//agents//flows/.
    targetFlowRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowRef, default is Undefined, optional
        target flow ref
    targetFlowSelector : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowSelector, default is Undefined, optional
        target flow selector
    targetPage : str, default is Undefined, optional
        The target page to transition to.
        Format: projects//locations//agents//flows//pages/.
    triggerFulfillment : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0], default is Undefined, optional
        The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
        Structure is documented below.
    """


    condition?: str

    intent?: str

    targetFlow?: str

    targetFlowRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowRef

    targetFlowSelector?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowSelector

    targetPage?: str

    triggerFulfillment?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowRef:
    """
    Reference to a Agent in dialogflowcx to populate targetFlow.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowSelector:
    """
    Selector for a Agent in dialogflowcx to populate targetFlow.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TargetFlowSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0

    Attributes
    ----------
    conditionalCases : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0], default is Undefined, optional
        Conditional cases for this fulfillment.
        Structure is documented below.
    messages : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0], default is Undefined, optional
        The list of rich message responses to present to the user.
        Structure is documented below.
    returnPartialResponses : bool, default is Undefined, optional
        Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
    setParameterActions : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0], default is Undefined, optional
        Set parameter values before executing the webhook.
        Structure is documented below.
    tag : str, default is Undefined, optional
        The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
    webhook : str, default is Undefined, optional
        The webhook to call. Format: projects//locations//agents//webhooks/.
    """


    conditionalCases?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0]

    messages?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0]

    returnPartialResponses?: bool

    setParameterActions?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0]

    tag?: str

    webhook?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 conditional cases items0

    Attributes
    ----------
    cases : str, default is Undefined, optional
        A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
        See Case for the schema.
    """


    cases?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
    conversationSuccess : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0], default is Undefined, optional
        Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
        Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
        You may set this, for example:
    liveAgentHandoff : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0], default is Undefined, optional
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
        You may set this, for example:
    outputAudioText : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0], default is Undefined, optional
        A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        Structure is documented below.
    payload : str, default is Undefined, optional
        A custom, platform-specific payload.
    playAudio : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0], default is Undefined, optional
        Specifies an audio clip to be played by the client as part of the response.
        Structure is documented below.
    telephonyTransferCall : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0], default is Undefined, optional
        Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
        Structure is documented below.
    text : [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0], default is Undefined, optional
        A collection of text responses.
    """


    channel?: str

    conversationSuccess?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0]

    liveAgentHandoff?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0]

    outputAudioText?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0]

    payload?: str

    playAudio?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0]

    telephonyTransferCall?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0]

    text?: [DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0 conversation success items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0 live agent handoff items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0 output audio text items0

    Attributes
    ----------
    ssml : str, default is Undefined, optional
        The SSML text to be synthesized. For more information, see SSML.
    text : str, default is Undefined, optional
        A collection of text responses.
    """


    ssml?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0 play audio items0

    Attributes
    ----------
    audioUri : str, default is Undefined, optional
        URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
    """


    audioUri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0 telephony transfer call items0

    Attributes
    ----------
    phoneNumber : str, default is Undefined, optional
        Transfer the call to a phone number in E.164 format.
    """


    phoneNumber?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 messages items0 text items0

    Attributes
    ----------
    text : [str], default is Undefined, optional
        A collection of text responses.
    """


    text?: [str]


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecInitProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow spec init provider transition routes items0 trigger fulfillment items0 set parameter actions items0

    Attributes
    ----------
    parameter : str, default is Undefined, optional
        Display name of the parameter.
    value : str, default is Undefined, optional
        The new JSON-encoded value of the parameter. A null value clears the parameter.
    """


    parameter?: str

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecProviderConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToConfigRef

    metadata?: DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToMetadata

    name: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatus:
    """
    FlowStatus defines the observed state of Flow.

    Attributes
    ----------
    atProvider : DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DialogflowcxGcpUpboundIoV1beta1FlowStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProvider

    conditions?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusConditionsItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProvider:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider

    Attributes
    ----------
    advancedSettings : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0], default is Undefined, optional
        Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
        Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
        Structure is documented below.
    description : str, default is Undefined, optional
        The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
    displayName : str, default is Undefined, optional
        The human-readable name of the flow.
    eventHandlers : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0], default is Undefined, optional
        A flow's event handlers serve two purposes:
        They are responsible for handling events (e.g. no match, webhook errors) in the flow.
        They are inherited by every page's [event handlers][Page.event_handlers], which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow.
        Unlike transitionRoutes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{parent}}/flows/{{name}}
    isDefaultStartFlow : bool, default is Undefined, optional
        Marks this as the Default Start Flow for an agent. When you create an agent, the Default Start Flow is created automatically.
        The Default Start Flow cannot be deleted; deleting the google_dialogflow_cx_flow resource does nothing to the underlying GCP resources.
    languageCode : str, default is Undefined, optional
        The language of the following fields in flow:
        Flow.event_handlers.trigger_fulfillment.messages
        Flow.event_handlers.trigger_fulfillment.conditional_cases
        Flow.transition_routes.trigger_fulfillment.messages
        Flow.transition_routes.trigger_fulfillment.conditional_cases
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    name : str, default is Undefined, optional
        The unique identifier of the flow.
        Format: projects//locations//agents//flows/.
    nluSettings : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderNluSettingsItems0], default is Undefined, optional
        NLU related settings of the flow.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The agent to create a flow for.
        Format: projects//locations//agents/.
    transitionRouteGroups : [str], default is Undefined, optional
        A flow's transition route group serve two purposes:
        They are responsible for matching the user's first utterances in the flow.
        They are inherited by every page's [transition route groups][Page.transition_route_groups]. Transition route groups defined in the page have higher priority than those defined in the flow.
        Format:projects//locations//agents//flows//transitionRouteGroups/.
    transitionRoutes : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0], default is Undefined, optional
        A flow's transition routes serve two purposes:
        They are responsible for matching the user's first utterances in the flow.
        They are inherited by every page's [transition routes][Page.transition_routes] and can support use cases such as the user saying "help" or "can I talk to a human?", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow.
        TransitionRoutes are evalauted in the following order:
        TransitionRoutes with intent specified.
        TransitionRoutes with only condition specified.
        TransitionRoutes with intent specified are inherited by pages in the flow.
        Structure is documented below.
    """


    advancedSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0]

    description?: str

    displayName?: str

    eventHandlers?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0]

    id?: str

    isDefaultStartFlow?: bool

    languageCode?: str

    name?: str

    nluSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderNluSettingsItems0]

    parent?: str

    transitionRouteGroups?: [str]

    transitionRoutes?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider advanced settings items0

    Attributes
    ----------
    audioExportGcsDestination : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0], default is Undefined, optional
        If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels:
    dtmfSettings : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0DtmfSettingsItems0], default is Undefined, optional
        Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
    """


    audioExportGcsDestination?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0]

    dtmfSettings?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0DtmfSettingsItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0AudioExportGcsDestinationItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider advanced settings items0 audio export gcs destination items0

    Attributes
    ----------
    uri : str, default is Undefined, optional
        The Google Cloud Storage URI for the exported objects. Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation.
        Format: gs://bucket/object-name-or-prefix
    """


    uri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderAdvancedSettingsItems0DtmfSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider advanced settings items0 dtmf settings items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
    finishDigit : str, default is Undefined, optional
        The digit that terminates a DTMF digit sequence.
    maxDigits : float, default is Undefined, optional
        Max length of DTMF digits.
    """


    enabled?: bool

    finishDigit?: str

    maxDigits?: float


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0

    Attributes
    ----------
    event : str, default is Undefined, optional
        The name of the event to handle.
    name : str, default is Undefined, optional
        (Output)
        The unique identifier of this event handler.
    targetFlow : str, default is Undefined, optional
        The target flow to transition to.
        Format: projects//locations//agents//flows/.
    targetPage : str, default is Undefined, optional
        The target page to transition to.
        Format: projects//locations//agents//flows//pages/.
    triggerFulfillment : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0], default is Undefined, optional
        The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
        Structure is documented below.
    """


    event?: str

    name?: str

    targetFlow?: str

    targetPage?: str

    triggerFulfillment?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0

    Attributes
    ----------
    conditionalCases : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0], default is Undefined, optional
        Conditional cases for this fulfillment.
        Structure is documented below.
    messages : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0], default is Undefined, optional
        The list of rich message responses to present to the user.
        Structure is documented below.
    returnPartialResponses : bool, default is Undefined, optional
        Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
    setParameterActions : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0], default is Undefined, optional
        Set parameter values before executing the webhook.
        Structure is documented below.
    tag : str, default is Undefined, optional
        The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
    webhook : str, default is Undefined, optional
        The webhook to call. Format: projects//locations//agents//webhooks/.
    """


    conditionalCases?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0]

    messages?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0]

    returnPartialResponses?: bool

    setParameterActions?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0]

    tag?: str

    webhook?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0ConditionalCasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 conditional cases items0

    Attributes
    ----------
    cases : str, default is Undefined, optional
        A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
        See Case for the schema.
    """


    cases?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
    conversationSuccess : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0], default is Undefined, optional
        Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
        Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
        You may set this, for example:
    liveAgentHandoff : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0], default is Undefined, optional
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
        You may set this, for example:
    outputAudioText : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0], default is Undefined, optional
        A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        Structure is documented below.
    payload : str, default is Undefined, optional
        A custom, platform-specific payload.
    playAudio : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0], default is Undefined, optional
        Specifies an audio clip to be played by the client as part of the response.
        Structure is documented below.
    telephonyTransferCall : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0], default is Undefined, optional
        Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
        Structure is documented below.
    text : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0], default is Undefined, optional
        A collection of text responses.
    """


    channel?: str

    conversationSuccess?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0]

    liveAgentHandoff?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0]

    outputAudioText?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0]

    payload?: str

    playAudio?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0]

    telephonyTransferCall?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0]

    text?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0 conversation success items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0 live agent handoff items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0 output audio text items0

    Attributes
    ----------
    allowPlaybackInterruption : bool, default is Undefined, optional
        (Output)
        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
    ssml : str, default is Undefined, optional
        The SSML text to be synthesized. For more information, see SSML.
    text : str, default is Undefined, optional
        A collection of text responses.
    """


    allowPlaybackInterruption?: bool

    ssml?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0 play audio items0

    Attributes
    ----------
    allowPlaybackInterruption : bool, default is Undefined, optional
        (Output)
        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
    audioUri : str, default is Undefined, optional
        URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
    """


    allowPlaybackInterruption?: bool

    audioUri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0 telephony transfer call items0

    Attributes
    ----------
    phoneNumber : str, default is Undefined, optional
        Transfer the call to a phone number in E.164 format.
    """


    phoneNumber?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0MessagesItems0TextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 messages items0 text items0

    Attributes
    ----------
    allowPlaybackInterruption : bool, default is Undefined, optional
        (Output)
        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
    text : [str], default is Undefined, optional
        A collection of text responses.
    """


    allowPlaybackInterruption?: bool

    text?: [str]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderEventHandlersItems0TriggerFulfillmentItems0SetParameterActionsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider event handlers items0 trigger fulfillment items0 set parameter actions items0

    Attributes
    ----------
    parameter : str, default is Undefined, optional
        Display name of the parameter.
    value : str, default is Undefined, optional
        The new JSON-encoded value of the parameter. A null value clears the parameter.
    """


    parameter?: str

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderNluSettingsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider nlu settings items0

    Attributes
    ----------
    classificationThreshold : float, default is Undefined, optional
        To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold.
        If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
    modelTrainingMode : str, default is Undefined, optional
        Indicates NLU model training mode.
    modelType : str, default is Undefined, optional
        Indicates the type of NLU model.
    """


    classificationThreshold?: float

    modelTrainingMode?: str

    modelType?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        The condition to evaluate against form parameters or session parameters.
        At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
    intent : str, default is Undefined, optional
        The unique identifier of an Intent.
        Format: projects//locations//agents//intents/. Indicates that the transition can only happen when the given intent is matched. At least one of intent or condition must be specified. When both intent and condition are specified, the transition can only happen when both are fulfilled.
    name : str, default is Undefined, optional
        (Output)
        The unique identifier of this transition route.
    targetFlow : str, default is Undefined, optional
        The target flow to transition to.
        Format: projects//locations//agents//flows/.
    targetPage : str, default is Undefined, optional
        The target page to transition to.
        Format: projects//locations//agents//flows//pages/.
    triggerFulfillment : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0], default is Undefined, optional
        The fulfillment to call when the condition is satisfied. At least one of triggerFulfillment and target must be specified. When both are defined, triggerFulfillment is executed first.
        Structure is documented below.
    """


    condition?: str

    intent?: str

    name?: str

    targetFlow?: str

    targetPage?: str

    triggerFulfillment?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0

    Attributes
    ----------
    conditionalCases : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0], default is Undefined, optional
        Conditional cases for this fulfillment.
        Structure is documented below.
    messages : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0], default is Undefined, optional
        The list of rich message responses to present to the user.
        Structure is documented below.
    returnPartialResponses : bool, default is Undefined, optional
        Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
    setParameterActions : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0], default is Undefined, optional
        Set parameter values before executing the webhook.
        Structure is documented below.
    tag : str, default is Undefined, optional
        The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
    webhook : str, default is Undefined, optional
        The webhook to call. Format: projects//locations//agents//webhooks/.
    """


    conditionalCases?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0]

    messages?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0]

    returnPartialResponses?: bool

    setParameterActions?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0]

    tag?: str

    webhook?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0ConditionalCasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 conditional cases items0

    Attributes
    ----------
    cases : str, default is Undefined, optional
        A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
        See Case for the schema.
    """


    cases?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
    conversationSuccess : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0], default is Undefined, optional
        Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
        Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess.
        You may set this, for example:
    liveAgentHandoff : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0], default is Undefined, optional
        Indicates that the conversation should be handed off to a live agent.
        Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
        You may set this, for example:
    outputAudioText : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0], default is Undefined, optional
        A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        Structure is documented below.
    payload : str, default is Undefined, optional
        A custom, platform-specific payload.
    playAudio : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0], default is Undefined, optional
        Specifies an audio clip to be played by the client as part of the response.
        Structure is documented below.
    telephonyTransferCall : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0], default is Undefined, optional
        Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
        Structure is documented below.
    text : [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0], default is Undefined, optional
        A collection of text responses.
    """


    channel?: str

    conversationSuccess?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0]

    liveAgentHandoff?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0]

    outputAudioText?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0]

    payload?: str

    playAudio?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0]

    telephonyTransferCall?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0]

    text?: [DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0ConversationSuccessItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0 conversation success items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0LiveAgentHandoffItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0 live agent handoff items0

    Attributes
    ----------
    metadata : str, default is Undefined, optional
        Custom metadata. Dialogflow doesn't impose any structure on this.
    """


    metadata?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0OutputAudioTextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0 output audio text items0

    Attributes
    ----------
    allowPlaybackInterruption : bool, default is Undefined, optional
        (Output)
        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
    ssml : str, default is Undefined, optional
        The SSML text to be synthesized. For more information, see SSML.
    text : str, default is Undefined, optional
        A collection of text responses.
    """


    allowPlaybackInterruption?: bool

    ssml?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0PlayAudioItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0 play audio items0

    Attributes
    ----------
    allowPlaybackInterruption : bool, default is Undefined, optional
        (Output)
        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
    audioUri : str, default is Undefined, optional
        URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
    """


    allowPlaybackInterruption?: bool

    audioUri?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TelephonyTransferCallItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0 telephony transfer call items0

    Attributes
    ----------
    phoneNumber : str, default is Undefined, optional
        Transfer the call to a phone number in E.164 format.
    """


    phoneNumber?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0MessagesItems0TextItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 messages items0 text items0

    Attributes
    ----------
    allowPlaybackInterruption : bool, default is Undefined, optional
        (Output)
        Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
    text : [str], default is Undefined, optional
        A collection of text responses.
    """


    allowPlaybackInterruption?: bool

    text?: [str]


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusAtProviderTransitionRoutesItems0TriggerFulfillmentItems0SetParameterActionsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 flow status at provider transition routes items0 trigger fulfillment items0 set parameter actions items0

    Attributes
    ----------
    parameter : str, default is Undefined, optional
        Display name of the parameter.
    value : str, default is Undefined, optional
        The new JSON-encoded value of the parameter. A null value clears the parameter.
    """


    parameter?: str

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1FlowStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


