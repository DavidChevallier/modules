"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConsentStore:
    """
    ConsentStore is the Schema for the ConsentStores API. The Consent Management API is a tool for tracking user consents and the documentation associated with the consents.

    Attributes
    ----------
    apiVersion : str, default is "healthcare.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConsentStore", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : HealthcareGcpUpboundIoV1beta1ConsentStoreSpec, default is Undefined, required
        spec
    status : HealthcareGcpUpboundIoV1beta1ConsentStoreStatus, default is Undefined, optional
        status
    """


    apiVersion: "healthcare.gcp.upbound.io/v1beta1" = "healthcare.gcp.upbound.io/v1beta1"

    kind: "ConsentStore" = "ConsentStore"

    metadata?: v1.ObjectMeta

    spec: HealthcareGcpUpboundIoV1beta1ConsentStoreSpec

    status?: HealthcareGcpUpboundIoV1beta1ConsentStoreStatus


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpec:
    """
    ConsentStoreSpec defines the desired state of ConsentStore

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProvider, default is Undefined, required
        for provider
    initProvider : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProvider

    initProvider?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecProviderConfigRef

    publishConnectionDetailsTo?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecWriteConnectionSecretToRef


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProvider:
    """
    healthcare gcp upbound io v1beta1 consent store spec for provider

    Attributes
    ----------
    dataset : str, default is Undefined, optional
        Identifies the dataset addressed by this request. Must be in the format
        'projects/{project}/locations/{location}/datasets/{dataset}'
    datasetRef : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetRef, default is Undefined, optional
        dataset ref
    datasetSelector : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetSelector, default is Undefined, optional
        dataset selector
    defaultConsentTtl : str, default is Undefined, optional
        Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    enableConsentCreateOnUpdate : bool, default is Undefined, optional
        If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already exist.
    labels : {str:str}, default is Undefined, optional
        User-supplied key-value pairs used to organize Consent stores.
        Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must
        conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
        Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128
        bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
        No more than 64 labels can be associated with a given store.
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    name : str, default is Undefined, optional
        The name of this ConsentStore, for example:
        "consent1"
    """


    dataset?: str

    datasetRef?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetRef

    datasetSelector?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetSelector

    defaultConsentTtl?: str

    enableConsentCreateOnUpdate?: bool

    labels?: {str:str}

    name?: str


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetRef:
    """
    Reference to a Dataset in healthcare to populate dataset.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetRefPolicy


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetSelector:
    """
    Selector for a Dataset in healthcare to populate dataset.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetSelectorPolicy


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecForProviderDatasetSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    dataset : str, default is Undefined, optional
        Identifies the dataset addressed by this request. Must be in the format
        'projects/{project}/locations/{location}/datasets/{dataset}'
    datasetRef : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetRef, default is Undefined, optional
        dataset ref
    datasetSelector : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetSelector, default is Undefined, optional
        dataset selector
    defaultConsentTtl : str, default is Undefined, optional
        Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    enableConsentCreateOnUpdate : bool, default is Undefined, optional
        If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already exist.
    labels : {str:str}, default is Undefined, optional
        User-supplied key-value pairs used to organize Consent stores.
        Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must
        conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
        Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128
        bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
        No more than 64 labels can be associated with a given store.
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    name : str, default is Undefined, optional
        The name of this ConsentStore, for example:
        "consent1"
    """


    dataset?: str

    datasetRef?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetRef

    datasetSelector?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetSelector

    defaultConsentTtl?: str

    enableConsentCreateOnUpdate?: bool

    labels?: {str:str}

    name?: str


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetRef:
    """
    Reference to a Dataset in healthcare to populate dataset.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetRefPolicy


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetSelector:
    """
    Selector for a Dataset in healthcare to populate dataset.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetSelectorPolicy


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecInitProviderDatasetSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecProviderConfigRefPolicy


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToConfigRef

    metadata?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToMetadata

    name: str


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToConfigRefPolicy


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema HealthcareGcpUpboundIoV1beta1ConsentStoreSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema HealthcareGcpUpboundIoV1beta1ConsentStoreStatus:
    """
    ConsentStoreStatus defines the observed state of ConsentStore.

    Attributes
    ----------
    atProvider : HealthcareGcpUpboundIoV1beta1ConsentStoreStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [HealthcareGcpUpboundIoV1beta1ConsentStoreStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: HealthcareGcpUpboundIoV1beta1ConsentStoreStatusAtProvider

    conditions?: [HealthcareGcpUpboundIoV1beta1ConsentStoreStatusConditionsItems0]


schema HealthcareGcpUpboundIoV1beta1ConsentStoreStatusAtProvider:
    """
    healthcare gcp upbound io v1beta1 consent store status at provider

    Attributes
    ----------
    dataset : str, default is Undefined, optional
        Identifies the dataset addressed by this request. Must be in the format
        'projects/{project}/locations/{location}/datasets/{dataset}'
    defaultConsentTtl : str, default is Undefined, optional
        Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    enableConsentCreateOnUpdate : bool, default is Undefined, optional
        If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already exist.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{dataset}}/consentStores/{{name}}
    labels : {str:str}, default is Undefined, optional
        User-supplied key-value pairs used to organize Consent stores.
        Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must
        conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
        Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128
        bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
        No more than 64 labels can be associated with a given store.
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    name : str, default is Undefined, optional
        The name of this ConsentStore, for example:
        "consent1"
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    dataset?: str

    defaultConsentTtl?: str

    effectiveLabels?: {str:str}

    enableConsentCreateOnUpdate?: bool

    id?: str

    labels?: {str:str}

    name?: str

    terraformLabels?: {str:str}


schema HealthcareGcpUpboundIoV1beta1ConsentStoreStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


