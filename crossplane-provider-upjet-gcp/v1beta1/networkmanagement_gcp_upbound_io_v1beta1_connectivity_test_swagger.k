"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConnectivityTest:
    """
    ConnectivityTest is the Schema for the ConnectivityTests API. A connectivity test are a static analysis of your resource configurations that enables you to evaluate connectivity to and from Google Cloud resources in your Virtual Private Cloud (VPC) network.

    Attributes
    ----------
    apiVersion : str, default is "networkmanagement.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConnectivityTest", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpec, default is Undefined, required
        spec
    status : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkmanagement.gcp.upbound.io/v1beta1" = "networkmanagement.gcp.upbound.io/v1beta1"

    kind: "ConnectivityTest" = "ConnectivityTest"

    metadata?: v1.ObjectMeta

    spec: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpec

    status?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatus


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpec:
    """
    ConnectivityTestSpec defines the desired state of ConnectivityTest

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProvider

    initProvider?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecWriteConnectionSecretToRef


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProvider:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The user-supplied description of the Connectivity Test.
        Maximum of 512 characters.
    destination : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0], default is Undefined, optional
        Required. Destination specification of the Connectivity Test.
        You can use a combination of destination IP address, Compute
        Engine VM instance, or VPC network to uniquely identify the
        destination location.
        Even if the destination IP address is not unique, the source IP
        location is unique. Usually, the analysis can infer the destination
        endpoint from route information.
        If the destination you specify is a VM instance and the instance has
        multiple network interfaces, then you must also specify either a
        destination IP address or VPC network to identify the destination
        interface.
        A reachability analysis proceeds even if the destination location
        is ambiguous. However, the result can include endpoints that you
        don't intend to test.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    name : str, default is Undefined, optional
        Unique name for the connectivity test.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $protocol : str, default is Undefined, optional
        IP Protocol of the test. When not provided, "TCP" is assumed.
    relatedProjects : [str], default is Undefined, optional
        Other projects that may be relevant for reachability analysis.
        This is applicable to scenarios where a test can cross project
        boundaries.
    source : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0], default is Undefined, optional
        Required. Source specification of the Connectivity Test.
        You can use a combination of source IP address, virtual machine
        (VM) instance, or Compute Engine network to uniquely identify the
        source location.
        Examples: If the source IP address is an internal IP address within
        a Google Cloud Virtual Private Cloud (VPC) network, then you must
        also specify the VPC network. Otherwise, specify the VM instance,
        which already contains its internal IP address and VPC network
        information.
        If the source of the test is within an on-premises network, then
        you must provide the destination VPC network.
        If the source endpoint is a Compute Engine VM instance with multiple
        network interfaces, the instance itself is not sufficient to
        identify the endpoint. So, you must also specify the source IP
        address or VPC network.
        A reachability analysis proceeds even if the source location is
        ambiguous. However, the test result may include endpoints that
        you don't intend to test.
        Structure is documented below.
    """


    description?: str

    destination?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0]

    labels?: {str:str}

    name?: str

    project?: str

    $protocol?: str

    relatedProjects?: [str]

    source?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0]


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test spec for provider destination items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        A Compute Engine instance URI.
    instanceRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceSelector, default is Undefined, optional
        instance selector
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint, which can be an external or
        internal IP. An IPv6 address is only allowed when the test's
        destination is a global load balancer VIP.
    ipAddressRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressSelector, default is Undefined, optional
        ip address selector
    network : str, default is Undefined, optional
        A Compute Engine network URI.
    networkRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkSelector, default is Undefined, optional
        network selector
    port : float, default is Undefined, optional
        The IP protocol port of the endpoint. Only applicable when
        protocol is TCP or UDP.
    projectId : str, default is Undefined, optional
        Project ID where the endpoint is located. The Project ID can be
        derived from the URI if you provide a VM instance or network URI.
        The following are two cases where you must provide the project ID:
    projectIdRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDSelector, default is Undefined, optional
        project Id selector
    """


    instance?: str

    instanceRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceRef

    instanceSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceSelector

    ipAddress?: str

    ipAddressRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressRef

    ipAddressSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressSelector

    network?: str

    networkRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkRef

    networkSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkSelector

    port?: float

    projectId?: str

    projectIdRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDRef

    projectIdSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDSelector


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressRef:
    """
    Reference to a Address in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressSelector:
    """
    Selector for a Address in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0IPAddressSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceRef:
    """
    Reference to a Instance in compute to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceSelector:
    """
    Selector for a Instance in compute to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0InstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0NetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDRef:
    """
    Reference to a Address in compute to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDSelector:
    """
    Selector for a Address in compute to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderDestinationItems0ProjectIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test spec for provider source items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        A Compute Engine instance URI.
    instanceRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceSelector, default is Undefined, optional
        instance selector
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint, which can be an external or
        internal IP. An IPv6 address is only allowed when the test's
        destination is a global load balancer VIP.
    ipAddressRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressSelector, default is Undefined, optional
        ip address selector
    network : str, default is Undefined, optional
        A Compute Engine network URI.
    networkRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkSelector, default is Undefined, optional
        network selector
    networkType : str, default is Undefined, optional
        Type of the network where the endpoint is located.
        Possible values are: GCP_NETWORK, NON_GCP_NETWORK.
    port : float, default is Undefined, optional
        The IP protocol port of the endpoint. Only applicable when
        protocol is TCP or UDP.
    projectId : str, default is Undefined, optional
        Project ID where the endpoint is located. The Project ID can be
        derived from the URI if you provide a VM instance or network URI.
        The following are two cases where you must provide the project ID:
    projectIdRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDSelector, default is Undefined, optional
        project Id selector
    """


    instance?: str

    instanceRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceRef

    instanceSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceSelector

    ipAddress?: str

    ipAddressRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressRef

    ipAddressSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressSelector

    network?: str

    networkRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkRef

    networkSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkSelector

    networkType?: str

    port?: float

    projectId?: str

    projectIdRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDRef

    projectIdSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDSelector


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressRef:
    """
    Reference to a Address in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressSelector:
    """
    Selector for a Address in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0IPAddressSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceRef:
    """
    Reference to a Instance in compute to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceSelector:
    """
    Selector for a Instance in compute to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0InstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0NetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDRef:
    """
    Reference to a Address in compute to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDSelector:
    """
    Selector for a Address in compute to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecForProviderSourceItems0ProjectIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        The user-supplied description of the Connectivity Test.
        Maximum of 512 characters.
    destination : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0], default is Undefined, optional
        Required. Destination specification of the Connectivity Test.
        You can use a combination of destination IP address, Compute
        Engine VM instance, or VPC network to uniquely identify the
        destination location.
        Even if the destination IP address is not unique, the source IP
        location is unique. Usually, the analysis can infer the destination
        endpoint from route information.
        If the destination you specify is a VM instance and the instance has
        multiple network interfaces, then you must also specify either a
        destination IP address or VPC network to identify the destination
        interface.
        A reachability analysis proceeds even if the destination location
        is ambiguous. However, the result can include endpoints that you
        don't intend to test.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    name : str, default is Undefined, optional
        Unique name for the connectivity test.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $protocol : str, default is Undefined, optional
        IP Protocol of the test. When not provided, "TCP" is assumed.
    relatedProjects : [str], default is Undefined, optional
        Other projects that may be relevant for reachability analysis.
        This is applicable to scenarios where a test can cross project
        boundaries.
    source : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0], default is Undefined, optional
        Required. Source specification of the Connectivity Test.
        You can use a combination of source IP address, virtual machine
        (VM) instance, or Compute Engine network to uniquely identify the
        source location.
        Examples: If the source IP address is an internal IP address within
        a Google Cloud Virtual Private Cloud (VPC) network, then you must
        also specify the VPC network. Otherwise, specify the VM instance,
        which already contains its internal IP address and VPC network
        information.
        If the source of the test is within an on-premises network, then
        you must provide the destination VPC network.
        If the source endpoint is a Compute Engine VM instance with multiple
        network interfaces, the instance itself is not sufficient to
        identify the endpoint. So, you must also specify the source IP
        address or VPC network.
        A reachability analysis proceeds even if the source location is
        ambiguous. However, the test result may include endpoints that
        you don't intend to test.
        Structure is documented below.
    """


    description?: str

    destination?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0]

    labels?: {str:str}

    name?: str

    project?: str

    $protocol?: str

    relatedProjects?: [str]

    source?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0]


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test spec init provider destination items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        A Compute Engine instance URI.
    instanceRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceSelector, default is Undefined, optional
        instance selector
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint, which can be an external or
        internal IP. An IPv6 address is only allowed when the test's
        destination is a global load balancer VIP.
    ipAddressRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressSelector, default is Undefined, optional
        ip address selector
    network : str, default is Undefined, optional
        A Compute Engine network URI.
    networkRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkSelector, default is Undefined, optional
        network selector
    port : float, default is Undefined, optional
        The IP protocol port of the endpoint. Only applicable when
        protocol is TCP or UDP.
    projectId : str, default is Undefined, optional
        Project ID where the endpoint is located. The Project ID can be
        derived from the URI if you provide a VM instance or network URI.
        The following are two cases where you must provide the project ID:
    projectIdRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDSelector, default is Undefined, optional
        project Id selector
    """


    instance?: str

    instanceRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceRef

    instanceSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceSelector

    ipAddress?: str

    ipAddressRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressRef

    ipAddressSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressSelector

    network?: str

    networkRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkRef

    networkSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkSelector

    port?: float

    projectId?: str

    projectIdRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDRef

    projectIdSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDSelector


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressRef:
    """
    Reference to a Address in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressSelector:
    """
    Selector for a Address in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0IPAddressSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceRef:
    """
    Reference to a Instance in compute to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceSelector:
    """
    Selector for a Instance in compute to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0InstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0NetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDRef:
    """
    Reference to a Address in compute to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDSelector:
    """
    Selector for a Address in compute to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderDestinationItems0ProjectIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test spec init provider source items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        A Compute Engine instance URI.
    instanceRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceSelector, default is Undefined, optional
        instance selector
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint, which can be an external or
        internal IP. An IPv6 address is only allowed when the test's
        destination is a global load balancer VIP.
    ipAddressRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressRef, default is Undefined, optional
        ip address ref
    ipAddressSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressSelector, default is Undefined, optional
        ip address selector
    network : str, default is Undefined, optional
        A Compute Engine network URI.
    networkRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkRef, default is Undefined, optional
        network ref
    networkSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkSelector, default is Undefined, optional
        network selector
    networkType : str, default is Undefined, optional
        Type of the network where the endpoint is located.
        Possible values are: GCP_NETWORK, NON_GCP_NETWORK.
    port : float, default is Undefined, optional
        The IP protocol port of the endpoint. Only applicable when
        protocol is TCP or UDP.
    projectId : str, default is Undefined, optional
        Project ID where the endpoint is located. The Project ID can be
        derived from the URI if you provide a VM instance or network URI.
        The following are two cases where you must provide the project ID:
    projectIdRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDRef, default is Undefined, optional
        project Id ref
    projectIdSelector : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDSelector, default is Undefined, optional
        project Id selector
    """


    instance?: str

    instanceRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceRef

    instanceSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceSelector

    ipAddress?: str

    ipAddressRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressRef

    ipAddressSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressSelector

    network?: str

    networkRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkRef

    networkSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkSelector

    networkType?: str

    port?: float

    projectId?: str

    projectIdRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDRef

    projectIdSelector?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDSelector


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressRef:
    """
    Reference to a Address in compute to populate ipAddress.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressSelector:
    """
    Selector for a Address in compute to populate ipAddress.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0IPAddressSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceRef:
    """
    Reference to a Instance in compute to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceSelector:
    """
    Selector for a Instance in compute to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0InstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkRef:
    """
    Reference to a Network in compute to populate network.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkSelector:
    """
    Selector for a Network in compute to populate network.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0NetworkSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDRef:
    """
    Reference to a Address in compute to populate projectId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDSelector:
    """
    Selector for a Address in compute to populate projectId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDSelectorPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecInitProviderSourceItems0ProjectIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecProviderConfigRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatus:
    """
    ConnectivityTestStatus defines the observed state of ConnectivityTest.

    Attributes
    ----------
    atProvider : NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProvider

    conditions?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusConditionsItems0]


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProvider:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The user-supplied description of the Connectivity Test.
        Maximum of 512 characters.
    destination : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProviderDestinationItems0], default is Undefined, optional
        Required. Destination specification of the Connectivity Test.
        You can use a combination of destination IP address, Compute
        Engine VM instance, or VPC network to uniquely identify the
        destination location.
        Even if the destination IP address is not unique, the source IP
        location is unique. Usually, the analysis can infer the destination
        endpoint from route information.
        If the destination you specify is a VM instance and the instance has
        multiple network interfaces, then you must also specify either a
        destination IP address or VPC network to identify the destination
        interface.
        A reachability analysis proceeds even if the destination location
        is ambiguous. However, the result can include endpoints that you
        don't intend to test.
        Structure is documented below.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/global/connectivityTests/{{name}}
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user-provided metadata.
    name : str, default is Undefined, optional
        Unique name for the connectivity test.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    $protocol : str, default is Undefined, optional
        IP Protocol of the test. When not provided, "TCP" is assumed.
    relatedProjects : [str], default is Undefined, optional
        Other projects that may be relevant for reachability analysis.
        This is applicable to scenarios where a test can cross project
        boundaries.
    source : [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProviderSourceItems0], default is Undefined, optional
        Required. Source specification of the Connectivity Test.
        You can use a combination of source IP address, virtual machine
        (VM) instance, or Compute Engine network to uniquely identify the
        source location.
        Examples: If the source IP address is an internal IP address within
        a Google Cloud Virtual Private Cloud (VPC) network, then you must
        also specify the VPC network. Otherwise, specify the VM instance,
        which already contains its internal IP address and VPC network
        information.
        If the source of the test is within an on-premises network, then
        you must provide the destination VPC network.
        If the source endpoint is a Compute Engine VM instance with multiple
        network interfaces, the instance itself is not sufficient to
        identify the endpoint. So, you must also specify the source IP
        address or VPC network.
        A reachability analysis proceeds even if the source location is
        ambiguous. However, the test result may include endpoints that
        you don't intend to test.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    description?: str

    destination?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProviderDestinationItems0]

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    name?: str

    project?: str

    $protocol?: str

    relatedProjects?: [str]

    source?: [NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProviderSourceItems0]

    terraformLabels?: {str:str}


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProviderDestinationItems0:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test status at provider destination items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        A Compute Engine instance URI.
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint, which can be an external or
        internal IP. An IPv6 address is only allowed when the test's
        destination is a global load balancer VIP.
    network : str, default is Undefined, optional
        A Compute Engine network URI.
    port : float, default is Undefined, optional
        The IP protocol port of the endpoint. Only applicable when
        protocol is TCP or UDP.
    projectId : str, default is Undefined, optional
        Project ID where the endpoint is located. The Project ID can be
        derived from the URI if you provide a VM instance or network URI.
        The following are two cases where you must provide the project ID:
    """


    instance?: str

    ipAddress?: str

    network?: str

    port?: float

    projectId?: str


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusAtProviderSourceItems0:
    """
    networkmanagement gcp upbound io v1beta1 connectivity test status at provider source items0

    Attributes
    ----------
    instance : str, default is Undefined, optional
        A Compute Engine instance URI.
    ipAddress : str, default is Undefined, optional
        The IP address of the endpoint, which can be an external or
        internal IP. An IPv6 address is only allowed when the test's
        destination is a global load balancer VIP.
    network : str, default is Undefined, optional
        A Compute Engine network URI.
    networkType : str, default is Undefined, optional
        Type of the network where the endpoint is located.
        Possible values are: GCP_NETWORK, NON_GCP_NETWORK.
    port : float, default is Undefined, optional
        The IP protocol port of the endpoint. Only applicable when
        protocol is TCP or UDP.
    projectId : str, default is Undefined, optional
        Project ID where the endpoint is located. The Project ID can be
        derived from the URI if you provide a VM instance or network URI.
        The following are two cases where you must provide the project ID:
    """


    instance?: str

    ipAddress?: str

    network?: str

    networkType?: str

    port?: float

    projectId?: str


schema NetworkmanagementGcpUpboundIoV1beta1ConnectivityTestStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


