"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema EntityType:
    """
    EntityType is the Schema for the EntityTypes API. Entities are extracted from user input and represent parameters that are meaningful to your application.

    Attributes
    ----------
    apiVersion : str, default is "dialogflowcx.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EntityType", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpec, default is Undefined, required
        spec
    status : DialogflowcxGcpUpboundIoV1beta1EntityTypeStatus, default is Undefined, optional
        status
    """


    apiVersion: "dialogflowcx.gcp.upbound.io/v1beta1" = "dialogflowcx.gcp.upbound.io/v1beta1"

    kind: "EntityType" = "EntityType"

    metadata?: v1.ObjectMeta

    spec: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpec

    status?: DialogflowcxGcpUpboundIoV1beta1EntityTypeStatus


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpec:
    """
    EntityTypeSpec defines the desired state of EntityType

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProvider, default is Undefined, required
        for provider
    initProvider : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProvider

    initProvider?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecProviderConfigRef

    publishConnectionDetailsTo?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecWriteConnectionSecretToRef


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProvider:
    """
    dialogflowcx gcp upbound io v1beta1 entity type spec for provider

    Attributes
    ----------
    autoExpansionMode : str, default is Undefined, optional
        Represents kinds of entities.
    displayName : str, default is Undefined, optional
        The human-readable name of the entity type, unique within the agent.
    enableFuzzyExtraction : bool, default is Undefined, optional
        Enables fuzzy entity extraction during classification.
    entities : [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderEntitiesItems0], default is Undefined, optional
        The collection of entity entries associated with the entity type.
        Structure is documented below.
    excludedPhrases : [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderExcludedPhrasesItems0], default is Undefined, optional
        Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry giant(an adjective), you might consider adding giants(a noun) as an exclusion.
        If the kind of entity type is KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
        Structure is documented below.
    kind : str, default is Undefined, optional
        Indicates whether the entity type can be automatically expanded.
    languageCode : str, default is Undefined, optional
        The language of the following fields in entityType:
        EntityType.entities.value
        EntityType.entities.synonyms
        EntityType.excluded_phrases.value
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    parent : str, default is Undefined, optional
        The agent to create a entity type for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentSelector, default is Undefined, optional
        parent selector
    redact : bool, default is Undefined, optional
        Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
    """


    autoExpansionMode?: str

    displayName?: str

    enableFuzzyExtraction?: bool

    entities?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderEntitiesItems0]

    excludedPhrases?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderExcludedPhrasesItems0]

    kind?: str

    languageCode?: str

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentSelector

    redact?: bool


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderEntitiesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 entity type spec for provider entities items0

    Attributes
    ----------
    synonyms : [str], default is Undefined, optional
        A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym could be green onions.
        For KIND_LIST entity types: This collection must contain exactly one synonym equal to value.
    value : str, default is Undefined, optional
        The primary value associated with this entity entry. For example, if the entity type is vegetable, the value could be scallions.
        For KIND_MAP entity types: A canonical value to be used in place of synonyms.
        For KIND_LIST entity types: A string that can contain references to other entity types (with or without aliases).
    """


    synonyms?: [str]

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderExcludedPhrasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 entity type spec for provider excluded phrases items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The word or phrase to be excluded.
    """


    value?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecForProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoExpansionMode : str, default is Undefined, optional
        Represents kinds of entities.
    displayName : str, default is Undefined, optional
        The human-readable name of the entity type, unique within the agent.
    enableFuzzyExtraction : bool, default is Undefined, optional
        Enables fuzzy entity extraction during classification.
    entities : [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderEntitiesItems0], default is Undefined, optional
        The collection of entity entries associated with the entity type.
        Structure is documented below.
    excludedPhrases : [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderExcludedPhrasesItems0], default is Undefined, optional
        Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry giant(an adjective), you might consider adding giants(a noun) as an exclusion.
        If the kind of entity type is KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
        Structure is documented below.
    kind : str, default is Undefined, optional
        Indicates whether the entity type can be automatically expanded.
    languageCode : str, default is Undefined, optional
        The language of the following fields in entityType:
        EntityType.entities.value
        EntityType.entities.synonyms
        EntityType.excluded_phrases.value
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    parent : str, default is Undefined, optional
        The agent to create a entity type for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentSelector, default is Undefined, optional
        parent selector
    redact : bool, default is Undefined, optional
        Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
    """


    autoExpansionMode?: str

    displayName?: str

    enableFuzzyExtraction?: bool

    entities?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderEntitiesItems0]

    excludedPhrases?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderExcludedPhrasesItems0]

    kind?: str

    languageCode?: str

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentSelector

    redact?: bool


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderEntitiesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 entity type spec init provider entities items0

    Attributes
    ----------
    synonyms : [str], default is Undefined, optional
        A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym could be green onions.
        For KIND_LIST entity types: This collection must contain exactly one synonym equal to value.
    value : str, default is Undefined, optional
        The primary value associated with this entity entry. For example, if the entity type is vegetable, the value could be scallions.
        For KIND_MAP entity types: A canonical value to be used in place of synonyms.
        For KIND_LIST entity types: A string that can contain references to other entity types (with or without aliases).
    """


    synonyms?: [str]

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderExcludedPhrasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 entity type spec init provider excluded phrases items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The word or phrase to be excluded.
    """


    value?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecInitProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecProviderConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToConfigRef

    metadata?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToMetadata

    name: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeStatus:
    """
    EntityTypeStatus defines the observed state of EntityType.

    Attributes
    ----------
    atProvider : DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProvider

    conditions?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusConditionsItems0]


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProvider:
    """
    dialogflowcx gcp upbound io v1beta1 entity type status at provider

    Attributes
    ----------
    autoExpansionMode : str, default is Undefined, optional
        Represents kinds of entities.
    displayName : str, default is Undefined, optional
        The human-readable name of the entity type, unique within the agent.
    enableFuzzyExtraction : bool, default is Undefined, optional
        Enables fuzzy entity extraction during classification.
    entities : [DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProviderEntitiesItems0], default is Undefined, optional
        The collection of entity entries associated with the entity type.
        Structure is documented below.
    excludedPhrases : [DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProviderExcludedPhrasesItems0], default is Undefined, optional
        Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry giant(an adjective), you might consider adding giants(a noun) as an exclusion.
        If the kind of entity type is KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
        Structure is documented below.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{parent}}/entityTypes/{{name}}
    kind : str, default is Undefined, optional
        Indicates whether the entity type can be automatically expanded.
    languageCode : str, default is Undefined, optional
        The language of the following fields in entityType:
        EntityType.entities.value
        EntityType.entities.synonyms
        EntityType.excluded_phrases.value
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    name : str, default is Undefined, optional
        The unique identifier of the entity type.
        Format: projects//locations//agents//entityTypes/.
    parent : str, default is Undefined, optional
        The agent to create a entity type for.
        Format: projects//locations//agents/.
    redact : bool, default is Undefined, optional
        Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
    """


    autoExpansionMode?: str

    displayName?: str

    enableFuzzyExtraction?: bool

    entities?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProviderEntitiesItems0]

    excludedPhrases?: [DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProviderExcludedPhrasesItems0]

    id?: str

    kind?: str

    languageCode?: str

    name?: str

    parent?: str

    redact?: bool


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProviderEntitiesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 entity type status at provider entities items0

    Attributes
    ----------
    synonyms : [str], default is Undefined, optional
        A collection of value synonyms. For example, if the entity type is vegetable, and value is scallions, a synonym could be green onions.
        For KIND_LIST entity types: This collection must contain exactly one synonym equal to value.
    value : str, default is Undefined, optional
        The primary value associated with this entity entry. For example, if the entity type is vegetable, the value could be scallions.
        For KIND_MAP entity types: A canonical value to be used in place of synonyms.
        For KIND_LIST entity types: A string that can contain references to other entity types (with or without aliases).
    """


    synonyms?: [str]

    value?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusAtProviderExcludedPhrasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 entity type status at provider excluded phrases items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The word or phrase to be excluded.
    """


    value?: str


schema DialogflowcxGcpUpboundIoV1beta1EntityTypeStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


