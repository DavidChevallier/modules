"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InboundSAMLConfig:
    """
    InboundSAMLConfig is the Schema for the InboundSAMLConfigs API. Inbound SAML configuration for a Identity Toolkit project.

    Attributes
    ----------
    apiVersion : str, default is "identityplatform.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InboundSAMLConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpec, default is Undefined, required
        spec
    status : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "identityplatform.gcp.upbound.io/v1beta1" = "identityplatform.gcp.upbound.io/v1beta1"

    kind: "InboundSAMLConfig" = "InboundSAMLConfig"

    metadata?: v1.ObjectMeta

    spec: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpec

    status?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatus


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpec:
    """
    InboundSAMLConfigSpec defines the desired state of InboundSAMLConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProvider

    initProvider?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecWriteConnectionSecretToRef


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProvider:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config spec for provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Human friendly display name.
    enabled : bool, default is Undefined, optional
        If this config allows users to sign in with the provider.
    idpConfig : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0], default is Undefined, optional
        SAML IdP configuration when the project acts as the relying party
        Structure is documented below.
    name : str, default is Undefined, optional
        The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
        hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
        alphanumeric character, and have at least 2 characters.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    spConfig : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderSpConfigItems0], default is Undefined, optional
        SAML SP (Service Provider) configuration when the project acts as the relying party to receive
        and accept an authentication assertion issued by a SAML identity provider.
        Structure is documented below.
    """


    displayName?: str

    enabled?: bool

    idpConfig?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0]

    name?: str

    project?: str

    spConfig?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderSpConfigItems0]


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config spec for provider idp config items0

    Attributes
    ----------
    idpCertificates : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0IdpCertificatesItems0], default is Undefined, optional
        The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
    idpEntityId : str, default is Undefined, optional
        Unique identifier for all SAML entities
    signRequest : bool, default is Undefined, optional
        Indicates if outbounding SAMLRequest should be signed.
    ssoUrl : str, default is Undefined, optional
        URL to send Authentication request to.
    """


    idpCertificates?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0IdpCertificatesItems0]

    idpEntityId?: str

    signRequest?: bool

    ssoUrl?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0IdpCertificatesItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config spec for provider idp config items0 idp certificates items0

    Attributes
    ----------
    x509CertificateSecretRef : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0IdpCertificatesItems0X509CertificateSecretRef, default is Undefined, optional
        x509 certificate secret ref
    """


    x509CertificateSecretRef?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0IdpCertificatesItems0X509CertificateSecretRef


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderIdpConfigItems0IdpCertificatesItems0X509CertificateSecretRef:
    """
    (Output)
    The x509 certificate

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecForProviderSpConfigItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config spec for provider sp config items0

    Attributes
    ----------
    callbackUri : str, default is Undefined, optional
        Callback URI where responses from IDP are handled. Must start with https://.
    spEntityId : str, default is Undefined, optional
        Unique identifier for all SAML entities.
    """


    callbackUri?: str

    spEntityId?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Human friendly display name.
    enabled : bool, default is Undefined, optional
        If this config allows users to sign in with the provider.
    idpConfig : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProviderIdpConfigItems0], default is Undefined, optional
        SAML IdP configuration when the project acts as the relying party
        Structure is documented below.
    name : str, default is Undefined, optional
        The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
        hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
        alphanumeric character, and have at least 2 characters.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    spConfig : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProviderSpConfigItems0], default is Undefined, optional
        SAML SP (Service Provider) configuration when the project acts as the relying party to receive
        and accept an authentication assertion issued by a SAML identity provider.
        Structure is documented below.
    """


    displayName?: str

    enabled?: bool

    idpConfig?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProviderIdpConfigItems0]

    name?: str

    project?: str

    spConfig?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProviderSpConfigItems0]


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProviderIdpConfigItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config spec init provider idp config items0

    Attributes
    ----------
    idpCertificates : [any], default is Undefined, optional
        The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
    idpEntityId : str, default is Undefined, optional
        Unique identifier for all SAML entities
    signRequest : bool, default is Undefined, optional
        Indicates if outbounding SAMLRequest should be signed.
    ssoUrl : str, default is Undefined, optional
        URL to send Authentication request to.
    """


    idpCertificates?: [any]

    idpEntityId?: str

    signRequest?: bool

    ssoUrl?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecInitProviderSpConfigItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config spec init provider sp config items0

    Attributes
    ----------
    callbackUri : str, default is Undefined, optional
        Callback URI where responses from IDP are handled. Must start with https://.
    spEntityId : str, default is Undefined, optional
        Unique identifier for all SAML entities.
    """


    callbackUri?: str

    spEntityId?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecProviderConfigRefPolicy


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatus:
    """
    InboundSAMLConfigStatus defines the observed state of InboundSAMLConfig.

    Attributes
    ----------
    atProvider : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProvider

    conditions?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusConditionsItems0]


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProvider:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config status at provider

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Human friendly display name.
    enabled : bool, default is Undefined, optional
        If this config allows users to sign in with the provider.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/inboundSamlConfigs/{{name}}
    idpConfig : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0], default is Undefined, optional
        SAML IdP configuration when the project acts as the relying party
        Structure is documented below.
    name : str, default is Undefined, optional
        The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters,
        hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an
        alphanumeric character, and have at least 2 characters.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    spConfig : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderSpConfigItems0], default is Undefined, optional
        SAML SP (Service Provider) configuration when the project acts as the relying party to receive
        and accept an authentication assertion issued by a SAML identity provider.
        Structure is documented below.
    """


    displayName?: str

    enabled?: bool

    id?: str

    idpConfig?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0]

    name?: str

    project?: str

    spConfig?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderSpConfigItems0]


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config status at provider idp config items0

    Attributes
    ----------
    idpCertificates : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0IdpCertificatesItems0], default is Undefined, optional
        The IdP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
    idpEntityId : str, default is Undefined, optional
        Unique identifier for all SAML entities
    signRequest : bool, default is Undefined, optional
        Indicates if outbounding SAMLRequest should be signed.
    ssoUrl : str, default is Undefined, optional
        URL to send Authentication request to.
    """


    idpCertificates?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0IdpCertificatesItems0]

    idpEntityId?: str

    signRequest?: bool

    ssoUrl?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0IdpCertificatesItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config status at provider idp config items0 idp certificates items0

    Attributes
    ----------
    x509CertificateSecretRef : IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0IdpCertificatesItems0X509CertificateSecretRef, default is Undefined, optional
        x509 certificate secret ref
    """


    x509CertificateSecretRef?: IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0IdpCertificatesItems0X509CertificateSecretRef


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderIdpConfigItems0IdpCertificatesItems0X509CertificateSecretRef:
    """
    (Output)
    The x509 certificate

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderSpConfigItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config status at provider sp config items0

    Attributes
    ----------
    callbackUri : str, default is Undefined, optional
        Callback URI where responses from IDP are handled. Must start with https://.
    spCertificates : [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderSpConfigItems0SpCertificatesItems0], default is Undefined, optional
        (Output)
        The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.
        Structure is documented below.
    spEntityId : str, default is Undefined, optional
        Unique identifier for all SAML entities.
    """


    callbackUri?: str

    spCertificates?: [IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderSpConfigItems0SpCertificatesItems0]

    spEntityId?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusAtProviderSpConfigItems0SpCertificatesItems0:
    """
    identityplatform gcp upbound io v1beta1 inbound s a m l config status at provider sp config items0 sp certificates items0

    Attributes
    ----------
    x509Certificate : str, default is Undefined, optional
        (Output)
        The x509 certificate
    """


    x509Certificate?: str


schema IdentityplatformGcpUpboundIoV1beta1InboundSAMLConfigStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


