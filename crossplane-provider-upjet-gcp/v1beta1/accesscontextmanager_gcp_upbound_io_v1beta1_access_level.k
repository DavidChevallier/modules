"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AccessLevel:
    """
    AccessLevel is the Schema for the AccessLevels API. An AccessLevel is a label that can be applied to requests to GCP services, along with a list of requirements necessary for the label to be applied.

    Attributes
    ----------
    apiVersion : str, default is "accesscontextmanager.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AccessLevel", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpec, default is Undefined, required
        spec
    status : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatus, default is Undefined, optional
        status
    """


    apiVersion: "accesscontextmanager.gcp.upbound.io/v1beta1" = "accesscontextmanager.gcp.upbound.io/v1beta1"

    kind: "AccessLevel" = "AccessLevel"

    metadata?: v1.ObjectMeta

    spec: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpec

    status?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatus


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpec:
    """
    AccessLevelSpec defines the desired state of AccessLevel

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProvider, default is Undefined, required
        for provider
    initProvider : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProvider

    initProvider?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecProviderConfigRef

    publishConnectionDetailsTo?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecWriteConnectionSecretToRef


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProvider:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider

    Attributes
    ----------
    basic : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0], default is Undefined, optional
        A set of predefined conditions for the access level and a combining function.
        Structure is documented below.
    custom : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderCustomItems0], default is Undefined, optional
        Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
        See CEL spec at: https://github.com/google/cel-spec.
        Structure is documented below.
    description : str, default is Undefined, optional
        Description of the AccessLevel and its use. Does not affect behavior.
    name : str, default is Undefined, optional
        Resource name for the Access Level. The short_name component must begin
        with a letter and only include alphanumeric and '_'.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    parent : str, default is Undefined, optional
        The AccessPolicy this AccessLevel lives in.
        Format: accessPolicies/{policy_id}
    title : str, default is Undefined, optional
        Human readable title. Must be unique within the Policy.
    """


    basic?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0]

    custom?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderCustomItems0]

    description?: str

    name?: str

    parent?: str

    title?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider basic items0

    Attributes
    ----------
    combiningFunction : str, default is Undefined, optional
        How the conditions list should be combined to determine if a request
        is granted this AccessLevel. If AND is used, each Condition in
        conditions must be satisfied for the AccessLevel to be applied. If
        OR is used, at least one Condition in conditions must be satisfied
        for the AccessLevel to be applied.
        Default value is AND.
        Possible values are: AND, OR.
    conditions : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0], default is Undefined, optional
        A set of requirements for the AccessLevel to be granted.
        Structure is documented below.
    """


    combiningFunction?: str

    conditions?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider basic items0 conditions items0

    Attributes
    ----------
    devicePolicy : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0DevicePolicyItems0], default is Undefined, optional
        Device specific restrictions, all restrictions must hold for
        the Condition to be true. If not specified, all devices are
        allowed.
        Structure is documented below.
    ipSubnetworks : [str], default is Undefined, optional
        A list of CIDR block IP subnetwork specification. May be IPv4
        or IPv6.
        Note that for a CIDR IP address block, the specified IP address
        portion must be properly truncated (i.e. all the host bits must
        be zero) or the input is considered malformed. For example,
        "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
        for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
        is not. The originating IP of a request must be in one of the
        listed subnets in order for this Condition to be true.
        If empty, all IP addresses are allowed.
    members : [str], default is Undefined, optional
        An allowed list of members (users, service accounts).
        Using groups is not supported yet.
        The signed-in user originating the request must be a part of one
        of the provided members. If not specified, a request may come
        from any user (logged in/not logged in, not present in any
        groups, etc.).
        Formats: user:{emailid}, serviceAccount:{emailid}
    negate : bool, default is Undefined, optional
        Whether to negate the Condition. If true, the Condition becomes
        a NAND over its non-empty fields, each field must be false for
        the Condition overall to be satisfied. Defaults to false.
    regions : [str], default is Undefined, optional
        The request must originate from one of the provided
        countries/regions.
        Format: A valid ISO 3166-1 alpha-2 code.
    requiredAccessLevels : [str], default is Undefined, optional
        A list of other access levels defined in the same Policy,
        referenced by resource name. Referencing an AccessLevel which
        does not exist is an error. All access levels listed must be
        granted for the Condition to be true.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    vpcNetworkSources : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0], default is Undefined, optional
        The request must originate from one of the provided VPC networks in Google Cloud. Cannot specify this field together with ip_subnetworks.
        Structure is documented below.
    """


    devicePolicy?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0DevicePolicyItems0]

    ipSubnetworks?: [str]

    members?: [str]

    negate?: bool

    regions?: [str]

    requiredAccessLevels?: [str]

    vpcNetworkSources?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0DevicePolicyItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider basic items0 conditions items0 device policy items0

    Attributes
    ----------
    allowedDeviceManagementLevels : [str], default is Undefined, optional
        A list of allowed device management levels.
        An empty list allows all management levels.
        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
    allowedEncryptionStatuses : [str], default is Undefined, optional
        A list of allowed encryptions statuses.
        An empty list allows all statuses.
        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
    osConstraints : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0], default is Undefined, optional
        A list of allowed OS versions.
        An empty list allows all types and all versions.
        Structure is documented below.
    requireAdminApproval : bool, default is Undefined, optional
        Whether the device needs to be approved by the customer admin.
    requireCorpOwned : bool, default is Undefined, optional
        Whether the device needs to be corp owned.
    requireScreenLock : bool, default is Undefined, optional
        Whether or not screenlock is required for the DevicePolicy
        to be true. Defaults to false.
    """


    allowedDeviceManagementLevels?: [str]

    allowedEncryptionStatuses?: [str]

    osConstraints?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0]

    requireAdminApproval?: bool

    requireCorpOwned?: bool

    requireScreenLock?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider basic items0 conditions items0 device policy items0 os constraints items0

    Attributes
    ----------
    minimumVersion : str, default is Undefined, optional
        The minimum allowed OS version. If not set, any version
        of this OS satisfies the constraint.
        Format: "major.minor.patch" such as "10.5.301", "9.2.1".
    osType : str, default is Undefined, optional
        The operating system type of the device.
        Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
    requireVerifiedChromeOs : bool, default is Undefined, optional
        If you specify DESKTOP_CHROME_OS for osType, you can optionally include requireVerifiedChromeOs to require Chrome Verified Access.
    """


    minimumVersion?: str

    osType?: str

    requireVerifiedChromeOs?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider basic items0 conditions items0 vpc network sources items0

    Attributes
    ----------
    vpcSubnetwork : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0], default is Undefined, optional
        Sub networks within a VPC network.
        Structure is documented below.
    """


    vpcSubnetwork?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider basic items0 conditions items0 vpc network sources items0 vpc subnetwork items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires compute.network.get permission to be granted to caller.
    vpcIpSubnetworks : [str], default is Undefined, optional
        CIDR block IP subnetwork specification. Must be IPv4.
    """


    network?: str

    vpcIpSubnetworks?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderCustomItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider custom items0

    Attributes
    ----------
    expr : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderCustomItems0ExprItems0], default is Undefined, optional
        Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
        This page details the objects and attributes that are used to the build the CEL expressions for
        custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
        Structure is documented below.
    """


    expr?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderCustomItems0ExprItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecForProviderCustomItems0ExprItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec for provider custom items0 expr items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the expression
    expression : str, default is Undefined, optional
        Textual representation of an expression in Common Expression Language syntax.
    location : str, default is Undefined, optional
        String indicating the location of the expression for error reporting, e.g. a file name and a position in the file
    title : str, default is Undefined, optional
        Title for the expression, i.e. a short string describing its purpose.
    """


    description?: str

    expression?: str

    location?: str

    title?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    basic : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0], default is Undefined, optional
        A set of predefined conditions for the access level and a combining function.
        Structure is documented below.
    custom : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderCustomItems0], default is Undefined, optional
        Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
        See CEL spec at: https://github.com/google/cel-spec.
        Structure is documented below.
    description : str, default is Undefined, optional
        Description of the AccessLevel and its use. Does not affect behavior.
    name : str, default is Undefined, optional
        Resource name for the Access Level. The short_name component must begin
        with a letter and only include alphanumeric and '_'.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    parent : str, default is Undefined, optional
        The AccessPolicy this AccessLevel lives in.
        Format: accessPolicies/{policy_id}
    title : str, default is Undefined, optional
        Human readable title. Must be unique within the Policy.
    """


    basic?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0]

    custom?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderCustomItems0]

    description?: str

    name?: str

    parent?: str

    title?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider basic items0

    Attributes
    ----------
    combiningFunction : str, default is Undefined, optional
        How the conditions list should be combined to determine if a request
        is granted this AccessLevel. If AND is used, each Condition in
        conditions must be satisfied for the AccessLevel to be applied. If
        OR is used, at least one Condition in conditions must be satisfied
        for the AccessLevel to be applied.
        Default value is AND.
        Possible values are: AND, OR.
    conditions : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0], default is Undefined, optional
        A set of requirements for the AccessLevel to be granted.
        Structure is documented below.
    """


    combiningFunction?: str

    conditions?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider basic items0 conditions items0

    Attributes
    ----------
    devicePolicy : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0DevicePolicyItems0], default is Undefined, optional
        Device specific restrictions, all restrictions must hold for
        the Condition to be true. If not specified, all devices are
        allowed.
        Structure is documented below.
    ipSubnetworks : [str], default is Undefined, optional
        A list of CIDR block IP subnetwork specification. May be IPv4
        or IPv6.
        Note that for a CIDR IP address block, the specified IP address
        portion must be properly truncated (i.e. all the host bits must
        be zero) or the input is considered malformed. For example,
        "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
        for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
        is not. The originating IP of a request must be in one of the
        listed subnets in order for this Condition to be true.
        If empty, all IP addresses are allowed.
    members : [str], default is Undefined, optional
        An allowed list of members (users, service accounts).
        Using groups is not supported yet.
        The signed-in user originating the request must be a part of one
        of the provided members. If not specified, a request may come
        from any user (logged in/not logged in, not present in any
        groups, etc.).
        Formats: user:{emailid}, serviceAccount:{emailid}
    negate : bool, default is Undefined, optional
        Whether to negate the Condition. If true, the Condition becomes
        a NAND over its non-empty fields, each field must be false for
        the Condition overall to be satisfied. Defaults to false.
    regions : [str], default is Undefined, optional
        The request must originate from one of the provided
        countries/regions.
        Format: A valid ISO 3166-1 alpha-2 code.
    requiredAccessLevels : [str], default is Undefined, optional
        A list of other access levels defined in the same Policy,
        referenced by resource name. Referencing an AccessLevel which
        does not exist is an error. All access levels listed must be
        granted for the Condition to be true.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    vpcNetworkSources : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0], default is Undefined, optional
        The request must originate from one of the provided VPC networks in Google Cloud. Cannot specify this field together with ip_subnetworks.
        Structure is documented below.
    """


    devicePolicy?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0DevicePolicyItems0]

    ipSubnetworks?: [str]

    members?: [str]

    negate?: bool

    regions?: [str]

    requiredAccessLevels?: [str]

    vpcNetworkSources?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0DevicePolicyItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider basic items0 conditions items0 device policy items0

    Attributes
    ----------
    allowedDeviceManagementLevels : [str], default is Undefined, optional
        A list of allowed device management levels.
        An empty list allows all management levels.
        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
    allowedEncryptionStatuses : [str], default is Undefined, optional
        A list of allowed encryptions statuses.
        An empty list allows all statuses.
        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
    osConstraints : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0], default is Undefined, optional
        A list of allowed OS versions.
        An empty list allows all types and all versions.
        Structure is documented below.
    requireAdminApproval : bool, default is Undefined, optional
        Whether the device needs to be approved by the customer admin.
    requireCorpOwned : bool, default is Undefined, optional
        Whether the device needs to be corp owned.
    requireScreenLock : bool, default is Undefined, optional
        Whether or not screenlock is required for the DevicePolicy
        to be true. Defaults to false.
    """


    allowedDeviceManagementLevels?: [str]

    allowedEncryptionStatuses?: [str]

    osConstraints?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0]

    requireAdminApproval?: bool

    requireCorpOwned?: bool

    requireScreenLock?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider basic items0 conditions items0 device policy items0 os constraints items0

    Attributes
    ----------
    minimumVersion : str, default is Undefined, optional
        The minimum allowed OS version. If not set, any version
        of this OS satisfies the constraint.
        Format: "major.minor.patch" such as "10.5.301", "9.2.1".
    osType : str, default is Undefined, optional
        The operating system type of the device.
        Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
    requireVerifiedChromeOs : bool, default is Undefined, optional
        If you specify DESKTOP_CHROME_OS for osType, you can optionally include requireVerifiedChromeOs to require Chrome Verified Access.
    """


    minimumVersion?: str

    osType?: str

    requireVerifiedChromeOs?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider basic items0 conditions items0 vpc network sources items0

    Attributes
    ----------
    vpcSubnetwork : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0], default is Undefined, optional
        Sub networks within a VPC network.
        Structure is documented below.
    """


    vpcSubnetwork?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider basic items0 conditions items0 vpc network sources items0 vpc subnetwork items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires compute.network.get permission to be granted to caller.
    vpcIpSubnetworks : [str], default is Undefined, optional
        CIDR block IP subnetwork specification. Must be IPv4.
    """


    network?: str

    vpcIpSubnetworks?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderCustomItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider custom items0

    Attributes
    ----------
    expr : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderCustomItems0ExprItems0], default is Undefined, optional
        Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
        This page details the objects and attributes that are used to the build the CEL expressions for
        custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
        Structure is documented below.
    """


    expr?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderCustomItems0ExprItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecInitProviderCustomItems0ExprItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level spec init provider custom items0 expr items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the expression
    expression : str, default is Undefined, optional
        Textual representation of an expression in Common Expression Language syntax.
    location : str, default is Undefined, optional
        String indicating the location of the expression for error reporting, e.g. a file name and a position in the file
    title : str, default is Undefined, optional
        Title for the expression, i.e. a short string describing its purpose.
    """


    description?: str

    expression?: str

    location?: str

    title?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecProviderConfigRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToConfigRef

    metadata?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToMetadata

    name: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToConfigRefPolicy


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatus:
    """
    AccessLevelStatus defines the observed state of AccessLevel.

    Attributes
    ----------
    atProvider : AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProvider

    conditions?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusConditionsItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProvider:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider

    Attributes
    ----------
    basic : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0], default is Undefined, optional
        A set of predefined conditions for the access level and a combining function.
        Structure is documented below.
    custom : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderCustomItems0], default is Undefined, optional
        Custom access level conditions are set using the Cloud Common Expression Language to represent the necessary conditions for the level to apply to a request.
        See CEL spec at: https://github.com/google/cel-spec.
        Structure is documented below.
    description : str, default is Undefined, optional
        Description of the AccessLevel and its use. Does not affect behavior.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    name : str, default is Undefined, optional
        Resource name for the Access Level. The short_name component must begin
        with a letter and only include alphanumeric and '_'.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    parent : str, default is Undefined, optional
        The AccessPolicy this AccessLevel lives in.
        Format: accessPolicies/{policy_id}
    title : str, default is Undefined, optional
        Human readable title. Must be unique within the Policy.
    """


    basic?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0]

    custom?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderCustomItems0]

    description?: str

    id?: str

    name?: str

    parent?: str

    title?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider basic items0

    Attributes
    ----------
    combiningFunction : str, default is Undefined, optional
        How the conditions list should be combined to determine if a request
        is granted this AccessLevel. If AND is used, each Condition in
        conditions must be satisfied for the AccessLevel to be applied. If
        OR is used, at least one Condition in conditions must be satisfied
        for the AccessLevel to be applied.
        Default value is AND.
        Possible values are: AND, OR.
    conditions : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0], default is Undefined, optional
        A set of requirements for the AccessLevel to be granted.
        Structure is documented below.
    """


    combiningFunction?: str

    conditions?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider basic items0 conditions items0

    Attributes
    ----------
    devicePolicy : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0DevicePolicyItems0], default is Undefined, optional
        Device specific restrictions, all restrictions must hold for
        the Condition to be true. If not specified, all devices are
        allowed.
        Structure is documented below.
    ipSubnetworks : [str], default is Undefined, optional
        A list of CIDR block IP subnetwork specification. May be IPv4
        or IPv6.
        Note that for a CIDR IP address block, the specified IP address
        portion must be properly truncated (i.e. all the host bits must
        be zero) or the input is considered malformed. For example,
        "192.0.2.0/24" is accepted but "192.0.2.1/24" is not. Similarly,
        for IPv6, "2001:db8::/32" is accepted whereas "2001:db8::1/32"
        is not. The originating IP of a request must be in one of the
        listed subnets in order for this Condition to be true.
        If empty, all IP addresses are allowed.
    members : [str], default is Undefined, optional
        An allowed list of members (users, service accounts).
        Using groups is not supported yet.
        The signed-in user originating the request must be a part of one
        of the provided members. If not specified, a request may come
        from any user (logged in/not logged in, not present in any
        groups, etc.).
        Formats: user:{emailid}, serviceAccount:{emailid}
    negate : bool, default is Undefined, optional
        Whether to negate the Condition. If true, the Condition becomes
        a NAND over its non-empty fields, each field must be false for
        the Condition overall to be satisfied. Defaults to false.
    regions : [str], default is Undefined, optional
        The request must originate from one of the provided
        countries/regions.
        Format: A valid ISO 3166-1 alpha-2 code.
    requiredAccessLevels : [str], default is Undefined, optional
        A list of other access levels defined in the same Policy,
        referenced by resource name. Referencing an AccessLevel which
        does not exist is an error. All access levels listed must be
        granted for the Condition to be true.
        Format: accessPolicies/{policy_id}/accessLevels/{short_name}
    vpcNetworkSources : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0], default is Undefined, optional
        The request must originate from one of the provided VPC networks in Google Cloud. Cannot specify this field together with ip_subnetworks.
        Structure is documented below.
    """


    devicePolicy?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0DevicePolicyItems0]

    ipSubnetworks?: [str]

    members?: [str]

    negate?: bool

    regions?: [str]

    requiredAccessLevels?: [str]

    vpcNetworkSources?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0DevicePolicyItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider basic items0 conditions items0 device policy items0

    Attributes
    ----------
    allowedDeviceManagementLevels : [str], default is Undefined, optional
        A list of allowed device management levels.
        An empty list allows all management levels.
        Each value may be one of: MANAGEMENT_UNSPECIFIED, NONE, BASIC, COMPLETE.
    allowedEncryptionStatuses : [str], default is Undefined, optional
        A list of allowed encryptions statuses.
        An empty list allows all statuses.
        Each value may be one of: ENCRYPTION_UNSPECIFIED, ENCRYPTION_UNSUPPORTED, UNENCRYPTED, ENCRYPTED.
    osConstraints : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0], default is Undefined, optional
        A list of allowed OS versions.
        An empty list allows all types and all versions.
        Structure is documented below.
    requireAdminApproval : bool, default is Undefined, optional
        Whether the device needs to be approved by the customer admin.
    requireCorpOwned : bool, default is Undefined, optional
        Whether the device needs to be corp owned.
    requireScreenLock : bool, default is Undefined, optional
        Whether or not screenlock is required for the DevicePolicy
        to be true. Defaults to false.
    """


    allowedDeviceManagementLevels?: [str]

    allowedEncryptionStatuses?: [str]

    osConstraints?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0]

    requireAdminApproval?: bool

    requireCorpOwned?: bool

    requireScreenLock?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0DevicePolicyItems0OsConstraintsItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider basic items0 conditions items0 device policy items0 os constraints items0

    Attributes
    ----------
    minimumVersion : str, default is Undefined, optional
        The minimum allowed OS version. If not set, any version
        of this OS satisfies the constraint.
        Format: "major.minor.patch" such as "10.5.301", "9.2.1".
    osType : str, default is Undefined, optional
        The operating system type of the device.
        Possible values are: OS_UNSPECIFIED, DESKTOP_MAC, DESKTOP_WINDOWS, DESKTOP_LINUX, DESKTOP_CHROME_OS, ANDROID, IOS.
    requireVerifiedChromeOs : bool, default is Undefined, optional
        If you specify DESKTOP_CHROME_OS for osType, you can optionally include requireVerifiedChromeOs to require Chrome Verified Access.
    """


    minimumVersion?: str

    osType?: str

    requireVerifiedChromeOs?: bool


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider basic items0 conditions items0 vpc network sources items0

    Attributes
    ----------
    vpcSubnetwork : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0], default is Undefined, optional
        Sub networks within a VPC network.
        Structure is documented below.
    """


    vpcSubnetwork?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderBasicItems0ConditionsItems0VpcNetworkSourcesItems0VpcSubnetworkItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider basic items0 conditions items0 vpc network sources items0 vpc subnetwork items0

    Attributes
    ----------
    network : str, default is Undefined, optional
        Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires compute.network.get permission to be granted to caller.
    vpcIpSubnetworks : [str], default is Undefined, optional
        CIDR block IP subnetwork specification. Must be IPv4.
    """


    network?: str

    vpcIpSubnetworks?: [str]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderCustomItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider custom items0

    Attributes
    ----------
    expr : [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderCustomItems0ExprItems0], default is Undefined, optional
        Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
        This page details the objects and attributes that are used to the build the CEL expressions for
        custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
        Structure is documented below.
    """


    expr?: [AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderCustomItems0ExprItems0]


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusAtProviderCustomItems0ExprItems0:
    """
    accesscontextmanager gcp upbound io v1beta1 access level status at provider custom items0 expr items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the expression
    expression : str, default is Undefined, optional
        Textual representation of an expression in Common Expression Language syntax.
    location : str, default is Undefined, optional
        String indicating the location of the expression for error reporting, e.g. a file name and a position in the file
    title : str, default is Undefined, optional
        Title for the expression, i.e. a short string describing its purpose.
    """


    description?: str

    expression?: str

    location?: str

    title?: str


schema AccesscontextmanagerGcpUpboundIoV1beta1AccessLevelStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


