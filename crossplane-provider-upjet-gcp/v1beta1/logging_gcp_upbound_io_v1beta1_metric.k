"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Metric:
    """
    Metric is the Schema for the Metrics API. Logs-based metric can also be used to extract values from logs and create a a distribution of the values.

    Attributes
    ----------
    apiVersion : str, default is "logging.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Metric", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LoggingGcpUpboundIoV1beta1MetricSpec, default is Undefined, required
        spec
    status : LoggingGcpUpboundIoV1beta1MetricStatus, default is Undefined, optional
        status
    """


    apiVersion: "logging.gcp.upbound.io/v1beta1" = "logging.gcp.upbound.io/v1beta1"

    kind: "Metric" = "Metric"

    metadata?: v1.ObjectMeta

    spec: LoggingGcpUpboundIoV1beta1MetricSpec

    status?: LoggingGcpUpboundIoV1beta1MetricStatus


schema LoggingGcpUpboundIoV1beta1MetricSpec:
    """
    MetricSpec defines the desired state of Metric

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LoggingGcpUpboundIoV1beta1MetricSpecForProvider, default is Undefined, required
        for provider
    initProvider : LoggingGcpUpboundIoV1beta1MetricSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LoggingGcpUpboundIoV1beta1MetricSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LoggingGcpUpboundIoV1beta1MetricSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LoggingGcpUpboundIoV1beta1MetricSpecForProvider

    initProvider?: LoggingGcpUpboundIoV1beta1MetricSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LoggingGcpUpboundIoV1beta1MetricSpecProviderConfigRef

    publishConnectionDetailsTo?: LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LoggingGcpUpboundIoV1beta1MetricSpecWriteConnectionSecretToRef


schema LoggingGcpUpboundIoV1beta1MetricSpecForProvider:
    """
    logging gcp upbound io v1beta1 metric spec for provider

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The resource name of the Log Bucket that owns the Log Metric. Only Log Buckets in projects
        are supported. The bucket has to be in the same project as the metric.
    bucketNameRef : LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketOptions : [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0], default is Undefined, optional
        The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it
        describes the bucket boundaries used to create a histogram of the extracted values.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description of this metric, which is used in documentation. The maximum length of the
        description is 8000 characters.
    disabled : bool, default is Undefined, optional
        If set to True, then this metric is disabled and it does not generate any points.
    $filter : str, default is Undefined, optional
        An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-filters) which
        is used to match log entries.
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key string to an extractor expression which is used to extract data from a log
        entry field and assign as the label value. Each label key specified in the LabelDescriptor must
        have an associated extractor expression in this map. The syntax of the extractor expression is
        the same as for the valueExtractor field.
    metricDescriptor : [LoggingGcpUpboundIoV1beta1MetricSpecForProviderMetricDescriptorItems0], default is Undefined, optional
        The optional metric descriptor associated with the logs-based metric.
        If unspecified, it uses a default metric descriptor with a DELTA metric kind,
        INT64 value type, with no labels and a unit of "1". Such a metric counts the
        number of log entries matching the filter expression.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    valueExtractor : str, default is Undefined, optional
        A valueExtractor is required when using a distribution logs-based metric to extract the values to
        record from a log entry. Two functions are supported for value extraction - EXTRACT(field) or
        REGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which
        the value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax
        (https://github.com/google/re2/wiki/Syntax) with a single capture group to extract data from the specified
        log entry field. The value of the field is converted to a string before applying the regex. It is an
        error to specify a regex that does not include exactly one capture group.
    """


    bucketName?: str

    bucketNameRef?: LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameRef

    bucketNameSelector?: LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameSelector

    bucketOptions?: [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0]

    description?: str

    disabled?: bool

    $filter?: str

    labelExtractors?: {str:str}

    metricDescriptor?: [LoggingGcpUpboundIoV1beta1MetricSpecForProviderMetricDescriptorItems0]

    project?: str

    valueExtractor?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameRef:
    """
    Reference to a ProjectBucketConfig in logging to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameRefPolicy


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameSelector:
    """
    Selector for a ProjectBucketConfig in logging to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameSelectorPolicy


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0:
    """
    logging gcp upbound io v1beta1 metric spec for provider bucket options items0

    Attributes
    ----------
    explicitBuckets : [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0ExplicitBucketsItems0], default is Undefined, optional
        Specifies a set of buckets with arbitrary widths.
        Structure is documented below.
    exponentialBuckets : [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0ExponentialBucketsItems0], default is Undefined, optional
        Specifies an exponential sequence of buckets that have a width that is proportional to the value of
        the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
        Structure is documented below.
    linearBuckets : [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0LinearBucketsItems0], default is Undefined, optional
        Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
        Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
        Structure is documented below.
    """


    explicitBuckets?: [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0ExplicitBucketsItems0]

    exponentialBuckets?: [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0ExponentialBucketsItems0]

    linearBuckets?: [LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0LinearBucketsItems0]


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0ExplicitBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric spec for provider bucket options items0 explicit buckets items0

    Attributes
    ----------
    bounds : [float], default is Undefined, optional
        The values must be monotonically increasing.
    """


    bounds?: [float]


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0ExponentialBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric spec for provider bucket options items0 exponential buckets items0

    Attributes
    ----------
    growthFactor : float, default is Undefined, optional
        Must be greater than 1.
    numFiniteBuckets : float, default is Undefined, optional
        Must be greater than 0.
    scale : float, default is Undefined, optional
        Must be greater than 0.
    """


    growthFactor?: float

    numFiniteBuckets?: float

    scale?: float


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderBucketOptionsItems0LinearBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric spec for provider bucket options items0 linear buckets items0

    Attributes
    ----------
    numFiniteBuckets : float, default is Undefined, optional
        Must be greater than 0.
    offset : float, default is Undefined, optional
        Lower bound of the first bucket.
    width : float, default is Undefined, optional
        Must be greater than 0.
    """


    numFiniteBuckets?: float

    offset?: float

    width?: float


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderMetricDescriptorItems0:
    """
    logging gcp upbound io v1beta1 metric spec for provider metric descriptor items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        A concise name for the metric, which can be displayed in user interfaces. Use sentence case
        without an ending period, for example "Request count". This field is optional but it is
        recommended to be set for any metrics associated with user-visible concepts, such as Quota.
    labels : [LoggingGcpUpboundIoV1beta1MetricSpecForProviderMetricDescriptorItems0LabelsItems0], default is Undefined, optional
        The set of labels that can be used to describe a specific instance of this metric type. For
        example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
        for the HTTP response code, response_code, so you can look at latencies for successful responses
        or just for responses that failed.
        Structure is documented below.
    metricKind : str, default is Undefined, optional
        Whether the metric records instantaneous values, changes to a value, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to DELTA.
        Possible values are: DELTA, GAUGE, CUMULATIVE.
    unit : str, default is Undefined, optional
        The unit in which the metric value is reported. It is only applicable if the valueType is
        INT64, DOUBLE, or DISTRIBUTION. The supported units are a subset of
        The Unified Code for Units of Measure standard
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to INT64.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY.
    """


    displayName?: str

    labels?: [LoggingGcpUpboundIoV1beta1MetricSpecForProviderMetricDescriptorItems0LabelsItems0]

    metricKind?: str

    unit?: str

    valueType?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecForProviderMetricDescriptorItems0LabelsItems0:
    """
    logging gcp upbound io v1beta1 metric spec for provider metric descriptor items0 labels items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description for the label.
    key : str, default is Undefined, optional
        The label key.
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to INT64.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY.
    """


    description?: str

    key?: str

    valueType?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The resource name of the Log Bucket that owns the Log Metric. Only Log Buckets in projects
        are supported. The bucket has to be in the same project as the metric.
    bucketNameRef : LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketOptions : [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0], default is Undefined, optional
        The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it
        describes the bucket boundaries used to create a histogram of the extracted values.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description of this metric, which is used in documentation. The maximum length of the
        description is 8000 characters.
    disabled : bool, default is Undefined, optional
        If set to True, then this metric is disabled and it does not generate any points.
    $filter : str, default is Undefined, optional
        An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-filters) which
        is used to match log entries.
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key string to an extractor expression which is used to extract data from a log
        entry field and assign as the label value. Each label key specified in the LabelDescriptor must
        have an associated extractor expression in this map. The syntax of the extractor expression is
        the same as for the valueExtractor field.
    metricDescriptor : [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderMetricDescriptorItems0], default is Undefined, optional
        The optional metric descriptor associated with the logs-based metric.
        If unspecified, it uses a default metric descriptor with a DELTA metric kind,
        INT64 value type, with no labels and a unit of "1". Such a metric counts the
        number of log entries matching the filter expression.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    valueExtractor : str, default is Undefined, optional
        A valueExtractor is required when using a distribution logs-based metric to extract the values to
        record from a log entry. Two functions are supported for value extraction - EXTRACT(field) or
        REGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which
        the value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax
        (https://github.com/google/re2/wiki/Syntax) with a single capture group to extract data from the specified
        log entry field. The value of the field is converted to a string before applying the regex. It is an
        error to specify a regex that does not include exactly one capture group.
    """


    bucketName?: str

    bucketNameRef?: LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameRef

    bucketNameSelector?: LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameSelector

    bucketOptions?: [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0]

    description?: str

    disabled?: bool

    $filter?: str

    labelExtractors?: {str:str}

    metricDescriptor?: [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderMetricDescriptorItems0]

    project?: str

    valueExtractor?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameRef:
    """
    Reference to a ProjectBucketConfig in logging to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameRefPolicy


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameSelector:
    """
    Selector for a ProjectBucketConfig in logging to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameSelectorPolicy


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0:
    """
    logging gcp upbound io v1beta1 metric spec init provider bucket options items0

    Attributes
    ----------
    explicitBuckets : [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0ExplicitBucketsItems0], default is Undefined, optional
        Specifies a set of buckets with arbitrary widths.
        Structure is documented below.
    exponentialBuckets : [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0ExponentialBucketsItems0], default is Undefined, optional
        Specifies an exponential sequence of buckets that have a width that is proportional to the value of
        the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
        Structure is documented below.
    linearBuckets : [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0LinearBucketsItems0], default is Undefined, optional
        Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
        Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
        Structure is documented below.
    """


    explicitBuckets?: [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0ExplicitBucketsItems0]

    exponentialBuckets?: [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0ExponentialBucketsItems0]

    linearBuckets?: [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0LinearBucketsItems0]


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0ExplicitBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric spec init provider bucket options items0 explicit buckets items0

    Attributes
    ----------
    bounds : [float], default is Undefined, optional
        The values must be monotonically increasing.
    """


    bounds?: [float]


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0ExponentialBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric spec init provider bucket options items0 exponential buckets items0

    Attributes
    ----------
    growthFactor : float, default is Undefined, optional
        Must be greater than 1.
    numFiniteBuckets : float, default is Undefined, optional
        Must be greater than 0.
    scale : float, default is Undefined, optional
        Must be greater than 0.
    """


    growthFactor?: float

    numFiniteBuckets?: float

    scale?: float


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderBucketOptionsItems0LinearBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric spec init provider bucket options items0 linear buckets items0

    Attributes
    ----------
    numFiniteBuckets : float, default is Undefined, optional
        Must be greater than 0.
    offset : float, default is Undefined, optional
        Lower bound of the first bucket.
    width : float, default is Undefined, optional
        Must be greater than 0.
    """


    numFiniteBuckets?: float

    offset?: float

    width?: float


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderMetricDescriptorItems0:
    """
    logging gcp upbound io v1beta1 metric spec init provider metric descriptor items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        A concise name for the metric, which can be displayed in user interfaces. Use sentence case
        without an ending period, for example "Request count". This field is optional but it is
        recommended to be set for any metrics associated with user-visible concepts, such as Quota.
    labels : [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderMetricDescriptorItems0LabelsItems0], default is Undefined, optional
        The set of labels that can be used to describe a specific instance of this metric type. For
        example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
        for the HTTP response code, response_code, so you can look at latencies for successful responses
        or just for responses that failed.
        Structure is documented below.
    metricKind : str, default is Undefined, optional
        Whether the metric records instantaneous values, changes to a value, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to DELTA.
        Possible values are: DELTA, GAUGE, CUMULATIVE.
    unit : str, default is Undefined, optional
        The unit in which the metric value is reported. It is only applicable if the valueType is
        INT64, DOUBLE, or DISTRIBUTION. The supported units are a subset of
        The Unified Code for Units of Measure standard
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to INT64.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY.
    """


    displayName?: str

    labels?: [LoggingGcpUpboundIoV1beta1MetricSpecInitProviderMetricDescriptorItems0LabelsItems0]

    metricKind?: str

    unit?: str

    valueType?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecInitProviderMetricDescriptorItems0LabelsItems0:
    """
    logging gcp upbound io v1beta1 metric spec init provider metric descriptor items0 labels items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description for the label.
    key : str, default is Undefined, optional
        The label key.
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to INT64.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY.
    """


    description?: str

    key?: str

    valueType?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1MetricSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1MetricSpecProviderConfigRefPolicy


schema LoggingGcpUpboundIoV1beta1MetricSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToConfigRef

    metadata?: LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToMetadata

    name: str


schema LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToConfigRefPolicy


schema LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LoggingGcpUpboundIoV1beta1MetricSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LoggingGcpUpboundIoV1beta1MetricSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LoggingGcpUpboundIoV1beta1MetricStatus:
    """
    MetricStatus defines the observed state of Metric.

    Attributes
    ----------
    atProvider : LoggingGcpUpboundIoV1beta1MetricStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LoggingGcpUpboundIoV1beta1MetricStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: LoggingGcpUpboundIoV1beta1MetricStatusAtProvider

    conditions?: [LoggingGcpUpboundIoV1beta1MetricStatusConditionsItems0]


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProvider:
    """
    logging gcp upbound io v1beta1 metric status at provider

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The resource name of the Log Bucket that owns the Log Metric. Only Log Buckets in projects
        are supported. The bucket has to be in the same project as the metric.
    bucketOptions : [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0], default is Undefined, optional
        The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it
        describes the bucket boundaries used to create a histogram of the extracted values.
        Structure is documented below.
    description : str, default is Undefined, optional
        A description of this metric, which is used in documentation. The maximum length of the
        description is 8000 characters.
    disabled : bool, default is Undefined, optional
        If set to True, then this metric is disabled and it does not generate any points.
    $filter : str, default is Undefined, optional
        An advanced logs filter (https://cloud.google.com/logging/docs/view/advanced-filters) which
        is used to match log entries.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key string to an extractor expression which is used to extract data from a log
        entry field and assign as the label value. Each label key specified in the LabelDescriptor must
        have an associated extractor expression in this map. The syntax of the extractor expression is
        the same as for the valueExtractor field.
    metricDescriptor : [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderMetricDescriptorItems0], default is Undefined, optional
        The optional metric descriptor associated with the logs-based metric.
        If unspecified, it uses a default metric descriptor with a DELTA metric kind,
        INT64 value type, with no labels and a unit of "1". Such a metric counts the
        number of log entries matching the filter expression.
        Structure is documented below.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    valueExtractor : str, default is Undefined, optional
        A valueExtractor is required when using a distribution logs-based metric to extract the values to
        record from a log entry. Two functions are supported for value extraction - EXTRACT(field) or
        REGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which
        the value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax
        (https://github.com/google/re2/wiki/Syntax) with a single capture group to extract data from the specified
        log entry field. The value of the field is converted to a string before applying the regex. It is an
        error to specify a regex that does not include exactly one capture group.
    """


    bucketName?: str

    bucketOptions?: [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0]

    description?: str

    disabled?: bool

    $filter?: str

    id?: str

    labelExtractors?: {str:str}

    metricDescriptor?: [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderMetricDescriptorItems0]

    project?: str

    valueExtractor?: str


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0:
    """
    logging gcp upbound io v1beta1 metric status at provider bucket options items0

    Attributes
    ----------
    explicitBuckets : [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0ExplicitBucketsItems0], default is Undefined, optional
        Specifies a set of buckets with arbitrary widths.
        Structure is documented below.
    exponentialBuckets : [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0ExponentialBucketsItems0], default is Undefined, optional
        Specifies an exponential sequence of buckets that have a width that is proportional to the value of
        the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
        Structure is documented below.
    linearBuckets : [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0LinearBucketsItems0], default is Undefined, optional
        Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
        Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
        Structure is documented below.
    """


    explicitBuckets?: [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0ExplicitBucketsItems0]

    exponentialBuckets?: [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0ExponentialBucketsItems0]

    linearBuckets?: [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0LinearBucketsItems0]


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0ExplicitBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric status at provider bucket options items0 explicit buckets items0

    Attributes
    ----------
    bounds : [float], default is Undefined, optional
        The values must be monotonically increasing.
    """


    bounds?: [float]


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0ExponentialBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric status at provider bucket options items0 exponential buckets items0

    Attributes
    ----------
    growthFactor : float, default is Undefined, optional
        Must be greater than 1.
    numFiniteBuckets : float, default is Undefined, optional
        Must be greater than 0.
    scale : float, default is Undefined, optional
        Must be greater than 0.
    """


    growthFactor?: float

    numFiniteBuckets?: float

    scale?: float


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProviderBucketOptionsItems0LinearBucketsItems0:
    """
    logging gcp upbound io v1beta1 metric status at provider bucket options items0 linear buckets items0

    Attributes
    ----------
    numFiniteBuckets : float, default is Undefined, optional
        Must be greater than 0.
    offset : float, default is Undefined, optional
        Lower bound of the first bucket.
    width : float, default is Undefined, optional
        Must be greater than 0.
    """


    numFiniteBuckets?: float

    offset?: float

    width?: float


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProviderMetricDescriptorItems0:
    """
    logging gcp upbound io v1beta1 metric status at provider metric descriptor items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        A concise name for the metric, which can be displayed in user interfaces. Use sentence case
        without an ending period, for example "Request count". This field is optional but it is
        recommended to be set for any metrics associated with user-visible concepts, such as Quota.
    labels : [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderMetricDescriptorItems0LabelsItems0], default is Undefined, optional
        The set of labels that can be used to describe a specific instance of this metric type. For
        example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
        for the HTTP response code, response_code, so you can look at latencies for successful responses
        or just for responses that failed.
        Structure is documented below.
    metricKind : str, default is Undefined, optional
        Whether the metric records instantaneous values, changes to a value, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to DELTA.
        Possible values are: DELTA, GAUGE, CUMULATIVE.
    unit : str, default is Undefined, optional
        The unit in which the metric value is reported. It is only applicable if the valueType is
        INT64, DOUBLE, or DISTRIBUTION. The supported units are a subset of
        The Unified Code for Units of Measure standard
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to INT64.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY.
    """


    displayName?: str

    labels?: [LoggingGcpUpboundIoV1beta1MetricStatusAtProviderMetricDescriptorItems0LabelsItems0]

    metricKind?: str

    unit?: str

    valueType?: str


schema LoggingGcpUpboundIoV1beta1MetricStatusAtProviderMetricDescriptorItems0LabelsItems0:
    """
    logging gcp upbound io v1beta1 metric status at provider metric descriptor items0 labels items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        A human-readable description for the label.
    key : str, default is Undefined, optional
        The label key.
    valueType : str, default is Undefined, optional
        Whether the measurement is an integer, a floating-point number, etc.
        Some combinations of metricKind and valueType might not be supported.
        For counter metrics, set this to INT64.
        Possible values are: BOOL, INT64, DOUBLE, STRING, DISTRIBUTION, MONEY.
    """


    description?: str

    key?: str

    valueType?: str


schema LoggingGcpUpboundIoV1beta1MetricStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


