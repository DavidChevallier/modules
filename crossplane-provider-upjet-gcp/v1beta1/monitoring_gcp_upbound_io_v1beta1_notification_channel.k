"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NotificationChannel:
    """
    NotificationChannel is the Schema for the NotificationChannels API. A NotificationChannel is a medium through which an alert is delivered when a policy violation is detected.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NotificationChannel", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGcpUpboundIoV1beta1NotificationChannelSpec, default is Undefined, required
        spec
    status : MonitoringGcpUpboundIoV1beta1NotificationChannelStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.gcp.upbound.io/v1beta1" = "monitoring.gcp.upbound.io/v1beta1"

    kind: "NotificationChannel" = "NotificationChannel"

    metadata?: v1.ObjectMeta

    spec: MonitoringGcpUpboundIoV1beta1NotificationChannelSpec

    status?: MonitoringGcpUpboundIoV1beta1NotificationChannelStatus


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpec:
    """
    NotificationChannelSpec defines the desired state of NotificationChannel

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProvider, default is Undefined, required
        for provider
    initProvider : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProvider

    initProvider?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecProviderConfigRef

    publishConnectionDetailsTo?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecWriteConnectionSecretToRef


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProvider:
    """
    monitoring gcp upbound io v1beta1 notification channel spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional human-readable description of this notification channel. This description may provide additional details, beyond the display name, for the channel. This may not exceed 1024 Unicode characters.
    displayName : str, default is Undefined, optional
        An optional human-readable name for this notification channel. It is recommended that you specify a non-empty and unique name in order to make it easier to identify the channels in your project, though this is not enforced. The display name is limited to 512 Unicode characters.
    enabled : bool, default is Undefined, optional
        Whether notifications are forwarded to the described channel. This makes it possible to disable delivery of notifications to a particular channel without removing the channel from all alerting policies that reference the channel. This is a more convenient approach when the change is temporary and you want to receive notifications from the same set of alerting policies on the channel at some point in the future.
    forceDelete : bool, default is Undefined, optional
        If true, the notification channel will be deleted regardless
        of its use in alert policies (the policies will be updated
        to remove the channel). If false, channels that are still
        referenced by an existing alerting policy will fail to be
        deleted in a delete operation.
    labels : {str:str}, default is Undefined, optional
        Configuration fields that define the channel and its behavior. The
        permissible and required labels are specified in the
        NotificationChannelDescriptor corresponding to the type field. They can also be configured via
        the sensitive_labels block, but cannot be configured in both places.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    sensitiveLabels : [MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0], default is Undefined, optional
        Different notification type behaviors are configured primarily using the the labels field on this
        resource. This block contains the labels which contain secrets or passwords so that they can be marked
        sensitive and hidden from plan output. The name of the field, eg: password, will be the key
        in the labels map in the api request.
        Credentials may not be specified in both locations and will cause an error. Changing from one location
        to a different credential configuration in the config will require an apply to update state.
        Structure is documented below.
    $type : str, default is Undefined, optional
        The type of the notification channel. This field matches the value of the NotificationChannelDescriptor.type field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list to get the list of valid values such as "email", "slack", etc...
    userLabels : {str:str}, default is Undefined, optional
        User-supplied key/value data that does not need to conform to the corresponding NotificationChannelDescriptor's schema, unlike the labels field. This field is intended to be used for organizing and identifying the NotificationChannel objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
    """


    description?: str

    displayName?: str

    enabled?: bool

    forceDelete?: bool

    labels?: {str:str}

    project?: str

    sensitiveLabels?: [MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0]

    $type?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0:
    """
    monitoring gcp upbound io v1beta1 notification channel spec for provider sensitive labels items0

    Attributes
    ----------
    authTokenSecretRef : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0AuthTokenSecretRef, default is Undefined, optional
        auth token secret ref
    passwordSecretRef : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceKeySecretRef : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0ServiceKeySecretRef, default is Undefined, optional
        service key secret ref
    """


    authTokenSecretRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0AuthTokenSecretRef

    passwordSecretRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0PasswordSecretRef

    serviceKeySecretRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0ServiceKeySecretRef


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0AuthTokenSecretRef:
    """
    An authorization token for a notification channel. Channel types that support this field include: slack
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0PasswordSecretRef:
    """
    An password for a notification channel. Channel types that support this field include: webhook_basicauth
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecForProviderSensitiveLabelsItems0ServiceKeySecretRef:
    """
    An servicekey token for a notification channel. Channel types that support this field include: pagerduty
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional human-readable description of this notification channel. This description may provide additional details, beyond the display name, for the channel. This may not exceed 1024 Unicode characters.
    displayName : str, default is Undefined, optional
        An optional human-readable name for this notification channel. It is recommended that you specify a non-empty and unique name in order to make it easier to identify the channels in your project, though this is not enforced. The display name is limited to 512 Unicode characters.
    enabled : bool, default is Undefined, optional
        Whether notifications are forwarded to the described channel. This makes it possible to disable delivery of notifications to a particular channel without removing the channel from all alerting policies that reference the channel. This is a more convenient approach when the change is temporary and you want to receive notifications from the same set of alerting policies on the channel at some point in the future.
    forceDelete : bool, default is Undefined, optional
        If true, the notification channel will be deleted regardless
        of its use in alert policies (the policies will be updated
        to remove the channel). If false, channels that are still
        referenced by an existing alerting policy will fail to be
        deleted in a delete operation.
    labels : {str:str}, default is Undefined, optional
        Configuration fields that define the channel and its behavior. The
        permissible and required labels are specified in the
        NotificationChannelDescriptor corresponding to the type field. They can also be configured via
        the sensitive_labels block, but cannot be configured in both places.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    sensitiveLabels : [any], default is Undefined, optional
        Different notification type behaviors are configured primarily using the the labels field on this
        resource. This block contains the labels which contain secrets or passwords so that they can be marked
        sensitive and hidden from plan output. The name of the field, eg: password, will be the key
        in the labels map in the api request.
        Credentials may not be specified in both locations and will cause an error. Changing from one location
        to a different credential configuration in the config will require an apply to update state.
        Structure is documented below.
    $type : str, default is Undefined, optional
        The type of the notification channel. This field matches the value of the NotificationChannelDescriptor.type field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list to get the list of valid values such as "email", "slack", etc...
    userLabels : {str:str}, default is Undefined, optional
        User-supplied key/value data that does not need to conform to the corresponding NotificationChannelDescriptor's schema, unlike the labels field. This field is intended to be used for organizing and identifying the NotificationChannel objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
    """


    description?: str

    displayName?: str

    enabled?: bool

    forceDelete?: bool

    labels?: {str:str}

    project?: str

    sensitiveLabels?: [any]

    $type?: str

    userLabels?: {str:str}


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecProviderConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToConfigRef

    metadata?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToMetadata

    name: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToConfigRefPolicy


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatus:
    """
    NotificationChannelStatus defines the observed state of NotificationChannel.

    Attributes
    ----------
    atProvider : MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MonitoringGcpUpboundIoV1beta1NotificationChannelStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProvider

    conditions?: [MonitoringGcpUpboundIoV1beta1NotificationChannelStatusConditionsItems0]


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProvider:
    """
    monitoring gcp upbound io v1beta1 notification channel status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        An optional human-readable description of this notification channel. This description may provide additional details, beyond the display name, for the channel. This may not exceed 1024 Unicode characters.
    displayName : str, default is Undefined, optional
        An optional human-readable name for this notification channel. It is recommended that you specify a non-empty and unique name in order to make it easier to identify the channels in your project, though this is not enforced. The display name is limited to 512 Unicode characters.
    enabled : bool, default is Undefined, optional
        Whether notifications are forwarded to the described channel. This makes it possible to disable delivery of notifications to a particular channel without removing the channel from all alerting policies that reference the channel. This is a more convenient approach when the change is temporary and you want to receive notifications from the same set of alerting policies on the channel at some point in the future.
    forceDelete : bool, default is Undefined, optional
        If true, the notification channel will be deleted regardless
        of its use in alert policies (the policies will be updated
        to remove the channel). If false, channels that are still
        referenced by an existing alerting policy will fail to be
        deleted in a delete operation.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{name}}
    labels : {str:str}, default is Undefined, optional
        Configuration fields that define the channel and its behavior. The
        permissible and required labels are specified in the
        NotificationChannelDescriptor corresponding to the type field. They can also be configured via
        the sensitive_labels block, but cannot be configured in both places.
    name : str, default is Undefined, optional
        The full REST resource name for this channel. The syntax is:
        projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]
        The [CHANNEL_ID] is automatically assigned by the server on creation.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    sensitiveLabels : [MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0], default is Undefined, optional
        Different notification type behaviors are configured primarily using the the labels field on this
        resource. This block contains the labels which contain secrets or passwords so that they can be marked
        sensitive and hidden from plan output. The name of the field, eg: password, will be the key
        in the labels map in the api request.
        Credentials may not be specified in both locations and will cause an error. Changing from one location
        to a different credential configuration in the config will require an apply to update state.
        Structure is documented below.
    $type : str, default is Undefined, optional
        The type of the notification channel. This field matches the value of the NotificationChannelDescriptor.type field. See https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list to get the list of valid values such as "email", "slack", etc...
    userLabels : {str:str}, default is Undefined, optional
        User-supplied key/value data that does not need to conform to the corresponding NotificationChannelDescriptor's schema, unlike the labels field. This field is intended to be used for organizing and identifying the NotificationChannel objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
    verificationStatus : str, default is Undefined, optional
        Indicates whether this channel has been verified or not. On a ListNotificationChannels or GetNotificationChannel operation, this field is expected to be populated.If the value is UNVERIFIED, then it indicates that the channel is non-functioning (it both requires verification and lacks verification); otherwise, it is assumed that the channel works.If the channel is neither VERIFIED nor UNVERIFIED, it implies that the channel is of a type that does not require verification or that this specific channel has been exempted from verification because it was created prior to verification being required for channels of this type.This field cannot be modified using a standard UpdateNotificationChannel operation. To change the value of this field, you must call VerifyNotificationChannel.
    """


    description?: str

    displayName?: str

    enabled?: bool

    forceDelete?: bool

    id?: str

    labels?: {str:str}

    name?: str

    project?: str

    sensitiveLabels?: [MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0]

    $type?: str

    userLabels?: {str:str}

    verificationStatus?: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0:
    """
    monitoring gcp upbound io v1beta1 notification channel status at provider sensitive labels items0

    Attributes
    ----------
    authTokenSecretRef : MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0AuthTokenSecretRef, default is Undefined, optional
        auth token secret ref
    passwordSecretRef : MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    serviceKeySecretRef : MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0ServiceKeySecretRef, default is Undefined, optional
        service key secret ref
    """


    authTokenSecretRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0AuthTokenSecretRef

    passwordSecretRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0PasswordSecretRef

    serviceKeySecretRef?: MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0ServiceKeySecretRef


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0AuthTokenSecretRef:
    """
    An authorization token for a notification channel. Channel types that support this field include: slack
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0PasswordSecretRef:
    """
    An password for a notification channel. Channel types that support this field include: webhook_basicauth
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatusAtProviderSensitiveLabelsItems0ServiceKeySecretRef:
    """
    An servicekey token for a notification channel. Channel types that support this field include: pagerduty
    Note: This property is sensitive and will not be displayed in the plan.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MonitoringGcpUpboundIoV1beta1NotificationChannelStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


