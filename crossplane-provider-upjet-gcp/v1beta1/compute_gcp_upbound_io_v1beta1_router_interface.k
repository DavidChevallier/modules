"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouterInterface:
    """
    RouterInterface is the Schema for the RouterInterfaces API. Manages a Cloud Router interface.

    Attributes
    ----------
    apiVersion : str, default is "compute.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouterInterface", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeGcpUpboundIoV1beta1RouterInterfaceSpec, default is Undefined, required
        spec
    status : ComputeGcpUpboundIoV1beta1RouterInterfaceStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.gcp.upbound.io/v1beta1" = "compute.gcp.upbound.io/v1beta1"

    kind: "RouterInterface" = "RouterInterface"

    metadata?: v1.ObjectMeta

    spec: ComputeGcpUpboundIoV1beta1RouterInterfaceSpec

    status?: ComputeGcpUpboundIoV1beta1RouterInterfaceStatus


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpec:
    """
    RouterInterfaceSpec defines the desired state of RouterInterface

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProvider, default is Undefined, required
        for provider
    initProvider : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProvider

    initProvider?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecProviderConfigRef

    publishConnectionDetailsTo?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecWriteConnectionSecretToRef


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProvider:
    """
    compute gcp upbound io v1beta1 router interface spec for provider

    Attributes
    ----------
    interconnectAttachment : str, default is Undefined, optional
        The name or resource link to the
        VLAN interconnect for this interface. Changing this forces a new interface to
        be created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    ipRange : str, default is Undefined, optional
        IP address and range of the interface. The IP range must be
        in the RFC3927 link-local IP space. Changing this forces a new interface to be created.
    name : str, default is Undefined, optional
        A unique name for the interface, required by GCE. Changing
        this forces a new interface to be created.
    privateIpAddress : str, default is Undefined, optional
        The regional private internal IP address that is used
        to establish BGP sessions to a VM instance acting as a third-party Router Appliance. Changing this forces a new interface to be created.
    project : str, default is Undefined, optional
        The ID of the project in which this interface's router belongs.
        If it is not provided, the provider project is used. Changing this forces a new interface to be created.
    redundantInterface : str, default is Undefined, optional
        The name of the interface that is redundant to
        this interface. Changing this forces a new interface to be created.
    region : str, default is Undefined, optional
        The region this interface's router sits in.
        If not specified, the project region will be used. Changing this forces a new interface to be created.
    router : str, default is Undefined, optional
        The name of the router this interface will be attached to.
        Changing this forces a new interface to be created.
    routerRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterRef, default is Undefined, optional
        router ref
    routerSelector : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterSelector, default is Undefined, optional
        router selector
    subnetwork : str, default is Undefined, optional
        The URI of the subnetwork resource that this interface
        belongs to, which must be in the same region as the Cloud Router. When you establish a BGP session to a VM instance using this interface, the VM instance must belong to the same subnetwork as the subnetwork specified here. Changing this forces a new interface to be created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    vpnTunnel : str, default is Undefined, optional
        The name or resource link to the VPN tunnel this
        interface will be linked to. Changing this forces a new interface to be created. Only
        one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    vpnTunnelRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelRef, default is Undefined, optional
        vpn tunnel ref
    vpnTunnelSelector : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelSelector, default is Undefined, optional
        vpn tunnel selector
    """


    interconnectAttachment?: str

    ipRange?: str

    name?: str

    privateIpAddress?: str

    project?: str

    redundantInterface?: str

    region?: str

    router?: str

    routerRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterRef

    routerSelector?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterSelector

    subnetwork?: str

    vpnTunnel?: str

    vpnTunnelRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelRef

    vpnTunnelSelector?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelSelector


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterRef:
    """
    Reference to a Router to populate router.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterRefPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterSelector:
    """
    Selector for a Router to populate router.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderRouterSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelRef:
    """
    Reference to a VPNTunnel to populate vpnTunnel.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelRefPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelSelector:
    """
    Selector for a VPNTunnel to populate vpnTunnel.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecForProviderVpnTunnelSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    interconnectAttachment : str, default is Undefined, optional
        The name or resource link to the
        VLAN interconnect for this interface. Changing this forces a new interface to
        be created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    ipRange : str, default is Undefined, optional
        IP address and range of the interface. The IP range must be
        in the RFC3927 link-local IP space. Changing this forces a new interface to be created.
    name : str, default is Undefined, optional
        A unique name for the interface, required by GCE. Changing
        this forces a new interface to be created.
    privateIpAddress : str, default is Undefined, optional
        The regional private internal IP address that is used
        to establish BGP sessions to a VM instance acting as a third-party Router Appliance. Changing this forces a new interface to be created.
    project : str, default is Undefined, optional
        The ID of the project in which this interface's router belongs.
        If it is not provided, the provider project is used. Changing this forces a new interface to be created.
    redundantInterface : str, default is Undefined, optional
        The name of the interface that is redundant to
        this interface. Changing this forces a new interface to be created.
    region : str, default is Undefined, optional
        The region this interface's router sits in.
        If not specified, the project region will be used. Changing this forces a new interface to be created.
    router : str, default is Undefined, optional
        The name of the router this interface will be attached to.
        Changing this forces a new interface to be created.
    routerRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterRef, default is Undefined, optional
        router ref
    routerSelector : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterSelector, default is Undefined, optional
        router selector
    subnetwork : str, default is Undefined, optional
        The URI of the subnetwork resource that this interface
        belongs to, which must be in the same region as the Cloud Router. When you establish a BGP session to a VM instance using this interface, the VM instance must belong to the same subnetwork as the subnetwork specified here. Changing this forces a new interface to be created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    vpnTunnel : str, default is Undefined, optional
        The name or resource link to the VPN tunnel this
        interface will be linked to. Changing this forces a new interface to be created. Only
        one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    vpnTunnelRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelRef, default is Undefined, optional
        vpn tunnel ref
    vpnTunnelSelector : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelSelector, default is Undefined, optional
        vpn tunnel selector
    """


    interconnectAttachment?: str

    ipRange?: str

    name?: str

    privateIpAddress?: str

    project?: str

    redundantInterface?: str

    region?: str

    router?: str

    routerRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterRef

    routerSelector?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterSelector

    subnetwork?: str

    vpnTunnel?: str

    vpnTunnelRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelRef

    vpnTunnelSelector?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelSelector


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterRef:
    """
    Reference to a Router to populate router.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterRefPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterSelector:
    """
    Selector for a Router to populate router.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderRouterSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelRef:
    """
    Reference to a VPNTunnel to populate vpnTunnel.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelRefPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelSelector:
    """
    Selector for a VPNTunnel to populate vpnTunnel.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelSelectorPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecInitProviderVpnTunnelSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecProviderConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToConfigRef

    metadata?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToMetadata

    name: str


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToConfigRefPolicy


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ComputeGcpUpboundIoV1beta1RouterInterfaceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ComputeGcpUpboundIoV1beta1RouterInterfaceStatus:
    """
    RouterInterfaceStatus defines the observed state of RouterInterface.

    Attributes
    ----------
    atProvider : ComputeGcpUpboundIoV1beta1RouterInterfaceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ComputeGcpUpboundIoV1beta1RouterInterfaceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ComputeGcpUpboundIoV1beta1RouterInterfaceStatusAtProvider

    conditions?: [ComputeGcpUpboundIoV1beta1RouterInterfaceStatusConditionsItems0]


schema ComputeGcpUpboundIoV1beta1RouterInterfaceStatusAtProvider:
    """
    compute gcp upbound io v1beta1 router interface status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        an identifier for the resource with format {{region}}/{{router}}/{{name}}
    interconnectAttachment : str, default is Undefined, optional
        The name or resource link to the
        VLAN interconnect for this interface. Changing this forces a new interface to
        be created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    ipRange : str, default is Undefined, optional
        IP address and range of the interface. The IP range must be
        in the RFC3927 link-local IP space. Changing this forces a new interface to be created.
    name : str, default is Undefined, optional
        A unique name for the interface, required by GCE. Changing
        this forces a new interface to be created.
    privateIpAddress : str, default is Undefined, optional
        The regional private internal IP address that is used
        to establish BGP sessions to a VM instance acting as a third-party Router Appliance. Changing this forces a new interface to be created.
    project : str, default is Undefined, optional
        The ID of the project in which this interface's router belongs.
        If it is not provided, the provider project is used. Changing this forces a new interface to be created.
    redundantInterface : str, default is Undefined, optional
        The name of the interface that is redundant to
        this interface. Changing this forces a new interface to be created.
    region : str, default is Undefined, optional
        The region this interface's router sits in.
        If not specified, the project region will be used. Changing this forces a new interface to be created.
    router : str, default is Undefined, optional
        The name of the router this interface will be attached to.
        Changing this forces a new interface to be created.
    subnetwork : str, default is Undefined, optional
        The URI of the subnetwork resource that this interface
        belongs to, which must be in the same region as the Cloud Router. When you establish a BGP session to a VM instance using this interface, the VM instance must belong to the same subnetwork as the subnetwork specified here. Changing this forces a new interface to be created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    vpnTunnel : str, default is Undefined, optional
        The name or resource link to the VPN tunnel this
        interface will be linked to. Changing this forces a new interface to be created. Only
        one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
    """


    id?: str

    interconnectAttachment?: str

    ipRange?: str

    name?: str

    privateIpAddress?: str

    project?: str

    redundantInterface?: str

    region?: str

    router?: str

    subnetwork?: str

    vpnTunnel?: str


schema ComputeGcpUpboundIoV1beta1RouterInterfaceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


