"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DatabaseIAMMember:
    """
    DatabaseIAMMember is the Schema for the DatabaseIAMMembers API. <no value>

    Attributes
    ----------
    apiVersion : str, default is "spanner.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DatabaseIAMMember", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpec, default is Undefined, required
        spec
    status : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatus, default is Undefined, optional
        status
    """


    apiVersion: "spanner.gcp.upbound.io/v1beta1" = "spanner.gcp.upbound.io/v1beta1"

    kind: "DatabaseIAMMember" = "DatabaseIAMMember"

    metadata?: v1.ObjectMeta

    spec: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpec

    status?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatus


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpec:
    """
    DatabaseIAMMemberSpec defines the desired state of DatabaseIAMMember

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProvider, default is Undefined, required
        for provider
    initProvider : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProvider

    initProvider?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecProviderConfigRef

    publishConnectionDetailsTo?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecWriteConnectionSecretToRef


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProvider:
    """
    spanner gcp upbound io v1beta1 database i a m member spec for provider

    Attributes
    ----------
    condition : [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderConditionItems0], default is Undefined, optional
        condition
    database : str, default is Undefined, optional
        database
    databaseRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseRef, default is Undefined, optional
        database ref
    databaseSelector : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseSelector, default is Undefined, optional
        database selector
    instance : str, default is Undefined, optional
        instance
    instanceRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceSelector, default is Undefined, optional
        instance selector
    member : str, default is Undefined, optional
        member
    project : str, default is Undefined, optional
        project
    role : str, default is Undefined, optional
        role
    """


    condition?: [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderConditionItems0]

    database?: str

    databaseRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseRef

    databaseSelector?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseSelector

    instance?: str

    instanceRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceRef

    instanceSelector?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceSelector

    member?: str

    project?: str

    role?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderConditionItems0:
    """
    spanner gcp upbound io v1beta1 database i a m member spec for provider condition items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    expression : str, default is Undefined, optional
        expression
    title : str, default is Undefined, optional
        title
    """


    description?: str

    expression?: str

    title?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseRef:
    """
    Reference to a Database to populate database.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseRefPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseSelector:
    """
    Selector for a Database to populate database.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseSelectorPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderDatabaseSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceRef:
    """
    Reference to a Instance to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceRefPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceSelector:
    """
    Selector for a Instance to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceSelectorPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecForProviderInstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    condition : [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderConditionItems0], default is Undefined, optional
        condition
    database : str, default is Undefined, optional
        database
    databaseRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseRef, default is Undefined, optional
        database ref
    databaseSelector : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseSelector, default is Undefined, optional
        database selector
    instance : str, default is Undefined, optional
        instance
    instanceRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceSelector, default is Undefined, optional
        instance selector
    member : str, default is Undefined, optional
        member
    project : str, default is Undefined, optional
        project
    role : str, default is Undefined, optional
        role
    """


    condition?: [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderConditionItems0]

    database?: str

    databaseRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseRef

    databaseSelector?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseSelector

    instance?: str

    instanceRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceRef

    instanceSelector?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceSelector

    member?: str

    project?: str

    role?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderConditionItems0:
    """
    spanner gcp upbound io v1beta1 database i a m member spec init provider condition items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    expression : str, default is Undefined, optional
        expression
    title : str, default is Undefined, optional
        title
    """


    description?: str

    expression?: str

    title?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseRef:
    """
    Reference to a Database to populate database.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseRefPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseSelector:
    """
    Selector for a Database to populate database.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseSelectorPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderDatabaseSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceRef:
    """
    Reference to a Instance to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceRefPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceSelector:
    """
    Selector for a Instance to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceSelectorPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecInitProviderInstanceSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecProviderConfigRefPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToConfigRef

    metadata?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToMetadata

    name: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToConfigRefPolicy


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatus:
    """
    DatabaseIAMMemberStatus defines the observed state of DatabaseIAMMember.

    Attributes
    ----------
    atProvider : SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusAtProvider

    conditions?: [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusConditionsItems0]


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusAtProvider:
    """
    spanner gcp upbound io v1beta1 database i a m member status at provider

    Attributes
    ----------
    condition : [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusAtProviderConditionItems0], default is Undefined, optional
        condition
    database : str, default is Undefined, optional
        database
    etag : str, default is Undefined, optional
        etag
    id : str, default is Undefined, optional
        id
    instance : str, default is Undefined, optional
        instance
    member : str, default is Undefined, optional
        member
    project : str, default is Undefined, optional
        project
    role : str, default is Undefined, optional
        role
    """


    condition?: [SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusAtProviderConditionItems0]

    database?: str

    etag?: str

    id?: str

    instance?: str

    member?: str

    project?: str

    role?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusAtProviderConditionItems0:
    """
    spanner gcp upbound io v1beta1 database i a m member status at provider condition items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    expression : str, default is Undefined, optional
        expression
    title : str, default is Undefined, optional
        title
    """


    description?: str

    expression?: str

    title?: str


schema SpannerGcpUpboundIoV1beta1DatabaseIAMMemberStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


