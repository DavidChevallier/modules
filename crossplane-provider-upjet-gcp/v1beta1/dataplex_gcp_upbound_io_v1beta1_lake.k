"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Lake:
    """
    Lake is the Schema for the Lakes API. The Dataplex Lake resource

    Attributes
    ----------
    apiVersion : str, default is "dataplex.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Lake", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DataplexGcpUpboundIoV1beta1LakeSpec, default is Undefined, required
        spec
    status : DataplexGcpUpboundIoV1beta1LakeStatus, default is Undefined, optional
        status
    """


    apiVersion: "dataplex.gcp.upbound.io/v1beta1" = "dataplex.gcp.upbound.io/v1beta1"

    kind: "Lake" = "Lake"

    metadata?: v1.ObjectMeta

    spec: DataplexGcpUpboundIoV1beta1LakeSpec

    status?: DataplexGcpUpboundIoV1beta1LakeStatus


schema DataplexGcpUpboundIoV1beta1LakeSpec:
    """
    LakeSpec defines the desired state of Lake

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DataplexGcpUpboundIoV1beta1LakeSpecForProvider, default is Undefined, required
        for provider
    initProvider : DataplexGcpUpboundIoV1beta1LakeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DataplexGcpUpboundIoV1beta1LakeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DataplexGcpUpboundIoV1beta1LakeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DataplexGcpUpboundIoV1beta1LakeSpecForProvider

    initProvider?: DataplexGcpUpboundIoV1beta1LakeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DataplexGcpUpboundIoV1beta1LakeSpecProviderConfigRef

    publishConnectionDetailsTo?: DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DataplexGcpUpboundIoV1beta1LakeSpecWriteConnectionSecretToRef


schema DataplexGcpUpboundIoV1beta1LakeSpecForProvider:
    """
    dataplex gcp upbound io v1beta1 lake spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of the lake.
    displayName : str, default is Undefined, optional
        Optional. User friendly display name.
    labels : {str:str}, default is Undefined, optional
        Optional. User-defined labels for the lake.
    location : str, default is Undefined, required
        The location for the resource
    metastore : [DataplexGcpUpboundIoV1beta1LakeSpecForProviderMetastoreItems0], default is Undefined, optional
        Optional. Settings to manage lake and Dataproc Metastore service instance association.
    project : str, default is Undefined, optional
        The project for the resource
    """


    description?: str

    displayName?: str

    labels?: {str:str}

    location: str

    metastore?: [DataplexGcpUpboundIoV1beta1LakeSpecForProviderMetastoreItems0]

    project?: str


schema DataplexGcpUpboundIoV1beta1LakeSpecForProviderMetastoreItems0:
    """
    dataplex gcp upbound io v1beta1 lake spec for provider metastore items0

    Attributes
    ----------
    service : str, default is Undefined, optional
        Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
    """


    service?: str


schema DataplexGcpUpboundIoV1beta1LakeSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. Description of the lake.
    displayName : str, default is Undefined, optional
        Optional. User friendly display name.
    labels : {str:str}, default is Undefined, optional
        Optional. User-defined labels for the lake.
    metastore : [DataplexGcpUpboundIoV1beta1LakeSpecInitProviderMetastoreItems0], default is Undefined, optional
        Optional. Settings to manage lake and Dataproc Metastore service instance association.
    project : str, default is Undefined, optional
        The project for the resource
    """


    description?: str

    displayName?: str

    labels?: {str:str}

    metastore?: [DataplexGcpUpboundIoV1beta1LakeSpecInitProviderMetastoreItems0]

    project?: str


schema DataplexGcpUpboundIoV1beta1LakeSpecInitProviderMetastoreItems0:
    """
    dataplex gcp upbound io v1beta1 lake spec init provider metastore items0

    Attributes
    ----------
    service : str, default is Undefined, optional
        Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
    """


    service?: str


schema DataplexGcpUpboundIoV1beta1LakeSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DataplexGcpUpboundIoV1beta1LakeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DataplexGcpUpboundIoV1beta1LakeSpecProviderConfigRefPolicy


schema DataplexGcpUpboundIoV1beta1LakeSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToConfigRef

    metadata?: DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToMetadata

    name: str


schema DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToConfigRefPolicy


schema DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DataplexGcpUpboundIoV1beta1LakeSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DataplexGcpUpboundIoV1beta1LakeSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DataplexGcpUpboundIoV1beta1LakeStatus:
    """
    LakeStatus defines the observed state of Lake.

    Attributes
    ----------
    atProvider : DataplexGcpUpboundIoV1beta1LakeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DataplexGcpUpboundIoV1beta1LakeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DataplexGcpUpboundIoV1beta1LakeStatusAtProvider

    conditions?: [DataplexGcpUpboundIoV1beta1LakeStatusConditionsItems0]


schema DataplexGcpUpboundIoV1beta1LakeStatusAtProvider:
    """
    dataplex gcp upbound io v1beta1 lake status at provider

    Attributes
    ----------
    assetStatus : [DataplexGcpUpboundIoV1beta1LakeStatusAtProviderAssetStatusItems0], default is Undefined, optional
        Output only. Aggregated status of the underlying assets of the lake.
    createTime : str, default is Undefined, optional
        Output only. The time when the lake was created.
    description : str, default is Undefined, optional
        Optional. Description of the lake.
    displayName : str, default is Undefined, optional
        Optional. User friendly display name.
    effectiveLabels : {str:str}, default is Undefined, optional
        effective labels
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/lakes/{{name}}
    labels : {str:str}, default is Undefined, optional
        Optional. User-defined labels for the lake.
    location : str, default is Undefined, optional
        The location for the resource
    metastore : [DataplexGcpUpboundIoV1beta1LakeStatusAtProviderMetastoreItems0], default is Undefined, optional
        Optional. Settings to manage lake and Dataproc Metastore service instance association.
    metastoreStatus : [DataplexGcpUpboundIoV1beta1LakeStatusAtProviderMetastoreStatusItems0], default is Undefined, optional
        Output only. Metastore status of the lake.
    project : str, default is Undefined, optional
        The project for the resource
    serviceAccount : str, default is Undefined, optional
        Output only. Service account associated with this lake. This service account must be authorized to access or operate on resources managed by the lake.
    state : str, default is Undefined, optional
        Output only. Current state of the lake. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource and default labels configured on the provider.
    uid : str, default is Undefined, optional
        Output only. System generated globally unique ID for the lake. This ID will be different if the lake is deleted and re-created with the same name.
    updateTime : str, default is Undefined, optional
        Output only. The time when the lake was last updated.
    """


    assetStatus?: [DataplexGcpUpboundIoV1beta1LakeStatusAtProviderAssetStatusItems0]

    createTime?: str

    description?: str

    displayName?: str

    effectiveLabels?: {str:str}

    id?: str

    labels?: {str:str}

    location?: str

    metastore?: [DataplexGcpUpboundIoV1beta1LakeStatusAtProviderMetastoreItems0]

    metastoreStatus?: [DataplexGcpUpboundIoV1beta1LakeStatusAtProviderMetastoreStatusItems0]

    project?: str

    serviceAccount?: str

    state?: str

    terraformLabels?: {str:str}

    uid?: str

    updateTime?: str


schema DataplexGcpUpboundIoV1beta1LakeStatusAtProviderAssetStatusItems0:
    """
    dataplex gcp upbound io v1beta1 lake status at provider asset status items0

    Attributes
    ----------
    activeAssets : float, default is Undefined, optional
        active assets
    securityPolicyApplyingAssets : float, default is Undefined, optional
        security policy applying assets
    updateTime : str, default is Undefined, optional
        Output only. The time when the lake was last updated.
    """


    activeAssets?: float

    securityPolicyApplyingAssets?: float

    updateTime?: str


schema DataplexGcpUpboundIoV1beta1LakeStatusAtProviderMetastoreItems0:
    """
    dataplex gcp upbound io v1beta1 lake status at provider metastore items0

    Attributes
    ----------
    service : str, default is Undefined, optional
        Optional. A relative reference to the Dataproc Metastore (https://cloud.google.com/dataproc-metastore/docs) service associated with the lake: projects/{project_id}/locations/{location_id}/services/{service_id}
    """


    service?: str


schema DataplexGcpUpboundIoV1beta1LakeStatusAtProviderMetastoreStatusItems0:
    """
    dataplex gcp upbound io v1beta1 lake status at provider metastore status items0

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        endpoint
    message : str, default is Undefined, optional
        message
    state : str, default is Undefined, optional
        Output only. Current state of the lake. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
    updateTime : str, default is Undefined, optional
        Output only. The time when the lake was last updated.
    """


    endpoint?: str

    message?: str

    state?: str

    updateTime?: str


schema DataplexGcpUpboundIoV1beta1LakeStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


