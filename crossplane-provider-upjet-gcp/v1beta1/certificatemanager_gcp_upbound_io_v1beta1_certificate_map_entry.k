"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CertificateMapEntry:
    """
    CertificateMapEntry is the Schema for the CertificateMapEntrys API. CertificateMapEntry is a list of certificate configurations, that have been issued for a particular hostname

    Attributes
    ----------
    apiVersion : str, default is "certificatemanager.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CertificateMapEntry", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpec, default is Undefined, required
        spec
    status : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatus, default is Undefined, optional
        status
    """


    apiVersion: "certificatemanager.gcp.upbound.io/v1beta1" = "certificatemanager.gcp.upbound.io/v1beta1"

    kind: "CertificateMapEntry" = "CertificateMapEntry"

    metadata?: v1.ObjectMeta

    spec: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpec

    status?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatus


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpec:
    """
    CertificateMapEntrySpec defines the desired state of CertificateMapEntry

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProvider, default is Undefined, required
        for provider
    initProvider : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProvider

    initProvider?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecProviderConfigRef

    publishConnectionDetailsTo?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecWriteConnectionSecretToRef


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProvider:
    """
    certificatemanager gcp upbound io v1beta1 certificate map entry spec for provider

    Attributes
    ----------
    certificates : [str], default is Undefined, optional
        A set of Certificates defines for the given hostname.
        There can be defined up to fifteen certificates in each Certificate Map Entry.
        Each certificate must match pattern projects//locations//certificates/*.
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    hostname : str, default is Undefined, optional
        A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
        for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
        selecting a proper certificate.
    labels : {str:str}, default is Undefined, optional
        Set of labels associated with a Certificate Map Entry.
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    $map : str, default is Undefined, optional
        A map entry that is inputted into the cetrificate map
    mapRef : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapRef, default is Undefined, optional
        map ref
    mapSelector : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapSelector, default is Undefined, optional
        map selector
    matcher : str, default is Undefined, optional
        A predefined matcher for particular cases, other than SNI selection
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    certificates?: [str]

    description?: str

    hostname?: str

    labels?: {str:str}

    $map?: str

    mapRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapRef

    mapSelector?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapSelector

    matcher?: str

    project?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapRef:
    """
    Reference to a CertificateMap in certificatemanager to populate map.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapSelector:
    """
    Selector for a CertificateMap in certificatemanager to populate map.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapSelectorPolicy


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecForProviderMapSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificates : [str], default is Undefined, optional
        A set of Certificates defines for the given hostname.
        There can be defined up to fifteen certificates in each Certificate Map Entry.
        Each certificate must match pattern projects//locations//certificates/*.
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    hostname : str, default is Undefined, optional
        A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
        for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
        selecting a proper certificate.
    labels : {str:str}, default is Undefined, optional
        Set of labels associated with a Certificate Map Entry.
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    matcher : str, default is Undefined, optional
        A predefined matcher for particular cases, other than SNI selection
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    certificates?: [str]

    description?: str

    hostname?: str

    labels?: {str:str}

    matcher?: str

    project?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecProviderConfigRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToConfigRef

    metadata?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToMetadata

    name: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToConfigRefPolicy


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntrySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatus:
    """
    CertificateMapEntryStatus defines the observed state of CertificateMapEntry.

    Attributes
    ----------
    atProvider : CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatusAtProvider

    conditions?: [CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatusConditionsItems0]


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatusAtProvider:
    """
    certificatemanager gcp upbound io v1beta1 certificate map entry status at provider

    Attributes
    ----------
    certificates : [str], default is Undefined, optional
        A set of Certificates defines for the given hostname.
        There can be defined up to fifteen certificates in each Certificate Map Entry.
        Each certificate must match pattern projects//locations//certificates/*.
    createTime : str, default is Undefined, optional
        Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
        with nanosecond resolution and up to nine fractional digits.
        Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    description : str, default is Undefined, optional
        A human-readable description of the resource.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    hostname : str, default is Undefined, optional
        A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com)
        for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for
        selecting a proper certificate.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/global/certificateMaps/{{map}}/certificateMapEntries/{{name}}
    labels : {str:str}, default is Undefined, optional
        Set of labels associated with a Certificate Map Entry.
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    $map : str, default is Undefined, optional
        A map entry that is inputted into the cetrificate map
    matcher : str, default is Undefined, optional
        A predefined matcher for particular cases, other than SNI selection
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    state : str, default is Undefined, optional
        A serving state of this Certificate Map Entry.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format,
        with nanosecond resolution and up to nine fractional digits.
        Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    certificates?: [str]

    createTime?: str

    description?: str

    effectiveLabels?: {str:str}

    hostname?: str

    id?: str

    labels?: {str:str}

    $map?: str

    matcher?: str

    project?: str

    state?: str

    terraformLabels?: {str:str}

    updateTime?: str


schema CertificatemanagerGcpUpboundIoV1beta1CertificateMapEntryStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


