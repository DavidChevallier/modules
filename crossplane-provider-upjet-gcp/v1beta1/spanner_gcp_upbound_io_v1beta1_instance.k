"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    """
    Instance is the Schema for the Instances API. An isolated set of Cloud Spanner resources on which databases can be hosted.

    Attributes
    ----------
    apiVersion : str, default is "spanner.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SpannerGcpUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : SpannerGcpUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "spanner.gcp.upbound.io/v1beta1" = "spanner.gcp.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: SpannerGcpUpboundIoV1beta1InstanceSpec

    status?: SpannerGcpUpboundIoV1beta1InstanceStatus


schema SpannerGcpUpboundIoV1beta1InstanceSpec:
    """
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SpannerGcpUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : SpannerGcpUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SpannerGcpUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SpannerGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SpannerGcpUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: SpannerGcpUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SpannerGcpUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SpannerGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema SpannerGcpUpboundIoV1beta1InstanceSpecForProvider:
    """
    spanner gcp upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    autoscalingConfig : [SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0], default is Undefined, optional
        The autoscaling configuration. Autoscaling is enabled if this field is set.
        When autoscaling is enabled, num_nodes and processing_units are treated as,
        OUTPUT_ONLY fields and reflect the current compute capacity allocated to
        the instance.
        Structure is documented below.
    config : str, default is Undefined, optional
        The name of the instance's configuration (similar but not
        quite the same as a region) which defines the geographic placement and
        replication of your databases in this instance. It determines where your data
        is stored. Values are typically of the form regional-europe-west1 , us-central etc.
        In order to obtain a valid list please consult the
        Configuration section of the docs.
    displayName : str, default is Undefined, optional
        The descriptive name for this instance as it appears in UIs. Must be
        unique per project and between 4 and 30 characters in length.
    forceDestroy : bool, default is Undefined, optional
        When deleting a spanner instance, this boolean option will delete all backups of this instance.
        This must be set to true if you created a backup manually in the console.
    labels : {str:str}, default is Undefined, optional
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    numNodes : float, default is Undefined, optional
        The number of nodes allocated to this instance.
    processingUnits : float, default is Undefined, optional
        The number of processing units allocated to this instance.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    autoscalingConfig?: [SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0]

    config?: str

    displayName?: str

    forceDestroy?: bool

    labels?: {str:str}

    numNodes?: float

    processingUnits?: float

    project?: str


schema SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0:
    """
    spanner gcp upbound io v1beta1 instance spec for provider autoscaling config items0

    Attributes
    ----------
    autoscalingLimits : [SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0AutoscalingLimitsItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events. Users can define the minimum and
        maximum compute capacity allocated to the instance, and the autoscaler will
        only scale within that range. Users can either use nodes or processing
        units to specify the limits, but should use the same unit to set both the
        min_limit and max_limit.
        Structure is documented below.
    autoscalingTargets : [SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0AutoscalingTargetsItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events
        Structure is documented below.
    """


    autoscalingLimits?: [SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0AutoscalingLimitsItems0]

    autoscalingTargets?: [SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0AutoscalingTargetsItems0]


schema SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0AutoscalingLimitsItems0:
    """
    spanner gcp upbound io v1beta1 instance spec for provider autoscaling config items0 autoscaling limits items0

    Attributes
    ----------
    maxNodes : float, default is Undefined, optional
        Specifies maximum number of nodes allocated to the instance. If set, this number
        should be greater than or equal to min_nodes.
    maxProcessingUnits : float, default is Undefined, optional
        Specifies maximum number of processing units allocated to the instance.
        If set, this number should be multiples of 1000 and be greater than or equal to
        min_processing_units.
    minNodes : float, default is Undefined, optional
        Specifies number of nodes allocated to the instance. If set, this number
        should be greater than or equal to 1.
    minProcessingUnits : float, default is Undefined, optional
        Specifies minimum number of processing units allocated to the instance.
        If set, this number should be multiples of 1000.
    """


    maxNodes?: float

    maxProcessingUnits?: float

    minNodes?: float

    minProcessingUnits?: float


schema SpannerGcpUpboundIoV1beta1InstanceSpecForProviderAutoscalingConfigItems0AutoscalingTargetsItems0:
    """
    spanner gcp upbound io v1beta1 instance spec for provider autoscaling config items0 autoscaling targets items0

    Attributes
    ----------
    highPriorityCpuUtilizationPercent : float, default is Undefined, optional
        Specifies the target high priority cpu utilization percentage that the autoscaler
        should be trying to achieve for the instance.
        This number is on a scale from 0 (no utilization) to 100 (full utilization)..
    storageUtilizationPercent : float, default is Undefined, optional
        Specifies the target storage utilization percentage that the autoscaler
        should be trying to achieve for the instance.
        This number is on a scale from 0 (no utilization) to 100 (full utilization).
    """


    highPriorityCpuUtilizationPercent?: float

    storageUtilizationPercent?: float


schema SpannerGcpUpboundIoV1beta1InstanceSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoscalingConfig : [SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0], default is Undefined, optional
        The autoscaling configuration. Autoscaling is enabled if this field is set.
        When autoscaling is enabled, num_nodes and processing_units are treated as,
        OUTPUT_ONLY fields and reflect the current compute capacity allocated to
        the instance.
        Structure is documented below.
    config : str, default is Undefined, optional
        The name of the instance's configuration (similar but not
        quite the same as a region) which defines the geographic placement and
        replication of your databases in this instance. It determines where your data
        is stored. Values are typically of the form regional-europe-west1 , us-central etc.
        In order to obtain a valid list please consult the
        Configuration section of the docs.
    displayName : str, default is Undefined, optional
        The descriptive name for this instance as it appears in UIs. Must be
        unique per project and between 4 and 30 characters in length.
    forceDestroy : bool, default is Undefined, optional
        When deleting a spanner instance, this boolean option will delete all backups of this instance.
        This must be set to true if you created a backup manually in the console.
    labels : {str:str}, default is Undefined, optional
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    numNodes : float, default is Undefined, optional
        The number of nodes allocated to this instance.
    processingUnits : float, default is Undefined, optional
        The number of processing units allocated to this instance.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    autoscalingConfig?: [SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0]

    config?: str

    displayName?: str

    forceDestroy?: bool

    labels?: {str:str}

    numNodes?: float

    processingUnits?: float

    project?: str


schema SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0:
    """
    spanner gcp upbound io v1beta1 instance spec init provider autoscaling config items0

    Attributes
    ----------
    autoscalingLimits : [SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0AutoscalingLimitsItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events. Users can define the minimum and
        maximum compute capacity allocated to the instance, and the autoscaler will
        only scale within that range. Users can either use nodes or processing
        units to specify the limits, but should use the same unit to set both the
        min_limit and max_limit.
        Structure is documented below.
    autoscalingTargets : [SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0AutoscalingTargetsItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events
        Structure is documented below.
    """


    autoscalingLimits?: [SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0AutoscalingLimitsItems0]

    autoscalingTargets?: [SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0AutoscalingTargetsItems0]


schema SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0AutoscalingLimitsItems0:
    """
    spanner gcp upbound io v1beta1 instance spec init provider autoscaling config items0 autoscaling limits items0

    Attributes
    ----------
    maxNodes : float, default is Undefined, optional
        Specifies maximum number of nodes allocated to the instance. If set, this number
        should be greater than or equal to min_nodes.
    maxProcessingUnits : float, default is Undefined, optional
        Specifies maximum number of processing units allocated to the instance.
        If set, this number should be multiples of 1000 and be greater than or equal to
        min_processing_units.
    minNodes : float, default is Undefined, optional
        Specifies number of nodes allocated to the instance. If set, this number
        should be greater than or equal to 1.
    minProcessingUnits : float, default is Undefined, optional
        Specifies minimum number of processing units allocated to the instance.
        If set, this number should be multiples of 1000.
    """


    maxNodes?: float

    maxProcessingUnits?: float

    minNodes?: float

    minProcessingUnits?: float


schema SpannerGcpUpboundIoV1beta1InstanceSpecInitProviderAutoscalingConfigItems0AutoscalingTargetsItems0:
    """
    spanner gcp upbound io v1beta1 instance spec init provider autoscaling config items0 autoscaling targets items0

    Attributes
    ----------
    highPriorityCpuUtilizationPercent : float, default is Undefined, optional
        Specifies the target high priority cpu utilization percentage that the autoscaler
        should be trying to achieve for the instance.
        This number is on a scale from 0 (no utilization) to 100 (full utilization)..
    storageUtilizationPercent : float, default is Undefined, optional
        Specifies the target storage utilization percentage that the autoscaler
        should be trying to achieve for the instance.
        This number is on a scale from 0 (no utilization) to 100 (full utilization).
    """


    highPriorityCpuUtilizationPercent?: float

    storageUtilizationPercent?: float


schema SpannerGcpUpboundIoV1beta1InstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema SpannerGcpUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SpannerGcpUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SpannerGcpUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SpannerGcpUpboundIoV1beta1InstanceStatus:
    """
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : SpannerGcpUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SpannerGcpUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: SpannerGcpUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [SpannerGcpUpboundIoV1beta1InstanceStatusConditionsItems0]


schema SpannerGcpUpboundIoV1beta1InstanceStatusAtProvider:
    """
    spanner gcp upbound io v1beta1 instance status at provider

    Attributes
    ----------
    autoscalingConfig : [SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0], default is Undefined, optional
        The autoscaling configuration. Autoscaling is enabled if this field is set.
        When autoscaling is enabled, num_nodes and processing_units are treated as,
        OUTPUT_ONLY fields and reflect the current compute capacity allocated to
        the instance.
        Structure is documented below.
    config : str, default is Undefined, optional
        The name of the instance's configuration (similar but not
        quite the same as a region) which defines the geographic placement and
        replication of your databases in this instance. It determines where your data
        is stored. Values are typically of the form regional-europe-west1 , us-central etc.
        In order to obtain a valid list please consult the
        Configuration section of the docs.
    displayName : str, default is Undefined, optional
        The descriptive name for this instance as it appears in UIs. Must be
        unique per project and between 4 and 30 characters in length.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    forceDestroy : bool, default is Undefined, optional
        When deleting a spanner instance, this boolean option will delete all backups of this instance.
        This must be set to true if you created a backup manually in the console.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{project}}/{{name}}
    labels : {str:str}, default is Undefined, optional
        An object containing a list of "key": value pairs.
        Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    numNodes : float, default is Undefined, optional
        The number of nodes allocated to this instance.
    processingUnits : float, default is Undefined, optional
        The number of processing units allocated to this instance.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    state : str, default is Undefined, optional
        Instance status: CREATING or READY.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    """


    autoscalingConfig?: [SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0]

    config?: str

    displayName?: str

    effectiveLabels?: {str:str}

    forceDestroy?: bool

    id?: str

    labels?: {str:str}

    numNodes?: float

    processingUnits?: float

    project?: str

    state?: str

    terraformLabels?: {str:str}


schema SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0:
    """
    spanner gcp upbound io v1beta1 instance status at provider autoscaling config items0

    Attributes
    ----------
    autoscalingLimits : [SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0AutoscalingLimitsItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events. Users can define the minimum and
        maximum compute capacity allocated to the instance, and the autoscaler will
        only scale within that range. Users can either use nodes or processing
        units to specify the limits, but should use the same unit to set both the
        min_limit and max_limit.
        Structure is documented below.
    autoscalingTargets : [SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0AutoscalingTargetsItems0], default is Undefined, optional
        Defines scale in controls to reduce the risk of response latency
        and outages due to abrupt scale-in events
        Structure is documented below.
    """


    autoscalingLimits?: [SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0AutoscalingLimitsItems0]

    autoscalingTargets?: [SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0AutoscalingTargetsItems0]


schema SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0AutoscalingLimitsItems0:
    """
    spanner gcp upbound io v1beta1 instance status at provider autoscaling config items0 autoscaling limits items0

    Attributes
    ----------
    maxNodes : float, default is Undefined, optional
        Specifies maximum number of nodes allocated to the instance. If set, this number
        should be greater than or equal to min_nodes.
    maxProcessingUnits : float, default is Undefined, optional
        Specifies maximum number of processing units allocated to the instance.
        If set, this number should be multiples of 1000 and be greater than or equal to
        min_processing_units.
    minNodes : float, default is Undefined, optional
        Specifies number of nodes allocated to the instance. If set, this number
        should be greater than or equal to 1.
    minProcessingUnits : float, default is Undefined, optional
        Specifies minimum number of processing units allocated to the instance.
        If set, this number should be multiples of 1000.
    """


    maxNodes?: float

    maxProcessingUnits?: float

    minNodes?: float

    minProcessingUnits?: float


schema SpannerGcpUpboundIoV1beta1InstanceStatusAtProviderAutoscalingConfigItems0AutoscalingTargetsItems0:
    """
    spanner gcp upbound io v1beta1 instance status at provider autoscaling config items0 autoscaling targets items0

    Attributes
    ----------
    highPriorityCpuUtilizationPercent : float, default is Undefined, optional
        Specifies the target high priority cpu utilization percentage that the autoscaler
        should be trying to achieve for the instance.
        This number is on a scale from 0 (no utilization) to 100 (full utilization)..
    storageUtilizationPercent : float, default is Undefined, optional
        Specifies the target storage utilization percentage that the autoscaler
        should be trying to achieve for the instance.
        This number is on a scale from 0 (no utilization) to 100 (full utilization).
    """


    highPriorityCpuUtilizationPercent?: float

    storageUtilizationPercent?: float


schema SpannerGcpUpboundIoV1beta1InstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


