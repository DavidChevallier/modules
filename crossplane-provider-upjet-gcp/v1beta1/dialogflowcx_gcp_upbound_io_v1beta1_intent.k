"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Intent:
    """
    Intent is the Schema for the Intents API. An intent represents a user's intent to interact with a conversational agent.

    Attributes
    ----------
    apiVersion : str, default is "dialogflowcx.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Intent", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DialogflowcxGcpUpboundIoV1beta1IntentSpec, default is Undefined, required
        spec
    status : DialogflowcxGcpUpboundIoV1beta1IntentStatus, default is Undefined, optional
        status
    """


    apiVersion: "dialogflowcx.gcp.upbound.io/v1beta1" = "dialogflowcx.gcp.upbound.io/v1beta1"

    kind: "Intent" = "Intent"

    metadata?: v1.ObjectMeta

    spec: DialogflowcxGcpUpboundIoV1beta1IntentSpec

    status?: DialogflowcxGcpUpboundIoV1beta1IntentStatus


schema DialogflowcxGcpUpboundIoV1beta1IntentSpec:
    """
    IntentSpec defines the desired state of Intent

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DialogflowcxGcpUpboundIoV1beta1IntentSpecForProvider, default is Undefined, required
        for provider
    initProvider : DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DialogflowcxGcpUpboundIoV1beta1IntentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DialogflowcxGcpUpboundIoV1beta1IntentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DialogflowcxGcpUpboundIoV1beta1IntentSpecForProvider

    initProvider?: DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DialogflowcxGcpUpboundIoV1beta1IntentSpecProviderConfigRef

    publishConnectionDetailsTo?: DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DialogflowcxGcpUpboundIoV1beta1IntentSpecWriteConnectionSecretToRef


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProvider:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
    displayName : str, default is Undefined, optional
        The human-readable name of the intent, unique within the agent.
    isDefaultNegativeIntent : bool, default is Undefined, optional
        Marks this as the Default Negative Intent for an agent. When you create an agent, a Default Negative Intent is created automatically.
        The Default Negative Intent cannot be deleted; deleting the google_dialogflow_cx_intent resource does nothing to the underlying GCP resources.
    isDefaultWelcomeIntent : bool, default is Undefined, optional
        Marks this as the Default Welcome Intent for an agent. When you create an agent, a Default Welcome Intent is created automatically.
        The Default Welcome Intent cannot be deleted; deleting the google_dialogflow_cx_intent resource does nothing to the underlying GCP resources.
    isFallback : bool, default is Undefined, optional
        Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation.
        Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
        To manage the fallback intent, set is_default_negative_intent = true
    labels : {str:str}, default is Undefined, optional
        The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes.
        Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    languageCode : str, default is Undefined, optional
        The language of the following fields in intent:
        Intent.training_phrases.parts.text
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    parameters : [DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParametersItems0], default is Undefined, optional
        The collection of parameters associated with the intent.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The agent to create an intent for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentSelector, default is Undefined, optional
        parent selector
    priority : float, default is Undefined, optional
        The priority of this intent. Higher numbers represent higher priorities.
        If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
        If the supplied value is negative, the intent is ignored in runtime detect intent requests.
    trainingPhrases : [DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderTrainingPhrasesItems0], default is Undefined, optional
        The collection of training phrases the agent is trained on to identify the intent.
        Structure is documented below.
    """


    description?: str

    displayName?: str

    isDefaultNegativeIntent?: bool

    isDefaultWelcomeIntent?: bool

    isFallback?: bool

    labels?: {str:str}

    languageCode?: str

    parameters?: [DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParametersItems0]

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentSelector

    priority?: float

    trainingPhrases?: [DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderTrainingPhrasesItems0]


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParametersItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec for provider parameters items0

    Attributes
    ----------
    entityType : str, default is Undefined, optional
        The entity type of the parameter.
        Format: projects/-/locations/-/agents/-/entityTypes/ for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects//locations//agents//entityTypes/ for developer entity types.
    id : str, default is Undefined, optional
        The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
    isList : bool, default is Undefined, optional
        Indicates whether the parameter represents a list of values.
    redact : bool, default is Undefined, optional
        Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
        Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
    """


    entityType?: str

    id?: str

    isList?: bool

    redact?: bool


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderTrainingPhrasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec for provider training phrases items0

    Attributes
    ----------
    parts : [DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderTrainingPhrasesItems0PartsItems0], default is Undefined, optional
        The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
        Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
        Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
        If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
        If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
        Part.text is set to a part of the phrase that has no parameters.
        Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
        Structure is documented below.
    repeatCount : float, default is Undefined, optional
        Indicates how many times this example was added to the intent.
    """


    parts?: [DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderTrainingPhrasesItems0PartsItems0]

    repeatCount?: float


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecForProviderTrainingPhrasesItems0PartsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec for provider training phrases items0 parts items0

    Attributes
    ----------
    parameterId : str, default is Undefined, optional
        The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
    text : str, default is Undefined, optional
        The text for this part.
    """


    parameterId?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
    displayName : str, default is Undefined, optional
        The human-readable name of the intent, unique within the agent.
    isDefaultNegativeIntent : bool, default is Undefined, optional
        Marks this as the Default Negative Intent for an agent. When you create an agent, a Default Negative Intent is created automatically.
        The Default Negative Intent cannot be deleted; deleting the google_dialogflow_cx_intent resource does nothing to the underlying GCP resources.
    isDefaultWelcomeIntent : bool, default is Undefined, optional
        Marks this as the Default Welcome Intent for an agent. When you create an agent, a Default Welcome Intent is created automatically.
        The Default Welcome Intent cannot be deleted; deleting the google_dialogflow_cx_intent resource does nothing to the underlying GCP resources.
    isFallback : bool, default is Undefined, optional
        Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation.
        Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
        To manage the fallback intent, set is_default_negative_intent = true
    labels : {str:str}, default is Undefined, optional
        The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes.
        Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    languageCode : str, default is Undefined, optional
        The language of the following fields in intent:
        Intent.training_phrases.parts.text
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    parameters : [DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParametersItems0], default is Undefined, optional
        The collection of parameters associated with the intent.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The agent to create an intent for.
        Format: projects//locations//agents/.
    parentRef : DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentRef, default is Undefined, optional
        parent ref
    parentSelector : DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentSelector, default is Undefined, optional
        parent selector
    priority : float, default is Undefined, optional
        The priority of this intent. Higher numbers represent higher priorities.
        If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
        If the supplied value is negative, the intent is ignored in runtime detect intent requests.
    trainingPhrases : [DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderTrainingPhrasesItems0], default is Undefined, optional
        The collection of training phrases the agent is trained on to identify the intent.
        Structure is documented below.
    """


    description?: str

    displayName?: str

    isDefaultNegativeIntent?: bool

    isDefaultWelcomeIntent?: bool

    isFallback?: bool

    labels?: {str:str}

    languageCode?: str

    parameters?: [DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParametersItems0]

    parent?: str

    parentRef?: DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentRef

    parentSelector?: DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentSelector

    priority?: float

    trainingPhrases?: [DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderTrainingPhrasesItems0]


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParametersItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec init provider parameters items0

    Attributes
    ----------
    entityType : str, default is Undefined, optional
        The entity type of the parameter.
        Format: projects/-/locations/-/agents/-/entityTypes/ for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects//locations//agents//entityTypes/ for developer entity types.
    id : str, default is Undefined, optional
        The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
    isList : bool, default is Undefined, optional
        Indicates whether the parameter represents a list of values.
    redact : bool, default is Undefined, optional
        Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
        Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
    """


    entityType?: str

    id?: str

    isList?: bool

    redact?: bool


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentRef:
    """
    Reference to a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentSelector:
    """
    Selector for a Agent in dialogflowcx to populate parent.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentSelectorPolicy


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderParentSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderTrainingPhrasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec init provider training phrases items0

    Attributes
    ----------
    parts : [DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderTrainingPhrasesItems0PartsItems0], default is Undefined, optional
        The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
        Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
        Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
        If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
        If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
        Part.text is set to a part of the phrase that has no parameters.
        Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
        Structure is documented below.
    repeatCount : float, default is Undefined, optional
        Indicates how many times this example was added to the intent.
    """


    parts?: [DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderTrainingPhrasesItems0PartsItems0]

    repeatCount?: float


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecInitProviderTrainingPhrasesItems0PartsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent spec init provider training phrases items0 parts items0

    Attributes
    ----------
    parameterId : str, default is Undefined, optional
        The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
    text : str, default is Undefined, optional
        The text for this part.
    """


    parameterId?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1IntentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1IntentSpecProviderConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToConfigRef

    metadata?: DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToMetadata

    name: str


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToConfigRefPolicy


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DialogflowcxGcpUpboundIoV1beta1IntentSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DialogflowcxGcpUpboundIoV1beta1IntentStatus:
    """
    IntentStatus defines the observed state of Intent.

    Attributes
    ----------
    atProvider : DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DialogflowcxGcpUpboundIoV1beta1IntentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProvider

    conditions?: [DialogflowcxGcpUpboundIoV1beta1IntentStatusConditionsItems0]


schema DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProvider:
    """
    dialogflowcx gcp upbound io v1beta1 intent status at provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.
    displayName : str, default is Undefined, optional
        The human-readable name of the intent, unique within the agent.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format {{parent}}/intents/{{name}}
    isDefaultNegativeIntent : bool, default is Undefined, optional
        Marks this as the Default Negative Intent for an agent. When you create an agent, a Default Negative Intent is created automatically.
        The Default Negative Intent cannot be deleted; deleting the google_dialogflow_cx_intent resource does nothing to the underlying GCP resources.
    isDefaultWelcomeIntent : bool, default is Undefined, optional
        Marks this as the Default Welcome Intent for an agent. When you create an agent, a Default Welcome Intent is created automatically.
        The Default Welcome Intent cannot be deleted; deleting the google_dialogflow_cx_intent resource does nothing to the underlying GCP resources.
    isFallback : bool, default is Undefined, optional
        Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation.
        Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
        To manage the fallback intent, set is_default_negative_intent = true
    labels : {str:str}, default is Undefined, optional
        The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes.
        Prefix "sys-" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent.
        An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    languageCode : str, default is Undefined, optional
        The language of the following fields in intent:
        Intent.training_phrases.parts.text
        If not specified, the agent's default language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
    name : str, default is Undefined, optional
        The unique identifier of the intent.
        Format: projects//locations//agents//intents/.
    parameters : [DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderParametersItems0], default is Undefined, optional
        The collection of parameters associated with the intent.
        Structure is documented below.
    parent : str, default is Undefined, optional
        The agent to create an intent for.
        Format: projects//locations//agents/.
    priority : float, default is Undefined, optional
        The priority of this intent. Higher numbers represent higher priorities.
        If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the Normal priority in the console.
        If the supplied value is negative, the intent is ignored in runtime detect intent requests.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    trainingPhrases : [DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderTrainingPhrasesItems0], default is Undefined, optional
        The collection of training phrases the agent is trained on to identify the intent.
        Structure is documented below.
    """


    description?: str

    displayName?: str

    effectiveLabels?: {str:str}

    id?: str

    isDefaultNegativeIntent?: bool

    isDefaultWelcomeIntent?: bool

    isFallback?: bool

    labels?: {str:str}

    languageCode?: str

    name?: str

    parameters?: [DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderParametersItems0]

    parent?: str

    priority?: float

    terraformLabels?: {str:str}

    trainingPhrases?: [DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderTrainingPhrasesItems0]


schema DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderParametersItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent status at provider parameters items0

    Attributes
    ----------
    entityType : str, default is Undefined, optional
        The entity type of the parameter.
        Format: projects/-/locations/-/agents/-/entityTypes/ for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date), or projects//locations//agents//entityTypes/ for developer entity types.
    id : str, default is Undefined, optional
        The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
    isList : bool, default is Undefined, optional
        Indicates whether the parameter represents a list of values.
    redact : bool, default is Undefined, optional
        Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging.
        Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.
    """


    entityType?: str

    id?: str

    isList?: bool

    redact?: bool


schema DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderTrainingPhrasesItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent status at provider training phrases items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        (Output)
        The unique identifier of the training phrase.
    parts : [DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderTrainingPhrasesItems0PartsItems0], default is Undefined, optional
        The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
        Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
        Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
        If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
        If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
        Part.text is set to a part of the phrase that has no parameters.
        Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
        Structure is documented below.
    repeatCount : float, default is Undefined, optional
        Indicates how many times this example was added to the intent.
    """


    id?: str

    parts?: [DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderTrainingPhrasesItems0PartsItems0]

    repeatCount?: float


schema DialogflowcxGcpUpboundIoV1beta1IntentStatusAtProviderTrainingPhrasesItems0PartsItems0:
    """
    dialogflowcx gcp upbound io v1beta1 intent status at provider training phrases items0 parts items0

    Attributes
    ----------
    parameterId : str, default is Undefined, optional
        The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
    text : str, default is Undefined, optional
        The text for this part.
    """


    parameterId?: str

    text?: str


schema DialogflowcxGcpUpboundIoV1beta1IntentStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


