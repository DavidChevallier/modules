"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Certificate:
    """
    Certificate is the Schema for the Certificates API. A Certificate corresponds to a signed X.

    Attributes
    ----------
    apiVersion : str, default is "privateca.gcp.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Certificate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PrivatecaGcpUpboundIoV1beta1CertificateSpec, default is Undefined, required
        spec
    status : PrivatecaGcpUpboundIoV1beta1CertificateStatus, default is Undefined, optional
        status
    """


    apiVersion: "privateca.gcp.upbound.io/v1beta1" = "privateca.gcp.upbound.io/v1beta1"

    kind: "Certificate" = "Certificate"

    metadata?: v1.ObjectMeta

    spec: PrivatecaGcpUpboundIoV1beta1CertificateSpec

    status?: PrivatecaGcpUpboundIoV1beta1CertificateStatus


schema PrivatecaGcpUpboundIoV1beta1CertificateSpec:
    """
    CertificateSpec defines the desired state of Certificate

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProvider, default is Undefined, required
        for provider
    initProvider : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProvider

    initProvider?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecProviderConfigRef

    publishConnectionDetailsTo?: PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProvider:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider

    Attributes
    ----------
    certificateAuthority : str, default is Undefined, optional
        The Certificate Authority ID that should issue the certificate. For example, to issue a Certificate from
        a Certificate Authority with resource name projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca,
        argument pool should be set to projects/my-project/locations/us-central1/caPools/my-pool, argument certificate_authority
        should be set to my-ca.
    certificateAuthorityRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthorityRef, default is Undefined, optional
        certificate authority ref
    certificateAuthoritySelector : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthoritySelector, default is Undefined, optional
        certificate authority selector
    certificateTemplate : str, default is Undefined, optional
        The resource name for a CertificateTemplate used to issue this certificate,
        in the format projects/*/locations/*/certificateTemplates/*. If this is specified,
        the caller must have the necessary permission to use this template. If this is
        omitted, no template will be used. This template must be in the same location
        as the Certificate.
    certificateTemplateRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateRef, default is Undefined, optional
        certificate template ref
    certificateTemplateSelector : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateSelector, default is Undefined, optional
        certificate template selector
    config : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0], default is Undefined, optional
        The config used to create a self-signed X.509 certificate or CSR.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata to apply to this resource.
    lifetime : str, default is Undefined, optional
        The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
        "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
        fractional digits, terminated by 's'. Example: "3.5s".
    location : str, default is Undefined, required
        Location of the Certificate. A full list of valid locations can be found by
        running gcloud privateca locations list.
    pemCsr : str, default is Undefined, optional
        Immutable. A pem-encoded X.509 certificate signing request (CSR).
    pool : str, default is Undefined, optional
        The name of the CaPool this Certificate belongs to.
    poolRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolRef, default is Undefined, optional
        pool ref
    poolSelector : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolSelector, default is Undefined, optional
        pool selector
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    certificateAuthority?: str

    certificateAuthorityRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthorityRef

    certificateAuthoritySelector?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthoritySelector

    certificateTemplate?: str

    certificateTemplateRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateRef

    certificateTemplateSelector?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateSelector

    config?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0]

    labels?: {str:str}

    lifetime?: str

    location: str

    pemCsr?: str

    pool?: str

    poolRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolRef

    poolSelector?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolSelector

    project?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthorityRef:
    """
    Reference to a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthorityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthorityRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthorityRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthoritySelector:
    """
    Selector for a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthoritySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthoritySelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateAuthoritySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateRef:
    """
    Reference to a CertificateTemplate in privateca to populate certificateTemplate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateSelector:
    """
    Selector for a CertificateTemplate in privateca to populate certificateTemplate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateSelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderCertificateTemplateSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0

    Attributes
    ----------
    publicKey : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0PublicKeyItems0], default is Undefined, optional
        A PublicKey describes a public key.
        Structure is documented below.
    subjectConfig : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0], default is Undefined, optional
        Specifies some of the values in a certificate that are related to the subject.
        Structure is documented below.
    x509Config : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0], default is Undefined, optional
        Describes how some of the technical X.509 fields in a certificate should be populated.
        Structure is documented below.
    """


    publicKey?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0PublicKeyItems0]

    subjectConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0]

    x509Config?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0PublicKeyItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 public key items0

    Attributes
    ----------
    format : str, default is Undefined, optional
        The format of the public key. Currently, only PEM format is supported.
        Possible values are: KEY_TYPE_UNSPECIFIED, PEM.
    keySecretRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0PublicKeyItems0KeySecretRef, default is Undefined, optional
        key secret ref
    """


    format?: str

    keySecretRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0PublicKeyItems0KeySecretRef


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0PublicKeyItems0KeySecretRef:
    """
    Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 subject config items0

    Attributes
    ----------
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0SubjectItems0], default is Undefined, optional
        (Output)
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0], default is Undefined, optional
        (Output)
        The subject alternative name fields.
        Structure is documented below.
    """


    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 subject config items0 subject alt name items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0SubjectConfigItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 subject config items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0], default is Undefined, optional
        (Output)
        Describes custom X.509 extensions.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        (Output)
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0CaOptionsItems0], default is Undefined, optional
        (Output)
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0], default is Undefined, optional
        (Output)
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0NameConstraintsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0PolicyIdsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        (Output)
        The value of this X.509 extension.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        if both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderConfigItems0X509ConfigItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec for provider config items0 x509 config items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolRef:
    """
    Reference to a CAPool to populate pool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolSelector:
    """
    Selector for a CAPool to populate pool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolSelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecForProviderPoolSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProvider:
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificateAuthority : str, default is Undefined, optional
        The Certificate Authority ID that should issue the certificate. For example, to issue a Certificate from
        a Certificate Authority with resource name projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca,
        argument pool should be set to projects/my-project/locations/us-central1/caPools/my-pool, argument certificate_authority
        should be set to my-ca.
    certificateAuthorityRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthorityRef, default is Undefined, optional
        certificate authority ref
    certificateAuthoritySelector : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthoritySelector, default is Undefined, optional
        certificate authority selector
    certificateTemplate : str, default is Undefined, optional
        The resource name for a CertificateTemplate used to issue this certificate,
        in the format projects/*/locations/*/certificateTemplates/*. If this is specified,
        the caller must have the necessary permission to use this template. If this is
        omitted, no template will be used. This template must be in the same location
        as the Certificate.
    certificateTemplateRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateRef, default is Undefined, optional
        certificate template ref
    certificateTemplateSelector : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateSelector, default is Undefined, optional
        certificate template selector
    config : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0], default is Undefined, optional
        The config used to create a self-signed X.509 certificate or CSR.
        Structure is documented below.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata to apply to this resource.
    lifetime : str, default is Undefined, optional
        The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
        "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
        fractional digits, terminated by 's'. Example: "3.5s".
    pemCsr : str, default is Undefined, optional
        Immutable. A pem-encoded X.509 certificate signing request (CSR).
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    """


    certificateAuthority?: str

    certificateAuthorityRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthorityRef

    certificateAuthoritySelector?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthoritySelector

    certificateTemplate?: str

    certificateTemplateRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateRef

    certificateTemplateSelector?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateSelector

    config?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0]

    labels?: {str:str}

    lifetime?: str

    pemCsr?: str

    project?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthorityRef:
    """
    Reference to a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthorityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthorityRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthorityRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthoritySelector:
    """
    Selector for a CertificateAuthority in privateca to populate certificateAuthority.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthoritySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthoritySelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateAuthoritySelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateRef:
    """
    Reference to a CertificateTemplate in privateca to populate certificateTemplate.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateSelector:
    """
    Selector for a CertificateTemplate in privateca to populate certificateTemplate.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateSelectorPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderCertificateTemplateSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0

    Attributes
    ----------
    publicKey : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0PublicKeyItems0], default is Undefined, optional
        A PublicKey describes a public key.
        Structure is documented below.
    subjectConfig : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0], default is Undefined, optional
        Specifies some of the values in a certificate that are related to the subject.
        Structure is documented below.
    x509Config : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0], default is Undefined, optional
        Describes how some of the technical X.509 fields in a certificate should be populated.
        Structure is documented below.
    """


    publicKey?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0PublicKeyItems0]

    subjectConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0]

    x509Config?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0PublicKeyItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 public key items0

    Attributes
    ----------
    format : str, default is Undefined, optional
        The format of the public key. Currently, only PEM format is supported.
        Possible values are: KEY_TYPE_UNSPECIFIED, PEM.
    """


    format?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 subject config items0

    Attributes
    ----------
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0SubjectItems0], default is Undefined, optional
        (Output)
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0], default is Undefined, optional
        (Output)
        The subject alternative name fields.
        Structure is documented below.
    """


    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 subject config items0 subject alt name items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0SubjectConfigItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 subject config items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0], default is Undefined, optional
        (Output)
        Describes custom X.509 extensions.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        (Output)
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0CaOptionsItems0], default is Undefined, optional
        (Output)
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0], default is Undefined, optional
        (Output)
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0NameConstraintsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0PolicyIdsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        (Output)
        The value of this X.509 extension.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        if both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecInitProviderConfigItems0X509ConfigItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate spec init provider config items0 x509 config items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef

    metadata?: PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata

    name: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatus:
    """
    CertificateStatus defines the observed state of Certificate.

    Attributes
    ----------
    atProvider : PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PrivatecaGcpUpboundIoV1beta1CertificateStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProvider

    conditions?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusConditionsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProvider:
    """
    privateca gcp upbound io v1beta1 certificate status at provider

    Attributes
    ----------
    certificateAuthority : str, default is Undefined, optional
        The Certificate Authority ID that should issue the certificate. For example, to issue a Certificate from
        a Certificate Authority with resource name projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca,
        argument pool should be set to projects/my-project/locations/us-central1/caPools/my-pool, argument certificate_authority
        should be set to my-ca.
    certificateDescription : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0], default is Undefined, optional
        Output only. Details regarding the revocation of this Certificate. This Certificate is considered revoked if and only if this field is present.
        Structure is documented below.
    certificateTemplate : str, default is Undefined, optional
        The resource name for a CertificateTemplate used to issue this certificate,
        in the format projects/*/locations/*/certificateTemplates/*. If this is specified,
        the caller must have the necessary permission to use this template. If this is
        omitted, no template will be used. This template must be in the same location
        as the Certificate.
    config : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0], default is Undefined, optional
        The config used to create a self-signed X.509 certificate or CSR.
        Structure is documented below.
    createTime : str, default is Undefined, optional
        The time that this resource was created on the server.
        This is in RFC3339 text format.
    effectiveLabels : {str:str}, default is Undefined, optional
        for all of the labels present on the resource.
    id : str, default is Undefined, optional
        an identifier for the resource with format projects/{{project}}/locations/{{location}}/caPools/{{pool}}/certificates/{{name}}
    issuerCertificateAuthority : str, default is Undefined, optional
        The resource name of the issuing CertificateAuthority in the format projects/*/locations/*/caPools/*/certificateAuthorities/*.
    labels : {str:str}, default is Undefined, optional
        Labels with user-defined metadata to apply to this resource.
    lifetime : str, default is Undefined, optional
        The desired lifetime of the CA certificate. Used to create the "notBeforeTime" and
        "notAfterTime" fields inside an X.509 certificate. A duration in seconds with up to nine
        fractional digits, terminated by 's'. Example: "3.5s".
    location : str, default is Undefined, optional
        Location of the Certificate. A full list of valid locations can be found by
        running gcloud privateca locations list.
    pemCertificate : str, default is Undefined, optional
        Output only. The pem-encoded, signed X.509 certificate.
    pemCertificateChain : [str], default is Undefined, optional
        The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.
    pemCsr : str, default is Undefined, optional
        Immutable. A pem-encoded X.509 certificate signing request (CSR).
    pool : str, default is Undefined, optional
        The name of the CaPool this Certificate belongs to.
    project : str, default is Undefined, optional
        The ID of the project in which the resource belongs.
        If it is not provided, the provider project is used.
    revocationDetails : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderRevocationDetailsItems0], default is Undefined, optional
        Output only. Details regarding the revocation of this Certificate. This Certificate is
        considered revoked if and only if this field is present.
        Structure is documented below.
    terraformLabels : {str:str}, default is Undefined, optional
        The combination of labels configured directly on the resource
        and default labels configured on the provider.
    updateTime : str, default is Undefined, optional
        Output only. The time at which this CertificateAuthority was updated.
        This is in RFC3339 text format.
    """


    certificateAuthority?: str

    certificateDescription?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0]

    certificateTemplate?: str

    config?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0]

    createTime?: str

    effectiveLabels?: {str:str}

    id?: str

    issuerCertificateAuthority?: str

    labels?: {str:str}

    lifetime?: str

    location?: str

    pemCertificate?: str

    pemCertificateChain?: [str]

    pemCsr?: str

    pool?: str

    project?: str

    revocationDetails?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderRevocationDetailsItems0]

    terraformLabels?: {str:str}

    updateTime?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0

    Attributes
    ----------
    aiaIssuingCertificateUrls : [str], default is Undefined, optional
        (Output)
        Describes lists of issuer CA certificate URLs that appear in the "Authority Information Access" extension in the certificate.
    authorityKeyId : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0AuthorityKeyIDItems0], default is Undefined, optional
        (Output)
        Identifies the subjectKeyId of the parent certificate, per https://tools.ietf.org/html/rfc5280#section-4.2.1.1
        Structure is documented below.
    certFingerprint : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0CertFingerprintItems0], default is Undefined, optional
        (Output)
        The hash of the x.509 certificate.
        Structure is documented below.
    crlDistributionPoints : [str], default is Undefined, optional
        (Output)
        Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13
    publicKey : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0PublicKeyItems0], default is Undefined, optional
        (Output)
        A PublicKey describes a public key.
        Structure is documented below.
    subjectDescription : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0], default is Undefined, optional
        (Output)
        Describes some of the values in a certificate that are related to the subject and lifetime.
        Structure is documented below.
    subjectKeyId : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectKeyIDItems0], default is Undefined, optional
        (Output)
        Provides a means of identifiying certificates that contain a particular public key, per https://tools.ietf.org/html/rfc5280#section-4.2.1.2.
        Structure is documented below.
    x509Description : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0], default is Undefined, optional
        (Output)
        A structured description of the issued X.509 certificate.
        Structure is documented below.
    """


    aiaIssuingCertificateUrls?: [str]

    authorityKeyId?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0AuthorityKeyIDItems0]

    certFingerprint?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0CertFingerprintItems0]

    crlDistributionPoints?: [str]

    publicKey?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0PublicKeyItems0]

    subjectDescription?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0]

    subjectKeyId?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectKeyIDItems0]

    x509Description?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0AuthorityKeyIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 authority key ID items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        (Output)
        Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key.
    """


    keyId?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0CertFingerprintItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 cert fingerprint items0

    Attributes
    ----------
    sha256Hash : str, default is Undefined, optional
        (Output)
        The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.
    """


    sha256Hash?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0PublicKeyItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 public key items0

    Attributes
    ----------
    format : str, default is Undefined, optional
        The format of the public key. Currently, only PEM format is supported.
        Possible values are: KEY_TYPE_UNSPECIFIED, PEM.
    key : str, default is Undefined, optional
        Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
    """


    format?: str

    key?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 subject description items0

    Attributes
    ----------
    hexSerialNumber : str, default is Undefined, optional
        (Output)
        The serial number encoded in lowercase hexadecimal.
    lifetime : str, default is Undefined, optional
        (Output)
        For convenience, the actual lifetime of an issued certificate. Corresponds to 'notAfterTime' - 'notBeforeTime'.
    notAfterTime : str, default is Undefined, optional
        (Output)
        The time at which the certificate expires.
    notBeforeTime : str, default is Undefined, optional
        (Output)
        The time at which the certificate becomes valid.
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectItems0], default is Undefined, optional
        (Output)
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0], default is Undefined, optional
        (Output)
        The subject alternative name fields.
        Structure is documented below.
    """


    hexSerialNumber?: str

    lifetime?: str

    notAfterTime?: str

    notBeforeTime?: str

    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 subject description items0 subject alt name items0

    Attributes
    ----------
    customSans : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0CustomSansItems0], default is Undefined, optional
        (Output)
        Contains additional subject alternative name values.
        Structure is documented below.
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    customSans?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0CustomSansItems0]

    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0CustomSansItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 subject description items0 subject alt name items0 custom sans items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    obectId : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0CustomSansItems0ObectIDItems0], default is Undefined, optional
        (Output)
        Describes how some of the technical fields in a certificate should be populated.
        Structure is documented below.
    value : str, default is Undefined, optional
        (Output)
        The value of this X.509 extension.
    """


    critical?: bool

    obectId?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0CustomSansItems0ObectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectAltNameItems0CustomSansItems0ObectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 subject description items0 subject alt name items0 custom sans items0 obect ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectDescriptionItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 subject description items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0SubjectKeyIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 subject key ID items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        (Output)
        Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key.
    """


    keyId?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0AdditionalExtensionsItems0], default is Undefined, optional
        (Output)
        Describes custom X.509 extensions.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        (Output)
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0CaOptionsItems0], default is Undefined, optional
        (Output)
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0], default is Undefined, optional
        (Output)
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0NameConstraintsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0PolicyIdsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        (Output)
        The value of this X.509 extension.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    """


    isCa?: bool

    maxIssuerPathLength?: float


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderCertificateDescriptionItems0X509DescriptionItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider certificate description items0 x509 description items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0

    Attributes
    ----------
    publicKey : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0PublicKeyItems0], default is Undefined, optional
        A PublicKey describes a public key.
        Structure is documented below.
    subjectConfig : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0], default is Undefined, optional
        Specifies some of the values in a certificate that are related to the subject.
        Structure is documented below.
    x509Config : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0], default is Undefined, optional
        Describes how some of the technical X.509 fields in a certificate should be populated.
        Structure is documented below.
    """


    publicKey?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0PublicKeyItems0]

    subjectConfig?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0]

    x509Config?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0PublicKeyItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 public key items0

    Attributes
    ----------
    format : str, default is Undefined, optional
        The format of the public key. Currently, only PEM format is supported.
        Possible values are: KEY_TYPE_UNSPECIFIED, PEM.
    """


    format?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 subject config items0

    Attributes
    ----------
    subject : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0SubjectItems0], default is Undefined, optional
        (Output)
        Contains distinguished name fields such as the location and organization.
        Structure is documented below.
    subjectAltName : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0], default is Undefined, optional
        (Output)
        The subject alternative name fields.
        Structure is documented below.
    """


    subject?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0SubjectItems0]

    subjectAltName?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0SubjectAltNameItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 subject config items0 subject alt name items0

    Attributes
    ----------
    dnsNames : [str], default is Undefined, optional
        Contains only valid, fully-qualified host names.
    emailAddresses : [str], default is Undefined, optional
        Contains only valid RFC 2822 E-mail addresses.
    ipAddresses : [str], default is Undefined, optional
        Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
    uris : [str], default is Undefined, optional
        Contains only valid RFC 3986 URIs.
    """


    dnsNames?: [str]

    emailAddresses?: [str]

    ipAddresses?: [str]

    uris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0SubjectConfigItems0SubjectItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 subject config items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        The common name of the distinguished name.
    countryCode : str, default is Undefined, optional
        The country code of the subject.
    locality : str, default is Undefined, optional
        The locality or city of the subject.
    organization : str, default is Undefined, optional
        The organization of the subject.
    organizationalUnit : str, default is Undefined, optional
        The organizational unit of the subject.
    postalCode : str, default is Undefined, optional
        The postal code of the subject.
    province : str, default is Undefined, optional
        The province, territory, or regional state of the subject.
    streetAddress : str, default is Undefined, optional
        The street address of the subject.
    """


    commonName?: str

    countryCode?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    postalCode?: str

    province?: str

    streetAddress?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0

    Attributes
    ----------
    additionalExtensions : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0], default is Undefined, optional
        (Output)
        Describes custom X.509 extensions.
        Structure is documented below.
    aiaOcspServers : [str], default is Undefined, optional
        (Output)
        Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the
        "Authority Information Access" extension in the certificate.
    caOptions : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0CaOptionsItems0], default is Undefined, optional
        (Output)
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    keyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0], default is Undefined, optional
        (Output)
        Indicates the intended use for keys that correspond to a certificate.
        Structure is documented below.
    nameConstraints : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0NameConstraintsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 name constraints extension.
        Structure is documented below.
    policyIds : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0PolicyIdsItems0], default is Undefined, optional
        (Output)
        Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
        Structure is documented below.
    """


    additionalExtensions?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0]

    aiaOcspServers?: [str]

    caOptions?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0CaOptionsItems0]

    keyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0]

    nameConstraints?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0NameConstraintsItems0]

    policyIds?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0PolicyIdsItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 additional extensions items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    objectId : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0], default is Undefined, optional
        Describes values that are relevant in a CA certificate.
        Structure is documented below.
    value : str, default is Undefined, optional
        (Output)
        The value of this X.509 extension.
    """


    critical?: bool

    objectId?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0]

    value?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0AdditionalExtensionsItems0ObjectIDItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 additional extensions items0 object ID items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0CaOptionsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 ca options items0

    Attributes
    ----------
    isCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to true.
    maxIssuerPathLength : float, default is Undefined, optional
        Refers to the "path length constraint" in Basic Constraints extension. For a CA certificate, this value describes the depth of
        subordinate CA certificates that are allowed. If this value is less than 0, the request will fail.
    nonCa : bool, default is Undefined, optional
        When true, the "CA" in Basic Constraints extension will be set to false.
        If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.
    zeroMaxIssuerPathLength : bool, default is Undefined, optional
        When true, the "path length constraint" in Basic Constraints extension will be set to 0.
        if both max_issuer_path_length and zero_max_issuer_path_length are unset,
        the max path length will be omitted from the CA certificate.
    """


    isCa?: bool

    maxIssuerPathLength?: float

    nonCa?: bool

    zeroMaxIssuerPathLength?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 key usage items0

    Attributes
    ----------
    baseKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    extendedKeyUsage : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0], default is Undefined, optional
        Describes high-level ways in which a key may be used.
        Structure is documented below.
    unknownExtendedKeyUsages : [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
        Structure is documented below.
    """


    baseKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0]

    extendedKeyUsage?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0]

    unknownExtendedKeyUsages?: [PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0BaseKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 key usage items0 base key usage items0

    Attributes
    ----------
    certSign : bool, default is Undefined, optional
        The key may be used to sign certificates.
    contentCommitment : bool, default is Undefined, optional
        The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
    crlSign : bool, default is Undefined, optional
        The key may be used sign certificate revocation lists.
    dataEncipherment : bool, default is Undefined, optional
        The key may be used to encipher data.
    decipherOnly : bool, default is Undefined, optional
        The key may be used to decipher only.
    digitalSignature : bool, default is Undefined, optional
        The key may be used for digital signatures.
    encipherOnly : bool, default is Undefined, optional
        The key may be used to encipher only.
    keyAgreement : bool, default is Undefined, optional
        The key may be used in a key agreement protocol.
    keyEncipherment : bool, default is Undefined, optional
        The key may be used to encipher other keys.
    """


    certSign?: bool

    contentCommitment?: bool

    crlSign?: bool

    dataEncipherment?: bool

    decipherOnly?: bool

    digitalSignature?: bool

    encipherOnly?: bool

    keyAgreement?: bool

    keyEncipherment?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0ExtendedKeyUsageItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 key usage items0 extended key usage items0

    Attributes
    ----------
    clientAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
    codeSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
    emailProtection : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
    ocspSigning : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
    serverAuth : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
    timeStamping : bool, default is Undefined, optional
        Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
    """


    clientAuth?: bool

    codeSigning?: bool

    emailProtection?: bool

    ocspSigning?: bool

    serverAuth?: bool

    timeStamping?: bool


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0KeyUsageItems0UnknownExtendedKeyUsagesItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 key usage items0 unknown extended key usages items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0NameConstraintsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 name constraints items0

    Attributes
    ----------
    critical : bool, default is Undefined, optional
        Indicates whether or not the name constraints are marked critical.
    excludedDnsNames : [str], default is Undefined, optional
        Contains excluded DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    excludedEmailAddresses : [str], default is Undefined, optional
        Contains the excluded email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    excludedIpRanges : [str], default is Undefined, optional
        Contains the excluded IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    excludedUris : [str], default is Undefined, optional
        Contains the excluded URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    permittedDnsNames : [str], default is Undefined, optional
        Contains permitted DNS names. Any DNS name that can be
        constructed by simply adding zero or more labels to
        the left-hand side of the name satisfies the name constraint.
        For example, example.com, www.example.com, www.sub.example.com
        would satisfy example.com while example1.com does not.
    permittedEmailAddresses : [str], default is Undefined, optional
        Contains the permitted email addresses. The value can be a particular
        email address, a hostname to indicate all email addresses on that host or
        a domain with a leading period (e.g. .example.com) to indicate
        all email addresses in that domain.
    permittedIpRanges : [str], default is Undefined, optional
        Contains the permitted IP ranges. For IPv4 addresses, the ranges
        are expressed using CIDR notation as specified in RFC 4632.
        For IPv6 addresses, the ranges are expressed in similar encoding as IPv4
        addresses.
    permittedUris : [str], default is Undefined, optional
        Contains the permitted URIs that apply to the host part of the name.
        The value can be a hostname or a domain with a
        leading period (like .example.com)
    """


    critical?: bool

    excludedDnsNames?: [str]

    excludedEmailAddresses?: [str]

    excludedIpRanges?: [str]

    excludedUris?: [str]

    permittedDnsNames?: [str]

    permittedEmailAddresses?: [str]

    permittedIpRanges?: [str]

    permittedUris?: [str]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderConfigItems0X509ConfigItems0PolicyIdsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider config items0 x509 config items0 policy ids items0

    Attributes
    ----------
    objectIdPath : [float], default is Undefined, optional
        An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
    """


    objectIdPath?: [float]


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusAtProviderRevocationDetailsItems0:
    """
    privateca gcp upbound io v1beta1 certificate status at provider revocation details items0

    Attributes
    ----------
    revocationState : str, default is Undefined, optional
        (Output)
        Indicates why a Certificate was revoked.
    revocationTime : str, default is Undefined, optional
        (Output)
        The time at which this Certificate was revoked.
    """


    revocationState?: str

    revocationTime?: str


schema PrivatecaGcpUpboundIoV1beta1CertificateStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


