"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema HelmChartProxy:
    """
    HelmChartProxy is the Schema for the helmchartproxies API.

    Attributes
    ----------
    apiVersion : str, default is "addons.cluster.x-k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "HelmChartProxy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AddonsClusterxK8sIoV1alpha1HelmChartProxySpec, default is Undefined, optional
        spec
    status : AddonsClusterxK8sIoV1alpha1HelmChartProxyStatus, default is Undefined, optional
        status
    """


    apiVersion: "addons.cluster.x-k8s.io/v1alpha1" = "addons.cluster.x-k8s.io/v1alpha1"

    kind: "HelmChartProxy" = "HelmChartProxy"

    metadata?: v1.ObjectMeta

    spec?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpec

    status?: AddonsClusterxK8sIoV1alpha1HelmChartProxyStatus


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpec:
    """
    HelmChartProxySpec defines the desired state of HelmChartProxy.

    Attributes
    ----------
    chartName : str, default is Undefined, required
        ChartName is the name of the Helm chart in the repository.
        e.g. chart-path oci://repo-url/chart-name as chartName: chart-name and https://repo-url/chart-name as chartName: chart-name
    clusterSelector : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecClusterSelector, default is Undefined, required
        cluster selector
    credentials : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecCredentials, default is Undefined, optional
        credentials
    namespace : str, default is Undefined, optional
        ReleaseNamespace is the namespace the Helm release will be installed on each selected
        Cluster. If it is not specified, it will be set to the default namespace.
    options : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptions, default is Undefined, optional
        options
    releaseName : str, default is Undefined, optional
        ReleaseName is the release name of the installed Helm chart. If it is not specified, a name will be generated.
    repoURL : str, default is Undefined, required
        RepoURL is the URL of the Helm chart repository.
        e.g. chart-path oci://repo-url/chart-name as repoURL: oci://repo-url and https://repo-url/chart-name as repoURL: https://repo-url
    tlsConfig : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecTLSConfig, default is Undefined, optional
        tls config
    valuesTemplate : str, default is Undefined, optional
        ValuesTemplate is an inline YAML representing the values for the Helm chart. This YAML supports Go templating to reference
        fields from each selected workload Cluster and programatically create and set values.
    version : str, default is Undefined, optional
        Version is the version of the Helm chart. If it is not specified, the chart will use
        and be kept up to date with the latest version.
    """


    chartName: str

    clusterSelector: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecClusterSelector

    credentials?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecCredentials

    namespace?: str

    options?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptions

    releaseName?: str

    repoURL: str

    tlsConfig?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecTLSConfig

    valuesTemplate?: str

    version?: str


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecClusterSelector:
    """
    ClusterSelector selects Clusters in the same namespace with a label that matches the specified label selector. The Helm
    chart will be installed on all selected Clusters. If a Cluster is no longer selected, the Helm release will be uninstalled.

    Attributes
    ----------
    matchExpressions : [AddonsClusterxK8sIoV1alpha1HelmChartProxySpecClusterSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [AddonsClusterxK8sIoV1alpha1HelmChartProxySpecClusterSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecClusterSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecCredentials:
    """
    Credentials is a reference to an object containing the OCI credentials. If it is not specified, no credentials will be used.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the key in the Secret containing the OCI credentials.
    secret : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecCredentialsSecret, default is Undefined, required
        secret
    """


    key: str

    secret: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecCredentialsSecret


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecCredentialsSecret:
    """
    Secret is a reference to a Secret containing the OCI credentials.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptions:
    """
    Options represents CLI flags passed to Helm operations (i.e. install, upgrade, delete) and
    include options such as wait, skipCRDs, timeout, waitForJobs, etc.

    Attributes
    ----------
    atomic : bool, default is Undefined, optional
        Atomic indicates the installation/upgrade process to delete the installation or rollback on failure.
        If 'Atomic' is set, wait will be enabled automatically during helm install/upgrade operation.
    dependencyUpdate : bool, default is Undefined, optional
        DependencyUpdate indicates the Helm install/upgrade action to get missing dependencies.
    disableHooks : bool, default is Undefined, optional
        DisableHooks prevents hooks from running during the Helm install action.
    disableOpenAPIValidation : bool, default is Undefined, optional
        DisableOpenAPIValidation controls whether OpenAPI validation is enforced.
    enableClientCache : bool, default is Undefined, optional
        EnableClientCache is a flag to enable Helm client cache. If it is not specified, it will be set to true.
    install : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsInstall, default is Undefined, optional
        install
    options : bool, default is Undefined, optional
        SubNotes determines whether sub-notes should be rendered in the chart.
    skipCRDs : bool, default is Undefined, optional
        SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
        By default, CRDs are installed if not already present.
        If set, no CRDs will be installed.
    timeout : str, default is Undefined, optional
        Timeout is the time to wait for any individual Kubernetes operation (like
        resource creation, Jobs for hooks, etc.) during the performance of a Helm install action.
        Defaults to '10 min'.
    uninstall : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsUninstall, default is Undefined, optional
        uninstall
    upgrade : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsUpgrade, default is Undefined, optional
        upgrade
    wait : bool, default is Undefined, optional
        Wait enables the waiting for resources to be ready after a Helm install/upgrade has been performed.
    waitForJobs : bool, default is Undefined, optional
        WaitForJobs enables waiting for jobs to complete after a Helm install/upgrade has been performed.
    """


    atomic?: bool

    dependencyUpdate?: bool

    disableHooks?: bool

    disableOpenAPIValidation?: bool

    enableClientCache?: bool = False

    install?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsInstall

    options?: bool

    skipCRDs?: bool

    timeout?: str

    uninstall?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsUninstall

    upgrade?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsUpgrade

    wait?: bool

    waitForJobs?: bool


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsInstall:
    """
    Install represents CLI flags passed to Helm install operation which can be used to control
    behaviour of helm Install operations via options like wait, skipCrds, timeout, waitForJobs, etc.

    Attributes
    ----------
    createNamespace : bool, default is True, optional
        CreateNamespace indicates the Helm install/upgrade action to create the
        HelmChartProxySpec.ReleaseNamespace if it does not exist yet.
        On uninstall, the namespace will not be garbage collected.
        If it is not specified by user, will be set to default 'true'.
    includeCRDs : bool, default is Undefined, optional
        IncludeCRDs determines whether CRDs stored as a part of helm templates directory should be installed.
    """


    createNamespace?: bool = True

    includeCRDs?: bool


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsUninstall:
    """
    Uninstall represents CLI flags passed to Helm uninstall operation which can be used to control
    behaviour of helm Uninstall operation via options like wait, timeout, etc.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description represents human readable information to be shown on release uninstall.
    keepHistory : bool, default is Undefined, optional
        KeepHistory defines whether historical revisions of a release should be saved.
        If it's set, helm uninstall operation will not delete the history of the release.
        The helm storage backend (secret, configmap, etc) will be retained in the cluster.
    """


    description?: str

    keepHistory?: bool


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecOptionsUpgrade:
    """
    Upgrade represents CLI flags passed to Helm upgrade operation which can be used to control
    behaviour of helm Upgrade operations via options like wait, skipCrds, timeout, waitForJobs, etc.

    Attributes
    ----------
    cleanupOnFail : bool, default is Undefined, optional
        CleanupOnFail indicates the upgrade action to delete newly-created resources on a failed update operation.
    force : bool, default is Undefined, optional
        Force indicates to ignore certain warnings and perform the helm release upgrade anyway.
        This should be used with caution.
    maxHistory : int, default is 10, optional
        MaxHistory limits the maximum number of revisions saved per release (default is 10).
    recreate : bool, default is Undefined, optional
        Recreate will (if true) recreate pods after a rollback.
    resetValues : bool, default is Undefined, optional
        ResetValues will reset the values to the chart's built-ins rather than merging with existing.
    reuseValues : bool, default is Undefined, optional
        ReuseValues will re-use the user's last supplied values.
    """


    cleanupOnFail?: bool

    force?: bool

    maxHistory?: int = 10

    recreate?: bool

    resetValues?: bool

    reuseValues?: bool


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecTLSConfig:
    """
    TLSConfig contains the TLS configuration for a HelmChartProxy.

    Attributes
    ----------
    caSecret : AddonsClusterxK8sIoV1alpha1HelmChartProxySpecTLSConfigCaSecret, default is Undefined, optional
        ca secret
    insecureSkipTLSVerify : bool, default is Undefined, optional
        InsecureSkipTLSVerify controls whether the Helm client should verify the server's certificate.
    """


    caSecret?: AddonsClusterxK8sIoV1alpha1HelmChartProxySpecTLSConfigCaSecret

    insecureSkipTLSVerify?: bool


schema AddonsClusterxK8sIoV1alpha1HelmChartProxySpecTLSConfigCaSecret:
    """
    Secret is a reference to a Secret containing the TLS CA certificate at the key ca.crt.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name is unique within a namespace to reference a secret resource.
    namespace : str, default is Undefined, optional
        namespace defines the space within which the secret name must be unique.
    """


    name?: str

    namespace?: str


schema AddonsClusterxK8sIoV1alpha1HelmChartProxyStatus:
    """
    HelmChartProxyStatus defines the observed state of HelmChartProxy.

    Attributes
    ----------
    conditions : [AddonsClusterxK8sIoV1alpha1HelmChartProxyStatusConditionsItems0], default is Undefined, optional
        Conditions defines current state of the HelmChartProxy.
    matchingClusters : [AddonsClusterxK8sIoV1alpha1HelmChartProxyStatusMatchingClustersItems0], default is Undefined, optional
        MatchingClusters is the list of references to Clusters selected by the ClusterSelector.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest generation observed by the controller.
    """


    conditions?: [AddonsClusterxK8sIoV1alpha1HelmChartProxyStatusConditionsItems0]

    matchingClusters?: [AddonsClusterxK8sIoV1alpha1HelmChartProxyStatusMatchingClustersItems0]

    observedGeneration?: int


schema AddonsClusterxK8sIoV1alpha1HelmChartProxyStatusConditionsItems0:
    """
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema AddonsClusterxK8sIoV1alpha1HelmChartProxyStatusMatchingClustersItems0:
    """
    ObjectReference contains enough information to let you inspect or modify the referred object.
    ---
    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
        Those cannot be well described when embedded.
     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
        and the version of the actual struct is irrelevant.
     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
        TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


