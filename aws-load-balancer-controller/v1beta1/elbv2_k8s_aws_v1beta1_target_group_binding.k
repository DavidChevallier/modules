"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TargetGroupBinding:
    """
    TargetGroupBinding is the Schema for the TargetGroupBinding API

    Attributes
    ----------
    apiVersion : str, default is "elbv2.k8s.aws/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TargetGroupBinding", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Elbv2K8sAwsV1beta1TargetGroupBindingSpec, default is Undefined, optional
        spec
    status : Elbv2K8sAwsV1beta1TargetGroupBindingStatus, default is Undefined, optional
        status
    """


    apiVersion: "elbv2.k8s.aws/v1beta1" = "elbv2.k8s.aws/v1beta1"

    kind: "TargetGroupBinding" = "TargetGroupBinding"

    metadata?: v1.ObjectMeta

    spec?: Elbv2K8sAwsV1beta1TargetGroupBindingSpec

    status?: Elbv2K8sAwsV1beta1TargetGroupBindingStatus


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpec:
    """
    TargetGroupBindingSpec defines the desired state of TargetGroupBinding

    Attributes
    ----------
    ipAddressType : str, default is Undefined, optional
        ipAddressType specifies whether the target group is of type IPv4 or IPv6. If unspecified, it will be automatically inferred.
    networking : Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworking, default is Undefined, optional
        networking
    nodeSelector : Elbv2K8sAwsV1beta1TargetGroupBindingSpecNodeSelector, default is Undefined, optional
        node selector
    serviceRef : Elbv2K8sAwsV1beta1TargetGroupBindingSpecServiceRef, default is Undefined, required
        service ref
    targetGroupARN : str, default is Undefined, required
        targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.
    targetType : str, default is Undefined, optional
        targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.
    """


    ipAddressType?: "ipv4" | "ipv6"

    networking?: Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworking

    nodeSelector?: Elbv2K8sAwsV1beta1TargetGroupBindingSpecNodeSelector

    serviceRef: Elbv2K8sAwsV1beta1TargetGroupBindingSpecServiceRef

    targetGroupARN: str

    targetType?: "instance" | "ip"


    check:
        len(targetGroupARN) >= 1


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworking:
    """
    networking defines the networking rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.

    Attributes
    ----------
    ingress : [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0], default is Undefined, optional
        List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.
    """


    ingress?: [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0]


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0:
    """
    NetworkingIngressRule defines a particular set of traffic that is allowed to access TargetGroup's targets.

    Attributes
    ----------
    from : [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0], default is Undefined, required
        List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.
    ports : [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0PortsItems0], default is Undefined, required
        List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.
    """


    from: [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0]

    ports: [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0PortsItems0]


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0:
    """
    NetworkingPeer defines the source/destination peer for networking rules.

    Attributes
    ----------
    ipBlock : Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0IPBlock, default is Undefined, optional
        ip block
    securityGroup : Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0SecurityGroup, default is Undefined, optional
        security group
    """


    ipBlock?: Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0IPBlock

    securityGroup?: Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0SecurityGroup


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0IPBlock:
    """
    IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.

    Attributes
    ----------
    cidr : str, default is Undefined, required
        CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.
    """


    cidr: str


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0FromItems0SecurityGroup:
    """
    SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.

    Attributes
    ----------
    groupID : str, default is Undefined, required
        GroupID is the EC2 SecurityGroupID.
    """


    groupID: str


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNetworkingIngressItems0PortsItems0:
    """
    NetworkingPort defines the port and protocol for networking rules.

    Attributes
    ----------
    port : int | str, default is Undefined, optional
        The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.
    $protocol : str, default is Undefined, optional
        The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.
    """


    port?: int | str

    $protocol?: "TCP" | "UDP"


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNodeSelector:
    """
    node selector for instance type target groups to only register certain nodes

    Attributes
    ----------
    matchExpressions : [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNodeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [Elbv2K8sAwsV1beta1TargetGroupBindingSpecNodeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecNodeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema Elbv2K8sAwsV1beta1TargetGroupBindingSpecServiceRef:
    """
    serviceRef is a reference to a Kubernetes Service and ServicePort.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the Service.
    port : int | str, default is Undefined, required
        Port is the port of the ServicePort.
    """


    name: str

    port: int | str


schema Elbv2K8sAwsV1beta1TargetGroupBindingStatus:
    """
    TargetGroupBindingStatus defines the observed state of TargetGroupBinding

    Attributes
    ----------
    observedGeneration : int, default is Undefined, optional
        The generation observed by the TargetGroupBinding controller.
    """


    observedGeneration?: int


