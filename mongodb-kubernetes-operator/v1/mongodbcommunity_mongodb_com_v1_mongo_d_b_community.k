"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema MongoDBCommunity:
    """
    MongoDBCommunity is the Schema for the mongodbs API

    Attributes
    ----------
    apiVersion : str, default is "mongodbcommunity.mongodb.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MongoDBCommunity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MongodbcommunityMongodbComV1MongoDBCommunitySpec, default is Undefined, optional
        spec
    status : MongodbcommunityMongodbComV1MongoDBCommunityStatus, default is Undefined, optional
        status
    """


    apiVersion: "mongodbcommunity.mongodb.com/v1" = "mongodbcommunity.mongodb.com/v1"

    kind: "MongoDBCommunity" = "MongoDBCommunity"

    metadata?: v1.ObjectMeta

    spec?: MongodbcommunityMongodbComV1MongoDBCommunitySpec

    status?: MongodbcommunityMongodbComV1MongoDBCommunityStatus


schema MongodbcommunityMongodbComV1MongoDBCommunitySpec:
    """
    MongoDBCommunitySpec defines the desired state of MongoDB

    Attributes
    ----------
    additionalMongodConfig : any, default is Undefined, optional
        AdditionalMongodConfig is additional configuration that can be passed to each data-bearing mongod at runtime. Uses the same structure as the mongod configuration file: https://www.mongodb.com/docs/manual/reference/configuration-options/
    agent : MongodbcommunityMongodbComV1MongoDBCommunitySpecAgent, default is Undefined, optional
        agent
    arbiters : int, default is Undefined, optional
        Arbiters is the number of arbiters to add to the Replica Set. It is not recommended to have more than one arbiter per Replica Set. More info: https://www.mongodb.com/docs/manual/tutorial/add-replica-set-arbiter/
    automationConfig : MongodbcommunityMongodbComV1MongoDBCommunitySpecAutomationConfig, default is Undefined, optional
        automation config
    featureCompatibilityVersion : str, default is Undefined, optional
        FeatureCompatibilityVersion configures the feature compatibility version that will be set for the deployment
    members : int, default is Undefined, optional
        Members is the number of members in the replica set
    prometheus : MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheus, default is Undefined, optional
        prometheus
    replicaSetHorizons : [{str:str}], default is Undefined, optional
        ReplicaSetHorizons Add this parameter and values if you need your database to be accessed outside of Kubernetes. This setting allows you to provide different DNS settings within the Kubernetes cluster and to the Kubernetes cluster. The Kubernetes Operator uses split horizon DNS for replica set members. This feature allows communication both within the Kubernetes cluster and from outside Kubernetes.
    security : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurity, default is Undefined, required
        security
    statefulSet : MongodbcommunityMongodbComV1MongoDBCommunitySpecStatefulSet, default is Undefined, optional
        stateful set
    $type : str, default is Undefined, required
        Type defines which type of MongoDB deployment the resource should create
    users : [MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0], default is Undefined, required
        Users specifies the MongoDB users that should be configured in your deployment
    version : str, default is Undefined, optional
        Version defines which version of MongoDB will be used
    """


    additionalMongodConfig?: any

    agent?: MongodbcommunityMongodbComV1MongoDBCommunitySpecAgent

    arbiters?: int

    automationConfig?: MongodbcommunityMongodbComV1MongoDBCommunitySpecAutomationConfig

    featureCompatibilityVersion?: str

    members?: int

    prometheus?: MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheus

    replicaSetHorizons?: [{str:str}]

    security: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurity

    statefulSet?: MongodbcommunityMongodbComV1MongoDBCommunitySpecStatefulSet

    $type: "ReplicaSet"

    users: [MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0]

    version?: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecAgent:
    """
    AgentConfiguration sets options for the MongoDB automation agent

    Attributes
    ----------
    logLevel : str, default is Undefined, optional
        log level
    maxLogFileDurationHours : int, default is Undefined, optional
        max log file duration hours
    """


    logLevel?: str

    maxLogFileDurationHours?: int


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecAutomationConfig:
    """
    AutomationConfigOverride is merged on top of the operator created automation config. Processes are merged by name. Currently Only the process.disabled field is supported.

    Attributes
    ----------
    processes : [MongodbcommunityMongodbComV1MongoDBCommunitySpecAutomationConfigProcessesItems0], default is Undefined, required
        processes
    """


    processes: [MongodbcommunityMongodbComV1MongoDBCommunitySpecAutomationConfigProcessesItems0]


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecAutomationConfigProcessesItems0:
    """
    OverrideProcess contains fields that we can override on the AutomationConfig processes.

    Attributes
    ----------
    disabled : bool, default is Undefined, required
        disabled
    name : str, default is Undefined, required
        name
    """


    disabled: bool

    name: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheus:
    """
    Prometheus configurations.

    Attributes
    ----------
    metricsPath : str, default is Undefined, optional
        Indicates path to the metrics endpoint.
    passwordSecretRef : MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheusPasswordSecretRef, default is Undefined, required
        password secret ref
    port : int, default is Undefined, optional
        Port where metrics endpoint will bind to. Defaults to 9216.
    tlsSecretKeyRef : MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheusTLSSecretKeyRef, default is Undefined, optional
        tls secret key ref
    username : str, default is Undefined, required
        HTTP Basic Auth Username for metrics endpoint.
    """


    metricsPath?: str

    passwordSecretRef: MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheusPasswordSecretRef

    port?: int

    tlsSecretKeyRef?: MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheusTLSSecretKeyRef

    username: str


    check:
        regex.match(str(metricsPath), r"^\/[a-z0-9]+$") if metricsPath


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheusPasswordSecretRef:
    """
    Name of a Secret containing a HTTP Basic Auth Password.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key is the key in the secret storing this password. Defaults to "password"
    name : str, default is Undefined, required
        Name is the name of the secret storing this user's password
    """


    key?: str

    name: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecPrometheusTLSSecretKeyRef:
    """
    Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the Prometheus endpoint.

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key is the key in the secret storing this password. Defaults to "password"
    name : str, default is Undefined, required
        Name is the name of the secret storing this user's password
    """


    key?: str

    name: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurity:
    """
    Security configures security features, such as TLS, and authentication settings for a deployment

    Attributes
    ----------
    authentication : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityAuthentication, default is Undefined, optional
        authentication
    roles : [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0], default is Undefined, optional
        User-specified custom MongoDB roles that should be configured in the deployment.
    tls : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLS, default is Undefined, optional
        tls
    """


    authentication?: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityAuthentication

    roles?: [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0]

    tls?: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLS


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityAuthentication:
    """
    mongodbcommunity mongodb com v1 mongo d b community spec security authentication

    Attributes
    ----------
    ignoreUnknownUsers : bool, default is True, optional
        ignore unknown users
    modes : [str], default is Undefined, required
        Modes is an array specifying which authentication methods should be enabled.
    """


    ignoreUnknownUsers?: bool = True

    modes: [str]


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0:
    """
    CustomRole defines a custom MongoDB role.

    Attributes
    ----------
    authenticationRestrictions : [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0AuthenticationRestrictionsItems0], default is Undefined, optional
        The authentication restrictions the server enforces on the role.
    db : str, default is Undefined, required
        The database of the role.
    privileges : [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0PrivilegesItems0], default is Undefined, required
        The privileges to grant the role.
    role : str, default is Undefined, required
        The name of the role.
    roles : [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0RolesItems0], default is Undefined, optional
        An array of roles from which this role inherits privileges.
    """


    authenticationRestrictions?: [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0AuthenticationRestrictionsItems0]

    db: str

    privileges: [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0PrivilegesItems0]

    role: str

    roles?: [MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0RolesItems0]


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0AuthenticationRestrictionsItems0:
    """
    AuthenticationRestriction specifies a list of IP addresses and CIDR ranges users are allowed to connect to or from.

    Attributes
    ----------
    clientSource : [str], default is Undefined, required
        client source
    serverAddress : [str], default is Undefined, required
        server address
    """


    clientSource: [str]

    serverAddress: [str]


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0PrivilegesItems0:
    """
    Privilege defines the actions a role is allowed to perform on a given resource.

    Attributes
    ----------
    actions : [str], default is Undefined, required
        actions
    resource : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0PrivilegesItems0Resource, default is Undefined, required
        resource
    """


    actions: [str]

    resource: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0PrivilegesItems0Resource


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0PrivilegesItems0Resource:
    """
    Resource specifies specifies the resources upon which a privilege permits actions. See https://www.mongodb.com/docs/manual/reference/resource-document for more.

    Attributes
    ----------
    anyResource : bool, default is Undefined, optional
        any resource
    cluster : bool, default is Undefined, optional
        cluster
    collection : str, default is Undefined, optional
        collection
    db : str, default is Undefined, optional
        db
    """


    anyResource?: bool

    cluster?: bool

    collection?: str

    db?: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityRolesItems0RolesItems0:
    """
    Role is the database role this user should have

    Attributes
    ----------
    db : str, default is Undefined, required
        DB is the database the role can act on
    name : str, default is Undefined, required
        Name is the name of the role
    """


    db: str

    name: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLS:
    """
    TLS configuration for both client-server and server-server communication

    Attributes
    ----------
    caCertificateSecretRef : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCaCertificateSecretRef, default is Undefined, optional
        ca certificate secret ref
    caConfigMapRef : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCaConfigMapRef, default is Undefined, optional
        ca config map ref
    certificateKeySecretRef : MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCertificateKeySecretRef, default is Undefined, optional
        certificate key secret ref
    enabled : bool, default is Undefined, required
        enabled
    optional : bool, default is Undefined, optional
        Optional configures if TLS should be required or optional for connections
    """


    caCertificateSecretRef?: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCaCertificateSecretRef

    caConfigMapRef?: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCaConfigMapRef

    certificateKeySecretRef?: MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCertificateKeySecretRef

    enabled: bool

    optional?: bool


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCaCertificateSecretRef:
    """
    CaCertificateSecret is a reference to a Secret containing the certificate for the CA which signed the server certificates The certificate is expected to be available under the key "ca.crt"

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCaConfigMapRef:
    """
    CaConfigMap is a reference to a ConfigMap containing the certificate for the CA which signed the server certificates The certificate is expected to be available under the key "ca.crt" This field is ignored when CaCertificateSecretRef is configured

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecSecurityTLSCertificateKeySecretRef:
    """
    CertificateKeySecret is a reference to a Secret containing a private key and certificate to use for TLS. The key and cert are expected to be PEM encoded and available at "tls.key" and "tls.crt". This is the same format used for the standard "kubernetes.io/tls" Secret type, but no specific type is required. Alternatively, an entry tls.pem, containing the concatenation of cert and key, can be provided. If all of tls.pem, tls.crt and tls.key are present, the tls.pem one needs to be equal to the concatenation of tls.crt and tls.key

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecStatefulSet:
    """
    StatefulSetConfiguration holds the optional custom StatefulSet that should be merged into the operator created one.

    Attributes
    ----------
    spec : any, default is Undefined, required
        spec
    """


    spec: any


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0:
    """
    mongodbcommunity mongodb com v1 mongo d b community spec users items0

    Attributes
    ----------
    connectionStringSecretName : str, default is Undefined, optional
        ConnectionStringSecretName is the name of the secret object created by the operator which exposes the connection strings for the user. If provided, this secret must be different for each user in a deployment.
    db : str, default is "admin", optional
        DB is the database the user is stored in. Defaults to "admin"
    name : str, default is Undefined, required
        Name is the username of the user
    passwordSecretRef : MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    roles : [MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0RolesItems0], default is Undefined, required
        Roles is an array of roles assigned to this user
    scramCredentialsSecretName : str, default is Undefined, required
        ScramCredentialsSecretName appended by string "scram-credentials" is the name of the secret object created by the mongoDB operator for storing SCRAM credentials These secrets names must be different for each user in a deployment.
    """


    connectionStringSecretName?: str

    db?: str = "admin"

    name: str

    passwordSecretRef: MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0PasswordSecretRef

    roles: [MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0RolesItems0]

    scramCredentialsSecretName: str


    check:
        regex.match(str(scramCredentialsSecretName), r"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$")


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0PasswordSecretRef:
    """
    PasswordSecretRef is a reference to the secret containing this user's password

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key is the key in the secret storing this password. Defaults to "password"
    name : str, default is Undefined, required
        Name is the name of the secret storing this user's password
    """


    key?: str

    name: str


schema MongodbcommunityMongodbComV1MongoDBCommunitySpecUsersItems0RolesItems0:
    """
    Role is the database role this user should have

    Attributes
    ----------
    db : str, default is Undefined, required
        DB is the database the role can act on
    name : str, default is Undefined, required
        Name is the name of the role
    """


    db: str

    name: str


schema MongodbcommunityMongodbComV1MongoDBCommunityStatus:
    """
    MongoDBCommunityStatus defines the observed state of MongoDB

    Attributes
    ----------
    currentMongoDBArbiters : int, default is Undefined, optional
        current mongo d b arbiters
    currentMongoDBMembers : int, default is Undefined, required
        current mongo d b members
    currentStatefulSetArbitersReplicas : int, default is Undefined, optional
        current stateful set arbiters replicas
    currentStatefulSetReplicas : int, default is Undefined, required
        current stateful set replicas
    message : str, default is Undefined, optional
        message
    mongoUri : str, default is Undefined, required
        mongo Uri
    phase : str, default is Undefined, required
        phase
    version : str, default is Undefined, optional
        version
    """


    currentMongoDBArbiters?: int

    currentMongoDBMembers: int

    currentStatefulSetArbitersReplicas?: int

    currentStatefulSetReplicas: int

    message?: str

    mongoUri: str

    phase: str

    version?: str


