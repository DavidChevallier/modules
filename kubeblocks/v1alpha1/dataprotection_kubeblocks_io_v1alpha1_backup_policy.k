"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema BackupPolicy:
    """
    BackupPolicy is the Schema for the backuppolicies API (defined by User)

    Attributes
    ----------
    apiVersion : str, default is "dataprotection.kubeblocks.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BackupPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DataprotectionKubeblocksIoV1alpha1BackupPolicySpec, default is Undefined, optional
        spec
    status : DataprotectionKubeblocksIoV1alpha1BackupPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "dataprotection.kubeblocks.io/v1alpha1" = "dataprotection.kubeblocks.io/v1alpha1"

    kind: "BackupPolicy" = "BackupPolicy"

    metadata?: v1.ObjectMeta

    spec?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpec

    status?: DataprotectionKubeblocksIoV1alpha1BackupPolicyStatus


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpec:
    """
    BackupPolicySpec defines the desired state of BackupPolicy

    Attributes
    ----------
    datafile : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafile, default is Undefined, optional
        datafile
    logfile : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfile, default is Undefined, optional
        logfile
    retention : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecRetention, default is Undefined, optional
        retention
    schedule : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSchedule, default is Undefined, optional
        schedule
    snapshot : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshot, default is Undefined, optional
        snapshot
    """


    datafile?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafile

    logfile?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfile

    retention?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecRetention

    schedule?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSchedule

    snapshot?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshot


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafile:
    """
    the policy for datafile backup.

    Attributes
    ----------
    backupRepoName : str, default is Undefined, optional
        refer to BackupRepo and the backup data will be stored in the corresponding repo.
    backupStatusUpdates : [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileBackupStatusUpdatesItems0], default is Undefined, optional
        define how to update metadata for backup status.
    backupToolName : str, default is Undefined, optional
        which backup tool to perform database backup, only support one tool.
    backupsHistoryLimit : int, default is 7, optional
        the number of automatic backups to retain. Value must be non-negative integer. 0 means NO limit on the number of backups.
    onFailAttempted : int, default is Undefined, optional
        count of backup stop retries on fail.
    persistentVolumeClaim : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafilePersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    target : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTarget, default is Undefined, required
        target
    """


    backupRepoName?: str

    backupStatusUpdates?: [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileBackupStatusUpdatesItems0]

    backupToolName?: str

    backupsHistoryLimit?: int = 7

    onFailAttempted?: int

    persistentVolumeClaim?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafilePersistentVolumeClaim

    target: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTarget


    check:
        regex.match(backupRepoName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if backupRepoName
        regex.match(backupToolName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if backupToolName


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileBackupStatusUpdatesItems0:
    """
    dataprotection kubeblocks io v1alpha1 backup policy spec datafile backup status updates items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container name that kubectl can execute.
    path : str, default is Undefined, optional
        specify the json path of backup object for patch. example: manifests.backupLog -- means patch the backup json path of status.manifests.backupLog.
    script : str, default is Undefined, optional
        the shell Script commands to collect backup status metadata. The script must exist in the container of ContainerName and the output format must be set to JSON. Note that outputting to stderr may cause the result format to not be in JSON.
    updateStage : str, default is Undefined, required
        when to update the backup status, pre: before backup, post: after backup
    useTargetPodServiceAccount : bool, default is Undefined, optional
        useTargetPodServiceAccount defines whether this job requires the service account of the backup target pod. if true, will use the service account of the backup target pod. otherwise, will use the system service account.
    """


    containerName?: str

    path?: str

    script?: str

    updateStage: "pre" | "post"

    useTargetPodServiceAccount?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafilePersistentVolumeClaim:
    """
    refer to PersistentVolumeClaim and the backup data will be stored in the corresponding persistent volume.

    Attributes
    ----------
    createPolicy : str, default is "IfNotPresent", optional
        createPolicy defines the policy for creating the PersistentVolumeClaim, enum values: - Never: do nothing if the PersistentVolumeClaim not exists. - IfNotPresent: create the PersistentVolumeClaim if not present and the accessModes only contains 'ReadWriteMany'.
    initCapacity : int | str, default is Undefined, optional
        initCapacity represents the init storage size of the PersistentVolumeClaim which should be created if not exist. and the default value is 100Gi if it is empty.
    name : str, default is Undefined, optional
        the name of PersistentVolumeClaim to store backup data.
    persistentVolumeConfigMap : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafilePersistentVolumeClaimPersistentVolumeConfigMap, default is Undefined, optional
        persistent volume config map
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim.
    """


    createPolicy?: "IfNotPresent" | "Never" = "IfNotPresent"

    initCapacity?: int | str

    name?: str

    persistentVolumeConfigMap?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafilePersistentVolumeClaimPersistentVolumeConfigMap

    storageClassName?: str


    check:
        regex.match(str(initCapacity), r"(^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initCapacity
        regex.match(storageClassName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if storageClassName


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafilePersistentVolumeClaimPersistentVolumeConfigMap:
    """
    persistentVolumeConfigMap references the configmap which contains a persistentVolume template. key must be "persistentVolume" and value is the "PersistentVolume" struct. support the following built-in Objects: - $(GENERATE_NAME): generate a specific format "`PVC NAME`-`PVC NAMESPACE`". if the PersistentVolumeClaim not exists and CreatePolicy is "IfNotPresent", the controller will create it by this template. this is a mutually exclusive setting with "storageClassName".

    Attributes
    ----------
    name : str, default is Undefined, required
        the name of the persistentVolume ConfigMap.
    namespace : str, default is Undefined, required
        the namespace of the persistentVolume ConfigMap.
    """


    name: str

    namespace: str


    check:
        regex.match(name, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")
        regex.match(namespace, r"(^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$")


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTarget:
    """
    target database cluster for backup.

    Attributes
    ----------
    labelsSelector : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetLabelsSelector, default is Undefined, required
        labels selector
    secret : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetSecret, default is Undefined, optional
        secret
    """


    labelsSelector: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetLabelsSelector

    secret?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetSecret


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetLabelsSelector:
    """
    labelsSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetLabelsSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetLabelsSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetLabelsSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecDatafileTargetSecret:
    """
    secret is used to connect to the target database cluster. If not set, secret will be inherited from backup policy template. if still not set, the controller will check if any system account for dataprotection has been created.

    Attributes
    ----------
    name : str, default is Undefined, required
        the secret name
    passwordKey : str, default is "password", optional
        passwordKey the map key of the password in the connection credential secret
    usernameKey : str, default is "username", optional
        usernameKey the map key of the user in the connection credential secret
    """


    name: str

    passwordKey?: str = "password"

    usernameKey?: str = "username"


    check:
        regex.match(name, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfile:
    """
    the policy for logfile backup.

    Attributes
    ----------
    backupRepoName : str, default is Undefined, optional
        refer to BackupRepo and the backup data will be stored in the corresponding repo.
    backupStatusUpdates : [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileBackupStatusUpdatesItems0], default is Undefined, optional
        define how to update metadata for backup status.
    backupToolName : str, default is Undefined, optional
        which backup tool to perform database backup, only support one tool.
    backupsHistoryLimit : int, default is 7, optional
        the number of automatic backups to retain. Value must be non-negative integer. 0 means NO limit on the number of backups.
    onFailAttempted : int, default is Undefined, optional
        count of backup stop retries on fail.
    persistentVolumeClaim : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfilePersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    target : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTarget, default is Undefined, required
        target
    """


    backupRepoName?: str

    backupStatusUpdates?: [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileBackupStatusUpdatesItems0]

    backupToolName?: str

    backupsHistoryLimit?: int = 7

    onFailAttempted?: int

    persistentVolumeClaim?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfilePersistentVolumeClaim

    target: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTarget


    check:
        regex.match(backupRepoName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if backupRepoName
        regex.match(backupToolName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if backupToolName


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileBackupStatusUpdatesItems0:
    """
    dataprotection kubeblocks io v1alpha1 backup policy spec logfile backup status updates items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container name that kubectl can execute.
    path : str, default is Undefined, optional
        specify the json path of backup object for patch. example: manifests.backupLog -- means patch the backup json path of status.manifests.backupLog.
    script : str, default is Undefined, optional
        the shell Script commands to collect backup status metadata. The script must exist in the container of ContainerName and the output format must be set to JSON. Note that outputting to stderr may cause the result format to not be in JSON.
    updateStage : str, default is Undefined, required
        when to update the backup status, pre: before backup, post: after backup
    useTargetPodServiceAccount : bool, default is Undefined, optional
        useTargetPodServiceAccount defines whether this job requires the service account of the backup target pod. if true, will use the service account of the backup target pod. otherwise, will use the system service account.
    """


    containerName?: str

    path?: str

    script?: str

    updateStage: "pre" | "post"

    useTargetPodServiceAccount?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfilePersistentVolumeClaim:
    """
    refer to PersistentVolumeClaim and the backup data will be stored in the corresponding persistent volume.

    Attributes
    ----------
    createPolicy : str, default is "IfNotPresent", optional
        createPolicy defines the policy for creating the PersistentVolumeClaim, enum values: - Never: do nothing if the PersistentVolumeClaim not exists. - IfNotPresent: create the PersistentVolumeClaim if not present and the accessModes only contains 'ReadWriteMany'.
    initCapacity : int | str, default is Undefined, optional
        initCapacity represents the init storage size of the PersistentVolumeClaim which should be created if not exist. and the default value is 100Gi if it is empty.
    name : str, default is Undefined, optional
        the name of PersistentVolumeClaim to store backup data.
    persistentVolumeConfigMap : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfilePersistentVolumeClaimPersistentVolumeConfigMap, default is Undefined, optional
        persistent volume config map
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim.
    """


    createPolicy?: "IfNotPresent" | "Never" = "IfNotPresent"

    initCapacity?: int | str

    name?: str

    persistentVolumeConfigMap?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfilePersistentVolumeClaimPersistentVolumeConfigMap

    storageClassName?: str


    check:
        regex.match(str(initCapacity), r"(^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if initCapacity
        regex.match(storageClassName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if storageClassName


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfilePersistentVolumeClaimPersistentVolumeConfigMap:
    """
    persistentVolumeConfigMap references the configmap which contains a persistentVolume template. key must be "persistentVolume" and value is the "PersistentVolume" struct. support the following built-in Objects: - $(GENERATE_NAME): generate a specific format "`PVC NAME`-`PVC NAMESPACE`". if the PersistentVolumeClaim not exists and CreatePolicy is "IfNotPresent", the controller will create it by this template. this is a mutually exclusive setting with "storageClassName".

    Attributes
    ----------
    name : str, default is Undefined, required
        the name of the persistentVolume ConfigMap.
    namespace : str, default is Undefined, required
        the namespace of the persistentVolume ConfigMap.
    """


    name: str

    namespace: str


    check:
        regex.match(name, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")
        regex.match(namespace, r"(^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$")


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTarget:
    """
    target database cluster for backup.

    Attributes
    ----------
    labelsSelector : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetLabelsSelector, default is Undefined, required
        labels selector
    secret : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetSecret, default is Undefined, optional
        secret
    """


    labelsSelector: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetLabelsSelector

    secret?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetSecret


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetLabelsSelector:
    """
    labelsSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetLabelsSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetLabelsSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetLabelsSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecLogfileTargetSecret:
    """
    secret is used to connect to the target database cluster. If not set, secret will be inherited from backup policy template. if still not set, the controller will check if any system account for dataprotection has been created.

    Attributes
    ----------
    name : str, default is Undefined, required
        the secret name
    passwordKey : str, default is "password", optional
        passwordKey the map key of the password in the connection credential secret
    usernameKey : str, default is "username", optional
        usernameKey the map key of the user in the connection credential secret
    """


    name: str

    passwordKey?: str = "password"

    usernameKey?: str = "username"


    check:
        regex.match(name, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecRetention:
    """
    retention describe how long the Backup should be retained. if not set, will be retained forever.

    Attributes
    ----------
    ttl : str, default is Undefined, optional
        ttl is a time string ending with the 'd'|'D'|'h'|'H' character to describe how long the Backup should be retained. if not set, will be retained forever.
    """


    ttl?: str


    check:
        regex.match(ttl, r"(^\d+[d|D|h|H]$") if ttl


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSchedule:
    """
    schedule policy for backup.

    Attributes
    ----------
    datafile : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleDatafile, default is Undefined, optional
        datafile
    logfile : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleLogfile, default is Undefined, optional
        logfile
    snapshot : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleSnapshot, default is Undefined, optional
        snapshot
    startingDeadlineMinutes : int, default is Undefined, optional
        startingDeadlineMinutes defines the deadline in minutes for starting the backup job if it misses scheduled time for any reason.
    """


    datafile?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleDatafile

    logfile?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleLogfile

    snapshot?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleSnapshot

    startingDeadlineMinutes?: int


    check:
        startingDeadlineMinutes <= 1440
        startingDeadlineMinutes >= 0


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleDatafile:
    """
    schedule policy for datafile backup.

    Attributes
    ----------
    cronExpression : str, default is Undefined, required
        the cron expression for schedule, the timezone is in UTC. see https://en.wikipedia.org/wiki/Cron.
    enable : bool, default is Undefined, required
        enable or disable the schedule.
    """


    cronExpression: str

    enable: bool


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleLogfile:
    """
    schedule policy for logfile backup.

    Attributes
    ----------
    cronExpression : str, default is Undefined, required
        the cron expression for schedule, the timezone is in UTC. see https://en.wikipedia.org/wiki/Cron.
    enable : bool, default is Undefined, required
        enable or disable the schedule.
    """


    cronExpression: str

    enable: bool


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecScheduleSnapshot:
    """
    schedule policy for snapshot backup.

    Attributes
    ----------
    cronExpression : str, default is Undefined, required
        the cron expression for schedule, the timezone is in UTC. see https://en.wikipedia.org/wiki/Cron.
    enable : bool, default is Undefined, required
        enable or disable the schedule.
    """


    cronExpression: str

    enable: bool


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshot:
    """
    the policy for snapshot backup.

    Attributes
    ----------
    backupStatusUpdates : [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotBackupStatusUpdatesItems0], default is Undefined, optional
        define how to update metadata for backup status.
    backupsHistoryLimit : int, default is 7, optional
        the number of automatic backups to retain. Value must be non-negative integer. 0 means NO limit on the number of backups.
    hooks : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotHooks, default is Undefined, optional
        hooks
    onFailAttempted : int, default is Undefined, optional
        count of backup stop retries on fail.
    target : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTarget, default is Undefined, required
        target
    """


    backupStatusUpdates?: [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotBackupStatusUpdatesItems0]

    backupsHistoryLimit?: int = 7

    hooks?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotHooks

    onFailAttempted?: int

    target: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTarget


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotBackupStatusUpdatesItems0:
    """
    dataprotection kubeblocks io v1alpha1 backup policy spec snapshot backup status updates items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container name that kubectl can execute.
    path : str, default is Undefined, optional
        specify the json path of backup object for patch. example: manifests.backupLog -- means patch the backup json path of status.manifests.backupLog.
    script : str, default is Undefined, optional
        the shell Script commands to collect backup status metadata. The script must exist in the container of ContainerName and the output format must be set to JSON. Note that outputting to stderr may cause the result format to not be in JSON.
    updateStage : str, default is Undefined, required
        when to update the backup status, pre: before backup, post: after backup
    useTargetPodServiceAccount : bool, default is Undefined, optional
        useTargetPodServiceAccount defines whether this job requires the service account of the backup target pod. if true, will use the service account of the backup target pod. otherwise, will use the system service account.
    """


    containerName?: str

    path?: str

    script?: str

    updateStage: "pre" | "post"

    useTargetPodServiceAccount?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotHooks:
    """
    execute hook commands for backup.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container can exec command
    image : str, default is Undefined, optional
        exec command with image
    postCommands : [str], default is Undefined, optional
        post backup to perform commands
    preCommands : [str], default is Undefined, optional
        pre backup to perform commands
    """


    containerName?: str

    image?: str

    postCommands?: [str]

    preCommands?: [str]


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTarget:
    """
    target database cluster for backup.

    Attributes
    ----------
    labelsSelector : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetLabelsSelector, default is Undefined, required
        labels selector
    secret : DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetSecret, default is Undefined, optional
        secret
    """


    labelsSelector: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetLabelsSelector

    secret?: DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetSecret


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetLabelsSelector:
    """
    labelsSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetLabelsSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetLabelsSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetLabelsSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema DataprotectionKubeblocksIoV1alpha1BackupPolicySpecSnapshotTargetSecret:
    """
    secret is used to connect to the target database cluster. If not set, secret will be inherited from backup policy template. if still not set, the controller will check if any system account for dataprotection has been created.

    Attributes
    ----------
    name : str, default is Undefined, required
        the secret name
    passwordKey : str, default is "password", optional
        passwordKey the map key of the password in the connection credential secret
    usernameKey : str, default is "username", optional
        usernameKey the map key of the user in the connection credential secret
    """


    name: str

    passwordKey?: str = "password"

    usernameKey?: str = "username"


    check:
        regex.match(name, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")


schema DataprotectionKubeblocksIoV1alpha1BackupPolicyStatus:
    """
    BackupPolicyStatus defines the observed state of BackupPolicy

    Attributes
    ----------
    failureReason : str, default is Undefined, optional
        the reason if backup policy check failed.
    lastScheduleTime : str, default is Undefined, optional
        information when was the last time the job was successfully scheduled.
    lastSuccessfulTime : str, default is Undefined, optional
        information when was the last time the job successfully completed.
    observedGeneration : int, default is Undefined, optional
        observedGeneration is the most recent generation observed for this BackupPolicy. It corresponds to the Cluster's generation, which is updated on mutation by the API Server.
    phase : str, default is Undefined, optional
        backup policy phase valid value: Available, Failed.
    """


    failureReason?: str

    lastScheduleTime?: str

    lastSuccessfulTime?: str

    observedGeneration?: int

    phase?: "Available" | "Failed"


