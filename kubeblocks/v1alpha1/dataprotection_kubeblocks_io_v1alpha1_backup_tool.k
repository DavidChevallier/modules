"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema BackupTool:
    """
    BackupTool is the Schema for the backuptools API (defined by provider)

    Attributes
    ----------
    apiVersion : str, default is "dataprotection.kubeblocks.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BackupTool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DataprotectionKubeblocksIoV1alpha1BackupToolSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        BackupToolStatus defines the observed state of BackupTool
    """


    apiVersion: "dataprotection.kubeblocks.io/v1alpha1" = "dataprotection.kubeblocks.io/v1alpha1"

    kind: "BackupTool" = "BackupTool"

    metadata?: v1.ObjectMeta

    spec?: DataprotectionKubeblocksIoV1alpha1BackupToolSpec

    status?: any


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpec:
    """
    BackupToolSpec defines the desired state of BackupTool

    Attributes
    ----------
    backupCommands : [str], default is Undefined, required
        Array of command that apps can do database backup. from invoke args the order of commands follows the order of array.
    deployKind : str, default is "job", optional
        which kind for run a backup tool, supported values: job, statefulSet.
    env : [DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0], default is Undefined, optional
        List of environment variables to set in the container.
    envFrom : [DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, required
        Backup tool Container image name.
    incrementalBackupCommands : [str], default is Undefined, optional
        Array of command that apps can do database incremental backup. like xtrabackup, that can performs an incremental backup file.
    logical : DataprotectionKubeblocksIoV1alpha1BackupToolSpecLogical, default is Undefined, optional
        logical
    physical : DataprotectionKubeblocksIoV1alpha1BackupToolSpecPhysical, default is Undefined, required
        physical
    resources : DataprotectionKubeblocksIoV1alpha1BackupToolSpecResources, default is Undefined, optional
        resources
    $type : str, default is "file", optional
        the type of backup tool, file or pitr
    """


    backupCommands: [str]

    deployKind?: "job" | "statefulSet" = "job"

    env?: [DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0]

    envFrom?: [DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0]

    image: str

    incrementalBackupCommands?: [str]

    logical?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecLogical

    physical: DataprotectionKubeblocksIoV1alpha1BackupToolSpecPhysical

    resources?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecResources

    $type?: "file" | "pitr" = "file"


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0SecretRef


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFrom


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromFieldRef

    resourceFieldRef?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromSecretKeyRef


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"(^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecLogical:
    """
    backup tool can support logical restore, in this case, restore NOT RESTART database.

    Attributes
    ----------
    incrementalRestoreCommands : [str], default is Undefined, optional
        Array of incremental restore commands.
    podScope : str, default is "All", optional
        podScope defines the pod scope for restore from backup, supported values: - 'All' will exec the restore command on all pods. - 'ReadWrite' will pick a ReadWrite pod to exec the restore command.
    restoreCommands : [str], default is Undefined, optional
        Array of command that apps can perform database restore. like xtrabackup, that can performs restore mysql from files.
    """


    incrementalRestoreCommands?: [str]

    podScope?: "All" | "ReadWrite" = "All"

    restoreCommands?: [str]


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecPhysical:
    """
    backup tool can support physical restore, in this case, restore must be RESTART database.

    Attributes
    ----------
    incrementalRestoreCommands : [str], default is Undefined, optional
        Array of incremental restore commands.
    restoreCommands : [str], default is Undefined, optional
        Array of command that apps can perform database restore. like xtrabackup, that can performs restore mysql from files.
    """


    incrementalRestoreCommands?: [str]

    restoreCommands?: [str]


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecResources:
    """
    Compute Resources required by this container. Cannot be updated.

    Attributes
    ----------
    claims : [DataprotectionKubeblocksIoV1alpha1BackupToolSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [DataprotectionKubeblocksIoV1alpha1BackupToolSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


schema DataprotectionKubeblocksIoV1alpha1BackupToolSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


