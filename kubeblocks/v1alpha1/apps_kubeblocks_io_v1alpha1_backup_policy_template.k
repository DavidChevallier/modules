"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema BackupPolicyTemplate:
    """
    BackupPolicyTemplate is the Schema for the BackupPolicyTemplates API (defined by provider)

    Attributes
    ----------
    apiVersion : str, default is "apps.kubeblocks.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BackupPolicyTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        BackupPolicyTemplateStatus defines the observed state of BackupPolicyTemplate
    """


    apiVersion: "apps.kubeblocks.io/v1alpha1" = "apps.kubeblocks.io/v1alpha1"

    kind: "BackupPolicyTemplate" = "BackupPolicyTemplate"

    metadata?: v1.ObjectMeta

    spec?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpec

    status?: any


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpec:
    """
    BackupPolicyTemplateSpec defines the desired state of BackupPolicyTemplate

    Attributes
    ----------
    backupPolicies : [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0], default is Undefined, required
        backupPolicies is a list of backup policy template for the specified componentDefinition.
    clusterDefinitionRef : str, default is Undefined, required
        clusterDefinitionRef references ClusterDefinition name, this is an immutable attribute.
    identifier : str, default is Undefined, optional
        Identifier is a unique identifier for this BackupPolicyTemplate. this identifier will be the suffix of the automatically generated backupPolicy name. and must be added when multiple BackupPolicyTemplates exist, otherwise the generated backupPolicy override will occur.
    """


    backupPolicies: [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0]

    clusterDefinitionRef: str

    identifier?: str


    check:
        len(backupPolicies) >= 1
        regex.match(clusterDefinitionRef, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")
        len(identifier) <= 20


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0:
    """
    apps kubeblocks io v1alpha1 backup policy template spec backup policies items0

    Attributes
    ----------
    componentDefRef : str, default is Undefined, required
        componentDefRef references componentDef defined in ClusterDefinition spec. Need to comply with IANA Service Naming rule.
    datafile : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Datafile, default is Undefined, optional
        datafile
    logfile : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Logfile, default is Undefined, optional
        logfile
    retention : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Retention, default is Undefined, optional
        retention
    schedule : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Schedule, default is Undefined, optional
        schedule
    snapshot : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Snapshot, default is Undefined, optional
        snapshot
    """


    componentDefRef: str

    datafile?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Datafile

    logfile?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Logfile

    retention?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Retention

    schedule?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Schedule

    snapshot?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Snapshot


    check:
        len(componentDefRef) <= 22
        regex.match(componentDefRef, r"(^[a-z]([a-z0-9\-]*[a-z0-9])?$")


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Datafile:
    """
    the policy for datafile backup.

    Attributes
    ----------
    backupStatusUpdates : [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileBackupStatusUpdatesItems0], default is Undefined, optional
        define how to update metadata for backup status.
    backupToolName : str, default is Undefined, optional
        which backup tool to perform database backup, only support one tool.
    backupsHistoryLimit : int, default is 7, optional
        the number of automatic backups to retain. Value must be non-negative integer. 0 means NO limit on the number of backups.
    onFailAttempted : int, default is Undefined, optional
        count of backup stop retries on fail.
    target : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileTarget, default is Undefined, optional
        target
    """


    backupStatusUpdates?: [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileBackupStatusUpdatesItems0]

    backupToolName?: str

    backupsHistoryLimit?: int = 7

    onFailAttempted?: int

    target?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileTarget


    check:
        regex.match(backupToolName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if backupToolName


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileBackupStatusUpdatesItems0:
    """
    apps kubeblocks io v1alpha1 backup policy template spec backup policies items0 datafile backup status updates items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container name that kubectl can execute.
    path : str, default is Undefined, optional
        specify the json path of backup object for patch. example: manifests.backupLog -- means patch the backup json path of status.manifests.backupLog.
    script : str, default is Undefined, optional
        the shell Script commands to collect backup status metadata. The script must exist in the container of ContainerName and the output format must be set to JSON. Note that outputting to stderr may cause the result format to not be in JSON.
    updateStage : str, default is Undefined, required
        when to update the backup status, pre: before backup, post: after backup
    useTargetPodServiceAccount : bool, default is Undefined, optional
        useTargetPodServiceAccount defines whether this job requires the service account of the backup target pod. if true, will use the service account of the backup target pod. otherwise, will use the system service account.
    """


    containerName?: str

    path?: str

    script?: str

    updateStage: "pre" | "post"

    useTargetPodServiceAccount?: bool


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileTarget:
    """
    target instance for backup.

    Attributes
    ----------
    account : str, default is Undefined, optional
        refer to spec.componentDef.systemAccounts.accounts[*].name in ClusterDefinition. the secret created by this account will be used to connect the database. if not set, the secret created by spec.ConnectionCredential of the ClusterDefinition will be used. it will be transformed to a secret for BackupPolicy's target secret.
    connectionCredentialKey : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileTargetConnectionCredentialKey, default is Undefined, optional
        connection credential key
    role : str, default is Undefined, optional
        select instance of corresponding role for backup, role are: - the name of Leader/Follower/Leaner for Consensus component. - primary or secondary for Replication component. finally, invalid role of the component will be ignored. such as if workload type is Replication and component's replicas is 1, the secondary role is invalid. and it also will be ignored when component is Stateful/Stateless. the role will be transformed to a role LabelSelector for BackupPolicy's target attribute.
    """


    account?: str

    connectionCredentialKey?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileTargetConnectionCredentialKey

    role?: str


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0DatafileTargetConnectionCredentialKey:
    """
    connectionCredentialKey defines connection credential key in secret which created by spec.ConnectionCredential of the ClusterDefinition. it will be ignored when "account" is set.

    Attributes
    ----------
    passwordKey : str, default is Undefined, optional
        the key of password in the ConnectionCredential secret. if not set, the default key is "password".
    usernameKey : str, default is Undefined, optional
        the key of username in the ConnectionCredential secret. if not set, the default key is "username".
    """


    passwordKey?: str

    usernameKey?: str


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Logfile:
    """
    the policy for logfile backup.

    Attributes
    ----------
    backupStatusUpdates : [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileBackupStatusUpdatesItems0], default is Undefined, optional
        define how to update metadata for backup status.
    backupToolName : str, default is Undefined, optional
        which backup tool to perform database backup, only support one tool.
    backupsHistoryLimit : int, default is 7, optional
        the number of automatic backups to retain. Value must be non-negative integer. 0 means NO limit on the number of backups.
    onFailAttempted : int, default is Undefined, optional
        count of backup stop retries on fail.
    target : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileTarget, default is Undefined, optional
        target
    """


    backupStatusUpdates?: [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileBackupStatusUpdatesItems0]

    backupToolName?: str

    backupsHistoryLimit?: int = 7

    onFailAttempted?: int

    target?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileTarget


    check:
        regex.match(backupToolName, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$") if backupToolName


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileBackupStatusUpdatesItems0:
    """
    apps kubeblocks io v1alpha1 backup policy template spec backup policies items0 logfile backup status updates items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container name that kubectl can execute.
    path : str, default is Undefined, optional
        specify the json path of backup object for patch. example: manifests.backupLog -- means patch the backup json path of status.manifests.backupLog.
    script : str, default is Undefined, optional
        the shell Script commands to collect backup status metadata. The script must exist in the container of ContainerName and the output format must be set to JSON. Note that outputting to stderr may cause the result format to not be in JSON.
    updateStage : str, default is Undefined, required
        when to update the backup status, pre: before backup, post: after backup
    useTargetPodServiceAccount : bool, default is Undefined, optional
        useTargetPodServiceAccount defines whether this job requires the service account of the backup target pod. if true, will use the service account of the backup target pod. otherwise, will use the system service account.
    """


    containerName?: str

    path?: str

    script?: str

    updateStage: "pre" | "post"

    useTargetPodServiceAccount?: bool


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileTarget:
    """
    target instance for backup.

    Attributes
    ----------
    account : str, default is Undefined, optional
        refer to spec.componentDef.systemAccounts.accounts[*].name in ClusterDefinition. the secret created by this account will be used to connect the database. if not set, the secret created by spec.ConnectionCredential of the ClusterDefinition will be used. it will be transformed to a secret for BackupPolicy's target secret.
    connectionCredentialKey : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileTargetConnectionCredentialKey, default is Undefined, optional
        connection credential key
    role : str, default is Undefined, optional
        select instance of corresponding role for backup, role are: - the name of Leader/Follower/Leaner for Consensus component. - primary or secondary for Replication component. finally, invalid role of the component will be ignored. such as if workload type is Replication and component's replicas is 1, the secondary role is invalid. and it also will be ignored when component is Stateful/Stateless. the role will be transformed to a role LabelSelector for BackupPolicy's target attribute.
    """


    account?: str

    connectionCredentialKey?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileTargetConnectionCredentialKey

    role?: str


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0LogfileTargetConnectionCredentialKey:
    """
    connectionCredentialKey defines connection credential key in secret which created by spec.ConnectionCredential of the ClusterDefinition. it will be ignored when "account" is set.

    Attributes
    ----------
    passwordKey : str, default is Undefined, optional
        the key of password in the ConnectionCredential secret. if not set, the default key is "password".
    usernameKey : str, default is Undefined, optional
        the key of username in the ConnectionCredential secret. if not set, the default key is "username".
    """


    passwordKey?: str

    usernameKey?: str


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Retention:
    """
    retention describe how long the Backup should be retained. if not set, will be retained forever.

    Attributes
    ----------
    ttl : str, default is Undefined, optional
        ttl is a time string ending with the 'd'|'D'|'h'|'H' character to describe how long the Backup should be retained. if not set, will be retained forever.
    """


    ttl?: str


    check:
        regex.match(ttl, r"(^\d+[d|D|h|H]$") if ttl


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Schedule:
    """
    schedule policy for backup.

    Attributes
    ----------
    datafile : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleDatafile, default is Undefined, optional
        datafile
    logfile : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleLogfile, default is Undefined, optional
        logfile
    snapshot : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleSnapshot, default is Undefined, optional
        snapshot
    startingDeadlineMinutes : int, default is Undefined, optional
        startingDeadlineMinutes defines the deadline in minutes for starting the backup job if it misses scheduled time for any reason.
    """


    datafile?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleDatafile

    logfile?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleLogfile

    snapshot?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleSnapshot

    startingDeadlineMinutes?: int


    check:
        startingDeadlineMinutes <= 1440
        startingDeadlineMinutes >= 0


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleDatafile:
    """
    schedule policy for datafile backup.

    Attributes
    ----------
    cronExpression : str, default is Undefined, required
        the cron expression for schedule, the timezone is in UTC. see https://en.wikipedia.org/wiki/Cron.
    enable : bool, default is Undefined, required
        enable or disable the schedule.
    """


    cronExpression: str

    enable: bool


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleLogfile:
    """
    schedule policy for logfile backup.

    Attributes
    ----------
    cronExpression : str, default is Undefined, required
        the cron expression for schedule, the timezone is in UTC. see https://en.wikipedia.org/wiki/Cron.
    enable : bool, default is Undefined, required
        enable or disable the schedule.
    """


    cronExpression: str

    enable: bool


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0ScheduleSnapshot:
    """
    schedule policy for snapshot backup.

    Attributes
    ----------
    cronExpression : str, default is Undefined, required
        the cron expression for schedule, the timezone is in UTC. see https://en.wikipedia.org/wiki/Cron.
    enable : bool, default is Undefined, required
        enable or disable the schedule.
    """


    cronExpression: str

    enable: bool


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0Snapshot:
    """
    the policy for snapshot backup.

    Attributes
    ----------
    backupStatusUpdates : [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotBackupStatusUpdatesItems0], default is Undefined, optional
        define how to update metadata for backup status.
    backupsHistoryLimit : int, default is 7, optional
        the number of automatic backups to retain. Value must be non-negative integer. 0 means NO limit on the number of backups.
    hooks : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotHooks, default is Undefined, optional
        hooks
    onFailAttempted : int, default is Undefined, optional
        count of backup stop retries on fail.
    target : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotTarget, default is Undefined, optional
        target
    """


    backupStatusUpdates?: [AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotBackupStatusUpdatesItems0]

    backupsHistoryLimit?: int = 7

    hooks?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotHooks

    onFailAttempted?: int

    target?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotTarget


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotBackupStatusUpdatesItems0:
    """
    apps kubeblocks io v1alpha1 backup policy template spec backup policies items0 snapshot backup status updates items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container name that kubectl can execute.
    path : str, default is Undefined, optional
        specify the json path of backup object for patch. example: manifests.backupLog -- means patch the backup json path of status.manifests.backupLog.
    script : str, default is Undefined, optional
        the shell Script commands to collect backup status metadata. The script must exist in the container of ContainerName and the output format must be set to JSON. Note that outputting to stderr may cause the result format to not be in JSON.
    updateStage : str, default is Undefined, required
        when to update the backup status, pre: before backup, post: after backup
    useTargetPodServiceAccount : bool, default is Undefined, optional
        useTargetPodServiceAccount defines whether this job requires the service account of the backup target pod. if true, will use the service account of the backup target pod. otherwise, will use the system service account.
    """


    containerName?: str

    path?: str

    script?: str

    updateStage: "pre" | "post"

    useTargetPodServiceAccount?: bool


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotHooks:
    """
    execute hook commands for backup.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        which container can exec command
    image : str, default is Undefined, optional
        exec command with image
    postCommands : [str], default is Undefined, optional
        post backup to perform commands
    preCommands : [str], default is Undefined, optional
        pre backup to perform commands
    """


    containerName?: str

    image?: str

    postCommands?: [str]

    preCommands?: [str]


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotTarget:
    """
    target instance for backup.

    Attributes
    ----------
    account : str, default is Undefined, optional
        refer to spec.componentDef.systemAccounts.accounts[*].name in ClusterDefinition. the secret created by this account will be used to connect the database. if not set, the secret created by spec.ConnectionCredential of the ClusterDefinition will be used. it will be transformed to a secret for BackupPolicy's target secret.
    connectionCredentialKey : AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotTargetConnectionCredentialKey, default is Undefined, optional
        connection credential key
    role : str, default is Undefined, optional
        select instance of corresponding role for backup, role are: - the name of Leader/Follower/Leaner for Consensus component. - primary or secondary for Replication component. finally, invalid role of the component will be ignored. such as if workload type is Replication and component's replicas is 1, the secondary role is invalid. and it also will be ignored when component is Stateful/Stateless. the role will be transformed to a role LabelSelector for BackupPolicy's target attribute.
    """


    account?: str

    connectionCredentialKey?: AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotTargetConnectionCredentialKey

    role?: str


schema AppsKubeblocksIoV1alpha1BackupPolicyTemplateSpecBackupPoliciesItems0SnapshotTargetConnectionCredentialKey:
    """
    connectionCredentialKey defines connection credential key in secret which created by spec.ConnectionCredential of the ClusterDefinition. it will be ignored when "account" is set.

    Attributes
    ----------
    passwordKey : str, default is Undefined, optional
        the key of password in the ConnectionCredential secret. if not set, the default key is "password".
    usernameKey : str, default is Undefined, optional
        the key of username in the ConnectionCredential secret. if not set, the default key is "username".
    """


    passwordKey?: str

    usernameKey?: str


