"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema StorageProvider:
    """
    StorageProvider is the Schema for the storageproviders API StorageProvider describes how to provision PVCs for a specific storage system (e.g. S3, NFS, etc), by using the CSI driver.

    Attributes
    ----------
    apiVersion : str, default is "storage.kubeblocks.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "StorageProvider", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : StorageKubeblocksIoV1alpha1StorageProviderSpec, default is Undefined, optional
        spec
    status : StorageKubeblocksIoV1alpha1StorageProviderStatus, default is Undefined, optional
        status
    """


    apiVersion: "storage.kubeblocks.io/v1alpha1" = "storage.kubeblocks.io/v1alpha1"

    kind: "StorageProvider" = "StorageProvider"

    metadata?: v1.ObjectMeta

    spec?: StorageKubeblocksIoV1alpha1StorageProviderSpec

    status?: StorageKubeblocksIoV1alpha1StorageProviderStatus


schema StorageKubeblocksIoV1alpha1StorageProviderSpec:
    """
    StorageProviderSpec defines the desired state of StorageProvider

    Attributes
    ----------
    csiDriverName : str, default is Undefined, optional
        The name of the CSI driver used by this StorageProvider.
    csiDriverSecretTemplate : str, default is Undefined, optional
        A Go template for rendering a secret which will be used by the CSI driver. The template will be rendered with the following variables: - Parameters: a map of parameters defined in the ParametersSchema.
    parametersSchema : StorageKubeblocksIoV1alpha1StorageProviderSpecParametersSchema, default is Undefined, optional
        parameters schema
    storageClassTemplate : str, default is Undefined, optional
        A Go template for rendering a storage class which will be used by the CSI driver. The template will be rendered with the following variables: - Parameters: a map of parameters defined in the ParametersSchema. - CSIDriverSecretRef: the reference of the secret created by the CSIDriverSecretTemplate.
    """


    csiDriverName?: str

    csiDriverSecretTemplate?: str

    parametersSchema?: StorageKubeblocksIoV1alpha1StorageProviderSpecParametersSchema

    storageClassTemplate?: str


schema StorageKubeblocksIoV1alpha1StorageProviderSpecParametersSchema:
    """
    The schema describes the parameters required by this StorageProvider, when rendering the templates.

    Attributes
    ----------
    credentialFields : [str], default is Undefined, optional
        credentialFields are the fields used to generate the secret.
    openAPIV3Schema : any, default is Undefined, optional
        openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
    """


    credentialFields?: [str]

    openAPIV3Schema?: any


schema StorageKubeblocksIoV1alpha1StorageProviderStatus:
    """
    StorageProviderStatus defines the observed state of StorageProvider

    Attributes
    ----------
    conditions : [StorageKubeblocksIoV1alpha1StorageProviderStatusConditionsItems0], default is Undefined, optional
        Describes the current state of the storage provider.
    phase : str, default is Undefined, optional
        Storage provider reconciliation phases. Valid values are NotReady, Ready.
    """


    conditions?: [StorageKubeblocksIoV1alpha1StorageProviderStatusConditionsItems0]

    phase?: "NotReady" | "Ready"


schema StorageKubeblocksIoV1alpha1StorageProviderStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(reason, r"(^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match($type, r"(^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


