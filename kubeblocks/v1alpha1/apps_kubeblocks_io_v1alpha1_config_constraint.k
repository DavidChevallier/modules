"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema ConfigConstraint:
    """
    ConfigConstraint is the Schema for the configconstraint API

    Attributes
    ----------
    apiVersion : str, default is "apps.kubeblocks.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConfigConstraint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsKubeblocksIoV1alpha1ConfigConstraintSpec, default is Undefined, optional
        spec
    status : AppsKubeblocksIoV1alpha1ConfigConstraintStatus, default is Undefined, optional
        status
    """


    apiVersion: "apps.kubeblocks.io/v1alpha1" = "apps.kubeblocks.io/v1alpha1"

    kind: "ConfigConstraint" = "ConfigConstraint"

    metadata?: v1.ObjectMeta

    spec?: AppsKubeblocksIoV1alpha1ConfigConstraintSpec

    status?: AppsKubeblocksIoV1alpha1ConfigConstraintStatus


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpec:
    """
    ConfigConstraintSpec defines the desired state of ConfigConstraint

    Attributes
    ----------
    cfgSchemaTopLevelName : str, default is Undefined, optional
        cfgSchemaTopLevelName is cue type name, which generates openapi schema.
    configurationSchema : AppsKubeblocksIoV1alpha1ConfigConstraintSpecConfigurationSchema, default is Undefined, optional
        configuration schema
    downwardAPIOptions : [AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0], default is Undefined, optional
        downwardAPIOptions is used to watch pod fields.
    dynamicParameters : [str], default is Undefined, optional
        dynamicParameters, list of DynamicParameter, modifications of them trigger a config dynamic reload without process restart.
    formatterConfig : AppsKubeblocksIoV1alpha1ConfigConstraintSpecFormatterConfig, default is Undefined, required
        formatter config
    immutableParameters : [str], default is Undefined, optional
        immutableParameters describes parameters that prohibit user from modification.
    reloadOptions : AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptions, default is Undefined, optional
        reload options
    scriptConfigs : [AppsKubeblocksIoV1alpha1ConfigConstraintSpecScriptConfigsItems0], default is Undefined, optional
        scriptConfigs, list of ScriptConfig, witch these scripts can be used by volume trigger,downward trigger, or tool image
    selector : AppsKubeblocksIoV1alpha1ConfigConstraintSpecSelector, default is Undefined, optional
        selector
    staticParameters : [str], default is Undefined, optional
        staticParameters, list of StaticParameter, modifications of them trigger a process restart.
    toolsImageSpec : AppsKubeblocksIoV1alpha1ConfigConstraintSpecToolsImageSpec, default is Undefined, optional
        tools image spec
    """


    cfgSchemaTopLevelName?: str

    configurationSchema?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecConfigurationSchema

    downwardAPIOptions?: [AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0]

    dynamicParameters?: [str]

    formatterConfig: AppsKubeblocksIoV1alpha1ConfigConstraintSpecFormatterConfig

    immutableParameters?: [str]

    reloadOptions?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptions

    scriptConfigs?: [AppsKubeblocksIoV1alpha1ConfigConstraintSpecScriptConfigsItems0]

    selector?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecSelector

    staticParameters?: [str]

    toolsImageSpec?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecToolsImageSpec


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecConfigurationSchema:
    """
    configurationSchema imposes restrictions on database parameter's rule.

    Attributes
    ----------
    cue : str, default is Undefined, optional
        cue that to let provider verify user configuration through cue language.
    $schema : any, default is Undefined, optional
        schema provides a way for providers to validate the changed parameters through json.
    """


    cue?: str

    $schema?: any


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0:
    """
    apps kubeblocks io v1alpha1 config constraint spec downward API options items0

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command used to execute for downwrad api.
    items : [AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0], default is Undefined, required
        Items is a list of downward API volume file
    mountPoint : str, default is Undefined, required
        mountPoint is the mount point of the scripts file.
    name : str, default is Undefined, required
        Specify the name of the field.
    """


    command?: [str]

    items: [AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0]

    mountPoint: str

    name: str


    check:
        len(mountPoint) <= 128
        len(name) <= 63
        regex.match(name, r"(^[a-z0-9]([a-z0-9\.\-]*[a-z0-9])?$")


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0ResourceFieldRef


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecDownwardAPIOptionsItems0ItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"(^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecFormatterConfig:
    """
    formatterConfig describes the format of the configuration file, the controller 1. parses configuration file 2. analyzes the modified parameters 3. applies corresponding policies.

    Attributes
    ----------
    format : str, default is Undefined, required
        The configuration file format. Valid values are ini, xml, yaml, json, hcl, dotenv, properties and toml. 
         ini: a configuration file that consists of a text-based content with a structure and syntax comprising key–value pairs for properties, reference wiki: https://en.wikipedia.org/wiki/INI_file xml: reference wiki: https://en.wikipedia.org/wiki/XML yaml: a configuration file support for complex data types and structures. json: reference wiki: https://en.wikipedia.org/wiki/JSON hcl: : The HashiCorp Configuration Language (HCL) is a configuration language authored by HashiCorp, reference url: https://www.linode.com/docs/guides/introduction-to-hcl/ dotenv: this was a plain text file with simple key–value pairs, reference wiki: https://en.wikipedia.org/wiki/Configuration_file#MS-DOS properties: a file extension mainly used in Java, reference wiki: https://en.wikipedia.org/wiki/.properties toml: reference wiki: https://en.wikipedia.org/wiki/TOML props-plus: a file extension mainly used in Java, support CamelCase(e.g: brokerMaxConnectionsPerIp)
    iniConfig : AppsKubeblocksIoV1alpha1ConfigConstraintSpecFormatterConfigIniConfig, default is Undefined, optional
        ini config
    """


    format: "xml" | "ini" | "yaml" | "json" | "hcl" | "dotenv" | "toml" | "properties" | "redis" | "props-plus"

    iniConfig?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecFormatterConfigIniConfig


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecFormatterConfigIniConfig:
    """
    iniConfig represents the ini options.

    Attributes
    ----------
    sectionName : str, default is Undefined, optional
        sectionName describes ini section.
    """


    sectionName?: str


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptions:
    """
    reloadOptions indicates whether the process supports reload. if set, the controller will determine the behavior of the engine instance based on the configuration templates, restart or reload depending on whether any parameters in the StaticParameters have been modified.

    Attributes
    ----------
    shellTrigger : AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsShellTrigger, default is Undefined, optional
        shell trigger
    tplScriptTrigger : AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsTplScriptTrigger, default is Undefined, optional
        tpl script trigger
    unixSignalTrigger : AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsUnixSignalTrigger, default is Undefined, optional
        unix signal trigger
    """


    shellTrigger?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsShellTrigger

    tplScriptTrigger?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsTplScriptTrigger

    unixSignalTrigger?: AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsUnixSignalTrigger


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsShellTrigger:
    """
    shellTrigger performs the reload command.

    Attributes
    ----------
    command : [str], default is Undefined, required
        command used to execute for reload.
    sync : bool, default is Undefined, optional
        Specify synchronize updates parameters to the config manager.
    """


    command: [str]

    sync?: bool


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsTplScriptTrigger:
    """
    goTplTrigger performs the reload command.

    Attributes
    ----------
    namespace : str, default is "default", optional
        Specify the namespace of the referenced the tpl script ConfigMap object. An empty namespace is equivalent to the "default" namespace.
    scriptConfigMapRef : str, default is Undefined, required
        scriptConfigMapRef used to execute for reload.
    sync : bool, default is Undefined, optional
        Specify synchronize updates parameters to the config manager.
    """


    namespace?: str = "default"

    scriptConfigMapRef: str

    sync?: bool


    check:
        len(namespace) <= 63
        regex.match(namespace, r"(^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$") if namespace


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecReloadOptionsUnixSignalTrigger:
    """
    unixSignalTrigger used to reload by sending a signal.

    Attributes
    ----------
    processName : str, default is Undefined, required
        processName is process name, sends unix signal to proc.
    signal : str, default is Undefined, required
        signal is valid for unix signal. e.g: SIGHUP url: ../../internal/configuration/configmap/handler.go:allUnixSignals
    """


    processName: str

    signal: "SIGHUP" | "SIGINT" | "SIGQUIT" | "SIGILL" | "SIGTRAP" | "SIGABRT" | "SIGBUS" | "SIGFPE" | "SIGKILL" | "SIGUSR1" | "SIGSEGV" | "SIGUSR2" | "SIGPIPE" | "SIGALRM" | "SIGTERM" | "SIGSTKFLT" | "SIGCHLD" | "SIGCONT" | "SIGSTOP" | "SIGTSTP" | "SIGTTIN" | "SIGTTOU" | "SIGURG" | "SIGXCPU" | "SIGXFSZ" | "SIGVTALRM" | "SIGPROF" | "SIGWINCH" | "SIGIO" | "SIGPWR" | "SIGSYS"


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecScriptConfigsItems0:
    """
    apps kubeblocks io v1alpha1 config constraint spec script configs items0

    Attributes
    ----------
    namespace : str, default is "default", optional
        Specify the namespace of the referenced the tpl script ConfigMap object. An empty namespace is equivalent to the "default" namespace.
    scriptConfigMapRef : str, default is Undefined, required
        scriptConfigMapRef used to execute for reload.
    """


    namespace?: str = "default"

    scriptConfigMapRef: str


    check:
        len(namespace) <= 63
        regex.match(namespace, r"(^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$") if namespace


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecSelector:
    """
    selector is used to match the label on the pod, for example, a pod of the primary is match on the patroni cluster.

    Attributes
    ----------
    matchExpressions : [AppsKubeblocksIoV1alpha1ConfigConstraintSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [AppsKubeblocksIoV1alpha1ConfigConstraintSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecToolsImageSpec:
    """
    toolConfig used to config init container.

    Attributes
    ----------
    mountPoint : str, default is Undefined, required
        mountPoint is the mount point of the scripts file.
    toolConfigs : [AppsKubeblocksIoV1alpha1ConfigConstraintSpecToolsImageSpecToolConfigsItems0], default is Undefined, optional
        toolConfig used to config init container.
    """


    mountPoint: str

    toolConfigs?: [AppsKubeblocksIoV1alpha1ConfigConstraintSpecToolsImageSpecToolConfigsItems0]


    check:
        len(mountPoint) <= 128


schema AppsKubeblocksIoV1alpha1ConfigConstraintSpecToolsImageSpecToolConfigsItems0:
    """
    apps kubeblocks io v1alpha1 config constraint spec tools image spec tool configs items0

    Attributes
    ----------
    command : [str], default is Undefined, required
        exec used to execute for init containers.
    image : str, default is Undefined, optional
        tools Container image name.
    name : str, default is Undefined, optional
        Specify the name of initContainer. Must be a DNS_LABEL name.
    """


    command: [str]

    image?: str

    name?: str


    check:
        len(name) <= 63
        regex.match(name, r"(^[a-z]([a-z0-9\-]*[a-z0-9])?$") if name


schema AppsKubeblocksIoV1alpha1ConfigConstraintStatus:
    """
    ConfigConstraintStatus defines the observed state of ConfigConstraint.

    Attributes
    ----------
    message : str, default is Undefined, optional
        message field describes the reasons of abnormal status.
    observedGeneration : int, default is Undefined, optional
        observedGeneration is the latest generation observed for this ClusterDefinition. It refers to the ConfigConstraint's generation, which is updated by the API Server.
    phase : str, default is Undefined, optional
        phase is status of configuration template, when set to CCAvailablePhase, it can be referenced by ClusterDefinition or ClusterVersion.
    """


    message?: str

    observedGeneration?: int

    phase?: "Available" | "Unavailable" | "Deleting"


