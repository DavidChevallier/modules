"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CloudMemorystoreInstance:
    """
    A CloudMemorystoreInstance is a managed resource that represents a Google Cloud Memorystore instance.

    Attributes
    ----------
    apiVersion : str, default is "cache.gcp.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CloudMemorystoreInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpec, default is Undefined, required
        spec
    status : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "cache.gcp.crossplane.io/v1beta1" = "cache.gcp.crossplane.io/v1beta1"

    kind: "CloudMemorystoreInstance" = "CloudMemorystoreInstance"

    metadata?: v1.ObjectMeta

    spec: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpec

    status?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatus


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpec:
    """
    A CloudMemorystoreInstanceSpec defines the desired state of a CloudMemorystoreInstance.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecForProvider

    providerConfigRef?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderConfigRef

    providerRef?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderRef

    publishConnectionDetailsTo?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecWriteConnectionSecretToRef


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecForProvider:
    """
    CloudMemorystoreInstanceParameters define the desired state of an Google Cloud Memorystore instance. Most fields map directly to an Instance: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance

    Attributes
    ----------
    alternativeLocationId : str, default is Undefined, optional
        Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two zones. If provided, it must be a different zone from the one provided in [location_id].
    authEnabled : bool, default is Undefined, optional
        AuthEnabled: Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the instance. Default value is "false" meaning AUTH is disabled.
    authorizedNetwork : str, default is Undefined, optional
        The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. If left unspecified, the `default` network will be used.
    connectMode : str, default is Undefined, optional
        ConnectMode: Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING. 
         Possible values: "CONNECT_MODE_UNSPECIFIED" - Not set. "DIRECT_PEERING" - Connect via direct peering to the Memorystore for Redis hosted service. "PRIVATE_SERVICE_ACCESS" - Connect your Memorystore for Redis instance using Private Services Access. Private services access provides an IP address range for multiple Google Cloud services, including Memorystore.
    displayName : str, default is Undefined, optional
        An arbitrary and optional user-provided name for the instance.
    labels : {str:str}, default is Undefined, optional
        Resource labels to represent user provided metadata
    locationId : str, default is Undefined, optional
        The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If [alternative_location_id] is also provided, it must be different from [location_id].
    memorySizeGb : int, default is Undefined, required
        Redis memory size in GiB.
    redisConfigs : {str:str}, default is Undefined, optional
        Redis configuration parameters, according to http://redis.io/topics/config. Currently, the only supported parameters are: 
         Redis 3.2 and above: 
         *   maxmemory-policy *   notify-keyspace-events 
         Redis 4.0 and above: 
         *   activedefrag *   lfu-log-factor *   lfu-decay-time
    redisVersion : str, default is Undefined, optional
        The version of Redis software. If not provided, latest supported version will be used. Updating the version will perform an upgrade/downgrade to the new version. Currently, the supported values are: 
         *   `REDIS_4_0` for Redis 4.0 compatibility (default) *   `REDIS_3_2` for Redis 3.2 compatibility *   `REDIS_5_0` for Redis 5.0 compatibility *   `REDIS_6_X` for Redis 6.x compatibility
    region : str, default is Undefined, required
        Region in which to create this Cloud Memorystore cluster.
    reservedIpRange : str, default is Undefined, optional
        The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing subnets in an authorized network.
    tier : str, default is Undefined, required
        Tier specifies the replication level of the Redis cluster. BASIC provides a single Redis instance with no high availability. STANDARD_HA provides a cluster of two Redis instances in distinct availability zones. https://cloud.google.com/memorystore/docs/redis/redis-tiers
    """


    alternativeLocationId?: str

    authEnabled?: bool

    authorizedNetwork?: str

    connectMode?: "DIRECT_PEERING" | "PRIVATE_SERVICE_ACCESS"

    displayName?: str

    labels?: {str:str}

    locationId?: str

    memorySizeGb: int

    redisConfigs?: {str:str}

    redisVersion?: str

    region: str

    reservedIpRange?: str

    tier: "BASIC" | "STANDARD_HA"


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderConfigRefPolicy


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderRefPolicy


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatus:
    """
    A CloudMemorystoreInstanceStatus represents the observed state of a CloudMemorystoreInstance.

    Attributes
    ----------
    atProvider : CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatusAtProvider

    conditions?: [CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatusConditionsItems0]


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatusAtProvider:
    """
    CloudMemorystoreInstanceObservation is used to show the observed state of the CloudMemorystore resource on GCP.

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        The time the instance was created.
    currentLocationId : str, default is Undefined, optional
        The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the [location_id] provided by the user at creation time. For Standard Tier instances, this can be either [location_id] or [alternative_location_id] and can change after a failover event.
    host : str, default is Undefined, optional
        Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
    name : str, default is Undefined, optional
        Unique name of the resource in this scope including project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}` 
         Note: Redis instances are managed and addressed at regional level so location_id here refers to a GCP region; however, users may choose which specific zone (or collection of zones for cross-zone instances) an instance should be provisioned in. Refer to [location_id] and [alternative_location_id] fields for more details.
    persistenceIamIdentity : str, default is Undefined, optional
        Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is "serviceAccount:<service_account_email>". The value may change over time for a given instance so should be checked before each import/export operation.
    port : int, default is Undefined, optional
        The port number of the exposed Redis endpoint.
    state : str, default is Undefined, optional
        State: Output only. The current state of this instance. 
         Possible values: "STATE_UNSPECIFIED" - Not set. "CREATING" - Redis instance is being created. "READY" - Redis instance has been created and is fully usable. "UPDATING" - Redis instance configuration is being updated. Certain kinds of updates may cause the instance to become unusable while the update is in progress. "DELETING" - Redis instance is being deleted. "REPAIRING" - Redis instance is being repaired and may be unusable. "MAINTENANCE" - Maintenance is being performed on this Redis instance. "IMPORTING" - Redis instance is importing data (availability may be affected). "FAILING_OVER" - Redis instance is failing over (availability may be affected).
    statusMessage : str, default is Undefined, optional
        Additional information about the current status of this instance, if available.
    """


    createTime?: str

    currentLocationId?: str

    host?: str

    name?: str

    persistenceIamIdentity?: str

    port?: int

    state?: str

    statusMessage?: str


schema CacheGcpCrossplaneIoV1beta1CloudMemorystoreInstanceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


