apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cloudmemorystoreinstances.cache.gcp.crossplane.io
spec:
  group: cache.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: CloudMemorystoreInstance
    listKind: CloudMemorystoreInstanceList
    plural: cloudmemorystoreinstances
    singular: cloudmemorystoreinstance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .spec.forProvider.redisVersion
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A CloudMemorystoreInstance is a managed resource that represents
          a Google Cloud Memorystore instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A CloudMemorystoreInstanceSpec defines the desired state
              of a CloudMemorystoreInstance.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'CloudMemorystoreInstanceParameters define the desired
                  state of an Google Cloud Memorystore instance. Most fields map directly
                  to an Instance: https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance'
                properties:
                  alternativeLocationId:
                    description: Only applicable to STANDARD_HA tier which protects
                      the instance against zonal failures by provisioning it across
                      two zones. If provided, it must be a different zone from the
                      one provided in [location_id].
                    type: string
                  authEnabled:
                    description: 'AuthEnabled: Optional. Indicates whether OSS Redis
                      AUTH is enabled for the instance. If set to "true" AUTH is enabled
                      on the instance. Default value is "false" meaning AUTH is disabled.'
                    type: boolean
                  authorizedNetwork:
                    description: The full name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks)
                      to which the instance is connected. If left unspecified, the
                      `default` network will be used.
                    type: string
                  connectMode:
                    description: "ConnectMode: Optional. The network connect mode
                      of the Redis instance. If not provided, the connect mode defaults
                      to DIRECT_PEERING. \n Possible values: \"CONNECT_MODE_UNSPECIFIED\"
                      - Not set. \"DIRECT_PEERING\" - Connect via direct peering to
                      the Memorystore for Redis hosted service. \"PRIVATE_SERVICE_ACCESS\"
                      - Connect your Memorystore for Redis instance using Private
                      Services Access. Private services access provides an IP address
                      range for multiple Google Cloud services, including Memorystore."
                    enum:
                    - DIRECT_PEERING
                    - PRIVATE_SERVICE_ACCESS
                    type: string
                  displayName:
                    description: An arbitrary and optional user-provided name for
                      the instance.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Resource labels to represent user provided metadata
                    type: object
                  locationId:
                    description: The zone where the instance will be provisioned.
                      If not provided, the service will choose a zone for the instance.
                      For STANDARD_HA tier, instances will be created across two zones
                      for protection against zonal failures. If [alternative_location_id]
                      is also provided, it must be different from [location_id].
                    type: string
                  memorySizeGb:
                    description: Redis memory size in GiB.
                    format: int64
                    type: integer
                  redisConfigs:
                    additionalProperties:
                      type: string
                    description: "Redis configuration parameters, according to http://redis.io/topics/config.
                      Currently, the only supported parameters are: \n Redis 3.2 and
                      above: \n *   maxmemory-policy *   notify-keyspace-events \n
                      Redis 4.0 and above: \n *   activedefrag *   lfu-log-factor
                      *   lfu-decay-time"
                    type: object
                  redisVersion:
                    description: "The version of Redis software. If not provided,
                      latest supported version will be used. Updating the version
                      will perform an upgrade/downgrade to the new version. Currently,
                      the supported values are: \n *   `REDIS_4_0` for Redis 4.0 compatibility
                      (default) *   `REDIS_3_2` for Redis 3.2 compatibility *   `REDIS_5_0`
                      for Redis 5.0 compatibility *   `REDIS_6_X` for Redis 6.x compatibility"
                    type: string
                  region:
                    description: Region in which to create this Cloud Memorystore
                      cluster.
                    type: string
                  reservedIpRange:
                    description: The CIDR range of internal addresses that are reserved
                      for this instance. If not provided, the service will choose
                      an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29.
                      Ranges must be unique and non-overlapping with existing subnets
                      in an authorized network.
                    type: string
                  tier:
                    description: Tier specifies the replication level of the Redis
                      cluster. BASIC provides a single Redis instance with no high
                      availability. STANDARD_HA provides a cluster of two Redis instances
                      in distinct availability zones. https://cloud.google.com/memorystore/docs/redis/redis-tiers
                    enum:
                    - BASIC
                    - STANDARD_HA
                    type: string
                required:
                - memorySizeGb
                - region
                - tier
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A CloudMemorystoreInstanceStatus represents the observed
              state of a CloudMemorystoreInstance.
            properties:
              atProvider:
                description: CloudMemorystoreInstanceObservation is used to show the
                  observed state of the CloudMemorystore resource on GCP.
                properties:
                  createTime:
                    description: The time the instance was created.
                    format: date-time
                    type: string
                  currentLocationId:
                    description: The current zone where the Redis endpoint is placed.
                      For Basic Tier instances, this will always be the same as the
                      [location_id] provided by the user at creation time. For Standard
                      Tier instances, this can be either [location_id] or [alternative_location_id]
                      and can change after a failover event.
                    type: string
                  host:
                    description: Hostname or IP address of the exposed Redis endpoint
                      used by clients to connect to the service.
                    type: string
                  name:
                    description: "Unique name of the resource in this scope including
                      project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
                      \n Note: Redis instances are managed and addressed at regional
                      level so location_id here refers to a GCP region; however, users
                      may choose which specific zone (or collection of zones for cross-zone
                      instances) an instance should be provisioned in. Refer to [location_id]
                      and [alternative_location_id] fields for more details."
                    type: string
                  persistenceIamIdentity:
                    description: Cloud IAM identity used by import / export operations
                      to transfer data to/from Cloud Storage. Format is "serviceAccount:<service_account_email>".
                      The value may change over time for a given instance so should
                      be checked before each import/export operation.
                    type: string
                  port:
                    description: The port number of the exposed Redis endpoint.
                    format: int64
                    type: integer
                  state:
                    description: "State: Output only. The current state of this instance.
                      \n Possible values: \"STATE_UNSPECIFIED\" - Not set. \"CREATING\"
                      - Redis instance is being created. \"READY\" - Redis instance
                      has been created and is fully usable. \"UPDATING\" - Redis instance
                      configuration is being updated. Certain kinds of updates may
                      cause the instance to become unusable while the update is in
                      progress. \"DELETING\" - Redis instance is being deleted. \"REPAIRING\"
                      - Redis instance is being repaired and may be unusable. \"MAINTENANCE\"
                      - Maintenance is being performed on this Redis instance. \"IMPORTING\"
                      - Redis instance is importing data (availability may be affected).
                      \"FAILING_OVER\" - Redis instance is failing over (availability
                      may be affected)."
                    type: string
                  statusMessage:
                    description: Additional information about the current status of
                      this instance, if available.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: firewalls.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Firewall
    listKind: FirewallList
    plural: firewalls
    singular: firewall
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Firewall is a managed resource that represents a Google Compute
          Engine Firewall
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A FirewallSpec defines the desired state of a Firewall.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'FirewallParameters define the desired state of a Google
                  Compute Engine Firewall rule. Most fields map directly to a Firewall:
                  https://cloud.google.com/compute/docs/reference/rest/v1/firewalls/'
                properties:
                  allowed:
                    description: 'Allowed: The list of ALLOW rules specified by this
                      firewall. Each rule specifies a protocol and port-range tuple
                      that describes a permitted connection.'
                    items:
                      description: FirewallAllowed represents the ALLOW rule by the
                        firewall
                      properties:
                        IPProtocol:
                          description: 'IPProtocol: The IP protocol to which this
                            rule applies. The protocol type is required when creating
                            a firewall rule. This value can either be one of the following
                            well known protocol strings (tcp, udp, icmp, esp, ah,
                            ipip, sctp) or the IP protocol number.'
                          type: string
                        ports:
                          description: "Ports: An optional list of ports to which
                            this rule applies. This field is only applicable for the
                            UDP or TCP protocol. Each entry must be either an integer
                            or a range. If not specified, this rule applies to connections
                            through any port. \n Example inputs include: [\"22\"],
                            [\"80\",\"443\"], and [\"12345-12349\"]."
                          items:
                            type: string
                          type: array
                      required:
                      - IPProtocol
                      type: object
                    type: array
                  denied:
                    description: 'Denied: The list of DENY rules specified by this
                      firewall. Each rule specifies a protocol and port-range tuple
                      that describes a denied connection.'
                    items:
                      description: FirewallDenied represents the DENY rule by the
                        firewall
                      properties:
                        IPProtocol:
                          description: 'IPProtocol: The IP protocol to which this
                            rule applies. The protocol type is required when creating
                            a firewall rule. This value can either be one of the following
                            well known protocol strings (tcp, udp, icmp, esp, ah,
                            ipip, sctp) or the IP protocol number.'
                          type: string
                        ports:
                          description: "Ports: An optional list of ports to which
                            this rule applies. This field is only applicable for the
                            UDP or TCP protocol. Each entry must be either an integer
                            or a range. If not specified, this rule applies to connections
                            through any port. \n Example inputs include: [\"22\"],
                            [\"80\",\"443\"], and [\"12345-12349\"]."
                          items:
                            type: string
                          type: array
                      required:
                      - IPProtocol
                      type: object
                    type: array
                  description:
                    description: 'Description: An optional description of this resource.
                      Provide this field when you create the resource.'
                    type: string
                  destinationRanges:
                    description: 'DestinationRanges: If destination ranges are specified,
                      the firewall rule applies only to traffic that has destination
                      IP address in these ranges. These ranges must be expressed in
                      CIDR format. Only IPv4 is supported.'
                    items:
                      type: string
                    type: array
                  direction:
                    description: "Direction: Direction of traffic to which this firewall
                      applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`.
                      For `INGRESS` traffic, you cannot specify the destinationRanges
                      field, and for `EGRESS` traffic, you cannot specify the sourceRanges
                      or sourceTags fields. \n Possible values: \"EGRESS\" \"INGRESS\""
                    type: string
                  disabled:
                    description: 'Disabled: Denotes whether the firewall rule is disabled.
                      When set to true, the firewall rule is not enforced and the
                      network behaves as if it did not exist. If this is unspecified,
                      the firewall rule will be enabled.'
                    type: boolean
                  logConfig:
                    description: 'LogConfig: This field denotes the logging options
                      for a particular firewall rule. If logging is enabled, logs
                      will be exported to Stackdriver.'
                    properties:
                      enable:
                        description: 'Enable: This field denotes whether to enable
                          logging for a particular firewall rule.'
                        type: boolean
                    required:
                    - enable
                    type: object
                  network:
                    description: "Network: URL of the network resource for this firewall
                      rule. If not specified when creating a firewall rule, the default
                      network is used: global/networks/default If you choose to specify
                      this field, you can specify the network as a full or partial
                      URL. For example, the following are all valid URLs: \n - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network
                      - projects/myproject/global/networks/my-network - global/networks/default"
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its
                      URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  priority:
                    description: 'Priority: Priority for this rule. This is an integer
                      between `0` and `65535`, both inclusive. The default value is
                      `1000`. Relative priorities determine which rule takes effect
                      if multiple rules apply. Lower values indicate higher priority.
                      For example, a rule with priority `0` has higher precedence
                      than a rule with priority `1`. DENY rules take precedence over
                      ALLOW rules if they have equal priority. Note that VPC networks
                      have implied rules with a priority of `65535`. To avoid conflicts
                      with the implied rules, use a priority number less than `65535`.'
                    format: int64
                    type: integer
                  sourceRanges:
                    description: 'SourceRanges: If source ranges are specified, the
                      firewall rule applies only to traffic that has a source IP address
                      in these ranges. These ranges must be expressed in CIDR format.
                      One or both of sourceRanges and sourceTags may be set. If both
                      fields are set, the rule applies to traffic that has a source
                      IP address within sourceRanges OR a source IP from a resource
                      with a matching tag listed in the sourceTags field. The connection
                      does not need to match both fields for the rule to apply. Only
                      IPv4 is supported.'
                    items:
                      type: string
                    type: array
                  sourceServiceAccounts:
                    description: 'SourceServiceAccounts: If source service accounts
                      are specified, the firewall rules apply only to traffic originating
                      from an instance with a service account in this list. Source
                      service accounts cannot be used to control traffic to an instance''s
                      external IP address because service accounts are associated
                      with an instance, not an IP address. sourceRanges can be set
                      at the same time as sourceServiceAccounts. If both are set,
                      the firewall applies to traffic that has a source IP address
                      within the sourceRanges OR a source IP that belongs to an instance
                      with service account listed in sourceServiceAccount. The connection
                      does not need to match both fields for the firewall to apply.
                      sourceServiceAccounts cannot be used at the same time as sourceTags
                      or targetTags.'
                    items:
                      type: string
                    type: array
                  sourceTags:
                    description: 'SourceTags: If source tags are specified, the firewall
                      rule applies only to traffic with source IPs that match the
                      primary network interfaces of VM instances that have the tag
                      and are in the same VPC network. Source tags cannot be used
                      to control traffic to an instance''s external IP address, it
                      only applies to traffic between instances in the same virtual
                      network. Because tags are associated with instances, not IP
                      addresses. One or both of sourceRanges and sourceTags may be
                      set. If both fields are set, the firewall applies to traffic
                      that has a source IP address within sourceRanges OR a source
                      IP from a resource with a matching tag listed in the sourceTags
                      field. The connection does not need to match both fields for
                      the firewall to apply.'
                    items:
                      type: string
                    type: array
                  targetServiceAccounts:
                    description: 'TargetServiceAccounts: A list of service accounts
                      indicating sets of instances located in the network that may
                      make network connections as specified in allowed[]. targetServiceAccounts
                      cannot be used at the same time as targetTags or sourceTags.
                      If neither targetServiceAccounts nor targetTags are specified,
                      the firewall rule applies to all instances on the specified
                      network.'
                    items:
                      type: string
                    type: array
                  targetTags:
                    description: 'TargetTags: A list of tags that controls which instances
                      the firewall rule applies to. If targetTags are specified, then
                      the firewall rule applies only to instances in the VPC network
                      that have one of those tags. If no targetTags are specified,
                      the firewall rule applies to all instances on the specified
                      network.'
                    items:
                      type: string
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A FirewallStatus represents the observed state of a Firewall.
            properties:
              atProvider:
                description: A FirewallObservation represents the observed state of
                  a Google Compute Engine Firewall rule.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: Creation timestamp in RFC3339
                      text format.'
                    type: string
                  id:
                    description: 'Id: The unique identifier for the resource. This
                      identifier is defined by the server.'
                    format: int64
                    type: integer
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: routers.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Router
    listKind: RouterList
    plural: routers
    singular: router
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Router is a managed resource that represents a Google Compute
          Engine Router
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A RouterSpec defines the desired state of a Router.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'RouterParameters define the desired state of a Google
                  Compute Engine Router. Most fields map directly to a Router: https://cloud.google.com/compute/docs/reference/rest/v1/routers/'
                properties:
                  bgp:
                    description: 'Bgp: BGP information specific to this router.'
                    properties:
                      advertiseMode:
                        description: "AdvertiseMode: User-specified flag to indicate
                          which mode to use for advertisement. The options are DEFAULT
                          or CUSTOM. \n Possible values: \"CUSTOM\" \"DEFAULT\""
                        enum:
                        - CUSTOM
                        - DEFAULT
                        type: string
                      advertisedGroups:
                        description: "AdvertisedGroups: User-specified list of prefix
                          groups to advertise in custom mode. This field can only
                          be populated if advertise_mode is CUSTOM and is advertised
                          to all peers of the router. These groups will be advertised
                          in addition to any specified prefixes. Leave this field
                          blank to advertise no custom groups. \n Possible values:
                          \"ALL_SUBNETS\""
                        enum:
                        - ALL_SUBNETS
                        items:
                          type: string
                        type: array
                      advertisedIpRanges:
                        description: 'AdvertisedIpRanges: User-specified list of individual
                          IP ranges to advertise in custom mode. This field can only
                          be populated if advertise_mode is CUSTOM and is advertised
                          to all peers of the router. These IP ranges will be advertised
                          in addition to any specified groups. Leave this field blank
                          to advertise no custom IP ranges.'
                        items:
                          description: A RouterAdvertisedIpRange represents the IP
                            ranges advertised by router.
                          properties:
                            description:
                              description: 'Description: User-specified description
                                for the IP range.'
                              type: string
                            range:
                              description: 'Range: The IP range to advertise. The
                                value must be a CIDR-formatted string.'
                              type: string
                          required:
                          - range
                          type: object
                        type: array
                      asn:
                        description: 'Asn: Local BGP Autonomous System Number (ASN).
                          Must be an RFC6996 private ASN, either 16-bit or 32-bit.
                          The value will be fixed for this router resource. All VPN
                          tunnels that link to this router will have the same local
                          ASN.'
                        format: int64
                        type: integer
                    type: object
                  bgpPeers:
                    description: 'BgpPeers: BGP information that must be configured
                      into the routing stack to establish BGP peering. This information
                      must specify the peer ASN and either the interface name, IP
                      address, or peer IP address. Please refer to RFC4273.'
                    items:
                      description: A RouterBgpPeer represents the BgpPeer configuration
                        for the router.
                      properties:
                        advertiseMode:
                          description: "AdvertiseMode: User-specified flag to indicate
                            which mode to use for advertisement. \n Possible values:
                            \"CUSTOM\" \"DEFAULT\""
                          enum:
                          - CUSTOM
                          - DEFAULT
                          type: string
                        advertisedGroups:
                          description: "AdvertisedGroups: User-specified list of prefix
                            groups to advertise in custom mode, which can take one
                            of the following options: - ALL_SUBNETS: Advertises all
                            available subnets, including peer VPC subnets. - ALL_VPC_SUBNETS:
                            Advertises the router's own VPC subnets. Note that this
                            field can only be populated if advertise_mode is CUSTOM
                            and overrides the list defined for the router (in the
                            \"bgp\" message). These groups are advertised in addition
                            to any specified prefixes. Leave this field blank to advertise
                            no custom groups. \n Possible values: \"ALL_SUBNETS\""
                          enum:
                          - ALL_SUBNETS
                          items:
                            type: string
                          type: array
                        advertisedIpRanges:
                          description: 'AdvertisedIpRanges: User-specified list of
                            individual IP ranges to advertise in custom mode. This
                            field can only be populated if advertise_mode is CUSTOM
                            and overrides the list defined for the router (in the
                            "bgp" message). These IP ranges are advertised in addition
                            to any specified groups. Leave this field blank to advertise
                            no custom IP ranges.'
                          items:
                            description: A RouterAdvertisedIpRange represents the
                              IP ranges advertised by router.
                            properties:
                              description:
                                description: 'Description: User-specified description
                                  for the IP range.'
                                type: string
                              range:
                                description: 'Range: The IP range to advertise. The
                                  value must be a CIDR-formatted string.'
                                type: string
                            required:
                            - range
                            type: object
                          type: array
                        advertisedRoutePriority:
                          description: 'AdvertisedRoutePriority: The priority of routes
                            advertised to this BGP peer. Where there is more than
                            one matching route of maximum length, the routes with
                            the lowest priority value win.'
                          format: int64
                          type: integer
                        interfaceName:
                          description: 'InterfaceName: Name of the interface the BGP
                            peer is associated with.'
                          type: string
                        ipAddress:
                          description: 'IpAddress: IP address of the interface inside
                            Google Cloud Platform. Only IPv4 is supported.'
                          type: string
                        name:
                          description: 'Name: Name of this BGP peer. The name must
                            be 1-63 characters long, and comply with RFC1035. Specifically,
                            the name must be 1-63 characters long and match the regular
                            expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
                            first character must be a lowercase letter, and all following
                            characters must be a dash, lowercase letter, or digit,
                            except the last character, which cannot be a dash.'
                          type: string
                        peerAsn:
                          description: 'PeerAsn: Peer BGP Autonomous System Number
                            (ASN). Each BGP interface may use a different value.'
                          format: int64
                          type: integer
                        peerIpAddress:
                          description: 'PeerIpAddress: IP address of the BGP interface
                            outside Google Cloud Platform. Only IPv4 is supported.'
                          type: string
                      required:
                      - name
                      - peerAsn
                      type: object
                    type: array
                  description:
                    description: 'Description: An optional description of this resource.
                      Provide this field when you create the resource.'
                    type: string
                  encryptedInterconnectRouter:
                    description: 'EncryptedInterconnectRouter: Field to indicate if
                      a router is dedicated to use with encrypted Interconnect Attachment
                      (IPsec-encrypted Cloud Interconnect feature). Not currently
                      available in all Interconnect locations.'
                    type: boolean
                  interfaces:
                    description: 'Interfaces: Router interfaces. Each interface requires
                      either one linked resource, (for example, linkedVpnTunnel),
                      or IP address and IP address range (for example, ipRange), or
                      both.'
                    items:
                      description: A RouterInterface represent the Interface information
                        for router.
                      properties:
                        ipRange:
                          description: 'IpRange: IP address and range of the interface.
                            The IP range must be in the RFC3927 link-local IP address
                            space. The value must be a CIDR-formatted string, for
                            example: 169.254.0.1/30. NOTE: Do not truncate the address
                            as it represents the IP address of the interface.'
                          type: string
                        linkedInterconnectAttachment:
                          description: 'LinkedInterconnectAttachment: URI of the linked
                            Interconnect attachment. It must be in the same region
                            as the router. Each interface can have one linked resource,
                            which can be a VPN tunnel, an Interconnect attachment,
                            or a virtual machine instance.'
                          type: string
                        linkedVpnTunnel:
                          description: 'LinkedVpnTunnel: URI of the linked VPN tunnel,
                            which must be in the same region as the router. Each interface
                            can have one linked resource, which can be a VPN tunnel,
                            an Interconnect attachment, or a virtual machine instance.'
                          type: string
                        name:
                          description: 'Name: Name of this interface entry. The name
                            must be 1-63 characters long, and comply with RFC1035.
                            Specifically, the name must be 1-63 characters long and
                            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
                            which means the first character must be a lowercase letter,
                            and all following characters must be a dash, lowercase
                            letter, or digit, except the last character, which cannot
                            be a dash.'
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  nats:
                    description: 'Nats: A list of NAT services created in this router.'
                    items:
                      description: RouterNat represents the Nat Service for the router.
                      properties:
                        drainNatIps:
                          description: 'DrainNatIps: A list of URLs of the IP resources
                            to be drained. These IPs must be valid static external
                            IPs that have been assigned to the NAT. These IPs should
                            be used for updating/patching a NAT only.'
                          items:
                            type: string
                          type: array
                        enableEndpointIndependentMapping:
                          type: boolean
                        icmpIdleTimeoutSec:
                          description: 'IcmpIdleTimeoutSec: Timeout (in seconds) for
                            ICMP connections. Defaults to 30s if not set.'
                          format: int64
                          type: integer
                        logConfig:
                          description: 'LogConfig: Configure logging on this NAT.'
                          properties:
                            enable:
                              description: 'Enable: Indicates whether or not to export
                                logs. This is false by default.'
                              type: boolean
                            filter:
                              description: "Filter: Specify the desired filtering
                                of logs on this NAT. If unspecified, logs are exported
                                for all connections handled by this NAT. This option
                                can take one of the following values: - ERRORS_ONLY:
                                Export logs only for connection failures. - TRANSLATIONS_ONLY:
                                Export logs only for successful connections. - ALL:
                                Export logs for all connections, successful and unsuccessful.
                                \n Possible values: \"ALL\" \"ERRORS_ONLY\" \"TRANSLATIONS_ONLY\""
                              enum:
                              - ALL
                              - ERRORS_ONLY
                              - TRANSLATIONS_ONLY
                              type: string
                          type: object
                        minPortsPerVm:
                          description: 'MinPortsPerVm: Minimum number of ports allocated
                            to a VM from this NAT config. If not set, a default number
                            of ports is allocated to a VM. This is rounded up to the
                            nearest power of 2. For example, if the value of this
                            field is 50, at least 64 ports are allocated to a VM.'
                          format: int64
                          type: integer
                        name:
                          description: 'Name: Unique name of this Nat service. The
                            name must be 1-63 characters long and comply with RFC1035.'
                          type: string
                        natIpAllocateOption:
                          description: "NatIpAllocateOption: Specify the NatIpAllocateOption,
                            which can take one of the following values: - MANUAL_ONLY:
                            Uses only Nat IP addresses provided by customers. When
                            there are not enough specified Nat IPs, the Nat service
                            fails for new VMs. - AUTO_ONLY: Nat IPs are allocated
                            by Google Cloud Platform; customers can't specify any
                            Nat IPs. When choosing AUTO_ONLY, then nat_ip should be
                            empty. \n Possible values: \"AUTO_ONLY\" \"MANUAL_ONLY\""
                          enum:
                          - AUTO_ONLY
                          - MANUAL_ONLY
                          type: string
                        natIps:
                          description: 'NatIps: A list of URLs of the IP resources
                            used for this Nat service. These IP addresses must be
                            valid static external IP addresses assigned to the project.'
                          items:
                            type: string
                          type: array
                        sourceSubnetworkIpRangesToNat:
                          description: "SourceSubnetworkIpRangesToNat: Specify the
                            Nat option, which can take one of the following values:
                            - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges
                            in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES:
                            All of the primary IP ranges in every Subnetwork are allowed
                            to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are
                            allowed to Nat (specified in the field subnetwork below)
                            The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED.
                            Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES
                            or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should
                            not be any other Router.Nat section in any Router for
                            this network in this region. \n Possible values: \"ALL_SUBNETWORKS_ALL_IP_RANGES\"
                            \"ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES\" \"LIST_OF_SUBNETWORKS\""
                          enum:
                          - ALL_SUBNETWORKS_ALL_IP_RANGES
                          - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES
                          - LIST_OF_SUBNETWORKS
                          type: string
                        subnetworks:
                          description: 'Subnetworks: A list of Subnetwork resources
                            whose traffic should be translated by NAT Gateway. It
                            is used only when LIST_OF_SUBNETWORKS is selected for
                            the SubnetworkIpRangeToNatOption above.'
                          items:
                            description: A RouterNatSubnetworkToNat represent the
                              Subnetwork information for Router Nat Service.
                            properties:
                              name:
                                description: 'Name: URL for the subnetwork resource
                                  that will use NAT.'
                                type: string
                              secondaryIpRangeNames:
                                description: 'SecondaryIpRangeNames: A list of the
                                  secondary ranges of the Subnetwork that are allowed
                                  to use NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES"
                                  is one of the values in source_ip_ranges_to_nat.'
                                items:
                                  type: string
                                type: array
                              sourceIpRangesToNat:
                                description: "SourceIpRangesToNat: Specify the options
                                  for NAT ranges in the Subnetwork. All options of
                                  a single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED.
                                  The only valid option with multiple values is: [\"PRIMARY_IP_RANGE\",
                                  \"LIST_OF_SECONDARY_IP_RANGES\"] Default: [ALL_IP_RANGES]
                                  \n Possible values: \"ALL_IP_RANGES\" \"LIST_OF_SECONDARY_IP_RANGES\"
                                  \"PRIMARY_IP_RANGE\""
                                enum:
                                - ALL_IP_RANGES
                                - LIST_OF_SECONDARY_IP_RANGES
                                - PRIMARY_IP_RANGE
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tcpEstablishedIdleTimeoutSec:
                          description: 'TcpEstablishedIdleTimeoutSec: Timeout (in
                            seconds) for TCP established connections. Defaults to
                            1200s if not set.'
                          format: int64
                          type: integer
                        tcpTransitoryIdleTimeoutSec:
                          description: 'TcpTransitoryIdleTimeoutSec: Timeout (in seconds)
                            for TCP transitory connections. Defaults to 30s if not
                            set.'
                          format: int64
                          type: integer
                        udpIdleTimeoutSec:
                          description: 'UdpIdleTimeoutSec: Timeout (in seconds) for
                            UDP connections. Defaults to 30s if not set.'
                          format: int64
                          type: integer
                      required:
                      - sourceSubnetworkIpRangesToNat
                      type: object
                    type: array
                  network:
                    description: 'Network: URI of the network to which this router
                      belongs.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its
                      URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  region:
                    description: 'Region: URL of the region where the Subnetwork resides.
                      This field can be set only at resource creation time.'
                    type: string
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A RouterStatus represents the observed state of a Router.
            properties:
              atProvider:
                description: A RouterObservation represents the observed state of
                  a Google Compute Engine Router.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: Creation timestamp in RFC3339
                      text format.'
                    type: string
                  id:
                    description: 'Id: The unique identifier for the resource. This
                      identifier is defined by the server.'
                    format: int64
                    type: integer
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: addresses.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Address
    listKind: AddressList
    plural: addresses
    singular: address
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.address
      name: IP
      type: string
    - jsonPath: .spec.forProvider.region
      name: REGION
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: An Address is a managed resource that represents a Google Compute
          Engine Address.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A AddressSpec defines the desired state of anAddress.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'AddressParameters define the desired state of a Google
                  Compute Engine Address. Most fields map directly to an Address:
                  https://cloud.google.com/compute/docs/reference/rest/v1/addresses'
                properties:
                  address:
                    description: 'Address: The static IP address represented by this
                      resource.'
                    type: string
                  addressType:
                    description: "AddressType: The type of address to reserve, either
                      INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
                      \n Possible values: \"EXTERNAL\" \"INTERNAL\" \"UNSPECIFIED_TYPE\""
                    enum:
                    - EXTERNAL
                    - INTERNAL
                    - UNSPECIFIED_TYPE
                    type: string
                  description:
                    description: 'Description: An optional description of this resource.'
                    type: string
                  ipVersion:
                    description: "IPVersion: The IP version that will be used by this
                      address. Valid options are IPV4 or IPV6. \n Possible values:
                      \"IPV4\" \"IPV6\" \"UNSPECIFIED_VERSION\""
                    enum:
                    - IPV6
                    - IPV4
                    - UNSPECIFIED_VERSION
                    type: string
                  network:
                    description: 'Network: The URL of the network in which to reserve
                      the address. This field can only be used with INTERNAL type
                      with the VPC_PEERING purpose.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network to retrieve its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  prefixLength:
                    description: 'PrefixLength: The prefix length if the resource
                      represents an IP range.'
                    format: int64
                    type: integer
                  purpose:
                    description: 'Purpose: The purpose of this resource, which can
                      be one of the following values: - `GCE_ENDPOINT` for addresses
                      that are used by VM instances, alias IP ranges, load balancers,
                      and similar resources. - `DNS_RESOLVER` for a DNS resolver address
                      in a subnetwork for a Cloud DNS inbound forwarder IP addresses
                      (regional internal IP address in a subnet of a VPC network)
                      - `VPC_PEERING` for global internal IP addresses used for private
                      services access allocated ranges. - `NAT_AUTO` for the regional
                      external IP addresses used by Cloud NAT when allocating addresses
                      using automatic NAT IP address allocation. - `IPSEC_INTERCONNECT`
                      for addresses created from a private IP range that are reserved
                      for a VLAN attachment in an IPsec-encrypted Cloud Interconnect
                      configuration. These addresses are regional resources. Not currently
                      available publicly. - `SHARED_LOADBALANCER_VIP` for an internal
                      IP address that is assigned to multiple internal forwarding
                      rules. - `PRIVATE_SERVICE_CONNECT` for a private network address
                      that is used to configure Private Service Connect. Only global
                      internal addresses can use this purpose. Possible values: "DNS_RESOLVER"
                      "GCE_ENDPOINT" "NAT_AUTO" "VPC_PEERING" "IPSEC_INTERCONNECT"
                      "SHARED_LOADBALANCER_VIP" "PRIVATE_SERVICE_CONNECT"'
                    enum:
                    - DNS_RESOLVER
                    - GCE_ENDPOINT
                    - NAT_AUTO
                    - VPC_PEERING
                    type: string
                  region:
                    description: 'Region: An optional region in which to create the
                      address.'
                    type: string
                  subnetwork:
                    description: 'Subnetwork: The URL of the subnetwork in which to
                      reserve the address. If an IP address is specified, it must
                      be within the subnetwork''s IP range. This field can only be
                      used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER
                      purpose.'
                    type: string
                  subnetworkRef:
                    description: SubnetworkRef references a Subnetwork to retrieve
                      its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetworkSelector:
                    description: SubnetworkSelector selects a reference to a Subnetwork
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A AddressStatus represents the observed state of an Address.
            properties:
              atProvider:
                description: A AddressObservation reflects the observed state of an
                  Address on GCP.
                properties:
                  creationTimestamp:
                    description: CreationTimestamp in RFC3339 text format.
                    type: string
                  id:
                    description: ID for the resource. This identifier is defined by
                      the server.
                    format: int64
                    type: integer
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                  status:
                    description: "Status of the address, which can be one of RESERVING,
                      RESERVED, or IN_USE. An address that is RESERVING is currently
                      in the process of being reserved. A RESERVED address is currently
                      reserved and available to use. An IN_USE address is currently
                      being used by another resource and is not available. \n Possible
                      values: \"IN_USE\" \"RESERVED\" \"RESERVING\""
                    type: string
                  users:
                    description: Users that are using this address.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: globaladdresses.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: GlobalAddress
    listKind: GlobalAddressList
    plural: globaladdresses
    singular: globaladdress
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.address
      name: IP
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A GlobalAddress is a managed resource that represents a Google
          Compute Engine Global Address.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A GlobalAddressSpec defines the desired state of a GlobalAddress.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'GlobalAddressParameters define the desired state of
                  a Google Compute Engine Global Address. Most fields map directly
                  to an Address: https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses'
                properties:
                  address:
                    description: 'Address: The static IP address represented by this
                      resource.'
                    type: string
                  addressType:
                    description: "AddressType: The type of address to reserve, either
                      INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
                      \n Possible values: \"EXTERNAL\" \"INTERNAL\" \"UNSPECIFIED_TYPE\""
                    enum:
                    - EXTERNAL
                    - INTERNAL
                    - UNSPECIFIED_TYPE
                    type: string
                  description:
                    description: 'Description: An optional description of this resource.'
                    type: string
                  ipVersion:
                    description: "IPVersion: The IP version that will be used by this
                      address. Valid options are IPV4 or IPV6. \n Possible values:
                      \"IPV4\" \"IPV6\" \"UNSPECIFIED_VERSION\""
                    enum:
                    - IPV6
                    - IPV4
                    - UNSPECIFIED_VERSION
                    type: string
                  network:
                    description: 'Network: The URL of the network in which to reserve
                      the address. This field can only be used with INTERNAL type
                      with the VPC_PEERING purpose.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network to retrieve its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  prefixLength:
                    description: 'PrefixLength: The prefix length if the resource
                      represents an IP range.'
                    format: int64
                    type: integer
                  purpose:
                    description: "Purpose: The purpose of this resource, which can
                      be one of the following values: - `GCE_ENDPOINT` for addresses
                      that are used by VM instances, alias IP ranges, internal load
                      balancers, and similar resources. - `DNS_RESOLVER` for a DNS
                      resolver address in a subnetwork - `VPC_PEERING` for addresses
                      that are reserved for VPC peer networks. - `NAT_AUTO` for addresses
                      that are external IP addresses automatically reserved for Cloud
                      NAT. \n Possible values: \"DNS_RESOLVER\" \"GCE_ENDPOINT\" \"NAT_AUTO\"
                      \"VPC_PEERING\""
                    enum:
                    - DNS_RESOLVER
                    - GCE_ENDPOINT
                    - NAT_AUTO
                    - VPC_PEERING
                    type: string
                  subnetwork:
                    description: 'Subnetwork: The URL of the subnetwork in which to
                      reserve the address. If an IP address is specified, it must
                      be within the subnetwork''s IP range. This field can only be
                      used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER
                      purpose.'
                    type: string
                  subnetworkRef:
                    description: SubnetworkRef references a Subnetwork to retrieve
                      its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetworkSelector:
                    description: SubnetworkSelector selects a reference to a Subnetwork
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A GlobalAddressStatus represents the observed state of a
              GlobalAddress.
            properties:
              atProvider:
                description: A GlobalAddressObservation reflects the observed state
                  of a GlobalAddress on GCP.
                properties:
                  creationTimestamp:
                    description: CreationTimestamp in RFC3339 text format.
                    type: string
                  id:
                    description: ID for the resource. This identifier is defined by
                      the server.
                    format: int64
                    type: integer
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                  status:
                    description: "Status of the address, which can be one of RESERVING,
                      RESERVED, or IN_USE. An address that is RESERVING is currently
                      in the process of being reserved. A RESERVED address is currently
                      reserved and available to use. An IN_USE address is currently
                      being used by another resource and is not available. \n Possible
                      values: \"IN_USE\" \"RESERVED\" \"RESERVING\""
                    type: string
                  users:
                    description: Users that are using this address.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: networks.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Network is a managed resource that represents a Google Compute
          Engine VPC Network.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A NetworkSpec defines the desired state of a Network.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'NetworkParameters define the desired state of a Google
                  Compute Engine VPC Network. Most fields map directly to a Network:
                  https://cloud.google.com/compute/docs/reference/rest/v1/networks'
                properties:
                  autoCreateSubnetworks:
                    description: "AutoCreateSubnetworks: When set to true, the VPC
                      network is created in \"auto\" mode. When set to false, the
                      VPC network is created in \"custom\" mode. When set to nil,
                      the VPC network is created in \"legacy\" mode which will be
                      deprecated by GCP soon. \n An auto mode VPC network starts with
                      one subnet per region. Each subnet has a predetermined range
                      as described in Auto mode VPC network IP ranges. \n This field
                      can only be updated from true to false after creation using
                      switchToCustomMode."
                    type: boolean
                  description:
                    description: 'Description: An optional description of this resource.
                      Provide this field when you create the resource.'
                    type: string
                  routingConfig:
                    description: 'RoutingConfig: The network-level routing configuration
                      for this network. Used by Cloud Router to determine what type
                      of network-wide routing behavior to enforce.'
                    properties:
                      routingMode:
                        description: "RoutingMode: The network-wide routing mode to
                          use. If set to REGIONAL, this network's Cloud Routers will
                          only advertise routes with subnets of this network in the
                          same region as the router. If set to GLOBAL, this network's
                          Cloud Routers will advertise routes with all subnets of
                          this network, across regions. \n Possible values: \"GLOBAL\"
                          \"REGIONAL\""
                        enum:
                        - GLOBAL
                        - REGIONAL
                        type: string
                    required:
                    - routingMode
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A NetworkStatus represents the observed state of a Network.
            properties:
              atProvider:
                description: A NetworkObservation represents the observed state of
                  a Google Compute Engine VPC Network.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: Creation timestamp in RFC3339
                      text format.'
                    type: string
                  gatewayIPv4:
                    description: 'GatewayIPv4: The gateway address for default routing
                      out of the network, selected by GCP.'
                    type: string
                  id:
                    description: 'Id: The unique identifier for the resource. This
                      identifier is defined by the server.'
                    format: int64
                    type: integer
                  peerings:
                    description: 'Peerings: A list of network peerings for the resource.'
                    items:
                      description: A NetworkPeering represents the observed state
                        of a Google Compute Engine VPC Network Peering.
                      properties:
                        autoCreateRoutes:
                          description: 'AutoCreateRoutes: This field will be deprecated
                            soon. Use the exchange_subnet_routes field instead. Indicates
                            whether full mesh connectivity is created and managed
                            automatically between peered networks. Currently this
                            field should always be true since Google Compute Engine
                            will automatically create and manage subnetwork routes
                            between two networks when peering state is ACTIVE.'
                          type: boolean
                        exchangeSubnetRoutes:
                          description: 'ExchangeSubnetRoutes: Indicates whether full
                            mesh connectivity is created and managed automatically
                            between peered networks. Currently this field should always
                            be true since Google Compute Engine will automatically
                            create and manage subnetwork routes between two networks
                            when peering state is ACTIVE.'
                          type: boolean
                        name:
                          description: 'Name: Name of this peering. Provided by the
                            client when the peering is created. The name must comply
                            with RFC1035. Specifically, the name must be 1-63 characters
                            long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`.
                            The first character must be a lowercase letter, and all
                            the following characters must be a dash, lowercase letter,
                            or digit, except the last character, which cannot be a
                            dash.'
                          type: string
                        network:
                          description: 'Network: The URL of the peer network. It can
                            be either full URL or partial URL. The peer network may
                            belong to a different project. If the partial URL does
                            not contain project, it is assumed that the peer network
                            is in the same project as the current network.'
                          type: string
                        state:
                          description: "State: State for the peering, either `ACTIVE`
                            or `INACTIVE`. The peering is `ACTIVE` when there's a
                            matching configuration in the peer network. \n Possible
                            values: \"ACTIVE\" \"INACTIVE\""
                          type: string
                        stateDetails:
                          description: 'StateDetails: Details about the current state
                            of the peering.'
                          type: string
                      type: object
                    type: array
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                  subnetworks:
                    description: 'Subnetworks: Server-defined fully-qualified URLs
                      for all subnetworks in this VPC network.'
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: subnetworks.compute.gcp.crossplane.io
spec:
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Subnetwork
    listKind: SubnetworkList
    plural: subnetworks
    singular: subnetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Subnetwork is a managed resource that represents a Google Compute
          Engine VPC Subnetwork.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A SubnetworkSpec defines the desired state of a Subnetwork.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'SubnetworkParameters define the desired state of a Google
                  Compute Engine VPC Subnetwork. Most fields map directly to a Subnetwork:
                  https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks'
                properties:
                  description:
                    description: 'Description: An optional description of this resource.
                      Provide this property when you create the resource. This field
                      can be set only at resource creation time.'
                    type: string
                  enableFlowLogs:
                    description: 'EnableFlowLogs: Whether to enable flow logging for
                      this subnetwork. If this field is not explicitly set, it will
                      not appear in get listings. If not set the default behavior
                      is to disable flow logging.'
                    type: boolean
                  ipCidrRange:
                    description: 'IPCIDRRange: The range of internal addresses that
                      are owned by this subnetwork. Provide this property when you
                      create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16.
                      Ranges must be unique and non-overlapping within a network.
                      Only IPv4 is supported. This field can be set only at resource
                      creation time.'
                    type: string
                  network:
                    description: 'Network: The URL of the network to which this subnetwork
                      belongs, provided by the client when initially creating the
                      subnetwork. Only networks that are in the distributed mode can
                      have subnetworks. This field can be set only at resource creation
                      time.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its
                      URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  privateIpGoogleAccess:
                    description: 'PrivateIPGoogleAccess: Whether the VMs in this subnet
                      can access Google services without assigned external IP addresses.
                      This field can be both set at resource creation time and updated
                      using setPrivateIPGoogleAccess.'
                    type: boolean
                  region:
                    description: 'Region: URL of the region where the Subnetwork resides.
                      This field can be set only at resource creation time.'
                    type: string
                  secondaryIpRanges:
                    description: 'SecondaryIPRanges: An array of configurations for
                      secondary IP ranges for VM instances contained in this subnetwork.
                      The primary IP of such VM must belong to the primary ipCidrRange
                      of the subnetwork. The alias IPs may belong to either primary
                      or secondary ranges. This field can be updated with a patch
                      request.'
                    items:
                      description: A SubnetworkSecondaryRange defines the state of
                        a Google Compute Engine VPC Subnetwork secondary range.
                      properties:
                        ipCidrRange:
                          description: 'IPCIDRRange: The range of IP addresses belonging
                            to this subnetwork secondary range. Provide this property
                            when you create the subnetwork. Ranges must be unique
                            and non-overlapping with all primary and secondary IP
                            ranges within a network. Only IPv4 is supported.'
                          type: string
                        rangeName:
                          description: 'RangeName: The name associated with this subnetwork
                            secondary range, used when adding an alias IP range to
                            a VM instance. The name must be 1-63 characters long,
                            and comply with RFC1035. The name must be unique within
                            the subnetwork.'
                          type: string
                      required:
                      - ipCidrRange
                      - rangeName
                      type: object
                    type: array
                required:
                - ipCidrRange
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A SubnetworkStatus represents the observed state of a Subnetwork.
            properties:
              atProvider:
                description: A SubnetworkObservation represents the observed state
                  of a Google Compute Engine VPC Subnetwork.
                properties:
                  creationTimestamp:
                    description: 'CreationTimestamp: Creation timestamp in RFC3339
                      text format.'
                    type: string
                  fingerprint:
                    description: "Fingerprint: Fingerprint of this resource. A hash
                      of the contents stored in this object. This field is used in
                      optimistic locking. This field will be ignored when inserting
                      a Subnetwork. An up-to-date fingerprint must be provided in
                      order to update the Subnetwork, otherwise the request will fail
                      with error 412 conditionNotMet. \n To see the latest fingerprint,
                      make a get() request to retrieve a Subnetwork."
                    type: string
                  gatewayAddress:
                    description: 'GatewayAddress: The gateway address for default
                      routes to reach destination addresses outside this subnetwork.'
                    type: string
                  id:
                    description: 'Id: The unique identifier for the resource. This
                      identifier is defined by the server.'
                    format: int64
                    type: integer
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: nodepools.container.gcp.crossplane.io
spec:
  group: container.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.status
      name: STATE
      type: string
    - jsonPath: .spec.forProvider.clusterRef.name
      name: CLUSTER-REF
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A NodePool is a managed resource that represents a Google Kubernetes
          Engine node pool.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A NodePoolSpec defines the desired state of a NodePool.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: NodePoolParameters define the desired state of a Google
                  Kubernetes Engine node pool.
                properties:
                  autoscaling:
                    description: 'Autoscaling: Autoscaler configuration for this NodePool.
                      Autoscaler is enabled only if a valid configuration is present.'
                    properties:
                      autoprovisioned:
                        description: 'Autoprovisioned: Can this node pool be deleted
                          automatically.'
                        type: boolean
                      enabled:
                        description: 'Enabled: Is autoscaling enabled for this node
                          pool.'
                        type: boolean
                      maxNodeCount:
                        description: 'MaxNodeCount: Maximum number of nodes in the
                          NodePool. Must be >= min_node_count. There has to enough
                          quota to scale up the cluster.'
                        format: int64
                        type: integer
                      minNodeCount:
                        description: 'MinNodeCount: Minimum number of nodes in the
                          NodePool. Must be >= 1 and <= max_node_count.'
                        format: int64
                        type: integer
                    type: object
                  cluster:
                    description: 'Cluster: The resource link for the GKE cluster to
                      which the NodePool will attach. Must be of format projects/projectID/locations/clusterLocation/clusters/clusterName.
                      Must be supplied if ClusterRef is not.'
                    type: string
                  clusterRef:
                    description: ClusterRef sets the Cluster field by resolving the
                      resource link of the referenced Crossplane GKECluster managed
                      resource.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterSelector:
                    description: ClusterSelector selects a reference to resolve the
                      resource link of the referenced Crossplane GKECluster managed
                      resource.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  config:
                    description: 'Config: The node configuration of the pool.'
                    properties:
                      accelerators:
                        description: 'Accelerators: A list of hardware accelerators
                          to be attached to each node. See https://cloud.google.com/compute/docs/gpus
                          for more information about support for GPUs.'
                        items:
                          description: AcceleratorConfig represents a Hardware Accelerator
                            request.
                          properties:
                            acceleratorCount:
                              description: 'AcceleratorCount: The number of the accelerator
                                cards exposed to an instance.'
                              format: int64
                              type: integer
                            acceleratorType:
                              description: 'AcceleratorType: The accelerator type
                                resource name. List of supported accelerators [here](/compute/docs/gpus/#Introduction)'
                              type: string
                          type: object
                        type: array
                      bootDiskKmsKey:
                        description: 'BootDiskKmsKey:  The Customer Managed Encryption
                          Key used to encrypt the boot disk attached to each node
                          in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cr
                          yptoKeys/[KEY_NAME]. For more information about protecting
                          resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
                        type: string
                      diskSizeGb:
                        description: "DiskSizeGb: Size of the disk attached to each
                          node, specified in GB. The smallest allowed disk size is
                          10GB. \n If unspecified, the default disk size is 100GB."
                        format: int64
                        type: integer
                      diskType:
                        description: "DiskType: Type of the disk attached to each
                          node (e.g. 'pd-standard' or 'pd-ssd') \n If unspecified,
                          the default disk type is 'pd-standard'"
                        type: string
                      imageType:
                        description: 'ImageType: The image type to use for this node.
                          Note that for a given image type, the latest version of
                          it will be used.'
                        type: string
                      kubeletConfig:
                        description: 'KubeletConfig: Node kubelet configs.'
                        properties:
                          cpuCfsQuota:
                            description: 'CpuCfsQuota: Enable CPU CFS quota enforcement
                              for containers that specify CPU limits. This option
                              is enabled by default which makes kubelet use CFS quota
                              (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt)
                              to enforce container CPU limits. Otherwise, CPU limits
                              will not be enforced at all. Disable this option to
                              mitigate CPU throttling problems while still having
                              your pods to be in Guaranteed QoS class by specifying
                              the CPU limits. The default value is ''true'' if unspecified.'
                            type: boolean
                          cpuCfsQuotaPeriod:
                            description: 'CpuCfsQuotaPeriod: Set the CPU CFS quota
                              period value ''cpu.cfs_period_us''. The string must
                              be a sequence of decimal numbers, each with optional
                              fraction and a unit suffix, such as "300ms". Valid time
                              units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                              The value must be a positive duration.'
                            type: string
                          cpuManagerPolicy:
                            description: 'CpuManagerPolicy: Control the CPU management
                              policy on the node. See https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/
                              The following values are allowed. - "none": the default,
                              which represents the existing scheduling behavior. -
                              "static": allows pods with certain resource characteristics
                              to be granted increased CPU affinity and exclusivity
                              on the node. The default value is ''none'' if unspecified.'
                            type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Labels: The map of Kubernetes labels (key/value
                          pairs) to be applied to each node. These will added in addition
                          to any default label(s) that Kubernetes may apply to the
                          node. In case of conflict in label keys, the applied set
                          may differ depending on the Kubernetes version -- it''s
                          best to assume the behavior is undefined and conflicts should
                          be avoided. For more information, including usage and the
                          valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects
                          /labels/'
                        type: object
                      linuxNodeConfig:
                        description: 'LinuxNodeConfig: Parameters that can be configured
                          on Linux nodes.'
                        properties:
                          sysctls:
                            additionalProperties:
                              type: string
                            description: 'Sysctls: The Linux kernel parameters to
                              be applied to the nodes and all pods running on the
                              nodes. The following parameters are supported. net.core.netdev_max_backlog
                              net.core.rmem_max net.core.wmem_default net.core.wmem_max
                              net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem
                              net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse'
                            type: object
                        required:
                        - sysctls
                        type: object
                      localSsdCount:
                        description: "LocalSsdCount: The number of local SSD disks
                          to be attached to the node. \n The limit for this value
                          is dependant upon the maximum number of disks available
                          on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_l
                          imits for more information."
                        format: int64
                        type: integer
                      machineType:
                        description: "MachineType: The name of a Google Compute Engine
                          [machine type](/compute/docs/machine-types) (e.g. `n1-standard-1`).
                          \n If unspecified, the default machine type is `n1-standard-1`."
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: "Metadata: The metadata key/value pairs assigned
                          to instances in the cluster. \n Keys must conform to the
                          regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length.
                          These are reflected as part of a URL in the metadata server.
                          Additionally, to avoid ambiguity, keys must not conflict
                          with any other metadata keys for the project or be one of
                          the reserved keys: \"cluster-location\" \"cluster-name\"
                          \"cluster-uid\" \"configure-sh\" \"containerd-configure-sh\"
                          \"enable-oslogin\" \"gci-ensure-gke-docker\" \"gci-update-strategy\"
                          \"instance-template\" \"kube-env\" \"startup-script\" \"user-data\"
                          \"disable-address-manager\" \"windows-startup-script-ps1\"
                          \"common-psm1\" \"k8s-node-setup-psm1\" \"install-ssh-psm1\"
                          \"user-profile-psm1\" \"serial-port-logging-enable\" Values
                          are free-form strings, and only have meaning as interpreted
                          by the image running in the instance. The only restriction
                          placed on them is that each value's size must be less than
                          or equal to 32 KB. \n The total size of all keys and values
                          must be less than 512 KB."
                        type: object
                      minCpuPlatform:
                        description: 'MinCpuPlatform: Minimum CPU platform to be used
                          by this instance. The instance may be scheduled on the specified
                          or newer CPU platform. Applicable values are the friendly
                          names of CPU platforms, such as <code>minCpuPlatform: &quot;Intel
                          Haswell&quot;</code> or <code>minCpuPlatform: &quot;Intel
                          Sandy Bridge&quot;</code>. For more information, read [how
                          to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-
                          min-cpu-platform)'
                        type: string
                      nodeGroup:
                        description: 'NodeGroup: Setting this field will assign instances
                          of this pool to run on the specified node group. This is
                          useful for running workloads on sole tenant nodes (https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).'
                        type: string
                      oauthScopes:
                        description: "OauthScopes: The set of Google API scopes to
                          be made available on all of the node VMs under the \"default\"
                          service account. \n The following scopes are recommended,
                          but not required, and by default are not included: \n *
                          `https://www.googleapis.com/auth/compute` is required for
                          mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only`
                          is required for communicating with **gcr.io** (the [Google
                          Container Registry](/container-registry/)). \n If unspecified,
                          no scopes are added, unless Cloud Logging or Cloud Monitoring
                          are enabled, in which case their required scopes will be
                          added."
                        items:
                          type: string
                        type: array
                      preemptible:
                        description: 'Preemptible: Whether the nodes are created as
                          preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible
                          for more inforamtion about preemptible VM instances.'
                        type: boolean
                      reservationAffinity:
                        description: 'ReservationAffinity: The optional reservation
                          affinity. Setting this field will apply the specified Zonal
                          Compute Reservation (https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
                          to this node pool.'
                        properties:
                          consumeReservationType:
                            description: "ConsumeReservationType: Corresponds to the
                              type of reservation consumption. \n Possible values:
                              \"UNSPECIFIED\" - Default value. This should not be
                              used. \"NO_RESERVATION\" - Do not consume from any reserved
                              capacity. \"ANY_RESERVATION\" - Consume any reservation
                              available. \"SPECIFIC_RESERVATION\" - Must consume from
                              a specific reservation. Must specify key value fields
                              for specifying the reservations."
                            type: string
                          key:
                            description: 'Key: Corresponds to the label key of a reservation
                              resource. To target a SPECIFIC_RESERVATION by name,
                              specify "googleapis.com/reservation-name" as the key
                              and specify the name of your reservation as its value.'
                            type: string
                          values:
                            description: 'Values: Corresponds to the label value(s)
                              of reservation resource(s).'
                            items:
                              type: string
                            type: array
                        type: object
                      sandboxConfig:
                        description: 'SandboxConfig: Sandbox configuration for this
                          node.'
                        properties:
                          type:
                            description: "Type: Type of the sandbox to use for the
                              node. \n Possible values: \"UNSPECIFIED\" - Default
                              value. This should not be used. \"GVISOR\" - Run sandbox
                              using gvisor."
                            type: string
                        required:
                        - type
                        type: object
                      serviceAccount:
                        description: 'ServiceAccount: The Google Cloud Platform Service
                          Account to be used by the node VMs. If no Service Account
                          is specified, the "default" service account is used.'
                        type: string
                      shieldedInstanceConfig:
                        description: 'ShieldedInstanceConfig: Shielded Instance options.'
                        properties:
                          enableIntegrityMonitoring:
                            description: "EnableIntegrityMonitoring: Defines whether
                              the instance has integrity monitoring enabled. \n Enables
                              monitoring and attestation of the boot integrity of
                              the instance. The attestation is performed against the
                              integrity policy baseline. This baseline is initially
                              derived from the implicitly trusted boot image when
                              the instance is created."
                            type: boolean
                          enableSecureBoot:
                            description: "EnableSecureBoot: Defines whether the instance
                              has Secure Boot enabled. \n Secure Boot helps ensure
                              that the system only runs authentic software by verifying
                              the digital signature of all boot components, and halting
                              the boot process if signature verification fails."
                            type: boolean
                        type: object
                      tags:
                        description: 'Tags: The list of instance tags applied to all
                          nodes. Tags are used to identify valid sources or targets
                          for network firewalls and are specified by the client during
                          cluster or node pool creation. Each tag within the list
                          must comply with RFC1035.'
                        items:
                          type: string
                        type: array
                      taints:
                        description: "Taints: List of kubernetes taints to be applied
                          to each node. \n For more information, including usage and
                          the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toler
                          ation/"
                        items:
                          description: "NodeTaint is a Kubernetes taint is comprised
                            of three fields: key, value, and effect. Effect can only
                            be one of three types:  NoSchedule, PreferNoSchedule or
                            NoExecute. \n For more information, including usage and
                            the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toler
                            ation/"
                          properties:
                            effect:
                              description: "Effect: Effect for taint. \n Possible
                                values: \"EFFECT_UNSPECIFIED\" - Not set \"NO_SCHEDULE\"
                                - NoSchedule \"PREFER_NO_SCHEDULE\" - PreferNoSchedule
                                \"NO_EXECUTE\" - NoExecute"
                              type: string
                            key:
                              description: 'Key: Key for taint.'
                              type: string
                            value:
                              description: 'Value: Value for taint.'
                              type: string
                          required:
                          - effect
                          - key
                          - value
                          type: object
                        type: array
                      workloadMetadataConfig:
                        description: 'WorkloadMetadataConfig: The workload metadata
                          configuration for this node.'
                        properties:
                          mode:
                            description: "Mode: Mode is the configuration for how
                              to expose metadata to workloads running on the node
                              pool. \n Possible values: \"MODE_UNSPECIFIED\" - Not
                              set. \"GCE_METADATA\" - Expose all Compute Engine metadata
                              to pods. \"GKE_METADATA\" - Run the GKE Metadata Server
                              on this node. The GKE Metadata Server exposes a metadata
                              API to workloads that is compatible with the V1 Compute
                              Metadata APIs exposed by the Compute Engine and App
                              Engine Metadata Servers. This feature can only be enabled
                              if Workload Identity is enabled at the cluster level."
                            type: string
                        required:
                        - mode
                        type: object
                    type: object
                  initialNodeCount:
                    description: 'InitialNodeCount: The initial node count for the
                      pool. You must ensure that your Compute Engine <a href="/compute/docs/resource-quotas">resource
                      quota</a> is sufficient for this number of instances. You must
                      also have available firewall and routes quota.'
                    format: int64
                    type: integer
                  locations:
                    description: 'Locations: The list of Google Compute Engine [zones](/compute/docs/zones#available)
                      in which the NodePool''s nodes should be located.'
                    items:
                      type: string
                    type: array
                  management:
                    description: 'Management: NodeManagement configuration for this
                      NodePool.'
                    properties:
                      autoRepair:
                        description: 'AutoRepair: Whether the nodes will be automatically
                          repaired.'
                        type: boolean
                      autoUpgrade:
                        description: 'AutoUpgrade: Whether the nodes will be automatically
                          upgraded.'
                        type: boolean
                    type: object
                  maxPodsConstraint:
                    description: 'MaxPodsConstraint: The constraint on the maximum
                      number of pods that can be run simultaneously on a node in the
                      node pool.'
                    properties:
                      maxPodsPerNode:
                        description: 'MaxPodsPerNode: Constraint enforced on the max
                          num of pods per node.'
                        format: int64
                        type: integer
                    required:
                    - maxPodsPerNode
                    type: object
                  upgradeSettings:
                    description: 'UpgradeSettings: Upgrade settings control disruption
                      and speed of the upgrade.'
                    properties:
                      maxSurge:
                        description: 'MaxSurge: The maximum number of nodes that can
                          be created beyond the current size of the node pool during
                          the upgrade process.'
                        format: int64
                        type: integer
                      maxUnavailable:
                        description: 'MaxUnavailable: The maximum number of nodes
                          that can be simultaneously unavailable during the upgrade
                          process. A node is considered available if its status is
                          Ready.'
                        format: int64
                        type: integer
                    type: object
                  version:
                    description: 'Version: The version of the Kubernetes of this node.'
                    type: string
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A NodePoolStatus represents the observed state of a NodePool.
            properties:
              atProvider:
                description: NodePoolObservation is used to show the observed state
                  of the GKE Node Pool resource on GCP.
                properties:
                  conditions:
                    description: 'Conditions: Which conditions caused the current
                      node pool state.'
                    items:
                      description: StatusCondition describes why a cluster or a node
                        pool has a certain status (e.g., ERROR or DEGRADED).
                      properties:
                        code:
                          description: "Code: Machine-friendly representation of the
                            condition \n Possible values: \"UNKNOWN\" - UNKNOWN indicates
                            a generic condition. \"GCE_STOCKOUT\" - GCE_STOCKOUT indicates
                            a Google Compute Engine stockout. \"GKE_SERVICE_ACCOUNT_DELETED\"
                            - GKE_SERVICE_ACCOUNT_DELETED indicates that the user
                            deleted their robot service account. \"GCE_QUOTA_EXCEEDED\"
                            - Google Compute Engine quota was exceeded. \"SET_BY_OPERATOR\"
                            - Cluster state was manually changed by an SRE due to
                            a system logic error. More codes TBA"
                          type: string
                        message:
                          description: 'Message: Human-friendly representation of
                            the condition'
                          type: string
                      type: object
                    type: array
                  instanceGroupUrls:
                    description: 'InstanceGroupUrls: The resource URLs of the [managed
                      instance groups](/compute/docs/instance-groups/creating-groups-of-mana
                      ged-instances) associated with this node pool.'
                    items:
                      type: string
                    type: array
                  management:
                    description: 'Management: NodeManagement configuration for this
                      NodePool.'
                    properties:
                      upgradeOptions:
                        description: 'UpgradeOptions: Specifies the Auto Upgrade knobs
                          for the node pool.'
                        properties:
                          autoUpgradeStartTime:
                            description: 'AutoUpgradeStartTime: This field is set
                              when upgrades are about to commence with the approximate
                              start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                              text format.'
                            type: string
                          description:
                            description: 'Description: This field is set when upgrades
                              are about to commence with the description of the upgrade.'
                            type: string
                        type: object
                    type: object
                  podIpv4CidrSize:
                    description: 'PodIpv4CidrSize: The pod CIDR block size per node
                      in this node pool.'
                    format: int64
                    type: integer
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                  status:
                    description: "Status: The status of the nodes in this pool instance.
                      \n Possible values: \"STATUS_UNSPECIFIED\" - Not set. \"PROVISIONING\"
                      - The PROVISIONING state indicates the node pool is being created.
                      \"RUNNING\" - The RUNNING state indicates the node pool has
                      been created and is fully usable. \"RUNNING_WITH_ERROR\" - The
                      RUNNING_WITH_ERROR state indicates the node pool has been created
                      and is partially usable. Some error state has occurred and some
                      functionality may be impaired. Customer may need to reissue
                      a request or trigger a new update. \"RECONCILING\" - The RECONCILING
                      state indicates that some work is actively being done on the
                      node pool, such as upgrading node software. Details can be found
                      in the `statusMessage` field. \"STOPPING\" - The STOPPING state
                      indicates the node pool is being deleted. \"ERROR\" - The ERROR
                      state indicates the node pool may be unusable. Details can be
                      found in the `statusMessage` field."
                    type: string
                  statusMessage:
                    description: 'StatusMessage: Additional information about the
                      current status of this node pool instance, if available.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: clusters.container.gcp.crossplane.io
spec:
  group: container.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.status
      name: STATE
      type: string
    - jsonPath: .status.atProvider.endpoint
      name: ENDPOINT
      type: string
    - jsonPath: .spec.forProvider.location
      name: LOCATION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: A Cluster is a managed resource that represents a Google Kubernetes
          Engine cluster.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ClusterSpec defines the desired state of a Cluster.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ClusterParameters define the desired state of a Google
                  Kubernetes Engine cluster. Most of its fields are direct mirror
                  of GCP Cluster object. See https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster
                properties:
                  addonsConfig:
                    description: 'AddonsConfig: Configurations for the various addons
                      available to run in the cluster.'
                    properties:
                      cloudRunConfig:
                        description: 'CloudRunConfig: Configuration for the Cloud
                          Run addon. The `IstioConfig` addon must be enabled in order
                          to enable Cloud Run addon. This option can only be enabled
                          at cluster creation time.'
                        properties:
                          disabled:
                            description: 'Disabled: Whether Cloud Run addon is enabled
                              for this cluster.'
                            type: boolean
                          loadBalancerType:
                            description: "LoadBalancerType: Which load balancer type
                              is installed for Cloud Run. \n Possible values: \"LOAD_BALANCER_TYPE_UNSPECIFIED\"
                              - Load balancer type for Cloud Run is unspecified. \"LOAD_BALANCER_TYPE_EXTERNAL\"
                              - Install external load balancer for Cloud Run. \"LOAD_BALANCER_TYPE_INTERNAL\"
                              - Install internal load balancer for Cloud Run."
                            type: string
                        required:
                        - disabled
                        type: object
                      configConnectorConfig:
                        description: 'ConfigConnectorConfig: Configuration for the
                          ConfigConnector add-on, a Kubernetes extension to manage
                          hosted GCP services through the Kubernetes API'
                        properties:
                          enabled:
                            description: 'Enabled: Whether Cloud Connector is enabled
                              for this cluster.'
                            type: boolean
                        required:
                        - enabled
                        type: object
                      dnsCacheConfig:
                        description: 'DNSCacheConfig: Configuration for NodeLocalDNS,
                          a dns cache running on cluster nodes'
                        properties:
                          enabled:
                            description: 'Enabled: Whether NodeLocal DNSCache is enabled
                              for this cluster.'
                            type: boolean
                        required:
                        - enabled
                        type: object
                      gcePersistentDiskCsiDriverConfig:
                        description: 'GCEPersistentDiskCSIDriverConfig: Configuration
                          for the GCP Compute Persistent Disk CSI driver.'
                        properties:
                          enabled:
                            description: 'Enabled: Whether the GCE PD CSI driver is
                              enabled for this cluster.'
                            type: boolean
                        required:
                        - enabled
                        type: object
                      horizontalPodAutoscaling:
                        description: 'HorizontalPodAutoscaling: Configuration for
                          the horizontal pod autoscaling feature, which increases
                          or decreases the number of replica pods a replication controller
                          has based on the resource usage of the existing pods.'
                        properties:
                          disabled:
                            description: 'Disabled: Whether the Horizontal Pod Autoscaling
                              feature is enabled in the cluster. When enabled, it
                              ensures that a Heapster pod is running in the cluster,
                              which is also used by the Cloud Monitoring service.'
                            type: boolean
                        required:
                        - disabled
                        type: object
                      httpLoadBalancing:
                        description: 'HTTpLoadBalancing: Configuration for the HTTP
                          (L7) load balancing controller addon, which makes it easy
                          to set up HTTP load balancers for services in a cluster.'
                        properties:
                          disabled:
                            description: 'Disabled: Whether the HTTP Load Balancing
                              controller is enabled in the cluster. When enabled,
                              it runs a small pod in the cluster that manages the
                              load balancers.'
                            type: boolean
                        required:
                        - disabled
                        type: object
                      kubernetesDashboard:
                        description: 'KubernetesDashboard: Configuration for the Kubernetes
                          Dashboard. This addon is deprecated, and will be disabled
                          in 1.15. It is recommended to use the Cloud Console to manage
                          and monitor your Kubernetes clusters, workloads and applications.
                          For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards'
                        properties:
                          disabled:
                            description: 'Disabled: Whether the Kubernetes Dashboard
                              is enabled for this cluster.'
                            type: boolean
                        required:
                        - disabled
                        type: object
                      networkPolicyConfig:
                        description: 'NetworkPolicyConfig: Configuration for NetworkPolicy.
                          This only tracks whether the addon is enabled or not on
                          the Master, it does not track whether network policy is
                          enabled for the nodes.'
                        properties:
                          disabled:
                            description: 'Disabled: Whether NetworkPolicy is enabled
                              for this cluster.'
                            type: boolean
                        required:
                        - disabled
                        type: object
                    type: object
                  authenticatorGroupsConfig:
                    description: 'AuthenticatorGroupsConfig: Configuration controlling
                      RBAC group membership information.'
                    properties:
                      enabled:
                        description: 'Enabled: Whether this cluster should return
                          group membership lookups during authentication using a group
                          of security groups.'
                        type: boolean
                      securityGroup:
                        description: 'SecurityGroup: The name of the security group-of-groups
                          to be used. Only relevant if enabled = true.'
                        type: string
                    type: object
                  autopilot:
                    description: 'Autopilot: Autopilot configuration for the cluster.'
                    properties:
                      enabled:
                        description: 'Enabled: Enable Autopilot'
                        type: boolean
                    required:
                    - enabled
                    type: object
                  autoscaling:
                    description: 'Autoscaling: Cluster-level autoscaling configuration.'
                    properties:
                      autoprovisioningLocations:
                        description: 'AutoprovisioningLocations: The list of Google
                          Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available)
                          in which the NodePool''s nodes can be created by NAP.'
                        items:
                          type: string
                        type: array
                      autoprovisioningNodePoolDefaults:
                        description: 'AutoprovisioningNodePoolDefaults: AutoprovisioningNodePoolDefaults
                          contains defaults for a node pool created by NAP.'
                        properties:
                          bootDiskKmsKey:
                            description: 'BootDiskKmsKey: The Customer Managed Encryption
                              Key used to encrypt the boot disk attached to each node
                              in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cr
                              yptoKeys/[KEY_NAME]. For more information about protecting
                              resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption'
                            type: string
                          diskSizeGb:
                            description: 'DiskSizeGb: Size of the disk attached to
                              each node, specified in GB. The smallest allowed disk
                              size is 10GB. If unspecified, the default disk size
                              is 100GB.'
                            format: int64
                            type: integer
                          diskType:
                            description: 'DiskType: Type of the disk attached to each
                              node (e.g. ''pd-standard'', ''pd-ssd'' or ''pd-balanced'')
                              If unspecified, the default disk type is ''pd-standard'''
                            type: string
                          management:
                            description: 'Management: Specifies the node management
                              options for NAP created node-pools.'
                            properties:
                              autoRepair:
                                description: 'AutoRepair: A flag that specifies whether
                                  the node auto-repair is enabled for the node pool.
                                  If enabled, the nodes in this node pool will be
                                  monitored and, if they fail health checks too many
                                  times, an automatic repair action will be triggered.'
                                type: boolean
                              autoUpgrade:
                                description: 'AutoUpgrade: A flag that specifies whether
                                  node auto-upgrade is enabled for the node pool.
                                  If enabled, node auto-upgrade helps keep the nodes
                                  in your node pool up to date with the latest release
                                  version of Kubernetes.'
                                type: boolean
                            type: object
                          minCpuPlatform:
                            description: 'MinCpuPlatform: Minimum CPU platform to
                              be used for NAP created node pools. The instance may
                              be scheduled on the specified or newer CPU platform.
                              Applicable values are the friendly names of CPU platforms,
                              such as minCpuPlatform: Intel Haswell or minCpuPlatform:
                              Intel Sandy Bridge. For more information, read how to
                              specify min CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
                              To unset the min cpu platform field pass "automatic"
                              as field value.'
                            type: string
                          oauthScopes:
                            description: 'OauthScopes: Scopes that are used by NAP
                              when creating node pools. If oauth_scopes are specified,
                              service_account should be empty.'
                            items:
                              type: string
                            type: array
                          serviceAccount:
                            description: 'ServiceAccount: The Google Cloud Platform
                              Service Account to be used by the node VMs. If service_account
                              is specified, scopes should be empty.'
                            type: string
                          shieldedInstanceConfig:
                            description: 'ShieldedInstanceConfig: Shielded Instance
                              options.'
                            properties:
                              enableIntegrityMonitoring:
                                description: 'EnableIntegrityMonitoring: Defines whether
                                  the instance has integrity monitoring enabled. Enables
                                  monitoring and attestation of the boot integrity
                                  of the instance. The attestation is performed against
                                  the integrity policy baseline. This baseline is
                                  initially derived from the implicitly trusted boot
                                  image when the instance is created.'
                                type: boolean
                              enableSecureBoot:
                                description: 'EnableSecureBoot: Defines whether the
                                  instance has Secure Boot enabled. Secure Boot helps
                                  ensure that the system only runs authentic software
                                  by verifying the digital signature of all boot components,
                                  and halting the boot process if signature verification
                                  fails.'
                                type: boolean
                            type: object
                          upgradeSettings:
                            description: 'UpgradeSettings: Specifies the upgrade settings
                              for NAP created node pools'
                            properties:
                              maxSurge:
                                description: 'MaxSurge: The maximum number of nodes
                                  that can be created beyond the current size of the
                                  node pool during the upgrade process.'
                                format: int64
                                type: integer
                              maxUnavailable:
                                description: 'MaxUnavailable: The maximum number of
                                  nodes that can be simultaneously unavailable during
                                  the upgrade process. A node is considered available
                                  if its status is Ready.'
                                format: int64
                                type: integer
                            type: object
                        type: object
                      enableNodeAutoprovisioning:
                        description: 'EnableNodeAutoprovisioning: Enables automatic
                          node pool creation and deletion.'
                        type: boolean
                      resourceLimits:
                        description: 'ResourceLimits: Contains global constraints
                          regarding minimum and maximum amount of resources in the
                          cluster.'
                        items:
                          description: ResourceLimit contains information about amount
                            of some resource in the cluster. For memory, value should
                            be in GB.
                          properties:
                            maximum:
                              description: 'Maximum: Maximum amount of the resource
                                in the cluster.'
                              format: int64
                              type: integer
                            minimum:
                              description: 'Minimum: Minimum amount of the resource
                                in the cluster.'
                              format: int64
                              type: integer
                            resourceType:
                              description: 'ResourceType: Resource name "cpu", "memory"
                                or gpu-specific string.'
                              type: string
                          type: object
                        type: array
                    type: object
                  binaryAuthorization:
                    description: 'BinaryAuthorization: Configuration for Binary Authorization.'
                    properties:
                      enabled:
                        description: 'Enabled: Enable Binary Authorization for this
                          cluster. If enabled, all container images will be validated
                          by Google Binauthz.'
                        type: boolean
                    required:
                    - enabled
                    type: object
                  clusterIpv4Cidr:
                    description: "ClusterIpv4Cidr: The IP address range of the container
                      pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                      \n notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically
                      chosen or specify a `/14` block in `10.0.0.0/8`."
                    type: string
                  confidentialNodes:
                    description: 'ConfidentialNodes: Configuration of Confidential
                      Nodes'
                    properties:
                      enabled:
                        description: 'Enabled: Whether Confidential Nodes feature
                          is enabled for all nodes in this cluster.'
                        type: boolean
                    required:
                    - enabled
                    type: object
                  databaseEncryption:
                    description: 'DatabaseEncryption: Configuration of etcd encryption.'
                    properties:
                      keyName:
                        description: 'KeyName: Name of CloudKMS key to use for the
                          encryption of secrets in etcd. Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-ke
                          y'
                        type: string
                      state:
                        description: "State: Denotes the state of etcd encryption.
                          \n Possible values: \"UNKNOWN\" - Should never be set \"ENCRYPTED\"
                          - Secrets in etcd are encrypted. \"DECRYPTED\" - Secrets
                          in etcd are stored in plain text (at etcd level) - this
                          is unrelated to Google Compute Engine level full disk encryption."
                        type: string
                    type: object
                  defaultMaxPodsConstraint:
                    description: 'DefaultMaxPodsConstraint: The default constraint
                      on the maximum number of pods that can be run simultaneously
                      on a node in the node pool of this cluster. Only honored if
                      cluster created with IP Alias support.'
                    properties:
                      maxPodsPerNode:
                        description: 'MaxPodsPerNode: Constraint enforced on the max
                          num of pods per node.'
                        format: int64
                        type: integer
                    required:
                    - maxPodsPerNode
                    type: object
                  description:
                    description: 'Description: An optional description of this cluster.'
                    type: string
                  enableKubernetesAlpha:
                    description: 'EnableKubernetesAlpha: Kubernetes alpha features
                      are enabled on this cluster. This includes alpha API groups
                      (e.g. v1alpha1) and features that may not be production ready
                      in the kubernetes version of the master and nodes. The cluster
                      has no SLA for uptime and master/node upgrades are disabled.
                      Alpha enabled clusters are automatically deleted thirty days
                      after creation.'
                    type: boolean
                  enableTpu:
                    description: 'EnableTpu: Enable the ability to use Cloud TPUs
                      in this cluster.'
                    type: boolean
                  initialClusterVersion:
                    description: "InitialClusterVersion: The initial Kubernetes version
                      for this cluster.  Valid versions are those found in validMasterVersions
                      returned by getServerConfig.  The version can be upgraded over
                      time; such upgrades are reflected in currentMasterVersion and
                      currentNodeVersion. \n Users may specify either explicit versions
                      offered by Kubernetes Engine or version aliases, which have
                      the following behavior: \n - \"latest\": picks the highest valid
                      Kubernetes version - \"1.X\": picks the highest valid patch+gke.N
                      patch in the 1.X version - \"1.X.Y\": picks the highest valid
                      gke.N patch in the 1.X.Y version - \"1.X.Y-gke.N\": picks an
                      explicit Kubernetes version - \"\",\"-\": picks the default
                      Kubernetes version"
                    type: string
                  ipAllocationPolicy:
                    description: 'IPAllocationPolicy: Configuration for cluster IP
                      allocation.'
                    properties:
                      clusterIpv4CidrBlock:
                        description: "ClusterIpv4CidrBlock: The IP address range for
                          the cluster pod IPs. If this field is set, then `cluster.cluster_ipv4_cidr`
                          must be left blank. \n This field is only applicable when
                          `use_ip_aliases` is true. \n Set to blank to have a range
                          chosen with the default size. \n Set to /netmask (e.g. `/14`)
                          to have a range chosen with a specific netmask. \n Set to
                          a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                          \n notation (e.g. `10.96.0.0/14`) from the RFC-1918 private
                          networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`)
                          to pick a specific range to use."
                        type: string
                      clusterSecondaryRangeName:
                        description: "ClusterSecondaryRangeName: The name of the secondary
                          range to be used for the cluster CIDR block.  The secondary
                          range will be used for pod IP addresses. This must be an
                          existing secondary range associated with the cluster subnetwork.
                          \n This field is only applicable with use_ip_aliases is
                          true and create_subnetwork is false."
                        type: string
                      createSubnetwork:
                        description: "CreateSubnetwork: Whether a new subnetwork will
                          be created automatically for the cluster. \n This field
                          is only applicable when `use_ip_aliases` is true."
                        type: boolean
                      nodeIpv4CidrBlock:
                        description: "NodeIpv4CidrBlock: The IP address range of the
                          instance IPs in this cluster. \n This is applicable only
                          if `create_subnetwork` is true. \n Set to blank to have
                          a range chosen with the default size. \n Set to /netmask
                          (e.g. `/14`) to have a range chosen with a specific netmask.
                          \n Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                          \n notation (e.g. `10.96.0.0/14`) from the RFC-1918 private
                          networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`)
                          to pick a specific range to use."
                        type: string
                      servicesIpv4CidrBlock:
                        description: "ServicesIpv4CidrBlock: The IP address range
                          of the services IPs in this cluster. If blank, a range will
                          be automatically chosen with the default size. \n This field
                          is only applicable when `use_ip_aliases` is true. \n Set
                          to blank to have a range chosen with the default size. \n
                          Set to /netmask (e.g. `/14`) to have a range chosen with
                          a specific netmask. \n Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                          \n notation (e.g. `10.96.0.0/14`) from the RFC-1918 private
                          networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`)
                          to pick a specific range to use."
                        type: string
                      servicesSecondaryRangeName:
                        description: "ServicesSecondaryRangeName: The name of the
                          secondary range to be used as for the services CIDR block.
                          \ The secondary range will be used for service ClusterIPs.
                          This must be an existing secondary range associated with
                          the cluster subnetwork. \n This field is only applicable
                          with use_ip_aliases is true and create_subnetwork is false."
                        type: string
                      subnetworkName:
                        description: 'SubnetworkName: A custom subnetwork name to
                          be used if `create_subnetwork` is true.  If this field is
                          empty, then an automatic name will be chosen for the new
                          subnetwork.'
                        type: string
                      tpuIpv4CidrBlock:
                        description: "TpuIpv4CidrBlock: The IP address range of the
                          Cloud TPUs in this cluster. If unspecified, a range will
                          be automatically chosen with the default size. \n This field
                          is only applicable when `use_ip_aliases` is true. \n If
                          unspecified, the range will use the default size. \n Set
                          to /netmask (e.g. `/14`) to have a range chosen with a specific
                          netmask. \n Set to a [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                          \n notation (e.g. `10.96.0.0/14`) from the RFC-1918 private
                          networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`)
                          to pick a specific range to use."
                        type: string
                      useIpAliases:
                        description: 'UseIPAliases: Whether alias IPs will be used
                          for pod IPs in the cluster.'
                        type: boolean
                      useRoutes:
                        description: 'UseRoutes: Whether routes will be used for pod
                          IPs in the cluster. This is used in conjunction with use_ip_aliases.
                          It cannot be true if use_ip_aliases is true. If both use_ip_aliases
                          and use_routes are false, then the server picks the default
                          IP allocation mode'
                        type: boolean
                    type: object
                  labelFingerprint:
                    description: 'LabelFingerprint: The fingerprint of the set of
                      labels for this cluster.'
                    type: string
                  legacyAbac:
                    description: 'LegacyAbac: Configuration for the legacy ABAC authorization
                      mode.'
                    properties:
                      enabled:
                        description: 'Enabled: Whether the ABAC authorizer is enabled
                          for this cluster. When enabled, identities in the system,
                          including service accounts, nodes, and controllers, will
                          have statically granted permissions beyond those provided
                          by the RBAC configuration or IAM.'
                        type: boolean
                    required:
                    - enabled
                    type: object
                  location:
                    description: 'Location: The name of the Google Compute Engine
                      [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
                      or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
                      in which the cluster resides.'
                    type: string
                  locations:
                    description: 'Locations: The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available)
                      in which the cluster''s nodes should be located.'
                    items:
                      type: string
                    type: array
                  loggingService:
                    description: "LoggingService: The logging service the cluster
                      should use to write logs. Currently available options: \n *
                      \"logging.googleapis.com/kubernetes\" - the Google Cloud Logging
                      service with Kubernetes-native resource model in Stackdriver
                      * `logging.googleapis.com` - the Google Cloud Logging service.
                      * `none` - no logs will be exported from the cluster. * if left
                      as an empty string,`logging.googleapis.com` will be used."
                    type: string
                  maintenancePolicy:
                    description: 'MaintenancePolicy: Configure the maintenance policy
                      for this cluster.'
                    properties:
                      window:
                        description: 'Window: Specifies the maintenance window in
                          which maintenance may be performed.'
                        properties:
                          dailyMaintenanceWindow:
                            description: 'DailyMaintenanceWindow: DailyMaintenanceWindow
                              specifies a daily maintenance operation window.'
                            properties:
                              startTime:
                                description: 'StartTime: Time within the maintenance
                                  window to start the maintenance operations. Time
                                  format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                                  format "HH:MM", where HH : [00-23] and MM : [00-59]
                                  GMT.'
                                type: string
                            required:
                            - startTime
                            type: object
                          maintenanceExclusions:
                            additionalProperties:
                              description: TimeWindow is a window of time.
                              properties:
                                endTime:
                                  description: 'EndTime: The time that the window
                                    ends. The end time should take place after the
                                    start time.'
                                  type: string
                                startTime:
                                  description: 'StartTime: The time that the window
                                    first starts.'
                                  type: string
                              type: object
                            description: 'MaintenanceExclusions: Exceptions to maintenance
                              window. Non-emergency maintenance should not occur in
                              these windows.'
                            type: object
                          recurringWindow:
                            description: 'RecurringWindow: RecurringWindow specifies
                              some number of recurring time periods for maintenance
                              to occur. The time windows may be overlapping. If no
                              maintenance windows are set, maintenance can occur at
                              any time.'
                            properties:
                              recurrence:
                                description: 'Recurrence: An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3)
                                  for how this window reccurs. They go on for the
                                  span of time between the start and end time. For
                                  example, to have something repeat every weekday,
                                  you''d use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To
                                  repeat some window daily (equivalent to the DailyMaintenanceWindow):
                                  `FREQ=DAILY` For the first weekend of every month:
                                  `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies
                                  how frequently the window starts. Eg, if you wanted
                                  to have a 9-5 UTC-4 window every weekday, you''d
                                  use something like: “` start time = 2019-01-01T09:00:00-0400
                                  end time = 2019-01-01T17:00:00-0400 recurrence =
                                  FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR “` Windows can
                                  span multiple days. Eg, to make the window encompass
                                  every weekend from midnight Saturday till the last
                                  minute of Sunday UTC: “` start time = 2019-01-05T00:00:00Z
                                  end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA
                                  “` Note the start and end time''s specific dates
                                  are largely arbitrary except to specify duration
                                  of the window and when it first starts. The FREQ
                                  values of HOURLY, MINUTELY, and SECONDLY are not
                                  supported.'
                                type: string
                              window:
                                description: 'Window: The window of the first recurrence.'
                                properties:
                                  endTime:
                                    description: 'EndTime: The time that the window
                                      ends. The end time should take place after the
                                      start time.'
                                    type: string
                                  startTime:
                                    description: 'StartTime: The time that the window
                                      first starts.'
                                    type: string
                                type: object
                            type: object
                        type: object
                    required:
                    - window
                    type: object
                  masterAuth:
                    description: 'MasterAuth: The authentication information for accessing
                      the master endpoint. If unspecified, the defaults are used:
                      For clusters before v1.12, if master_auth is unspecified, `username`
                      will be set to "admin", a random password will be generated,
                      and a client certificate will be issued.'
                    properties:
                      clientCertificateConfig:
                        description: 'ClientCertificateConfig: Configuration for client
                          certificate authentication on the cluster. For clusters
                          before v1.12, if no configuration is specified, a client
                          certificate is issued.'
                        properties:
                          issueClientCertificate:
                            description: 'IssueClientCertificate: Issue a client certificate.'
                            type: boolean
                        required:
                        - issueClientCertificate
                        type: object
                      username:
                        description: 'Username: The username to use for HTTP basic
                          authentication to the master endpoint. For clusters v1.6.0
                          and later, basic authentication can be disabled by leaving
                          username unspecified (or setting it to the empty string).'
                        type: string
                    type: object
                  masterAuthorizedNetworksConfig:
                    description: 'MasterAuthorizedNetworksConfig: The configuration
                      options for master authorized networks feature.'
                    properties:
                      cidrBlocks:
                        description: 'CidrBlocks: cidr_blocks define up to 50 external
                          networks that could access Kubernetes master through HTTPS.'
                        items:
                          description: CidrBlock contains an optional name and one
                            CIDR block.
                          properties:
                            cidrBlock:
                              description: 'CidrBlock: cidr_block must be specified
                                in CIDR notation.'
                              type: string
                            displayName:
                              description: 'DisplayName: display_name is an optional
                                field for users to identify CIDR blocks.'
                              type: string
                          required:
                          - cidrBlock
                          type: object
                        type: array
                      enabled:
                        description: 'Enabled: Whether or not master authorized networks
                          is enabled.'
                        type: boolean
                    type: object
                  monitoringService:
                    description: "MonitoringService: The monitoring service the cluster
                      should use to write metrics. Currently available options: \n
                      * `monitoring.googleapis.com` - the Google Cloud Monitoring
                      service. * `none` - no metrics will be exported from the cluster.
                      * if left as an empty string, `monitoring.googleapis.com` will
                      be used."
                    type: string
                  network:
                    description: 'Network: The name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc#vpc_networks_and_subnets)
                      to which the cluster is connected. If left unspecified, the
                      `default` network will be used.'
                    type: string
                  networkConfig:
                    description: 'NetworkConfig: Configuration for cluster networking.'
                    properties:
                      datapathProvider:
                        description: "DatapathProvider: The desired datapath provider
                          for this cluster. By default, uses the IPTables-based kube-proxy
                          implementation. \n Possible values: \"DATAPATH_PROVIDER_UNSPECIFIED\"
                          - Default value. \"LEGACY_DATAPATH\" - Use the IPTables
                          implementation based on kube-proxy. \"ADVANCED_DATAPATH\"
                          - Use the eBPF based GKE Dataplane V2 with additional features.
                          See the [GKE Dataplane V2 documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2)
                          for more."
                        type: string
                      defaultSnatStatus:
                        description: 'DefaultSnatStatus: Whether the cluster disables
                          default in-node sNAT rules. In-node sNAT rules will be disabled
                          when default_snat_status is disabled. When disabled is set
                          to false, default IP masquerade rules will be applied to
                          the nodes to prevent sNAT on cluster internal traffic.'
                        properties:
                          disabled:
                            description: 'Disabled: Disables cluster default sNAT
                              rules.'
                            type: boolean
                        required:
                        - disabled
                        type: object
                      dnsConfig:
                        description: DNSConfig contains the desired set of options
                          for configuring clusterDNS.
                        properties:
                          clusterDns:
                            description: 'ClusterDns indicates which in-cluster DNS
                              provider should be used. Possible values: "PROVIDER_UNSPECIFIED"
                              - indicates the default value. "PLATFORM_DEFAULT" -
                              indicates using the GKE default DNS provider(kube-dns)
                              for DNS resolution. "CLOUD_DNS" - indicates using CloudDNS
                              for DNS resolution.'
                            enum:
                            - PROVIDER_UNSPECIFIED
                            - PLATFORM_DEFAULT
                            - CLOUD_DNS
                            type: string
                          clusterDnsDomain:
                            description: ClusterDnsDomain is the suffix used for all
                              cluster service records.
                            type: string
                          clusterDnsScope:
                            description: 'ClusterDnsScope indicates the scope of access
                              to cluster DNS records. Possible Values: "DNS_SCOPE_UNSPECIFIED"
                              - indicates the default value, will be inferred as cluster
                              scope. "VPC_SCOPE" - indicates that DNS records are
                              accessible from within the VPC.'
                            enum:
                            - DNS_SCOPE_UNSPECIFIED
                            - VPC_SCOPE
                            type: string
                        type: object
                      enableIntraNodeVisibility:
                        description: 'EnableIntraNodeVisibility: Whether Intra-node
                          visibility is enabled for this cluster. This makes same
                          node pod to pod traffic visible for VPC network.'
                        type: boolean
                      privateIpv6GoogleAccess:
                        description: "PrivateIpv6GoogleAccess: The desired state of
                          IPv6 connectivity to Google Services. By default, no private
                          IPv6 access to or from Google Services (all access will
                          be via IPv4) \n Possible values: \"PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED\"
                          - Default value. Same as DISABLED \"PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED\"
                          - No private access to or from Google Services \"PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE\"
                          - Enables private IPv6 access to Google Services from GKE
                          \"PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL\" - Enables priate
                          IPv6 access to and from Google Services"
                        type: string
                    type: object
                  networkPolicy:
                    description: 'NetworkPolicy: Configuration options for the NetworkPolicy
                      feature.'
                    properties:
                      enabled:
                        description: 'Enabled: Whether network policy is enabled on
                          the cluster.'
                        type: boolean
                      provider:
                        description: "Provider: The selected network policy provider.
                          \n Possible values: \"PROVIDER_UNSPECIFIED\" - Not set \"CALICO\"
                          - Tigera (Calico Felix)."
                        type: string
                    type: object
                  networkRef:
                    description: NetworkRef references to a Network and retrieves
                      its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                      and retrieves its URI
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  notificationConfig:
                    description: 'NotificationConfig: Notification configuration of
                      the cluster.'
                    properties:
                      pubsub:
                        description: 'Pubsub: Notification config for Pub/Sub.'
                        properties:
                          enabled:
                            description: 'Enabled: Enable notifications for Pub/Sub.'
                            type: boolean
                          topic:
                            description: 'Topic: The desired Pub/Sub topic to which
                              notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`.'
                            type: string
                        required:
                        - enabled
                        - topic
                        type: object
                    required:
                    - pubsub
                    type: object
                  privateClusterConfig:
                    description: 'PrivateClusterConfig: Configuration for private
                      cluster.'
                    properties:
                      enablePrivateEndpoint:
                        description: 'EnablePrivateEndpoint: Whether the master''s
                          internal IP address is used as the cluster endpoint.'
                        type: boolean
                      enablePrivateNodes:
                        description: 'EnablePrivateNodes: Whether nodes have internal
                          IP addresses only. If enabled, all nodes are given only
                          RFC 1918 private addresses and communicate with the master
                          via private networking.'
                        type: boolean
                      masterGlobalAccessConfig:
                        description: 'MasterGlobalAccessConfig: Controls master global
                          access settings.'
                        properties:
                          enabled:
                            description: 'Enabled: Whenever master is accessible globally
                              or not.'
                            type: boolean
                        required:
                        - enabled
                        type: object
                      masterIpv4CidrBlock:
                        description: 'MasterIpv4CidrBlock: The IP range in CIDR notation
                          to use for the hosted master network. This range will be
                          used for assigning internal IP addresses to the master or
                          set of masters, as well as the ILB VIP. This range must
                          not overlap with any other ranges in use within the cluster''s
                          network.'
                        type: string
                    type: object
                  releaseChannel:
                    description: 'ReleaseChannel: Release channel configuration.'
                    properties:
                      channel:
                        description: "Channel: channel specifies which release channel
                          the cluster is subscribed to. \n Possible values: \"UNSPECIFIED\"
                          - No channel specified. \"RAPID\" - RAPID channel is offered
                          on an early access basis for customers who want to test
                          new releases. WARNING: Versions available in the RAPID Channel
                          may be subject to unresolved issues with no known workaround
                          and are not subject to any SLAs. \"REGULAR\" - Clusters
                          subscribed to REGULAR receive versions that are considered
                          GA quality. REGULAR is intended for production users who
                          want to take advantage of new features. \"STABLE\" - Clusters
                          subscribed to STABLE receive versions that are known to
                          be stable and reliable in production."
                        type: string
                    required:
                    - channel
                    type: object
                  resourceLabels:
                    additionalProperties:
                      type: string
                    description: 'ResourceLabels: The resource labels for the cluster
                      to use to annotate any related Google Compute Engine resources.'
                    type: object
                  resourceUsageExportConfig:
                    description: 'ResourceUsageExportConfig: Configuration for exporting
                      resource usages. Resource usage export is disabled when this
                      config is unspecified.'
                    properties:
                      bigqueryDestination:
                        description: 'BigqueryDestination: Configuration to use BigQuery
                          as usage export destination.'
                        properties:
                          datasetId:
                            description: 'DatasetId: The ID of a BigQuery Dataset.'
                            type: string
                        required:
                        - datasetId
                        type: object
                      consumptionMeteringConfig:
                        description: 'ConsumptionMeteringConfig: Configuration to
                          enable resource consumption metering.'
                        properties:
                          enabled:
                            description: 'Enabled: Whether to enable consumption metering
                              for this cluster. If enabled, a second BigQuery table
                              will be created to hold resource consumption records.'
                            type: boolean
                        required:
                        - enabled
                        type: object
                      enableNetworkEgressMetering:
                        description: 'EnableNetworkEgressMetering: Whether to enable
                          network egress metering for this cluster. If enabled, a
                          daemonset will be created in the cluster to meter network
                          egress traffic.'
                        type: boolean
                    type: object
                  subnetwork:
                    description: 'Subnetwork: The name of the Google Compute Engine
                      [subnetwork](https://cloud.google.com/vpc/docs/subnets) to which
                      the cluster is connected.'
                    type: string
                  subnetworkRef:
                    description: SubnetworkRef references to a Subnetwork and retrieves
                      its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetworkSelector:
                    description: SubnetworkSelector selects a reference to a Subnetwork
                      and retrieves its URI
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  verticalPodAutoscaling:
                    description: 'VerticalPodAutoscaling: Cluster-level Vertical Pod
                      Autoscaling configuration.'
                    properties:
                      enabled:
                        description: 'Enabled: Enables vertical pod autoscaling.'
                        type: boolean
                    required:
                    - enabled
                    type: object
                  workloadIdentityConfig:
                    description: 'WorkloadIdentityConfig: Configuration for the use
                      of Kubernetes Service Accounts in GCP IAM policies.'
                    properties:
                      workloadPool:
                        description: 'WorkloadPool: The workload pool to attach all
                          Kubernetes service accounts to.'
                        type: string
                    type: object
                required:
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ClusterStatus represents the observed state of a Cluster.
            properties:
              atProvider:
                description: ClusterObservation is used to show the observed state
                  of the GKE cluster resource on GCP.
                properties:
                  conditions:
                    description: 'Conditions: Which conditions caused the current
                      cluster state.'
                    items:
                      description: StatusCondition describes why a cluster or a node
                        pool has a certain status (e.g., ERROR or DEGRADED).
                      properties:
                        code:
                          description: "Code: Machine-friendly representation of the
                            condition \n Possible values: \"UNKNOWN\" - UNKNOWN indicates
                            a generic condition. \"GCE_STOCKOUT\" - GCE_STOCKOUT indicates
                            a Google Compute Engine stockout. \"GKE_SERVICE_ACCOUNT_DELETED\"
                            - GKE_SERVICE_ACCOUNT_DELETED indicates that the user
                            deleted their robot service account. \"GCE_QUOTA_EXCEEDED\"
                            - Google Compute Engine quota was exceeded. \"SET_BY_OPERATOR\"
                            - Cluster state was manually changed by an SRE due to
                            a system logic error. More codes TBA"
                          type: string
                        message:
                          description: 'Message: Human-friendly representation of
                            the condition'
                          type: string
                      type: object
                    type: array
                  createTime:
                    description: 'CreateTime: The time the cluster was created, in
                      [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.'
                    type: string
                  currentMasterVersion:
                    description: 'CurrentMasterVersion: The current software version
                      of the master endpoint.'
                    type: string
                  currentNodeCount:
                    description: 'CurrentNodeCount:  The number of nodes currently
                      in the cluster. Deprecated. Call Kubernetes API directly to
                      retrieve node information.'
                    format: int64
                    type: integer
                  currentNodeVersion:
                    description: 'CurrentNodeVersion: Deprecated, use [NodePools.version](/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters.nodePools)
                      instead. The current version of the node software components.
                      If they are currently at multiple versions because they''re
                      in the process of being upgraded, this reflects the minimum
                      version of all nodes.'
                    type: string
                  endpoint:
                    description: "Endpoint: The IP address of this cluster's master
                      endpoint. The endpoint can be accessed from the internet at
                      `https://username:password@endpoint/`. \n See the `masterAuth`
                      property of this resource for username and password information."
                    type: string
                  expireTime:
                    description: 'ExpireTime: The time the cluster will be automatically
                      deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
                      format.'
                    type: string
                  location:
                    description: 'Location: The name of the Google Compute Engine
                      [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
                      or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
                      in which the cluster resides.'
                    type: string
                  maintenancePolicy:
                    description: 'MaintenancePolicy: Configure the maintenance policy
                      for this cluster.'
                    properties:
                      window:
                        description: 'Window: Specifies the maintenance window in
                          which maintenance may be performed.'
                        properties:
                          dailyMaintenanceWindow:
                            description: 'DailyMaintenanceWindow: DailyMaintenanceWindow
                              specifies a daily maintenance operation window.'
                            properties:
                              duration:
                                description: 'Duration: Duration of the time window,
                                  automatically chosen to be smallest possible in
                                  the given scenario. Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                                  format "PTnHnMnS".'
                                type: string
                            type: object
                        type: object
                    type: object
                  networkConfig:
                    description: 'NetworkConfig: Configuration for cluster networking.'
                    properties:
                      network:
                        description: 'Network: The relative name of the Google Compute
                          Engine network(https://cloud.google.com/vpc/docs/vpc#vpc_networks_and_subnets)
                          to which the cluster is connected. Example: projects/my-project/global/networks/my-network'
                        type: string
                      subnetwork:
                        description: 'Subnetwork: The relative name of the Google
                          Compute Engine [subnetwork](https://cloud.google.com/vpc/docs/vpc)
                          to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet'
                        type: string
                    type: object
                  nodeIpv4CidrSize:
                    description: 'NodeIpv4CidrSize: The size of the address space
                      on each node for hosting containers. This is provisioned from
                      within the `container_ipv4_cidr` range. This field will only
                      be set when cluster is in route-based network mode.'
                    format: int64
                    type: integer
                  nodePools:
                    description: 'NodePools: The node pools associated with this cluster.
                      This field should not be set if "node_config" or "initial_node_count"
                      are specified.'
                    items:
                      description: NodePoolClusterStatus is a subset of information
                        about NodePools associated with a GKE cluster.
                      properties:
                        autoscaling:
                          description: 'Autoscaling: Autoscaler configuration for
                            this NodePool. Autoscaler is enabled only if a valid configuration
                            is present.'
                          properties:
                            autoprovisioned:
                              description: 'Autoprovisioned: Can this node pool be
                                deleted automatically.'
                              type: boolean
                            enabled:
                              description: 'Enabled: Is autoscaling enabled for this
                                node pool.'
                              type: boolean
                            maxNodeCount:
                              description: 'MaxNodeCount: Maximum number of nodes
                                in the NodePool. Must be >= min_node_count. There
                                has to enough quota to scale up the cluster.'
                              format: int64
                              type: integer
                            minNodeCount:
                              description: 'MinNodeCount: Minimum number of nodes
                                in the NodePool. Must be >= 1 and <= max_node_count.'
                              format: int64
                              type: integer
                          type: object
                        conditions:
                          description: 'Conditions: Which conditions caused the current
                            node pool state.'
                          items:
                            description: StatusCondition describes why a cluster or
                              a node pool has a certain status (e.g., ERROR or DEGRADED).
                            properties:
                              code:
                                description: "Code: Machine-friendly representation
                                  of the condition \n Possible values: \"UNKNOWN\"
                                  - UNKNOWN indicates a generic condition. \"GCE_STOCKOUT\"
                                  - GCE_STOCKOUT indicates a Google Compute Engine
                                  stockout. \"GKE_SERVICE_ACCOUNT_DELETED\" - GKE_SERVICE_ACCOUNT_DELETED
                                  indicates that the user deleted their robot service
                                  account. \"GCE_QUOTA_EXCEEDED\" - Google Compute
                                  Engine quota was exceeded. \"SET_BY_OPERATOR\" -
                                  Cluster state was manually changed by an SRE due
                                  to a system logic error. More codes TBA"
                                type: string
                              message:
                                description: 'Message: Human-friendly representation
                                  of the condition'
                                type: string
                            type: object
                          type: array
                        config:
                          description: 'Config: The node configuration of the pool.'
                          properties:
                            accelerators:
                              description: 'Accelerators: A list of hardware accelerators
                                to be attached to each node. See https://cloud.google.com/compute/docs/gpus
                                for more information about support for GPUs.'
                              items:
                                description: AcceleratorConfigClusterStatus represents
                                  a Hardware Accelerator request.
                                properties:
                                  acceleratorCount:
                                    description: 'AcceleratorCount: The number of
                                      the accelerator cards exposed to an instance.'
                                    format: int64
                                    type: integer
                                  acceleratorType:
                                    description: 'AcceleratorType: The accelerator
                                      type resource name. List of supported accelerators
                                      [here](https://cloud.google.com/compute/docs/gpus/#Introduction)'
                                    type: string
                                type: object
                              type: array
                            diskSizeGb:
                              description: "DiskSizeGb: Size of the disk attached
                                to each node, specified in GB. The smallest allowed
                                disk size is 10GB. \n If unspecified, the default
                                disk size is 100GB."
                              format: int64
                              type: integer
                            diskType:
                              description: "DiskType: Type of the disk attached to
                                each node (e.g. 'pd-standard' or 'pd-ssd') \n If unspecified,
                                the default disk type is 'pd-standard'"
                              type: string
                            imageType:
                              description: 'ImageType: The image type to use for this
                                node. Note that for a given image type, the latest
                                version of it will be used.'
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Labels: The map of Kubernetes labels (key/value
                                pairs) to be applied to each node. These will added
                                in addition to any default label(s) that Kubernetes
                                may apply to the node. In case of conflict in label
                                keys, the applied set may differ depending on the
                                Kubernetes version -- it''s best to assume the behavior
                                is undefined and conflicts should be avoided. For
                                more information, including usage and the valid values,
                                see: https://kubernetes.io/docs/concepts/overview/working-with-objects
                                /labels/'
                              type: object
                            localSsdCount:
                              description: "LocalSsdCount: The number of local SSD
                                disks to be attached to the node. \n The limit for
                                this value is dependant upon the maximum number of
                                disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_l
                                imits for more information."
                              format: int64
                              type: integer
                            machineType:
                              description: "MachineType: The name of a Google Compute
                                Engine [machine type](https://cloud.google.com/compute/docs/machine-types)
                                (e.g. `n1-standard-1`). \n If unspecified, the default
                                machine type is `n1-standard-1`."
                              type: string
                            metadata:
                              additionalProperties:
                                type: string
                              description: "Metadata: The metadata key/value pairs
                                assigned to instances in the cluster. \n Keys must
                                conform to the regexp [a-zA-Z0-9-_]+ and be less than
                                128 bytes in length. These are reflected as part of
                                a URL in the metadata server. Additionally, to avoid
                                ambiguity, keys must not conflict with any other metadata
                                keys for the project or be one of the reserved keys:
                                \"cluster-location\" \"cluster-name\" \"cluster-uid\"
                                \"configure-sh\" \"containerd-configure-sh\" \"enable-oslogin\"
                                \"gci-ensure-gke-docker\" \"gci-update-strategy\"
                                \"instance-template\" \"kube-env\" \"startup-script\"
                                \"user-data\" \"disable-address-manager\" \"windows-startup-script-ps1\"
                                \"common-psm1\" \"k8s-node-setup-psm1\" \"install-ssh-psm1\"
                                \"user-profile-psm1\" \"serial-port-logging-enable\"
                                Values are free-form strings, and only have meaning
                                as interpreted by the image running in the instance.
                                The only restriction placed on them is that each value's
                                size must be less than or equal to 32 KB. \n The total
                                size of all keys and values must be less than 512
                                KB."
                              type: object
                            minCpuPlatform:
                              description: 'MinCpuPlatform: Minimum CPU platform to
                                be used by this instance. The instance may be scheduled
                                on the specified or newer CPU platform. Applicable
                                values are the friendly names of CPU platforms, such
                                as <code>minCpuPlatform: &quot;Intel Haswell&quot;</code>
                                or <code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>.
                                For more information, read [how to specify min CPU
                                platform](https://cloud.google.com/compute/docs/instances/specify-
                                min-cpu-platform)'
                              type: string
                            oauthScopes:
                              description: "OauthScopes: The set of Google API scopes
                                to be made available on all of the node VMs under
                                the \"default\" service account. \n The following
                                scopes are recommended, but not required, and by default
                                are not included: \n * `https://www.googleapis.com/auth/compute`
                                is required for mounting persistent storage on your
                                nodes. * `https://www.googleapis.com/auth/devstorage.read_only`
                                is required for communicating with **gcr.io** (the
                                [Google Container Registry](/container-registry/)).
                                \n If unspecified, no scopes are added, unless Cloud
                                Logging or Cloud Monitoring are enabled, in which
                                case their required scopes will be added."
                              items:
                                type: string
                              type: array
                            preemptible:
                              description: 'Preemptible: Whether the nodes are created
                                as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible
                                for more inforamtion about preemptible VM instances.'
                              type: boolean
                            sandboxConfig:
                              description: 'SandboxConfig: Sandbox configuration for
                                this node.'
                              properties:
                                type:
                                  description: 'Type: Type of the sandbox to use for
                                    the node (e.g. ''gvisor'')'
                                  type: string
                              type: object
                            serviceAccount:
                              description: 'ServiceAccount: The Google Cloud Platform
                                Service Account to be used by the node VMs. If no
                                Service Account is specified, the "default" service
                                account is used.'
                              type: string
                            shieldedInstanceConfig:
                              description: 'ShieldedInstanceConfig: Shielded Instance
                                options.'
                              properties:
                                enableIntegrityMonitoring:
                                  description: "EnableIntegrityMonitoring: Defines
                                    whether the instance has integrity monitoring
                                    enabled. \n Enables monitoring and attestation
                                    of the boot integrity of the instance. The attestation
                                    is performed against the integrity policy baseline.
                                    This baseline is initially derived from the implicitly
                                    trusted boot image when the instance is created."
                                  type: boolean
                                enableSecureBoot:
                                  description: "EnableSecureBoot: Defines whether
                                    the instance has Secure Boot enabled. \n Secure
                                    Boot helps ensure that the system only runs authentic
                                    software by verifying the digital signature of
                                    all boot components, and halting the boot process
                                    if signature verification fails."
                                  type: boolean
                              type: object
                            tags:
                              description: 'Tags: The list of instance tags applied
                                to all nodes. Tags are used to identify valid sources
                                or targets for network firewalls and are specified
                                by the client during cluster or node pool creation.
                                Each tag within the list must comply with RFC1035.'
                              items:
                                type: string
                              type: array
                            taints:
                              description: "Taints: List of kubernetes taints to be
                                applied to each node. \n For more information, including
                                usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toler
                                ation/"
                              items:
                                description: 'NodeTaintClusterStatus is a Kubernetes
                                  taint is comprised of three fields: key, value,
                                  and effect. Effect can only be one of three types:  NoSchedule,
                                  PreferNoSchedule or NoExecute.'
                                properties:
                                  effect:
                                    description: "Effect: Effect for taint. \n Possible
                                      values: \"EFFECT_UNSPECIFIED\" - Not set \"NO_SCHEDULE\"
                                      - NoSchedule \"PREFER_NO_SCHEDULE\" - PreferNoSchedule
                                      \"NO_EXECUTE\" - NoExecute"
                                    type: string
                                  key:
                                    description: 'Key: Key for taint.'
                                    type: string
                                  value:
                                    description: 'Value: Value for taint.'
                                    type: string
                                type: object
                              type: array
                          type: object
                        initialNodeCount:
                          description: 'InitialNodeCount: The initial node count for
                            the pool. You must ensure that your Compute Engine <a
                            href="https://cloud.google.com/compute/quotas">resource
                            quota</a> is sufficient for this number of instances.
                            You must also have available firewall and routes quota.'
                          format: int64
                          type: integer
                        instanceGroupUrls:
                          description: 'InstanceGroupUrls: The resource URLs of the
                            [managed instance groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances)
                            associated with this node pool.'
                          items:
                            type: string
                          type: array
                        locations:
                          description: 'Locations: The list of Google Compute Engine
                            [zones](https://cloud.google.com/compute/docs/regions-zones#available)
                            in which the NodePool''s nodes should be located.'
                          items:
                            type: string
                          type: array
                        management:
                          description: 'Management: NodeManagement configuration for
                            this NodePool.'
                          properties:
                            autoRepair:
                              description: 'AutoRepair: Whether the nodes will be
                                automatically repaired.'
                              type: boolean
                            autoUpgrade:
                              description: 'AutoUpgrade: Whether the nodes will be
                                automatically upgraded.'
                              type: boolean
                            upgradeOptions:
                              description: 'UpgradeOptions: Specifies the Auto Upgrade
                                knobs for the node pool.'
                              properties:
                                autoUpgradeStartTime:
                                  description: 'AutoUpgradeStartTime: This field is
                                    set when upgrades are about to commence with the
                                    approximate start time for the upgrades, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                                    text format.'
                                  type: string
                                description:
                                  description: 'Description: This field is set when
                                    upgrades are about to commence with the description
                                    of the upgrade.'
                                  type: string
                              type: object
                          type: object
                        maxPodsConstraint:
                          description: 'MaxPodsConstraint: The constraint on the maximum
                            number of pods that can be run simultaneously on a node
                            in the node pool.'
                          properties:
                            maxPodsPerNode:
                              description: 'MaxPodsPerNode: Constraint enforced on
                                the max num of pods per node.'
                              format: int64
                              type: integer
                          required:
                          - maxPodsPerNode
                          type: object
                        name:
                          description: 'Name: The name of the node pool.'
                          type: string
                        podIpv4CidrSize:
                          description: 'PodIpv4CidrSize: The pod CIDR block size per
                            node in this node pool.'
                          format: int64
                          type: integer
                        selfLink:
                          description: 'SelfLink: Server-defined URL for the resource.'
                          type: string
                        status:
                          description: "Status: The status of the nodes in this pool
                            instance. \n Possible values: \"STATUS_UNSPECIFIED\" -
                            Not set. \"PROVISIONING\" - The PROVISIONING state indicates
                            the node pool is being created. \"RUNNING\" - The RUNNING
                            state indicates the node pool has been created and is
                            fully usable. \"RUNNING_WITH_ERROR\" - The RUNNING_WITH_ERROR
                            state indicates the node pool has been created and is
                            partially usable. Some error state has occurred and some
                            functionality may be impaired. Customer may need to reissue
                            a request or trigger a new update. \"RECONCILING\" - The
                            RECONCILING state indicates that some work is actively
                            being done on the node pool, such as upgrading node software.
                            Details can be found in the `statusMessage` field. \"STOPPING\"
                            - The STOPPING state indicates the node pool is being
                            deleted. \"ERROR\" - The ERROR state indicates the node
                            pool may be unusable. Details can be found in the `statusMessage`
                            field."
                          type: string
                        statusMessage:
                          description: 'StatusMessage: Additional information about
                            the current status of this node pool instance, if available.'
                          type: string
                        version:
                          description: 'Version: The version of the Kubernetes of
                            this node.'
                          type: string
                      type: object
                    type: array
                  privateClusterConfig:
                    description: 'PrivateClusterConfig: Configuration for private
                      cluster.'
                    properties:
                      privateEndpoint:
                        description: 'PrivateEndpoint: The internal IP address of
                          this cluster''s master endpoint.'
                        type: string
                      publicEndpoint:
                        description: 'PublicEndpoint: The external IP address of this
                          cluster''s master endpoint.'
                        type: string
                    type: object
                  selfLink:
                    description: 'SelfLink: Server-defined URL for the resource.'
                    type: string
                  servicesIpv4Cidr:
                    description: "ServicesIpv4Cidr: The IP address range of the Kubernetes
                      services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                      \n notation (e.g. `1.2.3.4/29`). Service addresses are typically
                      put in the last `/16` from the container CIDR."
                    type: string
                  status:
                    description: "Status: The current status of this cluster. \n Possible
                      values: \"STATUS_UNSPECIFIED\" - Not set. \"PROVISIONING\" -
                      The PROVISIONING state indicates the cluster is being created.
                      \"RUNNING\" - The RUNNING state indicates the cluster has been
                      created and is fully usable. \"RECONCILING\" - The RECONCILING
                      state indicates that some work is actively being done on the
                      cluster, such as upgrading the master or node software. Details
                      can be found in the `statusMessage` field. \"STOPPING\" - The
                      STOPPING state indicates the cluster is being deleted. \"ERROR\"
                      - The ERROR state indicates the cluster may be unusable. Details
                      can be found in the `statusMessage` field. \"DEGRADED\" - The
                      DEGRADED state indicates the cluster requires user action to
                      restore full functionality. Details can be found in the `statusMessage`
                      field."
                    type: string
                  statusMessage:
                    description: 'StatusMessage: Additional information about the
                      current status of this cluster, if available.'
                    type: string
                  tpuIpv4CidrBlock:
                    description: "TpuIpv4CidrBlock: The IP address range of the Cloud
                      TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
                      \n notation (e.g. `1.2.3.4/29`)."
                    type: string
                  zone:
                    description: 'Zone: The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available)
                      in which the cluster resides. This field is deprecated, use
                      location instead.'
                    type: string
                required:
                - location
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta2

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cloudsqlinstances.database.gcp.crossplane.io
spec:
  group: database.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: CloudSQLInstance
    listKind: CloudSQLInstanceList
    plural: cloudsqlinstances
    singular: cloudsqlinstance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .spec.forProvider.databaseVersion
      name: VERSION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A CloudSQLInstance is a managed resource that represents a Google
          CloudSQL instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A CloudSQLInstanceSpec defines the desired state of a CloudSQLInstance.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CloudSQLInstanceParameters define the desired state of
                  a Google CloudSQL instance. Most of its fields are direct mirror
                  of GCP DatabaseInstance object. See https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1beta4/instances#DatabaseInstance
                properties:
                  databaseVersion:
                    description: 'DatabaseVersion: The database engine type and version.
                      The databaseVersion field can not be changed after instance
                      creation. MySQL Second Generation instances: MYSQL_5_7 (default)
                      or MYSQL_5_6. PostgreSQL instances: POSTGRES_9_6, POSTGRES_10,
                      POSTGRES_11, POSTGRES_12, POSTGRES_13 MySQL First Generation
                      instances: MYSQL_5_6 (default) or MYSQL_5_5'
                    type: string
                  diskEncryptionConfiguration:
                    description: 'DiskEncryptionConfiguration: Disk encryption configuration
                      specific to an instance. Applies only to Second Generation instances.'
                    properties:
                      kmsKeyName:
                        description: 'KmsKeyName: KMS key resource name'
                        type: string
                    required:
                    - kmsKeyName
                    type: object
                  failoverReplica:
                    description: 'FailoverReplica: The name and status of the failover
                      replica. This property is applicable only to Second Generation
                      instances.'
                    properties:
                      name:
                        description: 'Name: The name of the failover replica. If specified
                          at instance creation, a failover replica is created for
                          the instance. The name doesn''t include the project ID.
                          This property is applicable only to Second Generation instances.'
                        type: string
                    required:
                    - name
                    type: object
                  gceZone:
                    description: 'GceZone: The Compute Engine zone that the instance
                      is currently serving from. This value could be different from
                      the zone that was specified when the instance was created if
                      the instance has failed over to its secondary zone.'
                    type: string
                  instanceType:
                    description: 'InstanceType: The instance type. This can be one
                      of the following. CLOUD_SQL_INSTANCE: A Cloud SQL instance that
                      is not replicating from a master. ON_PREMISES_INSTANCE: An instance
                      running on the customer''s premises. READ_REPLICA_INSTANCE:
                      A Cloud SQL instance configured as a read-replica.'
                    type: string
                  masterInstanceName:
                    description: 'MasterInstanceName: The name of the instance which
                      will act as master in the replication setup.'
                    type: string
                  maxDiskSize:
                    description: 'MaxDiskSize: The maximum disk size of the instance
                      in bytes.'
                    format: int64
                    type: integer
                  onPremisesConfiguration:
                    description: 'OnPremisesConfiguration: Configuration specific
                      to on-premises instances.'
                    properties:
                      hostPort:
                        description: 'HostPort: The host and port of the on-premises
                          instance in host:port format'
                        type: string
                    required:
                    - hostPort
                    type: object
                  region:
                    description: 'Region: The geographical region. Can be us-central
                      (FIRST_GEN instances only), us-central1 (SECOND_GEN instances
                      only), asia-east1 or europe-west1. Defaults to us-central or
                      us-central1 depending on the instance type (First Generation
                      or Second Generation). The region can not be changed after instance
                      creation.'
                    type: string
                  replicaNames:
                    description: 'ReplicaNames: The replicas of the instance.'
                    items:
                      type: string
                    type: array
                  settings:
                    description: 'Settings: The user settings.'
                    properties:
                      activationPolicy:
                        description: 'ActivationPolicy: The activation policy specifies
                          when the instance is activated; it is applicable only when
                          the instance state is RUNNABLE. Valid values: ALWAYS: The
                          instance is on, and remains so even in the absence of connection
                          requests. NEVER: The instance is off; it is not activated,
                          even if a connection request arrives. ON_DEMAND: First Generation
                          instances only. The instance responds to incoming requests,
                          and turns itself off when not in use. Instances with PER_USE
                          pricing turn off after 15 minutes of inactivity. Instances
                          with PER_PACKAGE pricing turn off after 12 hours of inactivity.'
                        type: string
                      authorizedGaeApplications:
                        description: 'AuthorizedGaeApplications: The App Engine app
                          IDs that can access this instance. First Generation instances
                          only.'
                        items:
                          type: string
                        type: array
                      availabilityType:
                        description: 'AvailabilityType: Availability type (PostgreSQL
                          instances only). Potential values: ZONAL: The instance serves
                          data from only one zone. Outages in that zone affect data
                          accessibility. REGIONAL: The instance can serve data from
                          more than one zone in a region (it is highly available).
                          For more information, see Overview of the High Availability
                          Configuration.'
                        type: string
                      backupConfiguration:
                        description: BackupConfiguration is the daily backup configuration
                          for the instance.
                        properties:
                          backupRetentionSettings:
                            description: 'BackupRetentionSettings: Backup retention
                              settings.'
                            properties:
                              retainedBackups:
                                description: 'RetainedBackups: Depending on the value
                                  of retention_unit, this is used to determine if
                                  a backup needs to be deleted. If retention_unit
                                  is ''COUNT'', we will retain this many backups.'
                                format: int64
                                type: integer
                              retentionUnit:
                                description: "RetentionUnit: The unit that 'retained_backups'
                                  represents. \n Possible values: \"RETENTION_UNIT_UNSPECIFIED\"
                                  - Backup retention unit is unspecified, will be
                                  treated as COUNT. \"COUNT\" - Retention will be
                                  by count, eg. \"retain the most recent 7 backups\"."
                                enum:
                                - RETENTION_UNIT_UNSPECIFIED
                                - COUNT
                                type: string
                            type: object
                          binaryLogEnabled:
                            description: 'BinaryLogEnabled: Whether binary log is
                              enabled. If backup configuration is disabled, binary
                              log must be disabled as well.'
                            type: boolean
                          enabled:
                            description: 'Enabled: Whether this configuration is enabled.'
                            type: boolean
                          location:
                            description: 'Location: The location of the backup.'
                            type: string
                          pointInTimeRecoveryEnabled:
                            description: 'PointInTimeRecoveryEnabled: True if Point-in-time
                              recovery is enabled. Will restart database if enabled
                              after instance creation.'
                            type: boolean
                          replicationLogArchivingEnabled:
                            description: 'ReplicationLogArchivingEnabled: Reserved
                              for future use.'
                            type: boolean
                          startTime:
                            description: 'StartTime: Start time for the daily backup
                              configuration in UTC timezone in the 24 hour format
                              - HH:MM.'
                            type: string
                        type: object
                      crashSafeReplicationEnabled:
                        description: 'CrashSafeReplicationEnabled: Configuration specific
                          to read replica instances. Indicates whether database flags
                          for crash-safe replication are enabled. This property is
                          only applicable to First Generation instances.'
                        type: boolean
                      dataDiskSizeGb:
                        description: 'DataDiskSizeGb: The size of data disk, in GB.
                          The data disk size minimum is 10GB. Not used for First Generation
                          instances. Please note, if storage auto resize enabled,
                          it won''t be possible to decrease the size of the database
                          using this field as it is not an allowed operation on GCP
                          side. But you would still be able to increase it.'
                        format: int64
                        type: integer
                      dataDiskType:
                        description: 'DataDiskType: The type of data disk: PD_SSD
                          (default) or PD_HDD. Not used for First Generation instances.'
                        type: string
                      databaseFlags:
                        description: DatabaseFlags is the array of database flags
                          passed to the instance at startup.
                        items:
                          description: DatabaseFlags are database flags for Cloud
                            SQL instances.
                          properties:
                            name:
                              description: 'Name: The name of the flag. These flags
                                are passed at instance startup, so include both server
                                options and system variables for MySQL. Flags should
                                be specified with underscores, not hyphens. For more
                                information, see Configuring Database Flags in the
                                Cloud SQL documentation.'
                              type: string
                            value:
                              description: 'Value: The value of the flag. Booleans
                                should be set to on for true and off for false. This
                                field must be omitted if the flag doesn''t take a
                                value.'
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      databaseReplicationEnabled:
                        description: 'DatabaseReplicationEnabled: Configuration specific
                          to read replica instances. Indicates whether replication
                          is enabled or not.'
                        type: boolean
                      ipConfiguration:
                        description: 'IPConfiguration: The settings for IP Management.
                          This allows to enable or disable the instance IP and manage
                          which external networks can connect to the instance. The
                          IPv4 address cannot be disabled for Second Generation instances.'
                        properties:
                          authorizedNetworks:
                            description: 'AuthorizedNetworks: The list of external
                              networks that are allowed to connect to the instance
                              using the IP. In CIDR notation, also known as ''slash''
                              notation (e.g. 192.168.100.0/24).'
                            items:
                              description: ACLEntry is an entry for an Access Control
                                list.
                              properties:
                                expirationTime:
                                  description: 'ExpirationTime: The time when this
                                    access control entry expires in RFC 3339 format,
                                    for example 2012-11-15T16:19:00.094Z.'
                                  type: string
                                name:
                                  description: 'Name: An optional label to identify
                                    this entry.'
                                  type: string
                                value:
                                  description: 'Value: The whitelisted value for the
                                    access control list.'
                                  type: string
                              type: object
                            type: array
                          ipv4Enabled:
                            description: 'Ipv4Enabled: Whether the instance should
                              be assigned an IP address or not.'
                            type: boolean
                          privateNetwork:
                            description: 'PrivateNetwork: The resource link for the
                              VPC network from which the Cloud SQL instance is accessible
                              for private IP. For example, projects/myProject/global/networks/default.
                              This setting can be updated, but it cannot be removed
                              after it is set. The Network must have an active Service
                              Networking connection peering before resolution will
                              proceed. https://cloud.google.com/vpc/docs/configure-private-services-access'
                            pattern: ^projects\/.+
                            type: string
                          privateNetworkRef:
                            description: PrivateNetworkRef sets the PrivateNetwork
                              field by resolving the resource link of the referenced
                              Crossplane Network managed resource.
                            properties:
                              name:
                                description: Name of the referenced object.
                                type: string
                              policy:
                                description: Policies for referencing.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            required:
                            - name
                            type: object
                          privateNetworkSelector:
                            description: PrivateNetworkSelector selects a PrivateNetworkRef.
                            properties:
                              matchControllerRef:
                                description: MatchControllerRef ensures an object
                                  with the same controller reference as the selecting
                                  object is selected.
                                type: boolean
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: MatchLabels ensures an object with matching
                                  labels is selected.
                                type: object
                              policy:
                                description: Policies for selection.
                                properties:
                                  resolution:
                                    default: Required
                                    description: Resolution specifies whether resolution
                                      of this reference is required. The default is
                                      'Required', which means the reconcile will fail
                                      if the reference cannot be resolved. 'Optional'
                                      means this reference will be a no-op if it cannot
                                      be resolved.
                                    enum:
                                    - Required
                                    - Optional
                                    type: string
                                  resolve:
                                    description: Resolve specifies when this reference
                                      should be resolved. The default is 'IfNotPresent',
                                      which will attempt to resolve the reference
                                      only when the corresponding field is not present.
                                      Use 'Always' to resolve the reference on every
                                      reconcile.
                                    enum:
                                    - Always
                                    - IfNotPresent
                                    type: string
                                type: object
                            type: object
                          requireSsl:
                            description: 'RequireSsl: Whether SSL connections over
                              IP should be enforced or not.'
                            type: boolean
                        type: object
                      locationPreference:
                        description: LocationPreference is the location preference
                          settings. This allows the instance to be located as near
                          as possible to either an App Engine app or Compute Engine
                          zone for better performance. App Engine co-location is only
                          applicable to First Generation instances.
                        properties:
                          followGaeApplication:
                            description: 'FollowGaeApplication: The AppEngine application
                              to follow, it must be in the same region as the Cloud
                              SQL instance.'
                            type: string
                          zone:
                            description: 'Zone: The preferred Compute Engine zone
                              (e.g. us-central1-a, us-central1-b, etc.).'
                            type: string
                        type: object
                      maintenanceWindow:
                        description: 'MaintenanceWindow: The maintenance window for
                          this instance. This specifies when the instance can be restarted
                          for maintenance purposes. Not used for First Generation
                          instances.'
                        properties:
                          day:
                            description: 'Day: day of week (1-7), starting on Monday.'
                            format: int64
                            type: integer
                          hour:
                            description: 'Hour: hour of day - 0 to 23.'
                            format: int64
                            type: integer
                          updateTrack:
                            description: 'UpdateTrack: Maintenance timing setting:
                              canary (Earlier) or stable (Later).'
                            type: string
                        type: object
                      pricingPlan:
                        description: 'PricingPlan: The pricing plan for this instance.
                          This can be either PER_USE or PACKAGE. Only PER_USE is supported
                          for Second Generation instances.'
                        type: string
                      replicationType:
                        description: 'ReplicationType: The type of replication this
                          instance uses. This can be either ASYNCHRONOUS or SYNCHRONOUS.
                          This property is only applicable to First Generation instances.'
                        type: string
                      storageAutoResize:
                        description: 'StorageAutoResize: Configuration to increase
                          storage size automatically. The default value is true. Not
                          used for First Generation instances. Please note, if storage
                          auto resize enabled, it won''t be possible to decrease the
                          size of the database using the DataDiskSizeGb field as it
                          is not an allowed operation on GCP side. But you would still
                          be able to increase it.'
                        type: boolean
                      storageAutoResizeLimit:
                        description: 'StorageAutoResizeLimit: The maximum size to
                          which storage capacity can be automatically increased. The
                          default value is 0, which specifies that there is no limit.
                          Not used for First Generation instances.'
                        format: int64
                        type: integer
                      tier:
                        description: 'Tier: The tier (or machine type) for this instance,
                          for example db-n1-standard-1 (MySQL instances) or db-custom-1-3840
                          (PostgreSQL instances). For MySQL instances, this property
                          determines whether the instance is First or Second Generation.
                          For more information, see Instance Settings.'
                        type: string
                      userLabels:
                        additionalProperties:
                          type: string
                        description: 'UserLabels: User-provided labels, represented
                          as a dictionary where each label is a single key value pair.'
                        type: object
                    required:
                    - tier
                    type: object
                  suspensionReason:
                    description: 'SuspensionReason: If the instance state is SUSPENDED,
                      the reason for the suspension.'
                    items:
                      type: string
                    type: array
                required:
                - region
                - settings
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A CloudSQLInstanceStatus represents the observed state of
              a CloudSQLInstance.
            properties:
              atProvider:
                description: CloudSQLInstanceObservation is used to show the observed
                  state of the Cloud SQL resource on GCP.
                properties:
                  backendType:
                    description: 'BackendType: FIRST_GEN: First Generation instance.
                      MySQL only. SECOND_GEN: Second Generation instance or PostgreSQL
                      instance. EXTERNAL: A database server that is not managed by
                      Google. This property is read-only; use the tier property in
                      the settings object to determine the database type and Second
                      or First Generation.'
                    type: string
                  connectionName:
                    description: 'ConnectionName: Connection name of the Cloud SQL
                      instance used in connection strings.'
                    type: string
                  currentDiskSize:
                    description: 'CurrentDiskSize: The current disk usage of the instance
                      in bytes. This property has been deprecated. Users should use
                      the "cloudsql.googleapis.com/database/disk/bytes_used" metric
                      in Cloud Monitoring API instead. Please see this announcement
                      for details.'
                    format: int64
                    type: integer
                  diskEncryptionStatus:
                    description: 'DiskEncryptionStatus: Disk encryption status specific
                      to an instance. Applies only to Second Generation instances.'
                    properties:
                      kmsKeyVersionName:
                        description: 'KmsKeyVersionName: KMS key version used to encrypt
                          the Cloud SQL instance disk'
                        type: string
                    required:
                    - kmsKeyVersionName
                    type: object
                  failoverReplica:
                    description: 'FailoverReplica: The name and status of the failover
                      replica. This property is applicable only to Second Generation
                      instances.'
                    properties:
                      available:
                        description: 'Available: The availability status of the failover
                          replica. A false status indicates that the failover replica
                          is out of sync. The master can only failover to the failover
                          replica when the status is true.'
                        type: boolean
                    required:
                    - available
                    type: object
                  gceZone:
                    description: 'GceZone: The Compute Engine zone that the instance
                      is currently serving from. This value could be different from
                      the zone that was specified when the instance was created if
                      the instance has failed over to its secondary zone.'
                    type: string
                  ipAddresses:
                    description: 'IPAddresses: The assigned IP addresses for the instance.'
                    items:
                      description: IPMapping is database instance IP Mapping.
                      properties:
                        ipAddress:
                          description: 'IPAddress: The IP address assigned.'
                          type: string
                        timeToRetire:
                          description: 'TimeToRetire: The due time for this IP to
                            be retired in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
                            This field is only available when the IP is scheduled
                            to be retired.'
                          type: string
                        type:
                          description: 'Type: The type of this IP address. A PRIMARY
                            address is a public address that can accept incoming connections.
                            A PRIVATE address is a private address that can accept
                            incoming connections. An OUTGOING address is the source
                            address of connections originating from the instance,
                            if supported.'
                          type: string
                      type: object
                    type: array
                  ipv6Address:
                    description: 'IPv6Address: The IPv6 address assigned to the instance.
                      This property is applicable only to First Generation instances.'
                    type: string
                  project:
                    description: 'Project: The project ID of the project containing
                      the Cloud SQL instance. The Google apps domain is prefixed if
                      applicable.'
                    type: string
                  selfLink:
                    description: 'SelfLink: The URI of this resource.'
                    type: string
                  serviceAccountEmailAddress:
                    description: 'ServiceAccountEmailAddress: The service account
                      email address assigned to the instance. This property is applicable
                      only to Second Generation instances.'
                    type: string
                  settingsVersion:
                    description: 'SettingsVersion: The version of instance settings.
                      This is a required field for update method to make sure concurrent
                      updates are handled properly. During update, use the most recent
                      settingsVersion value for this instance and do not try to update
                      this value.'
                    format: int64
                    type: integer
                  state:
                    description: 'State: The current serving state of the Cloud SQL
                      instance. This can be one of the following. RUNNABLE: The instance
                      is running, or is ready to run when accessed. SUSPENDED: The
                      instance is not available, for example due to problems with
                      billing. PENDING_CREATE: The instance is being created. MAINTENANCE:
                      The instance is down for maintenance. FAILED: The instance creation
                      failed. UNKNOWN_STATE: The state of the instance is unknown.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: policies.dns.gcp.crossplane.io
spec:
  group: dns.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.name
      name: DNS NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Policy is a collection of DNS rules applied to one or more
          Virtual Private Cloud resources.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The PolicySpec defines the desired state of a DNSPolicy.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: The PolicyParameters define the desired state of a Policy
                properties:
                  alternativeNameServerConfig:
                    description: 'AlternativeNameServerConfig: Sets an alternative
                      name server for the associated networks. When specified, all
                      DNS queries are forwarded to a name server that you choose.
                      Names such as .internal are not available when an alternative
                      name server is specified.'
                    properties:
                      targetNameServers:
                        description: 'TargetNameServers: Sets an alternative name
                          server for the associated networks. When specified, all
                          DNS queries are forwarded to a name server that you choose.
                          Names such as .internal are not available when an alternative
                          name server is specified.'
                        items:
                          description: A PolicyAlternativeNameServerConfigTargetNameServer
                            has the below fields.
                          properties:
                            forwardingPath:
                              description: 'ForwardingPath: Forwarding path for this
                                TargetNameServer. If unset or set to DEFAULT, Cloud
                                DNS makes forwarding decisions based on  address ranges;
                                that is, RFC1918 addresses go to the VPC network,
                                non-RFC1918 addresses go to the internet. When set
                                to PRIVATE, Cloud DNS always sends queries through
                                the VPC network for this target. Possible values:
                                "default" - Cloud DNS makes forwarding decision based
                                on IP address ranges; that is, RFC1918 addresses forward
                                to the target through the VPC and non-RFC1918 addresses
                                forward to the target through the internet "private"
                                - Cloud DNS always forwards to this target through
                                the VPC.'
                              type: string
                            ipv4Address:
                              description: 'Ipv4Address: IPv4 address to forward to.'
                              type: string
                          required:
                          - ipv4Address
                          type: object
                        type: array
                    required:
                    - targetNameServers
                    type: object
                  description:
                    description: 'Description: A mutable string of at most 1024 characters
                      associated with this resource for the user''s convenience. Has
                      no effect on the policy''s function.'
                    type: string
                  enableInboundForwarding:
                    description: 'EnableInboundForwarding: Allows networks bound to
                      this policy to receive DNS queries sent by VMs or applications
                      over VPN connections. When enabled, a virtual IP address is
                      allocated from each of the subnetworks that are bound to this
                      policy.'
                    type: boolean
                  enableLogging:
                    description: 'EnableLogging: Controls whether logging is enabled
                      for the networks bound to this policy. Defaults to no logging
                      if not set.'
                    type: boolean
                  networks:
                    description: 'Networks: List of network names specifying networks
                      to which this policy is applied.'
                    items:
                      description: A PolicyNetwork struct has the field NetworkURL
                      properties:
                        networkUrl:
                          description: 'NetworkUrl: The fully qualified URL of the
                            VPC network to bind to.'
                          type: string
                      required:
                      - networkUrl
                      type: object
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: The PolicyStatus represents the observed state of a DNSPolicy.
            properties:
              atProvider:
                description: The PolicyObservation is used to show the observed state
                  of the Policy
                properties:
                  id:
                    description: 'Id: Unique identifier for the resource; defined
                      by the server (output only).'
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: resourcerecordsets.dns.gcp.crossplane.io
spec:
  group: dns.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ResourceRecordSet
    listKind: ResourceRecordSetList
    plural: resourcerecordsets
    shortNames:
    - rrs
    singular: resourcerecordset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.name
      name: DNS NAME
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceRecordSet is a managed resource that represents a Resource
          Record Set in Cloud DNS
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceRecordSetSpec defines the desired state of a ResourceRecordSet.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ResourceRecordSetParameters define the desired state
                  of a ResourceRecordSet
                properties:
                  managedZone:
                    description: Managed zone name that this ResourceRecordSet will
                      be created in.
                    type: string
                  rrdatas:
                    description: List of ResourceRecord datas as defined in RFC 1035
                      (section 5) and RFC 1034 (section 3.6.1)
                    items:
                      type: string
                    type: array
                  signatureRrdatas:
                    description: List of Signature ResourceRecord datas, as defined
                      in RFC 4034 (section 3.2).
                    items:
                      type: string
                    type: array
                  ttl:
                    description: Number of seconds that this ResourceRecordSet can
                      be cached by resolvers.
                    format: int64
                    type: integer
                  type:
                    description: The identifier of a supported record type.
                    enum:
                    - A
                    - AAAA
                    - CAA
                    - CNAME
                    - DNSKEY
                    - DS
                    - IPSECKEY
                    - MX
                    - NAPTR
                    - NS
                    - PTR
                    - SPF
                    - SRV
                    - SSHFP
                    - TLSA
                    - TXT
                    type: string
                required:
                - managedZone
                - rrdatas
                - ttl
                - type
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ResourceRecordSetStatus represents the observed state of
              a ResourceRecordSet.
            properties:
              atProvider:
                description: ResourceRecordSetObservation is used to show the observed
                  state of the ResourceRecordSet
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: storeconfigs.gcp.crossplane.io
spec:
  group: gcp.crossplane.io
  names:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how GCP controller should store connection
          details.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            properties:
              defaultScope:
                description: DefaultScope used for scoping secrets for "cluster-scoped"
                  resources. If store type is "Kubernetes", this would mean the default
                  namespace to store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: Kubernetes configures a Kubernetes secret store. If the
                  "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              type:
                default: Kubernetes
                description: Type configures which secret store to be used. Only the
                  configuration block for this store will be used and others will
                  be ignored if provided. Default is Kubernetes.
                type: string
              vault:
                description: Vault configures a Vault secret store.
                properties:
                  auth:
                    description: Auth configures an authentication method for Vault.
                    properties:
                      method:
                        description: Method configures which auth method will be used.
                        type: string
                      token:
                        description: Token configures Token Auth for Vault.
                        properties:
                          env:
                            description: Env is a reference to an environment variable
                              that contains credentials that must be used to connect
                              to the provider.
                            properties:
                              name:
                                description: Name is the name of an environment variable.
                                type: string
                            required:
                            - name
                            type: object
                          fs:
                            description: Fs is a reference to a filesystem location
                              that contains credentials that must be used to connect
                              to the provider.
                            properties:
                              path:
                                description: Path is a filesystem path.
                                type: string
                            required:
                            - path
                            type: object
                          secretRef:
                            description: A SecretRef is a reference to a secret key
                              that contains the credentials that must be used to connect
                              to the provider.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: Name of the secret.
                                type: string
                              namespace:
                                description: Namespace of the secret.
                                type: string
                            required:
                            - key
                            - name
                            - namespace
                            type: object
                          source:
                            description: Source of the credentials.
                            enum:
                            - None
                            - Secret
                            - Environment
                            - Filesystem
                            type: string
                        required:
                        - source
                        type: object
                    required:
                    - method
                    type: object
                  caBundle:
                    description: CABundle configures CA bundle for Vault Server.
                    properties:
                      env:
                        description: Env is a reference to an environment variable
                          that contains credentials that must be used to connect to
                          the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: Fs is a reference to a filesystem location that
                          contains credentials that must be used to connect to the
                          provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: A SecretRef is a reference to a secret key that
                          contains the credentials that must be used to connect to
                          the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                  mountPath:
                    description: MountPath is the mount path of the KV secrets engine.
                    type: string
                  server:
                    description: Server is the url of the Vault server, e.g. "https://vault.acme.org"
                    type: string
                  version:
                    default: v2
                    description: Version of the KV Secrets engine of Vault. https://www.vaultproject.io/docs/secrets/kv
                    type: string
                required:
                - auth
                - mountPath
                - server
                type: object
            required:
            - defaultScope
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providers.gcp.crossplane.io
spec:
  group: gcp.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - gcp
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.projectID
      name: PROJECT-ID
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentialsSecretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A Provider configures a GCP 'provider', i.e. a connection to
          a particular GCP project using a particular GCP service account
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderSpec defines the desired state of a Provider.
            properties:
              credentialsSecretRef:
                description: CredentialsSecretRef references a specific secret's key
                  that contains the credentials that are used to connect to the GCP
                  API.
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
              projectID:
                description: ProjectID is the project name (not numerical ID) of this
                  GCP Provider.
                type: string
            required:
            - credentialsSecretRef
            - projectID
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha3

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigs.gcp.crossplane.io
spec:
  group: gcp.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - gcp
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.projectID
      name: PROJECT-ID
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentialsSecretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfig configures how GCP controller should connect
          to GCP API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              clientOptions:
                description: ClientOptions can override default Google API client
                  options
                properties:
                  endpoint:
                    description: Endpoint overrides the default endpoint.
                    type: string
                  withoutAuthentication:
                    description: WithoutAuthentication - specifies that no authentication
                      should be used. It is suitable only for testing and for accessing
                      public resources.
                    type: boolean
                type: object
              credentials:
                description: Credentials required to authenticate to this provider.
                properties:
                  env:
                    description: Env is a reference to an environment variable that
                      contains credentials that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: Fs is a reference to a filesystem location that contains
                      credentials that must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: A SecretRef is a reference to a secret key that contains
                      the credentials that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - InjectedIdentity
                    - Environment
                    - Filesystem
                    type: string
                required:
                - source
                type: object
              projectID:
                description: ProjectID is the project name (not numerical ID) of this
                  GCP ProviderConfig.
                type: string
            required:
            - credentials
            - projectID
            type: object
          status:
            description: A ProviderConfigStatus represents the status of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigusages.gcp.crossplane.io
spec:
  group: gcp.crossplane.io
  names:
    categories:
    - crossplane
    - provider
    - gcp
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
              policy:
                description: Policies for referencing.
                properties:
                  resolution:
                    default: Required
                    description: Resolution specifies whether resolution of this reference
                      is required. The default is 'Required', which means the reconcile
                      will fail if the reference cannot be resolved. 'Optional' means
                      this reference will be a no-op if it cannot be resolved.
                    enum:
                    - Required
                    - Optional
                    type: string
                  resolve:
                    description: Resolve specifies when this reference should be resolved.
                      The default is 'IfNotPresent', which will attempt to resolve
                      the reference only when the corresponding field is not present.
                      Use 'Always' to resolve the reference on every reconcile.
                    enum:
                    - Always
                    - IfNotPresent
                    type: string
                type: object
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: serviceaccounts.iam.gcp.crossplane.io
spec:
  group: iam.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ServiceAccount
    listKind: ServiceAccountList
    plural: serviceaccounts
    singular: serviceaccount
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.displayName
      name: DISPLAYNAME
      type: string
    - jsonPath: .status.atProvider.email
      name: EMAIL
      type: string
    - jsonPath: .status.atProvider.disabled
      name: DISABLED
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceAccount is a managed resource that represents a Google
          IAM Service Account.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceAccountSpec defines the desired state of a ServiceAccount.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ServiceAccountParameters defines parameters for a desired
                  IAM ServiceAccount https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts
                  The name of the service account (ie the `accountId` parameter of
                  the Create call) is determined by the value of the `crossplane.io/external-name`
                  annotation. Unless overridden by the user, this annotation is automatically
                  populated with the value of the `metadata.name` attribute.
                properties:
                  description:
                    description: Description is an optional user-specified opaque
                      description of the service account. Must be less than or equal
                      to 256 characters.
                    type: string
                  displayName:
                    description: DisplayName is an optional user-specified name for
                      the service account. Must be less than or equal to 100 characters.
                    type: string
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServiceAccountStatus represents the observed state of a ServiceAccount.
            properties:
              atProvider:
                description: ServiceAccountObservation is used to show the observed
                  state of the ServiceAccount resource on GCP. All fields in this
                  structure should only be populated from GCP responses; any changes
                  made to the k8s resource outside of the crossplane gcp controller
                  will be ignored and overwritten.
                properties:
                  disabled:
                    description: Disabled is a bool indicating if the service account
                      is disabled. The field is currently in alpha phase.
                    type: boolean
                  email:
                    description: Email is the the email address of the service account.
                      This matches the EMAIL field you would see using `gcloud iam
                      service-accounts list`
                    type: string
                  name:
                    description: 'Name is the "relative resource name" of the service
                      account in the following format: projects/{PROJECT_ID}/serviceAccounts/{external-name}.
                      part of https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1#ServiceAccount
                      not to be confused with CreateServiceAccountRequest.Name aka
                      ServiceAccountParameters.ProjectName'
                    type: string
                  oauth2ClientId:
                    description: OAuth2ClientId is the value GCP will use in conjunction
                      with the OAuth2 clientconfig API to make three legged OAuth2
                      (3LO) flows to access the data of Google users.
                    type: string
                  projectId:
                    description: ProjectID is the id of the project that owns the
                      service account.
                    type: string
                  uniqueId:
                    description: The unique and stable id of the service account.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: serviceaccountkeys.iam.gcp.crossplane.io
spec:
  group: iam.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ServiceAccountKey
    listKind: ServiceAccountKeyList
    plural: serviceaccountkeys
    singular: serviceaccountkey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.keyId
      name: KEY_ID
      type: string
    - jsonPath: .status.atProvider.validAfterTime
      name: CREATED_AT
      type: string
    - jsonPath: .status.atProvider.validBeforeTime
      name: EXPIRES_AT
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceAccountKey is a managed resource that represents a Google
          IAM Service Account Key.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceAccountKeySpec defines the desired state of a ServiceAccountKey.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ServiceAccountKeyParameters defines parameters for a
                  desired IAM ServiceAccountKey https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts.keys
                properties:
                  keyAlgorithm:
                    description: 'KeyAlgorithm is an optional user-specified string
                      that specifies the type of key and algorithm to use for the
                      key. The default is currently a 2048-bit RSA key. However this
                      may change in the future. Possible values: "KEY_ALG_UNSPECIFIED"
                      - Not specified. "KEY_ALG_RSA_1024" - 1024-bit RSA key "KEY_ALG_RSA_2048"
                      - 2048-bit RSA key'
                    type: string
                  privateKeyType:
                    description: 'PrivateKeyType is an optional specification of the
                      output format of the generated private key. The default value
                      is TYPE_GOOGLE_CREDENTIALS_FILE, which corresponds to the Google
                      Credentials File Format. Possible values: "TYPE_UNSPECIFIED"
                      - Not specified. Equivalent to TYPE_GOOGLE_CREDENTIALS_FILE.
                      "TYPE_PKCS12_FILE" - Private key stored in a RFC7292 PKCS #12
                      document. Password for the PKCS #12 document is "notasecret".
                      "TYPE_GOOGLE_CREDENTIALS_FILE" - Google Credentials File format.'
                    type: string
                  publicKeyType:
                    default: TYPE_RAW_PUBLIC_KEY
                    description: 'PublicKeyType is an optional specification of the
                      output format for the associated public key. The default value
                      is TYPE_RAW_PUBLIC_KEY. Possible values: "TYPE_NONE" - Not specified.
                      Public key is not retrieved via Google Cloud API. "TYPE_X509_PEM_FILE"
                      - X509 PEM format. "TYPE_RAW_PUBLIC_KEY" - Raw public key.'
                    type: string
                  serviceAccount:
                    description: 'ServiceAccount: The RRN of the referred ServiceAccount
                      RRN is the relative resource name as defined by Google Cloud
                      API design docs here: https://cloud.google.com/apis/design/resource_names#relative_resource_name
                      An example value for the ServiceAccount field is as follows:
                      projects/<project-name>/serviceAccounts/perfect-test-sa@crossplane-playground.iam.gserviceaccount.com'
                    type: string
                  serviceAccountRef:
                    description: ServiceAccountRef references a ServiceAccount and
                      retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: ServiceAccountSelector selects a reference to a ServiceAccount
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServiceAccountKeyStatus represents the observed state of
              a ServiceAccountKey.
            properties:
              atProvider:
                description: ServiceAccountKeyObservation is used to show the observed
                  state of the ServiceAccountKey resource on GCP. All fields in this
                  structure should only be populated from GCP responses; any changes
                  made to the k8s resource outside of the crossplane gcp controller
                  will be ignored and overwritten.
                properties:
                  keyAlgorithm:
                    description: KeyAlgorithm is the key algorithm & possibly key
                      size used for public/private key pair generation.
                    type: string
                  keyId:
                    description: KeyID is the generated unique & stable key id for
                      the service account key.
                    type: string
                  keyOrigin:
                    description: 'KeyOrigin is the origin of the key. Possible values:
                      "ORIGIN_UNSPECIFIED" - Unspecified key origin. "USER_PROVIDED"
                      - Key is provided by user. "GOOGLE_PROVIDED" - Key is provided
                      by Google.'
                    type: string
                  keyType:
                    description: 'KeyType is the type of the key. Possible values:
                      "KEY_TYPE_UNSPECIFIED" - Unspecified key type. "USER_MANAGED"
                      - User-managed key (managed and rotated by the user). "SYSTEM_MANAGED"
                      - System-managed key (managed and rotated by Google).'
                    type: string
                  name:
                    description: 'Name is the resource name of the service account
                      key in the following format: projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{external-name}.
                      part of https://godoc.org/google.golang.org/genproto/googleapis/iam/admin/v1#ServiceAccountKey'
                    type: string
                  privateKeyType:
                    description: PrivateKeyType is the output format for the generated
                      private key. Only set in keys.create responses. Determines the
                      encoding for the private key stored in the "connection" secret.
                    type: string
                  validAfterTime:
                    description: ValidAfterTime is the timestamp after which this
                      key can be used in RFC3339 UTC "Zulu" format.
                    type: string
                  validBeforeTime:
                    description: ValidBeforeTime is the timestamp before which this
                      key can be used in RFC3339 UTC "Zulu" format.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: serviceaccountpolicies.iam.gcp.crossplane.io
spec:
  group: iam.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ServiceAccountPolicy
    listKind: ServiceAccountPolicyList
    plural: serviceaccountpolicies
    singular: serviceaccountpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceAccountPolicy is a managed resource that represents a
          Google IAM ServiceAccount.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceAccountPolicySpec defines the desired state of a ServiceAccountPolicy.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ServiceAccountPolicyParameters defines parameters for
                  a desired IAM ServiceAccountPolicy
                properties:
                  policy:
                    description: 'Policy: An Identity and Access Management (IAM)
                      policy, which specifies access controls for Google Cloud resources.'
                    properties:
                      auditConfigs:
                        description: 'AuditConfigs: Specifies cloud audit logging
                          configuration for this policy.'
                        items:
                          description: "AuditConfig Specifies the audit configuration
                            for a service. The configuration determines which permission
                            types are logged, and what identities, if any, are exempted
                            from logging. An AuditConfig must have one or more AuditLogConfigs.
                            \n If there are AuditConfigs for both `allServices` and
                            a specific service, the union of the two AuditConfigs
                            is used for that service: the log_types specified in each
                            AuditConfig are enabled, and the exempted_members in each
                            AuditLogConfig are exempted. \n Example Policy with multiple
                            AuditConfigs: \n { \"audit_configs\": [ { \"service\":
                            \"allServices\" \"audit_log_configs\": [ { \"log_type\":
                            \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\"
                            ] }, { \"log_type\": \"DATA_WRITE\", }, { \"log_type\":
                            \"ADMIN_READ\", } ] }, { \"service\": \"sampleservice.googleapis.com\"
                            \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",
                            }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\":
                            [ \"user:aliya@example.com\" ] } ] } ] } \n For sampleservice,
                            this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
                            logging. It also exempts jose@example.com from DATA_READ
                            logging, and aliya@example.com from DATA_WRITE logging."
                          properties:
                            auditLogConfigs:
                              description: 'AuditLogConfigs: The configuration for
                                logging of each type of permission.'
                              items:
                                description: "AuditLogConfig Provides the configuration
                                  for logging a type of permissions. Example: \n {
                                  \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",
                                  \"exempted_members\": [ \"user:jose@example.com\"
                                  ] }, { \"log_type\": \"DATA_WRITE\", } ] } \n This
                                  enables 'DATA_READ' and 'DATA_WRITE' logging, while
                                  exempting jose@example.com from DATA_READ logging."
                                properties:
                                  exemptedMembers:
                                    description: 'ExemptedMembers: Specifies the identities
                                      that do not cause logging for this type of permission.
                                      Follows the same format of Binding.members.'
                                    items:
                                      type: string
                                    type: array
                                  logType:
                                    description: "LogType: The log type that this
                                      config enables. \n Possible values: \"LOG_TYPE_UNSPECIFIED\"
                                      - Default case. Should never be this. \"ADMIN_READ\"
                                      - Admin reads. Example: CloudIAM getIamPolicy
                                      \"DATA_WRITE\" - Data writes. Example: CloudSQL
                                      Users create \"DATA_READ\" - Data reads. Example:
                                      CloudSQL Users list"
                                    enum:
                                    - ADMIN_READ
                                    - DATA_WRITE
                                    - DATA_READ
                                    type: string
                                type: object
                              type: array
                            service:
                              description: 'Service: Specifies a service that will
                                be enabled for audit logging. For example, `storage.googleapis.com`,
                                `cloudsql.googleapis.com`. `allServices` is a special
                                value that covers all services.'
                              type: string
                          type: object
                        type: array
                      bindings:
                        description: 'Bindings: Associates a list of `members` to
                          a `role`. Optionally, may specify a `condition` that determines
                          how and when the `bindings` are applied. Each of the `bindings`
                          must contain at least one member.'
                        items:
                          description: Binding Associates `members` with a `role`.
                          properties:
                            condition:
                              description: 'Condition: The condition that is associated
                                with this binding. NOTE: An unsatisfied condition
                                will not allow user access via current binding. Different
                                bindings, including their conditions, are examined
                                independently.'
                              properties:
                                description:
                                  description: 'Description: Optional. Description
                                    of the expression. This is a longer text which
                                    describes the expression, e.g. when hovered over
                                    it in a UI.'
                                  type: string
                                expression:
                                  description: 'Expression: Textual representation
                                    of an expression in Common Expression Language
                                    syntax.'
                                  type: string
                                location:
                                  description: 'Location: Optional. String indicating
                                    the location of the expression for error reporting,
                                    e.g. a file name and a position in the file.'
                                  type: string
                                title:
                                  description: 'Title: Optional. Title for the expression,
                                    i.e. a short string describing its purpose. This
                                    can be used e.g. in UIs which allow to enter the
                                    expression.'
                                  type: string
                              type: object
                            members:
                              description: "Members: Specifies the identities requesting
                                access for a Cloud Platform resource. `members` can
                                have the following values: \n * `allUsers`: A special
                                identifier that represents anyone who is on the internet;
                                with or without a Google account. \n * `allAuthenticatedUsers`:
                                A special identifier that represents anyone who is
                                authenticated with a Google account or a service account.
                                \n * `user:{emailid}`: An email address that represents
                                a specific Google account. For example, `alice@example.com`
                                . \n * `serviceAccount:{emailid}`: An email address
                                that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
                                \n * `group:{emailid}`: An email address that represents
                                a Google group. For example, `admins@example.com`.
                                \n * `deleted:user:{emailid}?uid={uniqueid}`: An email
                                address (plus unique identifier) representing a user
                                that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.
                                If the user is recovered, this value reverts to `user:{emailid}`
                                and the recovered user retains the role in the binding.
                                \n * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:
                                An email address (plus unique identifier) representing
                                a service account that has been recently deleted.
                                For example, \n `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
                                \n If the service account is undeleted, this value
                                reverts to `serviceAccount:{emailid}` and the undeleted
                                service account retains the role in the binding. \n
                                * `deleted:group:{emailid}?uid={uniqueid}`: An email
                                address (plus unique identifier) representing a Google
                                group that has been recently deleted. For example,
                                `admins@example.com?uid=123456789012345678901`. If
                                the group is recovered, this value reverts to `group:{emailid}`
                                and the recovered group retains the role in the binding.
                                \n * `domain:{domain}`: The G Suite domain (primary)
                                that represents all the users of that domain. For
                                example, `google.com` or `example.com`."
                              items:
                                type: string
                              type: array
                            role:
                              description: 'Role: Role that is assigned to `members`.
                                For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
                              type: string
                            serviceAccountMemberRefs:
                              description: ServiceAccountMemberRefs are references
                                to ServiceAccounts used to set the Members.
                              items:
                                description: A Reference to a named object.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            serviceAccountMemberSelector:
                              description: ServiceAccountMemberSelector selects references
                                to ServiceAccounts used to set the Members.
                              properties:
                                matchControllerRef:
                                  description: MatchControllerRef ensures an object
                                    with the same controller reference as the selecting
                                    object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          required:
                          - role
                          type: object
                        type: array
                    type: object
                  serviceAccount:
                    description: 'ServiceAccount: The RRN of the referred ServiceAccount
                      RRN is the relative resource name as defined by Google Cloud
                      API design docs here: https://cloud.google.com/apis/design/resource_names#relative_resource_name
                      An example value for the ServiceAccount field is as follows:
                      projects/<project-name>/serviceAccounts/perfect-test-sa@crossplane-playground.iam.gserviceaccount.com'
                    type: string
                  serviceAccountRef:
                    description: ServiceAccountRef references a ServiceAccount and
                      retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountSelector:
                    description: ServiceAccountSelector selects a reference to a ServiceAccount
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - policy
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServiceAccountPolicyStatus represents the observed state
              of a ServiceAccountPolicy.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cryptokeys.kms.gcp.crossplane.io
spec:
  group: kms.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: CryptoKey
    listKind: CryptoKeyList
    plural: cryptokeys
    singular: cryptokey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.purpose
      name: PURPOSE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CryptoKey is a managed resource that represents a Google KMS
          Crypto Key.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CryptoKeySpec defines the desired state of a CryptoKey.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CryptoKeyParameters defines parameters for a desired
                  KMS CryptoKey https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys
                properties:
                  keyRing:
                    description: 'KeyRing: The RRN of the KeyRing to which this CryptoKey
                      belongs, provided by the client when initially creating the
                      CryptoKey.'
                    type: string
                  keyRingRef:
                    description: KeyRingRef references a KeyRing and retrieves its
                      URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  keyRingSelector:
                    description: KeyRingSelector selects a reference to a KeyRing
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Labels: Labels with user-defined metadata. For more
                      information, see [Labeling Keys](/kms/docs/labeling-keys).'
                    type: object
                  nextRotationTime:
                    description: "NextRotationTime: At next_rotation_time, the Key
                      Management Service will automatically: \n 1. Create a new version
                      of this CryptoKey. 2. Mark the new version as primary. \n Key
                      rotations performed manually via CreateCryptoKeyVersion and
                      UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time.
                      \n Keys with purpose ENCRYPT_DECRYPT support automatic rotation.
                      For other keys, this field must be omitted."
                    type: string
                  purpose:
                    description: "Purpose: Immutable. The immutable purpose of this
                      CryptoKey. \n Possible values: \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\"
                      - Not specified. \"ENCRYPT_DECRYPT\" - CryptoKeys with this
                      purpose may be used with Encrypt and Decrypt. \"ASYMMETRIC_SIGN\"
                      - CryptoKeys with this purpose may be used with AsymmetricSign
                      and GetPublicKey. \"ASYMMETRIC_DECRYPT\" - CryptoKeys with this
                      purpose may be used with AsymmetricDecrypt and GetPublicKey."
                    enum:
                    - ENCRYPT_DECRYPT
                    - ASYMMETRIC_SIGN
                    - ASYMMETRIC_DECRYPT
                    type: string
                  rotationPeriod:
                    description: "RotationPeriod: next_rotation_time will be advanced
                      by this period when the service automatically rotates a key.
                      Must be at least 24 hours and at most 876,000 hours. \n If rotation_period
                      is set, next_rotation_time must also be set. \n Keys with purpose
                      ENCRYPT_DECRYPT support automatic rotation. For other keys,
                      this field must be omitted."
                    type: string
                  versionTemplate:
                    description: 'VersionTemplate: A template describing settings
                      for new CryptoKeyVersion instances. The properties of new CryptoKeyVersion
                      instances created by either CreateCryptoKeyVersion or auto-rotation
                      are controlled by this template.'
                    properties:
                      algorithm:
                        description: "Algorithm: Required. Algorithm to use when creating
                          a CryptoKeyVersion based on this template. \n For backwards
                          compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if
                          both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT.
                          \n Possible values: \"CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED\"
                          - Not specified. \"GOOGLE_SYMMETRIC_ENCRYPTION\" - Creates
                          symmetric encryption keys. \"RSA_SIGN_PSS_2048_SHA256\"
                          - RSASSA-PSS 2048 bit key with a SHA256 digest. \"RSA_SIGN_PSS_3072_SHA256\"
                          - RSASSA-PSS 3072 bit key with a SHA256 digest. \"RSA_SIGN_PSS_4096_SHA256\"
                          - RSASSA-PSS 4096 bit key with a SHA256 digest. \"RSA_SIGN_PSS_4096_SHA512\"
                          - RSASSA-PSS 4096 bit key with a SHA512 digest. \"RSA_SIGN_PKCS1_2048_SHA256\"
                          - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
                          \"RSA_SIGN_PKCS1_3072_SHA256\" - RSASSA-PKCS1-v1_5 with
                          a 3072 bit key and a SHA256 digest. \"RSA_SIGN_PKCS1_4096_SHA256\"
                          - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
                          \"RSA_SIGN_PKCS1_4096_SHA512\" - RSASSA-PKCS1-v1_5 with
                          a 4096 bit key and a SHA512 digest. \"RSA_DECRYPT_OAEP_2048_SHA256\"
                          - RSAES-OAEP 2048 bit key with a SHA256 digest. \"RSA_DECRYPT_OAEP_3072_SHA256\"
                          - RSAES-OAEP 3072 bit key with a SHA256 digest. \"RSA_DECRYPT_OAEP_4096_SHA256\"
                          - RSAES-OAEP 4096 bit key with a SHA256 digest. \"RSA_DECRYPT_OAEP_4096_SHA512\"
                          - RSAES-OAEP 4096 bit key with a SHA512 digest. \"EC_SIGN_P256_SHA256\"
                          - ECDSA on the NIST P-256 curve with a SHA256 digest. \"EC_SIGN_P384_SHA384\"
                          - ECDSA on the NIST P-384 curve with a SHA384 digest. \"EXTERNAL_SYMMETRIC_ENCRYPTION\"
                          - Algorithm representing symmetric encryption by an external
                          key manager."
                        type: string
                      protectionLevel:
                        description: "ProtectionLevel: ProtectionLevel to use when
                          creating a CryptoKeyVersion based on this template. Immutable.
                          Defaults to SOFTWARE. \n Possible values: \"PROTECTION_LEVEL_UNSPECIFIED\"
                          - Not specified. \"SOFTWARE\" - Crypto operations are performed
                          in software. \"HSM\" - Crypto operations are performed in
                          a Hardware Security Module. \"EXTERNAL\" - Crypto operations
                          are performed by an external key manager."
                        enum:
                        - SOFTWARE
                        - HSM
                        - EXTERNAL
                        type: string
                    type: object
                required:
                - purpose
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CryptoKeyStatus represents the observed state of a CryptoKey.
            properties:
              atProvider:
                description: CryptoKeyObservation is used to show the observed state
                  of the CryptoKey resource on GCP. All fields in this structure should
                  only be populated from GCP responses; any changes made to the k8s
                  resource outside of the crossplane gcp controller will be ignored
                  and overwritten.
                properties:
                  createTime:
                    description: 'CreateTime: Output only. The time at which this
                      CryptoKey was created.'
                    type: string
                  name:
                    description: 'Name: Output only. The resource name for this CryptoKey
                      in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.'
                    type: string
                  nextRotationTime:
                    description: "NextRotationTime: At next_rotation_time, the Key
                      Management Service will automatically: \n 1. Create a new version
                      of this CryptoKey. 2. Mark the new version as primary. \n Key
                      rotations performed manually via CreateCryptoKeyVersion and
                      UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time.
                      \n Keys with purpose ENCRYPT_DECRYPT support automatic rotation.
                      For other keys, this field must be omitted."
                    type: string
                  primary:
                    description: "Primary: Output only. A copy of the \"primary\"
                      CryptoKeyVersion that will be used by Encrypt when this CryptoKey
                      is given in EncryptRequest.name. \n The CryptoKey's primary
                      version can be updated via UpdateCryptoKeyPrimaryVersion. \n
                      Keys with purpose ENCRYPT_DECRYPT may have a primary. For other
                      keys, this field will be omitted."
                    properties:
                      algorithm:
                        description: "Algorithm: Output only. The CryptoKeyVersionAlgorithm
                          that this CryptoKeyVersion supports. \n Possible values:
                          \"CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED\" - Not specified.
                          \"GOOGLE_SYMMETRIC_ENCRYPTION\" - Creates symmetric encryption
                          keys. \"RSA_SIGN_PSS_2048_SHA256\" - RSASSA-PSS 2048 bit
                          key with a SHA256 digest. \"RSA_SIGN_PSS_3072_SHA256\" -
                          RSASSA-PSS 3072 bit key with a SHA256 digest. \"RSA_SIGN_PSS_4096_SHA256\"
                          - RSASSA-PSS 4096 bit key with a SHA256 digest. \"RSA_SIGN_PSS_4096_SHA512\"
                          - RSASSA-PSS 4096 bit key with a SHA512 digest. \"RSA_SIGN_PKCS1_2048_SHA256\"
                          - RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
                          \"RSA_SIGN_PKCS1_3072_SHA256\" - RSASSA-PKCS1-v1_5 with
                          a 3072 bit key and a SHA256 digest. \"RSA_SIGN_PKCS1_4096_SHA256\"
                          - RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
                          \"RSA_SIGN_PKCS1_4096_SHA512\" - RSASSA-PKCS1-v1_5 with
                          a 4096 bit key and a SHA512 digest. \"RSA_DECRYPT_OAEP_2048_SHA256\"
                          - RSAES-OAEP 2048 bit key with a SHA256 digest. \"RSA_DECRYPT_OAEP_3072_SHA256\"
                          - RSAES-OAEP 3072 bit key with a SHA256 digest. \"RSA_DECRYPT_OAEP_4096_SHA256\"
                          - RSAES-OAEP 4096 bit key with a SHA256 digest. \"RSA_DECRYPT_OAEP_4096_SHA512\"
                          - RSAES-OAEP 4096 bit key with a SHA512 digest. \"EC_SIGN_P256_SHA256\"
                          - ECDSA on the NIST P-256 curve with a SHA256 digest. \"EC_SIGN_P384_SHA384\"
                          - ECDSA on the NIST P-384 curve with a SHA384 digest. \"EXTERNAL_SYMMETRIC_ENCRYPTION\"
                          - Algorithm representing symmetric encryption by an external
                          key manager."
                        type: string
                      attestation:
                        description: 'Attestation: Output only. Statement that was
                          generated and signed by the HSM at key creation time. Use
                          this statement to verify attributes of the key as stored
                          on the HSM, independently of Google. Only provided for key
                          versions with protection_level HSM.'
                        properties:
                          content:
                            description: 'Content: Output only. The attestation data
                              provided by the HSM when the key operation was performed.'
                            type: string
                          format:
                            description: "Format: Output only. The format of the attestation
                              data. \n Possible values: \"ATTESTATION_FORMAT_UNSPECIFIED\"
                              - Not specified. \"CAVIUM_V1_COMPRESSED\" - Cavium HSM
                              attestation compressed with gzip. Note that this format
                              is defined by Cavium and subject to change at any time.
                              \"CAVIUM_V2_COMPRESSED\" - Cavium HSM attestation V2
                              compressed with gzip. This is a new format introduced
                              in Cavium's version 3.2-08."
                            type: string
                        type: object
                      createTime:
                        description: 'CreateTime: Output only. The time at which this
                          CryptoKeyVersion was created.'
                        type: string
                      destroyEventTime:
                        description: 'DestroyEventTime: Output only. The time this
                          CryptoKeyVersion''s key material was destroyed. Only present
                          if state is DESTROYED.'
                        type: string
                      destroyTime:
                        description: 'DestroyTime: Output only. The time this CryptoKeyVersion''s
                          key material is scheduled for destruction. Only present
                          if state is DESTROY_SCHEDULED.'
                        type: string
                      externalProtectionLevelOptions:
                        description: 'ExternalProtectionLevelOptions: ExternalProtectionLevelOptions
                          stores a group of additional fields for configuring a CryptoKeyVersion
                          that are specific to the EXTERNAL protection level.'
                        properties:
                          externalKeyUri:
                            description: 'ExternalKeyUri: The URI for an external
                              resource that this CryptoKeyVersion represents.'
                            type: string
                        type: object
                      generateTime:
                        description: 'GenerateTime: Output only. The time this CryptoKeyVersion''s
                          key material was generated.'
                        type: string
                      importFailureReason:
                        description: 'ImportFailureReason: Output only. The root cause
                          of an import failure. Only present if state is IMPORT_FAILED.'
                        type: string
                      importJob:
                        description: 'ImportJob: Output only. The name of the ImportJob
                          used to import this CryptoKeyVersion. Only present if the
                          underlying key material was imported.'
                        type: string
                      importTime:
                        description: 'ImportTime: Output only. The time at which this
                          CryptoKeyVersion''s key material was imported.'
                        type: string
                      name:
                        description: 'Name: Output only. The resource name for this
                          CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersio
                          ns/*`.'
                        type: string
                      protectionLevel:
                        description: "ProtectionLevel: Output only. The ProtectionLevel
                          describing how crypto operations are performed with this
                          CryptoKeyVersion. \n Possible values: \"PROTECTION_LEVEL_UNSPECIFIED\"
                          - Not specified. \"SOFTWARE\" - Crypto operations are performed
                          in software. \"HSM\" - Crypto operations are performed in
                          a Hardware Security Module. \"EXTERNAL\" - Crypto operations
                          are performed by an external key manager."
                        type: string
                      state:
                        description: "State: The current state of the CryptoKeyVersion.
                          \n Possible values: \"CRYPTO_KEY_VERSION_STATE_UNSPECIFIED\"
                          - Not specified. \"PENDING_GENERATION\" - This version is
                          still being generated. It may not be used, enabled, disabled,
                          or destroyed yet. Cloud KMS will automatically mark this
                          version ENABLED as soon as the version is ready. \"ENABLED\"
                          - This version may be used for cryptographic operations.
                          \"DISABLED\" - This version may not be used, but the key
                          material is still available, and the version can be placed
                          back into the ENABLED state. \"DESTROYED\" - This version
                          is destroyed, and the key material is no longer stored.
                          A version may not leave this state once entered. \"DESTROY_SCHEDULED\"
                          - This version is scheduled for destruction, and will be
                          destroyed soon. Call RestoreCryptoKeyVersion to put it back
                          into the DISABLED state. \"PENDING_IMPORT\" - This version
                          is still being imported. It may not be used, enabled, disabled,
                          or destroyed yet. Cloud KMS will automatically mark this
                          version ENABLED as soon as the version is ready. \"IMPORT_FAILED\"
                          - This version was not imported successfully. It may not
                          be used, enabled, disabled, or destroyed. The submitted
                          key material has been discarded. Additional details can
                          be found in CryptoKeyVersion.import_failure_reason."
                        type: string
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cryptokeypolicies.kms.gcp.crossplane.io
spec:
  group: kms.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: CryptoKeyPolicy
    listKind: CryptoKeyPolicyList
    plural: cryptokeypolicies
    singular: cryptokeypolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CryptoKeyPolicy is a managed resource that represents a Google
          KMS Crypto Key.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CryptoKeyPolicySpec defines the desired state of a CryptoKeyPolicy.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CryptoKeyPolicyParameters defines parameters for a desired
                  KMS CryptoKeyPolicy https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys
                properties:
                  cryptoKey:
                    description: 'CryptoKey: The RRN of the CryptoKey to which this
                      CryptoKeyPolicy belongs.'
                    type: string
                  cryptoKeyRef:
                    description: CryptoKeyRef references a CryptoKey and retrieves
                      its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  cryptoKeySelector:
                    description: CryptoKeySelector selects a reference to a CryptoKey
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policy:
                    description: 'Policy: An Identity and Access Management (IAM)
                      policy, which specifies access controls for Google Cloud resources.'
                    properties:
                      auditConfigs:
                        description: 'AuditConfigs: Specifies cloud audit logging
                          configuration for this policy.'
                        items:
                          description: "AuditConfig Specifies the audit configuration
                            for a service. The configuration determines which permission
                            types are logged, and what identities, if any, are exempted
                            from logging. An AuditConfig must have one or more AuditLogConfigs.
                            \n If there are AuditConfigs for both `allServices` and
                            a specific service, the union of the two AuditConfigs
                            is used for that service: the log_types specified in each
                            AuditConfig are enabled, and the exempted_members in each
                            AuditLogConfig are exempted. \n Example Policy with multiple
                            AuditConfigs: \n { \"audit_configs\": [ { \"service\":
                            \"allServices\" \"audit_log_configs\": [ { \"log_type\":
                            \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\"
                            ] }, { \"log_type\": \"DATA_WRITE\", }, { \"log_type\":
                            \"ADMIN_READ\", } ] }, { \"service\": \"sampleservice.googleapis.com\"
                            \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",
                            }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\":
                            [ \"user:aliya@example.com\" ] } ] } ] } \n For sampleservice,
                            this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
                            logging. It also exempts jose@example.com from DATA_READ
                            logging, and aliya@example.com from DATA_WRITE logging."
                          properties:
                            auditLogConfigs:
                              description: 'AuditLogConfigs: The configuration for
                                logging of each type of permission.'
                              items:
                                description: "AuditLogConfig Provides the configuration
                                  for logging a type of permissions. Example: \n {
                                  \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",
                                  \"exempted_members\": [ \"user:jose@example.com\"
                                  ] }, { \"log_type\": \"DATA_WRITE\", } ] } \n This
                                  enables 'DATA_READ' and 'DATA_WRITE' logging, while
                                  exempting jose@example.com from DATA_READ logging."
                                properties:
                                  exemptedMembers:
                                    description: 'ExemptedMembers: Specifies the identities
                                      that do not cause logging for this type of permission.
                                      Follows the same format of Binding.members.'
                                    items:
                                      type: string
                                    type: array
                                  logType:
                                    description: "LogType: The log type that this
                                      config enables. \n Possible values: \"LOG_TYPE_UNSPECIFIED\"
                                      - Default case. Should never be this. \"ADMIN_READ\"
                                      - Admin reads. Example: CloudIAM getIamPolicy
                                      \"DATA_WRITE\" - Data writes. Example: CloudSQL
                                      Users create \"DATA_READ\" - Data reads. Example:
                                      CloudSQL Users list"
                                    enum:
                                    - ADMIN_READ
                                    - DATA_WRITE
                                    - DATA_READ
                                    type: string
                                type: object
                              type: array
                            service:
                              description: 'Service: Specifies a service that will
                                be enabled for audit logging. For example, `storage.googleapis.com`,
                                `cloudsql.googleapis.com`. `allServices` is a special
                                value that covers all services.'
                              type: string
                          type: object
                        type: array
                      bindings:
                        description: 'Bindings: Associates a list of `members` to
                          a `role`. Optionally, may specify a `condition` that determines
                          how and when the `bindings` are applied. Each of the `bindings`
                          must contain at least one member.'
                        items:
                          description: Binding Associates `members` with a `role`.
                          properties:
                            condition:
                              description: 'Condition: The condition that is associated
                                with this binding. NOTE: An unsatisfied condition
                                will not allow user access via current binding. Different
                                bindings, including their conditions, are examined
                                independently.'
                              properties:
                                description:
                                  description: 'Description: Optional. Description
                                    of the expression. This is a longer text which
                                    describes the expression, e.g. when hovered over
                                    it in a UI.'
                                  type: string
                                expression:
                                  description: 'Expression: Textual representation
                                    of an expression in Common Expression Language
                                    syntax.'
                                  type: string
                                location:
                                  description: 'Location: Optional. String indicating
                                    the location of the expression for error reporting,
                                    e.g. a file name and a position in the file.'
                                  type: string
                                title:
                                  description: 'Title: Optional. Title for the expression,
                                    i.e. a short string describing its purpose. This
                                    can be used e.g. in UIs which allow to enter the
                                    expression.'
                                  type: string
                              type: object
                            members:
                              description: "Members: Specifies the identities requesting
                                access for a Cloud Platform resource. `members` can
                                have the following values: \n * `allUsers`: A special
                                identifier that represents anyone who is on the internet;
                                with or without a Google account. \n * `allAuthenticatedUsers`:
                                A special identifier that represents anyone who is
                                authenticated with a Google account or a service account.
                                \n * `user:{emailid}`: An email address that represents
                                a specific Google account. For example, `alice@example.com`
                                . \n * `serviceAccount:{emailid}`: An email address
                                that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
                                \n * `group:{emailid}`: An email address that represents
                                a Google group. For example, `admins@example.com`.
                                \n * `deleted:user:{emailid}?uid={uniqueid}`: An email
                                address (plus unique identifier) representing a user
                                that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.
                                If the user is recovered, this value reverts to `user:{emailid}`
                                and the recovered user retains the role in the binding.
                                \n * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:
                                An email address (plus unique identifier) representing
                                a service account that has been recently deleted.
                                For example, \n `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
                                \n If the service account is undeleted, this value
                                reverts to `serviceAccount:{emailid}` and the undeleted
                                service account retains the role in the binding. \n
                                * `deleted:group:{emailid}?uid={uniqueid}`: An email
                                address (plus unique identifier) representing a Google
                                group that has been recently deleted. For example,
                                `admins@example.com?uid=123456789012345678901`. If
                                the group is recovered, this value reverts to `group:{emailid}`
                                and the recovered group retains the role in the binding.
                                \n * `domain:{domain}`: The G Suite domain (primary)
                                that represents all the users of that domain. For
                                example, `google.com` or `example.com`."
                              items:
                                type: string
                              type: array
                            role:
                              description: 'Role: Role that is assigned to `members`.
                                For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
                              type: string
                            serviceAccountMemberRefs:
                              description: ServiceAccountMemberRefs are references
                                to ServiceAccounts used to set the Members.
                              items:
                                description: A Reference to a named object.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            serviceAccountMemberSelector:
                              description: ServiceAccountMemberSelector selects references
                                to ServiceAccounts used to set the Members.
                              properties:
                                matchControllerRef:
                                  description: MatchControllerRef ensures an object
                                    with the same controller reference as the selecting
                                    object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          required:
                          - role
                          type: object
                        type: array
                    type: object
                required:
                - policy
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: CryptoKeyPolicyStatus represents the observed state of a
              CryptoKeyPolicy.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: keyrings.kms.gcp.crossplane.io
spec:
  group: kms.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: KeyRing
    listKind: KeyRingList
    plural: keyrings
    singular: keyring
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.forProvider.location
      name: LOCATION
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeyRing is a managed resource that represents a Google KMS KeyRing
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeyRingSpec defines the desired state of a KeyRing.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: KeyRingParameters defines parameters for a desired KMS
                  KeyRing https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings
                  The name of the key ring (ie the `keyRingId` parameter of the Create
                  call) is determined by the value of the `crossplane.io/external-name`
                  annotation. Unless overridden by the user, this annotation is automatically
                  populated with the value of the `metadata.name` attribute.
                properties:
                  location:
                    description: The location for the KeyRing. A full list of valid
                      locations can be found by running 'gcloud kms locations list'.
                    type: string
                required:
                - location
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: KeyRingStatus represents the observed state of a KeyRing.
            properties:
              atProvider:
                description: KeyRingObservation is used to show the observed state
                  of the KeyRing resource on GCP. All fields in this structure should
                  only be populated from GCP responses; any changes made to the k8s
                  resource outside of the crossplane gcp controller will be ignored
                  and overwritten.
                properties:
                  createTime:
                    description: 'CreateTime: Output only. The time at which this
                      KeyRing was created.'
                    type: string
                  name:
                    description: 'Name: Output only. The resource name for the KeyRing
                      in the format `projects/*/locations/*/keyRings/*`.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: subscriptions.pubsub.gcp.crossplane.io
spec:
  group: pubsub.gcp.crossplane.io
  names:
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    singular: subscription
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Subscription is a managed resource that represents a Google PubSub
          Subscription.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SubscriptionSpec defines the desired state of a Subscription.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: SubscriptionParameters defines parameters for a desired
                  Subscription.
                properties:
                  ackDeadlineSeconds:
                    description: AckDeadlineSeconds is the approximate amount of time
                      Pub/Sub waits for the subscriber to acknowledge receipt before
                      resending the message. The minimum custom deadline you can specify
                      is 10 seconds. The maximum custom deadline you can specify is
                      600 seconds (10 minutes). If this parameter is 0, a default
                      value of 10 seconds is used.
                    format: int64
                    type: integer
                  deadLetterPolicy:
                    description: DeadLetterPolicy is the policy that specifies the
                      conditions for dead lettering messages in this subscription.
                      If dead_letter_policy is not set, dead lettering is disabled.
                    properties:
                      deadLetterTopic:
                        description: DeadLetterTopic is the name of the topic to which
                          dead letter messages should be published. Format is `projects/{project}/topics/{topic}`.
                        type: string
                      maxDeliveryAttempts:
                        description: MaxDeliveryAttempts is the maximum number of
                          delivery attempts for any message. The value must be between
                          5 and 100.
                        format: int64
                        type: integer
                    type: object
                  detached:
                    description: Detached is the flag which indicates whether the
                      subscription is detached from its topic. Detached subscriptions
                      don't receive messages from their topic and don't retain any
                      backlog.
                    type: boolean
                  enableMessageOrdering:
                    description: EnableMessageOrdering is the flag which controls
                      message delivery order to subscribers. When it is true, messages
                      published with the same `ordering_key` in `PubsubMessage` will
                      be delivered to the subscribers in the order in which they are
                      received by the Pub/Sub system. Otherwise, they may be delivered
                      in any order.
                    type: boolean
                  expirationPolicy:
                    description: ExpirationPolicy is the policy that specifies the
                      conditions for this subscription's expiration. If `expiration_policy`
                      is not set, a *default policy* with `ttl` of 31 days will be
                      used. The minimum allowed value for `expiration_policy.ttl`
                      is 1 day.
                    properties:
                      ttl:
                        description: TTL is the duration of "time-to-live" for an
                          associated resource. The resource expires if it is not active
                          for a period of `ttl`.
                        pattern: ^[0-9]*s$
                        type: string
                    type: object
                  filter:
                    description: Filter is an expression written in the Pub/Sub filter
                      language (https://cloud.google.com/pubsub/docs/filtering). If
                      non-empty, then only `PubsubMessage`s whose `attributes` field
                      matches the filter are delivered on this subscription. If empty,
                      then no messages are filtered out.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels are used as additional metadata on Subscription.
                    type: object
                  messageRetentionDuration:
                    description: MessageRetentionDuration is a parameter which defines
                      how long to retain unacknowledged messages in the subscription's
                      backlog, from the moment a message is published. If `retain_acked_messages`
                      is true, then this also configures the retention of acknowledged
                      messages, and thus configures how far back in time a `Seek`
                      can be done. Defaults to 7 days. Cannot be more than 7 days
                      or less than 10 minutes.
                    pattern: ^[0-9]*s$
                    type: string
                  pushConfig:
                    description: PushConfig is a parameter which configures push delivery.
                      An empty `pushConfig` signifies that the subscriber will pull
                      and ack messages using API methods.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes is the map of endpoint configuration
                          attributes that can be used to control different aspects
                          of the message delivery.
                        type: object
                      oidcToken:
                        description: OidcToken is a set of parameters to attach OIDC
                          JWT token as an `Authorization` header in the HTTP request
                          for every pushed message.
                        properties:
                          audience:
                            description: Audience is the "audience" to be used when
                              generating OIDC token.
                            type: string
                          serviceAccountEmail:
                            description: ServiceAccountEmail is the email to be used
                              for generating the OIDC token
                            type: string
                        type: object
                      pushEndpoint:
                        description: PushEndpoint is a URL locating the endpoint to
                          which messages should be pushed.
                        type: string
                    type: object
                  retainAckedMessages:
                    description: RetainAckedMessages is a message which indicates
                      whether to retain acknowledged messages. If true, then messages
                      are not expunged from the subscription's backlog, even if they
                      are acknowledged, until they fall out of the `message_retention_duration`
                      window.
                    type: boolean
                  retryPolicy:
                    description: RetryPolicy is the policy that specifies how Pub/Sub
                      retries message delivery for this subscription. If not set,
                      the default retry policy is applied. This generally implies
                      that messages will be retried as soon as possible for healthy
                      subscribers.
                    properties:
                      maximumBackoff:
                        description: MaximumBackoff is the maximum delay between consecutive
                          deliveries of a given message. Value should be between 0
                          and 600 seconds. Defaults to 600 seconds.
                        type: string
                      minimumBackoff:
                        description: MinimumBackoff is the minimum delay between consecutive
                          deliveries of a given message. Value should be between 0
                          and 600 seconds. Defaults to 10 seconds.
                        type: string
                    type: object
                  topic:
                    description: 'TODO: Add referencer & selector for Topic resource.
                      Topic is the name of the topic from which this subscription
                      is receiving messages. Format is `projects/{project}/topics/{topic}`.'
                    type: string
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SubscriptionStatus represents the observed state of a Subscription.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: topics.pubsub.gcp.crossplane.io
spec:
  group: pubsub.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Topic
    listKind: TopicList
    plural: topics
    singular: topic
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Topic is a managed resource that represents a Google PubSub Topic.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TopicSpec defines the desired state of a Topic.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: TopicParameters defines parameters for a desired PubSub
                  Topic.
                properties:
                  kmsKeyName:
                    description: "KmsKeyName is the resource name of the Cloud KMS
                      CryptoKey to be used to protect access to messages published
                      on this topic. \n The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`."
                    type: string
                  kmsKeyNameRef:
                    description: KmsKeyNameRef allows you to specify custom resource
                      name of the KMS Key to fill KmsKeyName field.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  kmsKeyNameSelector:
                    description: KmsKeyNameSelector allows you to use selector constraints
                      to select a KMS Key.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels are used as additional metadata on Topic.
                    type: object
                  messageRetentionDuration:
                    description: "MessageRetentionDuration: Indicates the minimum
                      duration to retain a message after it is published to the topic.
                      If this field is set, messages published to the topic in the
                      last `message_retention_duration` are always available to subscribers.
                      For instance, it allows any attached subscription to seek to
                      a timestamp (https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time)
                      that is up to `message_retention_duration` in the past. If this
                      field is not set, message retention is controlled by settings
                      on individual subscriptions. Cannot be more than 31 days or
                      less than 10 minutes. \n The duration must be in seconds, terminated
                      by 's'. Example: \"1200s\". Avoid using fractional digits."
                    pattern: '[0-9]+s$'
                    type: string
                  messageStoragePolicy:
                    description: MessageStoragePolicy is the policy constraining the
                      set of Google Cloud Platform regions where messages published
                      to the topic may be stored. If not present, then no constraints
                      are in effect.
                    properties:
                      allowedPersistenceRegions:
                        description: AllowedPersistenceRegions is the list of IDs
                          of GCP regions where messages that are published to the
                          topic may be persisted in storage. Messages published by
                          publishers running in non-allowed GCP regions (or running
                          outside of GCP altogether) will be routed for storage in
                          one of the allowed regions. An empty list means that no
                          regions are allowed, and is not a valid configuration.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TopicStatus represents the observed state of a Topic.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: containerregistries.registry.gcp.crossplane.io
spec:
  group: registry.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: ContainerRegistry
    listKind: ContainerRegistryList
    plural: containerregistries
    singular: containerregistry
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ContainerRegistry is the Schema for the containerregistries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ContainerRegistrySpec defines the desired state of ContainerRegistry
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ContainerRegistryParameters define the desired state
                  of a ContainerRegistry
                properties:
                  location:
                    description: 'The location of the registry. Possible Values: ASIA,
                      EU, US'
                    type: string
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ContainerRegistryStatus defines the observed state of ContainerRegistry
            properties:
              atProvider:
                description: ContainerRegistryObservation is used to show the observed
                  state of the ContainerRegistry
                properties:
                  bucketID:
                    description: The name of the bucket.
                    type: string
                  bucketLink:
                    description: The URI of the bucket.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: connections.servicenetworking.gcp.crossplane.io
spec:
  group: servicenetworking.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Connection
    listKind: ConnectionList
    plural: connections
    singular: connection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Connection is a managed resource that represents a Google Cloud
          Service Networking Connection.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ConnectionSpec defines the desired state of a Connection.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: 'ConnectionParameters define the desired state of a Google
                  Cloud Service Networking Connection. Most fields map direct to a
                  Connection: https://cloud.google.com/service-infrastructure/docs/service-networking/reference/rest/v1/services.connections#Connection'
                properties:
                  network:
                    description: 'Network: The name of service consumer''s VPC network
                      that''s connected with service producer network, in the following
                      format: `projects/{project}/global/networks/{network}`. `{project}`
                      is a project number, such as in `12345` that includes the VPC
                      service consumer''s VPC network. `{network}` is the name of
                      the service consumer''s VPC network.'
                    type: string
                  networkRef:
                    description: NetworkRef references a Network and retrieves its
                      URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  networkSelector:
                    description: NetworkSelector selects a reference to a Network
                      and retrieves its URI
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  parent:
                    description: 'Parent: The service that is managing peering connectivity
                      for a service producer''s organization. For Google services
                      that support this functionality, this value is services/servicenetworking.googleapis.com.'
                    type: string
                  reservedPeeringRangeRefs:
                    description: ReservedPeeringRangeRefs is a set of references to
                      GlobalAddress objects
                    items:
                      description: A Reference to a named object.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: Resolution specifies whether resolution
                                of this reference is required. The default is 'Required',
                                which means the reconcile will fail if the reference
                                cannot be resolved. 'Optional' means this reference
                                will be a no-op if it cannot be resolved.
                              enum:
                              - Required
                              - Optional
                              type: string
                            resolve:
                              description: Resolve specifies when this reference should
                                be resolved. The default is 'IfNotPresent', which
                                will attempt to resolve the reference only when the
                                corresponding field is not present. Use 'Always' to
                                resolve the reference on every reconcile.
                              enum:
                              - Always
                              - IfNotPresent
                              type: string
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  reservedPeeringRangeSelector:
                    description: ReservedPeeringRangeSelector selects a set of references
                      to GlobalAddress objects.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  reservedPeeringRanges:
                    description: 'ReservedPeeringRanges: The name of one or more allocated
                      IP address ranges for this service producer of type `PEERING`.'
                    items:
                      type: string
                    type: array
                required:
                - parent
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ConnectionStatus represents the observed state of a Connection.
            properties:
              atProvider:
                description: ConnectionObservation is used to show the observed state
                  of the Connection.
                properties:
                  peering:
                    description: 'Peering: The name of the VPC Network Peering connection
                      that was created by the service producer.'
                    type: string
                  service:
                    description: 'Service: The name of the peering service that''s
                      associated with this connection, in the following format: `services/{service
                      name}`.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: bucketpolicies.storage.gcp.crossplane.io
spec:
  group: storage.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BucketPolicy
    listKind: BucketPolicyList
    plural: bucketpolicies
    singular: bucketpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BucketPolicy is a managed resource that represents a Google Cloud
          Storage Bucket IAM Policy.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BucketPolicySpec defines the desired state of a BucketPolicy.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: BucketPolicyParameters defines parameters for a desired
                  KMS BucketPolicy
                properties:
                  bucket:
                    description: 'Bucket: The RRN of the Bucket to which this BucketPolicy
                      belongs.'
                    type: string
                  bucketRef:
                    description: BucketRef references a Bucket and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: BucketSelector selects a reference to a Bucket
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  policy:
                    description: 'Policy: An Identity and Access Management (IAM)
                      policy, which specifies access controls for Google Cloud resources.'
                    properties:
                      auditConfigs:
                        description: 'AuditConfigs: Specifies cloud audit logging
                          configuration for this policy.'
                        items:
                          description: "AuditConfig Specifies the audit configuration
                            for a service. The configuration determines which permission
                            types are logged, and what identities, if any, are exempted
                            from logging. An AuditConfig must have one or more AuditLogConfigs.
                            \n If there are AuditConfigs for both `allServices` and
                            a specific service, the union of the two AuditConfigs
                            is used for that service: the log_types specified in each
                            AuditConfig are enabled, and the exempted_members in each
                            AuditLogConfig are exempted. \n Example Policy with multiple
                            AuditConfigs: \n { \"audit_configs\": [ { \"service\":
                            \"allServices\" \"audit_log_configs\": [ { \"log_type\":
                            \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\"
                            ] }, { \"log_type\": \"DATA_WRITE\", }, { \"log_type\":
                            \"ADMIN_READ\", } ] }, { \"service\": \"sampleservice.googleapis.com\"
                            \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",
                            }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\":
                            [ \"user:aliya@example.com\" ] } ] } ] } \n For sampleservice,
                            this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
                            logging. It also exempts jose@example.com from DATA_READ
                            logging, and aliya@example.com from DATA_WRITE logging."
                          properties:
                            auditLogConfigs:
                              description: 'AuditLogConfigs: The configuration for
                                logging of each type of permission.'
                              items:
                                description: "AuditLogConfig Provides the configuration
                                  for logging a type of permissions. Example: \n {
                                  \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",
                                  \"exempted_members\": [ \"user:jose@example.com\"
                                  ] }, { \"log_type\": \"DATA_WRITE\", } ] } \n This
                                  enables 'DATA_READ' and 'DATA_WRITE' logging, while
                                  exempting jose@example.com from DATA_READ logging."
                                properties:
                                  exemptedMembers:
                                    description: 'ExemptedMembers: Specifies the identities
                                      that do not cause logging for this type of permission.
                                      Follows the same format of Binding.members.'
                                    items:
                                      type: string
                                    type: array
                                  logType:
                                    description: "LogType: The log type that this
                                      config enables. \n Possible values: \"LOG_TYPE_UNSPECIFIED\"
                                      - Default case. Should never be this. \"ADMIN_READ\"
                                      - Admin reads. Example: CloudIAM getIamPolicy
                                      \"DATA_WRITE\" - Data writes. Example: CloudSQL
                                      Users create \"DATA_READ\" - Data reads. Example:
                                      CloudSQL Users list"
                                    enum:
                                    - ADMIN_READ
                                    - DATA_WRITE
                                    - DATA_READ
                                    type: string
                                type: object
                              type: array
                            service:
                              description: 'Service: Specifies a service that will
                                be enabled for audit logging. For example, `storage.googleapis.com`,
                                `cloudsql.googleapis.com`. `allServices` is a special
                                value that covers all services.'
                              type: string
                          type: object
                        type: array
                      bindings:
                        description: 'Bindings: Associates a list of `members` to
                          a `role`. Optionally, may specify a `condition` that determines
                          how and when the `bindings` are applied. Each of the `bindings`
                          must contain at least one member.'
                        items:
                          description: Binding Associates `members` with a `role`.
                          properties:
                            condition:
                              description: 'Condition: The condition that is associated
                                with this binding. NOTE: An unsatisfied condition
                                will not allow user access via current binding. Different
                                bindings, including their conditions, are examined
                                independently.'
                              properties:
                                description:
                                  description: 'Description: Optional. Description
                                    of the expression. This is a longer text which
                                    describes the expression, e.g. when hovered over
                                    it in a UI.'
                                  type: string
                                expression:
                                  description: 'Expression: Textual representation
                                    of an expression in Common Expression Language
                                    syntax.'
                                  type: string
                                location:
                                  description: 'Location: Optional. String indicating
                                    the location of the expression for error reporting,
                                    e.g. a file name and a position in the file.'
                                  type: string
                                title:
                                  description: 'Title: Optional. Title for the expression,
                                    i.e. a short string describing its purpose. This
                                    can be used e.g. in UIs which allow to enter the
                                    expression.'
                                  type: string
                              type: object
                            members:
                              description: "Members: Specifies the identities requesting
                                access for a Cloud Platform resource. `members` can
                                have the following values: \n * `allUsers`: A special
                                identifier that represents anyone who is on the internet;
                                with or without a Google account. \n * `allAuthenticatedUsers`:
                                A special identifier that represents anyone who is
                                authenticated with a Google account or a service account.
                                \n * `user:{emailid}`: An email address that represents
                                a specific Google account. For example, `alice@example.com`
                                . \n * `serviceAccount:{emailid}`: An email address
                                that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
                                \n * `group:{emailid}`: An email address that represents
                                a Google group. For example, `admins@example.com`.
                                \n * `deleted:user:{emailid}?uid={uniqueid}`: An email
                                address (plus unique identifier) representing a user
                                that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.
                                If the user is recovered, this value reverts to `user:{emailid}`
                                and the recovered user retains the role in the binding.
                                \n * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:
                                An email address (plus unique identifier) representing
                                a service account that has been recently deleted.
                                For example, \n `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
                                \n If the service account is undeleted, this value
                                reverts to `serviceAccount:{emailid}` and the undeleted
                                service account retains the role in the binding. \n
                                * `deleted:group:{emailid}?uid={uniqueid}`: An email
                                address (plus unique identifier) representing a Google
                                group that has been recently deleted. For example,
                                `admins@example.com?uid=123456789012345678901`. If
                                the group is recovered, this value reverts to `group:{emailid}`
                                and the recovered group retains the role in the binding.
                                \n * `domain:{domain}`: The G Suite domain (primary)
                                that represents all the users of that domain. For
                                example, `google.com` or `example.com`."
                              items:
                                type: string
                              type: array
                            role:
                              description: 'Role: Role that is assigned to `members`.
                                For example, `roles/viewer`, `roles/editor`, or `roles/owner`.'
                              type: string
                            serviceAccountMemberRefs:
                              description: ServiceAccountMemberRefs are references
                                to ServiceAccounts used to set the Members.
                              items:
                                description: A Reference to a named object.
                                properties:
                                  name:
                                    description: Name of the referenced object.
                                    type: string
                                  policy:
                                    description: Policies for referencing.
                                    properties:
                                      resolution:
                                        default: Required
                                        description: Resolution specifies whether
                                          resolution of this reference is required.
                                          The default is 'Required', which means the
                                          reconcile will fail if the reference cannot
                                          be resolved. 'Optional' means this reference
                                          will be a no-op if it cannot be resolved.
                                        enum:
                                        - Required
                                        - Optional
                                        type: string
                                      resolve:
                                        description: Resolve specifies when this reference
                                          should be resolved. The default is 'IfNotPresent',
                                          which will attempt to resolve the reference
                                          only when the corresponding field is not
                                          present. Use 'Always' to resolve the reference
                                          on every reconcile.
                                        enum:
                                        - Always
                                        - IfNotPresent
                                        type: string
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            serviceAccountMemberSelector:
                              description: ServiceAccountMemberSelector selects references
                                to ServiceAccounts used to set the Members.
                              properties:
                                matchControllerRef:
                                  description: MatchControllerRef ensures an object
                                    with the same controller reference as the selecting
                                    object is selected.
                                  type: boolean
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: MatchLabels ensures an object with
                                    matching labels is selected.
                                  type: object
                                policy:
                                  description: Policies for selection.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: Resolution specifies whether resolution
                                        of this reference is required. The default
                                        is 'Required', which means the reconcile will
                                        fail if the reference cannot be resolved.
                                        'Optional' means this reference will be a
                                        no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: Resolve specifies when this reference
                                        should be resolved. The default is 'IfNotPresent',
                                        which will attempt to resolve the reference
                                        only when the corresponding field is not present.
                                        Use 'Always' to resolve the reference on every
                                        reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              type: object
                          required:
                          - role
                          type: object
                        type: array
                    type: object
                required:
                - policy
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BucketPolicyStatus represents the observed state of a BucketPolicy.
            properties:
              atProvider:
                description: BucketPolicyObservation is used to show the observed
                  state of the BucketPolicy resource on GCP. All fields in this structure
                  should only be populated from GCP responses; any changes made to
                  the k8s resource outside of the crossplane gcp controller will be
                  ignored and overwritten.
                properties:
                  version:
                    description: "Version: Specifies the format of the policy. \n
                      Valid values are `0`, `1`, and `3`. Requests that specify an
                      invalid value are rejected. \n Any operation that affects conditional
                      role bindings must specify version `3`. This requirement applies
                      to the following operations: \n * Getting a policy that includes
                      a conditional role binding * Adding a conditional role binding
                      to a policy * Changing a conditional role binding in a policy
                      * Removing any role binding, with or without a condition, from
                      a policy that includes conditions \n **Important:** If you use
                      IAM Conditions, you must include the `etag` field whenever you
                      call `setIamPolicy`. If you omit this field, then IAM allows
                      you to overwrite a version `3` policy with a version `1` policy,
                      and all of the conditions in the version `3` policy are lost.
                      \n If a policy does not include any conditions, operations on
                      that policy may specify any valid version or leave the field
                      unset."
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: bucketpolicymembers.storage.gcp.crossplane.io
spec:
  group: storage.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: BucketPolicyMember
    listKind: BucketPolicyMemberList
    plural: bucketpolicymembers
    singular: bucketpolicymember
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BucketPolicyMember is a managed resource that represents membership
          of a Google Cloud Storage Bucket IAM Policy.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BucketPolicyMemberSpec defines the desired state of a BucketPolicyMember.
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: BucketPolicyMemberParameters defines parameters for a
                  desired KMS BucketPolicyMember
                properties:
                  bucket:
                    description: 'Bucket: The RRN of the Bucket to which this BucketPolicyMember
                      belongs.'
                    type: string
                  bucketRef:
                    description: BucketRef references a Bucket and retrieves its URI
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: BucketSelector selects a reference to a Bucket
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  member:
                    description: "Member: Specifies the identity requesting access
                      for a Cloud Platform resource. `member` can have the following
                      values: \n * `allUsers`: A special identifier that represents
                      anyone who is on the internet; with or without a Google account.
                      \n * `allAuthenticatedUsers`: A special identifier that represents
                      anyone who is authenticated with a Google account or a service
                      account. \n * `user:{emailid}`: An email address that represents
                      a specific Google account. For example, `alice@example.com`
                      . \n * `serviceAccount:{emailid}`: An email address that represents
                      a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
                      \n * `group:{emailid}`: An email address that represents a Google
                      group. For example, `admins@example.com`. \n * `deleted:user:{emailid}?uid={uniqueid}`:
                      An email address (plus unique identifier) representing a user
                      that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.
                      If the user is recovered, this value reverts to `user:{emailid}`
                      and the recovered user retains the role in the binding. \n *
                      `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email
                      address (plus unique identifier) representing a service account
                      that has been recently deleted. For example, \n `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
                      \n If the service account is undeleted, this value reverts to
                      `serviceAccount:{emailid}` and the undeleted service account
                      retains the role in the binding. \n * `deleted:group:{emailid}?uid={uniqueid}`:
                      An email address (plus unique identifier) representing a Google
                      group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`.
                      If the group is recovered, this value reverts to `group:{emailid}`
                      and the recovered group retains the role in the binding. \n
                      * `domain:{domain}`: The G Suite domain (primary) that represents
                      all the users of that domain. For example, `google.com` or `example.com`."
                    type: string
                  role:
                    description: 'Role: Role that is assigned to `members`. For example,
                      `roles/viewer`, `roles/editor`, or `roles/owner`.'
                    type: string
                  serviceAccountMemberRef:
                    description: ServiceAccountMemberRef is reference to ServiceAccount
                      used to set the Member.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  serviceAccountMemberSelector:
                    description: ServiceAccountMemberSelector selects reference to
                      ServiceAccount used to set the Member.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - role
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BucketPolicyMemberStatus represents the observed state of
              a BucketPolicyMember.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: buckets.storage.gcp.crossplane.io
spec:
  group: storage.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .spec.storageClass
      name: STORAGE_CLASS
      type: string
    - jsonPath: .spec.location
      name: LOCATION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: A Bucket is a managed resource that represents a Google Cloud
          Storage bucket.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A BucketSpec defines the desired state of a Bucket.
            properties:
              acl:
                description: ACL is the list of access control rules on the bucket.
                items:
                  description: ACLRule represents a grant for a role to an entity
                    (user, group or team) for a Google Cloud Storage object or bucket.
                  properties:
                    domain:
                      description: The domain associated with the entity, if any.
                      type: string
                    email:
                      description: The email address associated with the entity, if
                        any.
                      type: string
                    entity:
                      description: "Entity refers to a user or group. They are sometimes
                        referred to as grantees. It could be in the form of: \"user-<userId>\",
                        \"user-<email>\", \"group-<groupId>\", \"group-<email>\",
                        \"domain-<domain>\" and \"project-team-<projectId>\". \n Or
                        one of the predefined constants: AllUsers, AllAuthenticatedUsers."
                      type: string
                    entityId:
                      description: EntityID is the ID for the entity, if any.
                      type: string
                    projectTeam:
                      description: ProjectTeam that is associated with the entity,
                        if any.
                      properties:
                        projectNumber:
                          description: ProjectNumber is the number of the project.
                          type: string
                        team:
                          description: 'The team. Acceptable values are: "editors",
                            "owners" or "viewers"'
                          enum:
                          - editors
                          - owners
                          - viewers
                          type: string
                      type: object
                    role:
                      description: Role is the access permission for the entity. Valid
                        values are "OWNER", "READER" and "WRITER"
                      enum:
                      - OWNER
                      - READER
                      - WRITER
                      type: string
                  type: object
                type: array
              bucketPolicyOnly:
                description: BucketPolicyOnly configures access checks to use only
                  bucket-level IAM policies.
                properties:
                  enabled:
                    description: Enabled specifies whether access checks use only
                      bucket-level IAM policies. Enabled may be disabled until the
                      locked time.
                    type: boolean
                  lockedTime:
                    description: LockedTime specifies the deadline for changing Enabled
                      from true to false.
                    format: date-time
                    type: string
                type: object
              cors:
                description: The bucket's Cross-Origin Resource Sharing (CORS) configuration.
                items:
                  description: CORS is the bucket's Cross-Origin Resource Sharing
                    (CORS) configuration.
                  properties:
                    maxAge:
                      description: MaxAge is the value to return in the Access-Control-Max-Age
                        header used in preflight responses.
                      type: string
                    methods:
                      description: 'Methods is the list of HTTP methods on which to
                        include CORS response headers, (GET, OPTIONS, POST, etc) Note:
                        "*" is permitted in the list of methods, and means "any method".'
                      items:
                        type: string
                      type: array
                    origins:
                      description: 'Origins is the list of Origins eligible to receive
                        CORS response headers. Note: "*" is permitted in the list
                        of origins, and means "any Origin".'
                      items:
                        type: string
                      type: array
                    responseHeaders:
                      description: ResponseHeaders is the list of HTTP headers other
                        than the simple response headers to give permission for the
                        user-agent to share across domains.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              defaultEventBasedHold:
                description: DefaultEventBasedHold is the default value for event-based
                  hold on newly created objects in this bucket. It defaults to false.
                type: boolean
              defaultObjectAcl:
                description: DefaultObjectACL is the list of access controls to apply
                  to new objects when no object ACL is provided.
                items:
                  description: ACLRule represents a grant for a role to an entity
                    (user, group or team) for a Google Cloud Storage object or bucket.
                  properties:
                    domain:
                      description: The domain associated with the entity, if any.
                      type: string
                    email:
                      description: The email address associated with the entity, if
                        any.
                      type: string
                    entity:
                      description: "Entity refers to a user or group. They are sometimes
                        referred to as grantees. It could be in the form of: \"user-<userId>\",
                        \"user-<email>\", \"group-<groupId>\", \"group-<email>\",
                        \"domain-<domain>\" and \"project-team-<projectId>\". \n Or
                        one of the predefined constants: AllUsers, AllAuthenticatedUsers."
                      type: string
                    entityId:
                      description: EntityID is the ID for the entity, if any.
                      type: string
                    projectTeam:
                      description: ProjectTeam that is associated with the entity,
                        if any.
                      properties:
                        projectNumber:
                          description: ProjectNumber is the number of the project.
                          type: string
                        team:
                          description: 'The team. Acceptable values are: "editors",
                            "owners" or "viewers"'
                          enum:
                          - editors
                          - owners
                          - viewers
                          type: string
                      type: object
                    role:
                      description: Role is the access permission for the entity. Valid
                        values are "OWNER", "READER" and "WRITER"
                      enum:
                      - OWNER
                      - READER
                      - WRITER
                      type: string
                  type: object
                type: array
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              encryption:
                description: The encryption configuration used by default for newly
                  inserted objects.
                properties:
                  defaultKmsKeyName:
                    description: A Cloud KMS key name, in the form projects/P/locations/L/keyRings/R/cryptoKeys/K,
                      that will be used to encrypt objects inserted into this bucket,
                      if no encryption method is specified. The key's location must
                      be the same as the bucket's.
                    type: string
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Labels are the bucket's labels.
                type: object
              lifecycle:
                description: Lifecycle is the lifecycle configuration for objects
                  in the bucket.
                properties:
                  rules:
                    items:
                      description: "LifecycleRule is a lifecycle configuration rule.
                        \n When all the configured conditions are met by an object
                        in the bucket, the configured action will automatically be
                        taken on that object."
                      properties:
                        action:
                          description: Action is the action to take when all of the
                            associated conditions are met.
                          properties:
                            storageClass:
                              description: StorageClass is the storage class to set
                                on matching objects if the Action is "SetStorageClass".
                              type: string
                            type:
                              description: "Type is the type of action to take on
                                matching objects. \n Acceptable values are \"Delete\"
                                to delete matching objects and \"SetStorageClass\"
                                to set the storage class defined in StorageClass on
                                matching objects."
                              type: string
                          type: object
                        condition:
                          description: Condition is the set of conditions that must
                            be met for the associated action to be taken.
                          properties:
                            ageInDays:
                              description: AgeInDays is the age of the object in days.
                              format: int64
                              type: integer
                            createdBefore:
                              description: "CreatedBefore is the time the object was
                                created. \n This condition is satisfied when an object
                                is created before midnight of the specified date in
                                UTC."
                              format: date-time
                              type: string
                            liveness:
                              description: Liveness specifies the object's liveness.
                                Relevant only for versioned objects
                              type: integer
                            matchesStorageClasses:
                              description: "MatchesStorageClasses is the condition
                                matching the object's storage class. \n Values include
                                \"MULTI_REGIONAL\", \"REGIONAL\", \"NEARLINE\", \"COLDLINE\",
                                \"STANDARD\", and \"DURABLE_REDUCED_AVAILABILITY\"."
                              items:
                                type: string
                              type: array
                            numNewerVersions:
                              description: "NumNewerVersions is the condition matching
                                objects with a number of newer versions. \n If the
                                value is N, this condition is satisfied when there
                                are at least N versions (including the live version)
                                newer than this version of the object."
                              format: int64
                              type: integer
                          type: object
                      type: object
                    type: array
                type: object
              location:
                description: Location is the location of the bucket. It defaults to
                  "US".
                type: string
              logging:
                description: The logging configuration.
                properties:
                  logBucket:
                    description: The destination bucket where the current bucket's
                      logs should be placed.
                    type: string
                  logObjectPrefix:
                    description: A prefix for log object names.
                    type: string
                type: object
              predefinedAcl:
                description: If not empty, applies a predefined set of access controls.
                  It should be set only when creating a bucket. It is always empty
                  for BucketAttrs returned from the service. See https://cloud.google.com/storage/docs/json_api/v1/buckets/insert
                  for valid values.
                type: string
              predefinedDefaultObjectAcl:
                description: If not empty, applies a predefined set of default object
                  access controls. It should be set only when creating a bucket. It
                  is always empty for BucketAttrs returned from the service. See https://cloud.google.com/storage/docs/json_api/v1/buckets/insert
                  for valid values.
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              requesterPays:
                description: RequesterPays reports whether the bucket is a Requester
                  Pays bucket. Clients performing operations on Requester Pays buckets
                  must provide a user project (see BucketHandle.UserProject), which
                  will be billed for the operations.
                type: boolean
              retentionPolicy:
                description: "Retention policy enforces a minimum retention time for
                  all objects contained in the bucket. A RetentionPolicy of nil implies
                  the bucket has no minimum data retention. \n This feature is in
                  private alpha release. It is not currently available to most customers.
                  It might be changed in backwards-incompatible ways and is not subject
                  to any SLA or deprecation policy."
                properties:
                  retentionPeriodSeconds:
                    description: RetentionPeriod specifies the duration value in seconds
                      that objects need to be retained. Retention duration must be
                      greater than zero and less than 100 years. Note that enforcement
                      of retention periods less than a day is not guaranteed. Such
                      periods should only be used for testing purposes.
                    maximum: 3155673600
                    minimum: 0
                    type: integer
                type: object
              storageClass:
                description: StorageClass is the default storage class of the bucket.
                  This defines how objects in the bucket are stored and determines
                  the SLA and the cost of storage. Typical values are "MULTI_REGIONAL",
                  "REGIONAL", "NEARLINE", "COLDLINE", "STANDARD" and "DURABLE_REDUCED_AVAILABILITY".
                  Defaults to "STANDARD", which is equivalent to "MULTI_REGIONAL"
                  or "REGIONAL" depending on the bucket's location settings.
                enum:
                - MULTI_REGIONAL
                - REGIONAL
                - NEARLINE
                - COLDLINE
                - STANDARD
                - DURABLE_REDUCED_AVAILABILITY
                type: string
              versioningEnabled:
                description: VersioningEnabled reports whether this bucket has versioning
                  enabled.
                type: boolean
              website:
                description: The website configuration.
                properties:
                  mainPageSuffix:
                    description: If the requested object path is missing, the service
                      will ensure the path has a trailing '/', append this suffix,
                      and attempt to retrieve the resulting object. This allows the
                      creation of index.html objects to represent directory pages.
                    type: string
                  notFoundPage:
                    description: If the requested object path is missing, and any
                      mainPageSuffix object is missing, if applicable, the service
                      will return the named object from this bucket as the content
                      for a 404 Not Found result.
                    type: string
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            description: A BucketStatus represents the observed state of a Bucket.
            properties:
              attributes:
                description: BucketOutputAttrs represent the subset of metadata for
                  a Google Cloud Storage bucket limited to output (read-only) fields.
                properties:
                  bucketPolicyOnly:
                    description: BucketPolicyOnly configures access checks to use
                      only bucket-level IAM policies.
                    properties:
                      enabled:
                        description: Enabled specifies whether access checks use only
                          bucket-level IAM policies. Enabled may be disabled until
                          the locked time.
                        type: boolean
                      lockedTime:
                        description: LockedTime specifies the deadline for changing
                          Enabled from true to false.
                        format: date-time
                        type: string
                    type: object
                  created:
                    description: Created is the creation time of the bucket.
                    format: date-time
                    type: string
                  retentionPolicy:
                    description: "Retention policy enforces a minimum retention time
                      for all objects contained in the bucket. A RetentionPolicy of
                      nil implies the bucket has no minimum data retention. \n This
                      feature is in private alpha release. It is not currently available
                      to most customers. It might be changed in backwards-incompatible
                      ways and is not subject to any SLA or deprecation policy."
                    properties:
                      effectiveTime:
                        description: EffectiveTime is the time from which the policy
                          was enforced and effective.
                        format: date-time
                        type: string
                      isLocked:
                        description: IsLocked describes whether the bucket is locked.
                          Once locked, an object retention policy cannot be modified.
                        type: boolean
                    type: object
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha3

---
