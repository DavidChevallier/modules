"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FluentBitConfig:
    """
    FluentBitConfig is the Schema for the API

    Attributes
    ----------
    apiVersion : str, default is "fluentbit.fluent.io/v1alpha2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FluentBitConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FluentbitFluentIoV1alpha2FluentBitConfigSpec, default is Undefined, optional
        spec
    """


    apiVersion: "fluentbit.fluent.io/v1alpha2" = "fluentbit.fluent.io/v1alpha2"

    kind: "FluentBitConfig" = "FluentBitConfig"

    metadata?: v1.ObjectMeta

    spec?: FluentbitFluentIoV1alpha2FluentBitConfigSpec


schema FluentbitFluentIoV1alpha2FluentBitConfigSpec:
    """
    NamespacedFluentBitCfgSpec defines the desired state of FluentBit

    Attributes
    ----------
    clusterParserSelector : FluentbitFluentIoV1alpha2FluentBitConfigSpecClusterParserSelector, default is Undefined, optional
        cluster parser selector
    filterSelector : FluentbitFluentIoV1alpha2FluentBitConfigSpecFilterSelector, default is Undefined, optional
        filter selector
    outputSelector : FluentbitFluentIoV1alpha2FluentBitConfigSpecOutputSelector, default is Undefined, optional
        output selector
    parserSelector : FluentbitFluentIoV1alpha2FluentBitConfigSpecParserSelector, default is Undefined, optional
        parser selector
    """


    clusterParserSelector?: FluentbitFluentIoV1alpha2FluentBitConfigSpecClusterParserSelector

    filterSelector?: FluentbitFluentIoV1alpha2FluentBitConfigSpecFilterSelector

    outputSelector?: FluentbitFluentIoV1alpha2FluentBitConfigSpecOutputSelector

    parserSelector?: FluentbitFluentIoV1alpha2FluentBitConfigSpecParserSelector


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecClusterParserSelector:
    """
    Select cluster level parser config

    Attributes
    ----------
    matchExpressions : [FluentbitFluentIoV1alpha2FluentBitConfigSpecClusterParserSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [FluentbitFluentIoV1alpha2FluentBitConfigSpecClusterParserSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecClusterParserSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecFilterSelector:
    """
    Select filter plugins

    Attributes
    ----------
    matchExpressions : [FluentbitFluentIoV1alpha2FluentBitConfigSpecFilterSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [FluentbitFluentIoV1alpha2FluentBitConfigSpecFilterSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecFilterSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecOutputSelector:
    """
    Select output plugins

    Attributes
    ----------
    matchExpressions : [FluentbitFluentIoV1alpha2FluentBitConfigSpecOutputSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [FluentbitFluentIoV1alpha2FluentBitConfigSpecOutputSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecOutputSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecParserSelector:
    """
    Select parser plugins

    Attributes
    ----------
    matchExpressions : [FluentbitFluentIoV1alpha2FluentBitConfigSpecParserSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [FluentbitFluentIoV1alpha2FluentBitConfigSpecParserSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema FluentbitFluentIoV1alpha2FluentBitConfigSpecParserSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


