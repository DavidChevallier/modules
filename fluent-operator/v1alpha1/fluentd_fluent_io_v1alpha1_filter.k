"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Filter:
    """
    Filter is the Schema for the filters API

    Attributes
    ----------
    apiVersion : str, default is "fluentd.fluent.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Filter", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : FluentdFluentIoV1alpha1FilterSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        FilterStatus defines the observed state of Filter
    """


    apiVersion: "fluentd.fluent.io/v1alpha1" = "fluentd.fluent.io/v1alpha1"

    kind: "Filter" = "Filter"

    metadata?: v1.ObjectMeta

    spec?: FluentdFluentIoV1alpha1FilterSpec

    status?: any


schema FluentdFluentIoV1alpha1FilterSpec:
    """
    FilterSpec defines the desired state of Filter

    Attributes
    ----------
    filters : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0], default is Undefined, optional
        filters
    """


    filters?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0]


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0:
    """
    Filter defines all available filter plugins and their parameters.

    Attributes
    ----------
    customPlugin : FluentdFluentIoV1alpha1FilterSpecFiltersItems0CustomPlugin, default is Undefined, optional
        custom plugin
    grep : FluentdFluentIoV1alpha1FilterSpecFiltersItems0Grep, default is Undefined, optional
        grep
    logLevel : str, default is Undefined, optional
        The @log_level parameter specifies the plugin-specific logging level
    parser : FluentdFluentIoV1alpha1FilterSpecFiltersItems0Parser, default is Undefined, optional
        parser
    recordTransformer : FluentdFluentIoV1alpha1FilterSpecFiltersItems0RecordTransformer, default is Undefined, optional
        record transformer
    stdout : FluentdFluentIoV1alpha1FilterSpecFiltersItems0Stdout, default is Undefined, optional
        stdout
    tag : str, default is Undefined, optional
        Which tag to be matched.
    """


    customPlugin?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0CustomPlugin

    grep?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0Grep

    logLevel?: str

    parser?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0Parser

    recordTransformer?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0RecordTransformer

    stdout?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0Stdout

    tag?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0CustomPlugin:
    """
    Custom plugin type

    Attributes
    ----------
    config : str, default is Undefined, required
        config
    """


    config: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0Grep:
    """
    The filter_grep filter plugin

    Attributes
    ----------
    $and : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0], default is Undefined, optional
        and
    exclude : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepExcludeItems0], default is Undefined, optional
        exclude
    $or : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0], default is Undefined, optional
        or
    regexp : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepRegexpItems0], default is Undefined, optional
        regexp
    """


    $and?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0]

    exclude?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepExcludeItems0]

    $or?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0]

    regexp?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepRegexpItems0]


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0:
    """
    And defines the parameters for the "and" plugin

    Attributes
    ----------
    exclude : FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0Exclude, default is Undefined, optional
        exclude
    regexp : FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0Regexp, default is Undefined, optional
        regexp
    """


    exclude?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0Exclude

    regexp?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0Regexp


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0Exclude:
    """
    Exclude defines the parameters for the exclude plugin

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    pattern : str, default is Undefined, optional
        pattern
    """


    key?: str

    pattern?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepAndItems0Regexp:
    """
    Regexp defines the parameters for the regexp plugin

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    pattern : str, default is Undefined, optional
        pattern
    """


    key?: str

    pattern?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepExcludeItems0:
    """
    Exclude defines the parameters for the exclude plugin

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    pattern : str, default is Undefined, optional
        pattern
    """


    key?: str

    pattern?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0:
    """
    Or defines the parameters for the "or" plugin

    Attributes
    ----------
    exclude : FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0Exclude, default is Undefined, optional
        exclude
    regexp : FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0Regexp, default is Undefined, optional
        regexp
    """


    exclude?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0Exclude

    regexp?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0Regexp


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0Exclude:
    """
    Exclude defines the parameters for the exclude plugin

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    pattern : str, default is Undefined, optional
        pattern
    """


    key?: str

    pattern?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepOrItems0Regexp:
    """
    Regexp defines the parameters for the regexp plugin

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    pattern : str, default is Undefined, optional
        pattern
    """


    key?: str

    pattern?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0GrepRegexpItems0:
    """
    Regexp defines the parameters for the regexp plugin

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    pattern : str, default is Undefined, optional
        pattern
    """


    key?: str

    pattern?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0Parser:
    """
    The filter_parser filter plugin

    Attributes
    ----------
    emitInvalidRecordToError : bool, default is Undefined, optional
        Emits invalid record to @ERROR label. Invalid cases are: key does not exist;the format is not matched;an unexpected error. If you want to ignore these errors, set false.
    hashValueField : str, default is Undefined, optional
        Stores the parsed values as a hash value in a field.
    injectKeyPrefix : str, default is Undefined, optional
        Stores the parsed values with the specified key name prefix.
    keyName : str, default is Undefined, required
        Specifies the field name in the record to parse. Required parameter. i.e: If set keyName to log, {"key":"value","log":"{\"time\":1622473200,\"user\":1}"} => {"user":1}
    parse : FluentdFluentIoV1alpha1FilterSpecFiltersItems0ParserParse, default is Undefined, required
        parse
    removeKeyNameField : bool, default is Undefined, optional
        Removes key_name field when parsing is succeeded.
    replaceInvalidSequence : bool, default is Undefined, optional
        If true, invalid string is replaced with safe characters and re-parse it.
    reserveData : bool, default is Undefined, optional
        Keeps the original key-value pair in the parsed result. Default is false. i.e: If set keyName to log, reverseData to true, {"key":"value","log":"{\"user\":1,\"num\":2}"} => {"key":"value","log":"{\"user\":1,\"num\":2}","user":1,"num":2}
    reserveTime : bool, default is Undefined, optional
        Keeps the original event time in the parsed result. Default is false.
    """


    emitInvalidRecordToError?: bool

    hashValueField?: str

    injectKeyPrefix?: str

    keyName: str

    parse: FluentdFluentIoV1alpha1FilterSpecFiltersItems0ParserParse

    removeKeyNameField?: bool

    replaceInvalidSequence?: bool

    reserveData?: bool

    reserveTime?: bool


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0ParserParse:
    """
    Parse defines various parameters for the parse plugin

    Attributes
    ----------
    customPatternPath : str, default is Undefined, optional
        Path to the file that includes custom grok patterns.
    estimateCurrentEvent : bool, default is Undefined, optional
        If true, use Fluent::Eventnow(current time) as a timestamp when time_key is specified.
    expression : str, default is Undefined, optional
        Specifies the regular expression for matching logs. Regular expression also supports i and m suffix.
    grok : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0ParserParseGrokItems0], default is Undefined, optional
        Grok Sections
    grokFailureKey : str, default is Undefined, optional
        The key has grok failure reason.
    grokPattern : str, default is Undefined, optional
        The pattern of grok.
    grokPatternSeries : str, default is Undefined, optional
        Specify grok pattern series set.
    id : str, default is Undefined, optional
        The @id parameter specifies a unique name for the configuration.
    keepTimeKey : bool, default is Undefined, optional
        If true, keep time field in th record.
    localtime : bool, default is Undefined, optional
        If true, uses local time.
    logLevel : str, default is Undefined, optional
        The @log_level parameter specifies the plugin-specific logging level
    multiLineStartRegexp : str, default is Undefined, optional
        The regexp to match beginning of multiline. This is only for "multiline_grok".
    timeFormat : str, default is Undefined, optional
        Process value according to the specified format. This is available only when time_type is string
    timeFormatFallbacks : str, default is Undefined, optional
        Uses the specified time format as a fallback in the specified order. You can parse undetermined time format by using time_format_fallbacks. This options is enabled when time_type is mixed.
    timeKey : str, default is Undefined, optional
        Specify time field for event time. If the event doesn't have this field, current time is used.
    timeType : str, default is Undefined, optional
        parses/formats value according to this type, default is string
    timeout : str, default is Undefined, optional
        Specify timeout for parse processing.
    timezone : str, default is Undefined, optional
        Uses the specified timezone.
    $type : str, default is Undefined, required
        The @type parameter specifies the type of the plugin.
    types : str, default is Undefined, optional
        Specify types for converting field into another, i.e: types user_id:integer,paid:bool,paid_usd_amount:float
    utc : bool, default is Undefined, optional
        If true, uses UTC.
    """


    customPatternPath?: str

    estimateCurrentEvent?: bool

    expression?: str

    grok?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0ParserParseGrokItems0]

    grokFailureKey?: str

    grokPattern?: str

    grokPatternSeries?: str

    id?: str

    keepTimeKey?: bool

    localtime?: bool

    logLevel?: str

    multiLineStartRegexp?: str

    timeFormat?: str

    timeFormatFallbacks?: str

    timeKey?: str

    timeType?: "float" | "unixtime" | "string" | "mixed"

    timeout?: str

    timezone?: str

    $type: "regexp" | "apache2" | "apache_error" | "nginx" | "syslog" | "csv" | "tsv" | "ltsv" | "json" | "multiline" | "none" | "grok" | "multiline_grok"

    types?: str

    utc?: bool


    check:
        regex.match(str(timeout), r"^\d+(\.[0-9]{0,2})?(s|m|h|d)?$") if timeout


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0ParserParseGrokItems0:
    """
    fluentd fluent io v1alpha1 filter spec filters items0 parser parse grok items0

    Attributes
    ----------
    keepTimeKey : bool, default is Undefined, optional
        If true, keep time field in the record.
    name : str, default is Undefined, optional
        The name of this grok section.
    pattern : str, default is Undefined, optional
        The pattern of grok. Required parameter.
    timeFormat : str, default is Undefined, optional
        Process value using specified format. This is available only when time_type is string
    timeKey : str, default is Undefined, optional
        Specify time field for event time. If the event doesn't have this field, current time is used.
    timeZone : str, default is Undefined, optional
        Use specified timezone. one can parse/format the time value in the specified timezone.
    """


    keepTimeKey?: bool

    name?: str

    pattern?: str

    timeFormat?: str

    timeKey?: str

    timeZone?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0RecordTransformer:
    """
    The filter_record_transformer filter plugin

    Attributes
    ----------
    autoTypecast : bool, default is Undefined, optional
        Automatically casts the field types. Default is false. This option is effective only for field values comprised of a single placeholder.
    enableRuby : bool, default is Undefined, optional
        When set to true, the full Ruby syntax is enabled in the ${...} expression. The default value is false. i.e: jsonized_record ${record.to_json}
    keepKeys : str, default is Undefined, optional
        A list of keys to keep. Only relevant if renew_record is set to true.
    records : [FluentdFluentIoV1alpha1FilterSpecFiltersItems0RecordTransformerRecordsItems0], default is Undefined, optional
        records
    removeKeys : str, default is Undefined, optional
        A list of keys to delete. Supports nested field via record_accessor syntax since v1.1.0.
    renewRecord : bool, default is Undefined, optional
        By default, the record transformer filter mutates the incoming data. However, if this parameter is set to true, it modifies a new empty hash instead.
    renewTimeKey : str, default is Undefined, optional
        renew_time_key foo overwrites the time of events with a value of the record field foo if exists. The value of foo must be a Unix timestamp.
    """


    autoTypecast?: bool

    enableRuby?: bool

    keepKeys?: str

    records?: [FluentdFluentIoV1alpha1FilterSpecFiltersItems0RecordTransformerRecordsItems0]

    removeKeys?: str

    renewRecord?: bool

    renewTimeKey?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0RecordTransformerRecordsItems0:
    """
    The parameters inside <record> directives are considered to be new key-value pairs

    Attributes
    ----------
    key : str, default is Undefined, required
        New field can be defined as key
    value : str, default is Undefined, required
        The value must from Record properties. See https://docs.fluentd.org/filter/record_transformer#less-than-record-greater-than-directive
    """


    key: str

    value: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0Stdout:
    """
    The filter_stdout filter plugin

    Attributes
    ----------
    format : FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutFormat, default is Undefined, optional
        format
    inject : FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutInject, default is Undefined, optional
        inject
    """


    format?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutFormat

    inject?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutInject


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutFormat:
    """
    The format section

    Attributes
    ----------
    delimiter : str, default is Undefined, optional
        Delimiter for each field.
    id : str, default is Undefined, optional
        The @id parameter specifies a unique name for the configuration.
    localtime : bool, default is Undefined, optional
        If true, uses local time.
    logLevel : str, default is Undefined, optional
        The @log_level parameter specifies the plugin-specific logging level
    newline : str, default is Undefined, optional
        Specify newline characters.
    outputTag : bool, default is Undefined, optional
        Output tag field if true.
    outputTime : bool, default is Undefined, optional
        Output time field if true.
    timeFormat : str, default is Undefined, optional
        Process value according to the specified format. This is available only when time_type is string
    timeFormatFallbacks : str, default is Undefined, optional
        Uses the specified time format as a fallback in the specified order. You can parse undetermined time format by using time_format_fallbacks. This options is enabled when time_type is mixed.
    timeType : str, default is Undefined, optional
        parses/formats value according to this type, default is string
    timezone : str, default is Undefined, optional
        Uses the specified timezone.
    $type : str, default is Undefined, optional
        The @type parameter specifies the type of the plugin.
    utc : bool, default is Undefined, optional
        If true, uses UTC.
    """


    delimiter?: str

    id?: str

    localtime?: bool

    logLevel?: str

    newline?: "lf" | "crlf"

    outputTag?: bool

    outputTime?: bool

    timeFormat?: str

    timeFormatFallbacks?: str

    timeType?: "float" | "unixtime" | "string" | "mixed"

    timezone?: str

    $type?: "out_file" | "json" | "ltsv" | "csv" | "msgpack" | "hash" | "single_value"

    utc?: bool


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutInject:
    """
    The inject section

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        Hostname value
    hostnameKey : str, default is Undefined, optional
        The field name to inject hostname
    inline : FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutInjectInline, default is Undefined, optional
        inline
    tagKey : str, default is Undefined, optional
        The field name to inject tag
    timeKey : str, default is Undefined, optional
        The field name to inject time
    workerIdKey : str, default is Undefined, optional
        The field name to inject worker_id
    """


    hostname?: str

    hostnameKey?: str

    inline?: FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutInjectInline

    tagKey?: str

    timeKey?: str

    workerIdKey?: str


schema FluentdFluentIoV1alpha1FilterSpecFiltersItems0StdoutInjectInline:
    """
    Time section

    Attributes
    ----------
    localtime : bool, default is Undefined, optional
        If true, uses local time.
    timeFormat : str, default is Undefined, optional
        Process value according to the specified format. This is available only when time_type is string
    timeFormatFallbacks : str, default is Undefined, optional
        Uses the specified time format as a fallback in the specified order. You can parse undetermined time format by using time_format_fallbacks. This options is enabled when time_type is mixed.
    timeType : str, default is Undefined, optional
        parses/formats value according to this type, default is string
    timezone : str, default is Undefined, optional
        Uses the specified timezone.
    utc : bool, default is Undefined, optional
        If true, uses UTC.
    """


    localtime?: bool

    timeFormat?: str

    timeFormatFallbacks?: str

    timeType?: "float" | "unixtime" | "string" | "mixed"

    timezone?: str

    utc?: bool


