"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema OpAMPBridge:
    """
    OpAMPBridge is the Schema for the opampbridges API.

    Attributes
    ----------
    apiVersion : str, default is "opentelemetry.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "OpAMPBridge", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpentelemetryIoV1alpha1OpAMPBridgeSpec, default is Undefined, optional
        spec
    status : OpentelemetryIoV1alpha1OpAMPBridgeStatus, default is Undefined, optional
        status
    """


    apiVersion: "opentelemetry.io/v1alpha1" = "opentelemetry.io/v1alpha1"

    kind: "OpAMPBridge" = "OpAMPBridge"

    metadata?: v1.ObjectMeta

    spec?: OpentelemetryIoV1alpha1OpAMPBridgeSpec

    status?: OpentelemetryIoV1alpha1OpAMPBridgeStatus


schema OpentelemetryIoV1alpha1OpAMPBridgeSpec:
    """
    OpAMPBridgeSpec defines the desired state of OpAMPBridge.

    Attributes
    ----------
    affinity : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinity, default is Undefined, optional
        affinity
    capabilities : {str:bool}, default is Undefined, required
        Capabilities supported by the OpAMP Bridge
    componentsAllowed : {str:[str]}, default is Undefined, optional
        ComponentsAllowed is a list of allowed OpenTelemetry components for each pipeline type (receiver, processor, etc.)
    endpoint : str, default is Undefined, required
        OpAMP backend Server endpoint
    env : [OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0], default is Undefined, optional
        ENV vars to set on the OpAMPBridge Pods.
    envFrom : [OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables on the OpAMPBridge Pods.
    hostNetwork : bool, default is Undefined, optional
        HostNetwork indicates if the pod should run in the host networking namespace.
    image : str, default is Undefined, optional
        Image indicates the container image to use for the OpAMPBridge.
    imagePullPolicy : str, default is Undefined, optional
        ImagePullPolicy indicates the pull policy to be used for retrieving the container image (Always, Never, IfNotPresent)
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector to schedule OpAMPBridge pods.
    podAnnotations : {str:str}, default is Undefined, optional
        PodAnnotations is the set of annotations that will be attached to OpAMPBridge pods.
    podSecurityContext : OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContext, default is Undefined, optional
        pod security context
    ports : [OpentelemetryIoV1alpha1OpAMPBridgeSpecPortsItems0], default is Undefined, optional
        Ports allows a set of ports to be exposed by the underlying v1.Service.
    priorityClassName : str, default is Undefined, optional
        If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
    replicas : int, default is Undefined, optional
        Replicas is the number of pod instances for the OpAMPBridge.
    resources : OpentelemetryIoV1alpha1OpAMPBridgeSpecResources, default is Undefined, optional
        resources
    securityContext : OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContext, default is Undefined, optional
        security context
    serviceAccount : str, default is Undefined, optional
        ServiceAccount indicates the name of an existing service account to use with this instance. When set, the operator will not automatically create a ServiceAccount for the OpAMPBridge.
    tolerations : [OpentelemetryIoV1alpha1OpAMPBridgeSpecTolerationsItems0], default is Undefined, optional
        Toleration to schedule OpAMPBridge pods.
    topologySpreadConstraints : [OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined top
    upgradeStrategy : str, default is Undefined, optional
        UpgradeStrategy represents how the operator will handle upgrades to the CR when a newer version of the operator is deployed
    volumeMounts : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts represents the mount points to use in the underlying OpAMPBridge deployment(s)
    volumes : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0], default is Undefined, optional
        Volumes represents which volumes to use in the underlying OpAMPBridge deployment(s).
    """


    affinity?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinity

    capabilities: {str:bool}

    componentsAllowed?: {str:[str]}

    endpoint: str

    env?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0]

    envFrom?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0]

    hostNetwork?: bool

    image?: str

    imagePullPolicy?: str

    nodeSelector?: {str:str}

    podAnnotations?: {str:str}

    podSecurityContext?: OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContext

    ports?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecPortsItems0]

    priorityClassName?: str

    replicas?: int

    resources?: OpentelemetryIoV1alpha1OpAMPBridgeSpecResources

    securityContext?: OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContext

    serviceAccount?: str

    tolerations?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecTolerationsItems0]

    topologySpreadConstraints?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0]

    upgradeStrategy?: "automatic" | "none"

    volumeMounts?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumeMountsItems0]

    volumes?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0]


    check:
        replicas <= 1


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinity:
    """
    If specified, indicates the pod's scheduling constraints

    Attributes
    ----------
    nodeAffinity : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinity

    podAffinity?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinity

    podAntiAffinity?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinity


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinity:
    """
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.

    Attributes
    ----------
    nodeSelectorTerms : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinity:
    """
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-locate

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinity:
    """
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-locate

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0SecretRef


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContext:
    """
    PodSecurityContext will be set as the pod security context.

    Attributes
    ----------
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
         1.
    fsGroupChangePolicy : str, default is Undefined, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.
    seLinuxOptions : OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for th
    sysctls : [OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.
    windowsOptions : OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    fsGroup?: int

    fsGroupChangePolicy?: str

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSeLinuxOptions

    seccompProfile?: OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSeccompProfile

    supplementalGroups?: [int]

    sysctls?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSysctlsItems0]

    windowsOptions?: OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextWindowsOptions


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSeccompProfile:
    """
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used.
    """


    localhostProfile?: str

    $type: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextSysctlsItems0:
    """
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecPodSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecPortsItems0:
    """
    ServicePort contains information on service's port.

    Attributes
    ----------
    appProtocol : str, default is Undefined, optional
        The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax.
    name : str, default is Undefined, optional
        The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names.
    nodePort : int, default is Undefined, optional
        The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system.
    port : int, default is Undefined, required
        The port that will be exposed by this service.
    $protocol : str, default is "TCP", optional
        The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
    targetPort : int | str, default is Undefined, optional
        Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    appProtocol?: str

    name?: str

    nodePort?: int

    port: int

    $protocol?: str = "TCP"

    targetPort?: int | str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecResources:
    """
    Resources to set on the OpAMPBridge pods.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpAMPBridgeSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContext:
    """
    SecurityContext will be set as the container security context.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process.
    capabilities : OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    seLinuxOptions : OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextSeLinuxOptions

    seccompProfile?: OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextSeccompProfile

    windowsOptions?: OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextWindowsOptions


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used.
    """


    localhostProfile?: str

    $type: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated.
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains.
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it.
    """


    labelSelector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0:
    """
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    iscsi : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """


    awsElasticBlockStore?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AwsElasticBlockStore

    azureDisk?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AzureDisk

    azureFile?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AzureFile

    cephfs?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Cephfs

    cinder?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Cinder

    configMap?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ConfigMap

    csi?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Csi

    downwardAPI?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPI

    emptyDir?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EmptyDir

    ephemeral?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Ephemeral

    fc?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Fc

    flexVolume?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0FlexVolume

    flocker?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Flocker

    gcePersistentDisk?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0GcePersistentDisk

    gitRepo?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0GitRepo

    glusterfs?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Glusterfs

    hostPath?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0HostPath

    iscsi?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Iscsi

    name: str

    nfs?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Nfs

    persistentVolumeClaim?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PersistentVolumeClaim

    photonPersistentDisk?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PhotonPersistentDisk

    portworxVolume?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PortworxVolume

    projected?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Projected

    quobyte?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Quobyte

    rbd?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Rbd

    scaleIO?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ScaleIO

    secret?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Secret

    storageos?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Storageos

    vsphereVolume?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0VsphereVolume


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AwsElasticBlockStore:
    """
    awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1".
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """


    fsType?: str

    partition?: int

    readOnly?: bool

    volumeID: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AzureDisk:
    """
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is Undefined, optional
        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    """


    cachingMode?: str

    diskName: str

    diskURI: str

    fsType?: str

    kind?: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0AzureFile:
    """
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """


    readOnly?: bool

    secretName: str

    shareName: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Cephfs:
    """
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """


    monitors: [str]

    path?: str

    readOnly?: bool

    secretFile?: str

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CephfsSecretRef

    user?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CephfsSecretRef:
    """
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Cinder:
    """
    cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """


    fsType?: str

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CinderSecretRef

    volumeID: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CinderSecretRef:
    """
    secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ConfigMap:
    """
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Csi:
    """
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    nodePublishSecretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0CsiNodePublishSecretRef:
    """
    nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPI:
    """
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default.
    items : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """


    defaultMode?: int

    items?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EmptyDir:
    """
    emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory.
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium.
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Ephemeral:
    """
    ephemeral represents a volume that is handled by a cluster storage driver.

    Attributes
    ----------
    volumeClaimTemplate : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplate


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e.

    Attributes
    ----------
    metadata : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateMetadata, default is Undefined, optional
        metadata
    spec : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateMetadata

    spec: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpec


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateMetadata:
    """
    May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources

    selector?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Fc:
    """
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """


    fsType?: str

    lun?: int

    readOnly?: bool

    targetWWNs?: [str]

    wwids?: [str]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0FlexVolume:
    """
    flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """


    driver: str

    fsType?: str

    options?: {str:str}

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0FlexVolumeSecretRef


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0FlexVolumeSecretRef:
    """
    secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Flocker:
    """
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """


    datasetName?: str

    datasetUUID?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0GcePersistentDisk:
    """
    gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1".
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """


    fsType?: str

    partition?: int

    pdName: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0GitRepo:
    """
    gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """


    directory?: str

    repository: str

    revision?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Glusterfs:
    """
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """


    endpoints: str

    path: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0HostPath:
    """
    hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """


    path: str

    $type?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Iscsi:
    """
    iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is Undefined, optional
        iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    """


    chapAuthDiscovery?: bool

    chapAuthSession?: bool

    fsType?: str

    initiatorName?: str

    iqn: str

    iscsiInterface?: str

    lun: int

    portals?: [str]

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0IscsiSecretRef

    targetPortal: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0IscsiSecretRef:
    """
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Nfs:
    """
    nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """


    path: str

    readOnly?: bool

    server: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PersistentVolumeClaim:
    """
    persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PhotonPersistentDisk:
    """
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """


    fsType?: str

    pdID: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0PortworxVolume:
    """
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """


    fsType?: str

    readOnly?: bool

    volumeID: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Projected:
    """
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    sources : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections
    """


    defaultMode?: int

    sources?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0:
    """
    Projection that may be projected along with other supported volume types

    Attributes
    ----------
    configMap : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    """
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    """
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0Secret:
    """
    secret information about the secret data to project

    Attributes
    ----------
    items : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    """
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Quobyte:
    """
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """


    group?: str

    readOnly?: bool

    registry: str

    tenant?: str

    user?: str

    volume: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Rbd:
    """
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    image : str, default is Undefined, required
        image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is Undefined, optional
        keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is Undefined, optional
        pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """


    fsType?: str

    image: str

    keyring?: str

    monitors: [str]

    pool?: str

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0RbdSecretRef

    user?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0RbdSecretRef:
    """
    secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ScaleIO:
    """
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is Undefined, optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
    """


    fsType?: str

    gateway: str

    protectionDomain?: str

    readOnly?: bool

    secretRef: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool

    storageMode?: str

    storagePool?: str

    system: str

    volumeName?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0ScaleIOSecretRef:
    """
    secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Secret:
    """
    secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0Storageos:
    """
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.
    """


    fsType?: str

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0StorageosSecretRef

    volumeName?: str

    volumeNamespace?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0StorageosSecretRef:
    """
    secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpAMPBridgeSpecVolumesItems0VsphereVolume:
    """
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """


    fsType?: str

    storagePolicyID?: str

    storagePolicyName?: str

    volumePath: str


schema OpentelemetryIoV1alpha1OpAMPBridgeStatus:
    """
    OpAMPBridgeStatus defines the observed state of OpAMPBridge.

    Attributes
    ----------
    version : str, default is Undefined, optional
        Version of the managed OpAMP Bridge (operand)
    """


    version?: str


