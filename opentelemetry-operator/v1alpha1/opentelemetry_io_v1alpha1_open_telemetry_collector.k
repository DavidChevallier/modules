"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema OpenTelemetryCollector:
    """
    OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.

    Attributes
    ----------
    apiVersion : str, default is "opentelemetry.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "OpenTelemetryCollector", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpec, default is Undefined, optional
        spec
    status : OpentelemetryIoV1alpha1OpenTelemetryCollectorStatus, default is Undefined, optional
        status
    """


    apiVersion: "opentelemetry.io/v1alpha1" = "opentelemetry.io/v1alpha1"

    kind: "OpenTelemetryCollector" = "OpenTelemetryCollector"

    metadata?: v1.ObjectMeta

    spec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpec

    status?: OpentelemetryIoV1alpha1OpenTelemetryCollectorStatus


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpec:
    """
    OpenTelemetryCollectorSpec defines the desired state of OpenTelemetryCollector.

    Attributes
    ----------
    additionalContainers : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0], default is Undefined, optional
        AdditionalContainers allows injecting additional containers into the Collector's pod definition.
    affinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinity, default is Undefined, optional
        affinity
    args : {str:str}, default is Undefined, optional
        Args is the set of arguments to pass to the OpenTelemetry Collector binary
    autoscaler : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscaler, default is Undefined, optional
        autoscaler
    config : str, default is Undefined, optional
        Config is the raw JSON to be used as the collector's configuration. Refer to the OpenTelemetry Collector documentation for details.
    configmaps : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecConfigmapsItems0], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the OpenTelemetryCollector object, which shall be mounted into the Collector Pods.
    env : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0], default is Undefined, optional
        ENV vars to set on the OpenTelemetry Collector's Pods. These can then in certain cases be consumed in the config file for the Collector.
    envFrom : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables on the OpenTelemetry Collector's Pods. These can then in certain cases be consumed in the config file for the Collector.
    hostNetwork : bool, default is Undefined, optional
        HostNetwork indicates if the pod should run in the host networking namespace.
    image : str, default is Undefined, optional
        Image indicates the container image to use for the OpenTelemetry Collector.
    imagePullPolicy : str, default is Undefined, optional
        ImagePullPolicy indicates the pull policy to be used for retrieving the container image (Always, Never, IfNotPresent)
    ingress : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngress, default is Undefined, optional
        ingress
    initContainers : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0], default is Undefined, optional
        InitContainers allows injecting initContainers to the Collector's pod definition.
    lifecycle : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLivenessProbe, default is Undefined, optional
        liveness probe
    managementState : str, default is "managed", optional
        ManagementState defines if the CR should be managed by the operator or not. Default is managed.
    maxReplicas : int, default is Undefined, optional
        MaxReplicas sets an upper bound to the autoscaling feature. If MaxReplicas is set autoscaling is enabled. Deprecated: use "OpenTelemetryCollector.Spec.Autoscaler.MaxReplicas" instead.
    minReplicas : int, default is Undefined, optional
        MinReplicas sets a lower bound to the autoscaling feature.  Set this if you are using autoscaling. It must be at least 1 Deprecated: use "OpenTelemetryCollector.Spec.Autoscaler.MinReplicas" instead.
    mode : str, default is Undefined, optional
        Mode represents how the collector should be deployed (deployment, daemonset, statefulset or sidecar)
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector to schedule OpenTelemetry Collector pods. This is only relevant to daemonset, statefulset, and deployment mode
    observability : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecObservability, default is Undefined, optional
        observability
    podAnnotations : {str:str}, default is Undefined, optional
        PodAnnotations is the set of annotations that will be attached to Collector and Target Allocator pods.
    podDisruptionBudget : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodDisruptionBudget, default is Undefined, optional
        pod disruption budget
    podSecurityContext : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContext, default is Undefined, optional
        pod security context
    ports : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPortsItems0], default is Undefined, optional
        Ports allows a set of ports to be exposed by the underlying v1.Service. By default, the operator will attempt to infer the required ports by parsing the .Spec.
    priorityClassName : str, default is Undefined, optional
        If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.
    replicas : int, default is Undefined, optional
        Replicas is the number of pod instances for the underlying OpenTelemetry Collector. Set this if your are not using autoscaling
    resources : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecResources, default is Undefined, optional
        resources
    securityContext : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContext, default is Undefined, optional
        security context
    serviceAccount : str, default is Undefined, optional
        ServiceAccount indicates the name of an existing service account to use with this instance. When set, the operator will not automatically create a ServiceAccount for the collector.
    targetAllocator : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocator, default is Undefined, optional
        target allocator
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Duration in seconds the pod needs to terminate gracefully upon probe failure.
    tolerations : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTolerationsItems0], default is Undefined, optional
        Toleration to schedule OpenTelemetry Collector pods. This is only relevant to daemonset, statefulset, and deployment mode
    topologySpreadConstraints : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined top
    updateStrategy : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecUpdateStrategy, default is Undefined, optional
        update strategy
    upgradeStrategy : str, default is Undefined, optional
        UpgradeStrategy represents how the operator will handle upgrades to the CR when a newer version of the operator is deployed
    volumeClaimTemplates : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0], default is Undefined, optional
        VolumeClaimTemplates will provide stable storage using PersistentVolumes. Only available when the mode=statefulset.
    volumeMounts : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts represents the mount points to use in the underlying collector deployment(s)
    volumes : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0], default is Undefined, optional
        Volumes represents which volumes to use in the underlying collector deployment(s).
    """


    additionalContainers?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0]

    affinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinity

    args?: {str:str}

    autoscaler?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscaler

    config?: str

    configmaps?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecConfigmapsItems0]

    env?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0]

    envFrom?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0]

    hostNetwork?: bool

    image?: str

    imagePullPolicy?: str

    ingress?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngress

    initContainers?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0]

    lifecycle?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecycle

    livenessProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLivenessProbe

    managementState?: "managed" | "unmanaged" = "managed"

    maxReplicas?: int

    minReplicas?: int

    mode?: "daemonset" | "deployment" | "sidecar" | "statefulset"

    nodeSelector?: {str:str}

    observability?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecObservability

    podAnnotations?: {str:str}

    podDisruptionBudget?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodDisruptionBudget

    podSecurityContext?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContext

    ports?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPortsItems0]

    priorityClassName?: str

    replicas?: int

    resources?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecResources

    securityContext?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContext

    serviceAccount?: str

    targetAllocator?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocator

    terminationGracePeriodSeconds?: int

    tolerations?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTolerationsItems0]

    topologySpreadConstraints?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0]

    updateStrategy?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecUpdateStrategy

    upgradeStrategy?: "automatic" | "none"

    volumeClaimTemplates?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0]

    volumeMounts?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeMountsItems0]

    volumes?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment.
    env : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.
    lifecycle : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.
    readinessProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is "Always".
    securityContext : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions.
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0]

    envFrom?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0Lifecycle

    livenessProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbe

    name: str

    ports?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0PortsItems0]

    readinessProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbe

    resizePolicy?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ResizePolicyItems0]

    resources?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0Resources

    restartPolicy?: str

    securityContext?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContext

    startupProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0VolumeDevicesItems0]

    volumeMounts?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0VolumeMountsItems0]

    workingDir?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0SecretRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFrom


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStart

    preStop?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStop


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartExec

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartTCPSocket


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopExec

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopTCPSocket


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeGrpc

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
    """


    port: int

    service?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeGrpc

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
    """


    port: int

    service?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process.
    capabilities : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    seLinuxOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextSeccompProfile

    windowsOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextWindowsOptions


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used.
    """


    localhostProfile?: str

    $type: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeGrpc

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
    """


    port: int

    service?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAdditionalContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinity:
    """
    If specified, indicates the pod's scheduling constraints

    Attributes
    ----------
    nodeAffinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinity

    podAffinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinity

    podAntiAffinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinity


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinity:
    """
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.

    Attributes
    ----------
    nodeSelectorTerms : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinity:
    """
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-locate

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinity:
    """
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-locate

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscaler:
    """
    Autoscaler specifies the pod autoscaling configuration to use for the OpenTelemetryCollector workload.

    Attributes
    ----------
    behavior : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehavior, default is Undefined, optional
        behavior
    maxReplicas : int, default is Undefined, optional
        MaxReplicas sets an upper bound to the autoscaling feature. If MaxReplicas is set autoscaling is enabled.
    metrics : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0], default is Undefined, optional
        Metrics is meant to provide a customizable way to configure HPA metrics. currently the only supported custom metrics is type=Pod.
    minReplicas : int, default is Undefined, optional
        MinReplicas sets a lower bound to the autoscaling feature.  Set this if your are using autoscaling. It must be at least 1
    targetCPUUtilization : int, default is Undefined, optional
        TargetCPUUtilization sets the target average CPU used across all replicas. If average CPU exceeds this value, the HPA will scale up. Defaults to 90 percent.
    targetMemoryUtilization : int, default is Undefined, optional
        TargetMemoryUtilization sets the target average memory utilization across all replicas
    """


    behavior?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehavior

    maxReplicas?: int

    metrics?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0]

    minReplicas?: int

    targetCPUUtilization?: int

    targetMemoryUtilization?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehavior:
    """
    HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).

    Attributes
    ----------
    scaleDown : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown, default is Undefined, optional
        scale down
    scaleUp : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp, default is Undefined, optional
        scale up
    """


    scaleDown?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown

    scaleUp?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDown:
    """
    scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e.

    Attributes
    ----------
    policies : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPoliciesItems0], default is Undefined, optional
        policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
    selectPolicy : str, default is Undefined, optional
        selectPolicy is used to specify which policy should be used. If not set, the default value Max is used.
    stabilizationWindowSeconds : int, default is Undefined, optional
        stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down.
    """


    policies?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPoliciesItems0]

    selectPolicy?: str

    stabilizationWindowSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleDownPoliciesItems0:
    """
    HPAScalingPolicy is a single policy which must hold true for a specified past interval.

    Attributes
    ----------
    periodSeconds : int, default is Undefined, required
        periodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
    $type : str, default is Undefined, required
        type is used to specify the scaling policy.
    value : int, default is Undefined, required
        value contains the amount of change which is permitted by the policy. It must be greater than zero
    """


    periodSeconds: int

    $type: str

    value: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUp:
    """
    scaleUp is scaling policy for scaling Up.

    Attributes
    ----------
    policies : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPoliciesItems0], default is Undefined, optional
        policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
    selectPolicy : str, default is Undefined, optional
        selectPolicy is used to specify which policy should be used. If not set, the default value Max is used.
    stabilizationWindowSeconds : int, default is Undefined, optional
        stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down.
    """


    policies?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPoliciesItems0]

    selectPolicy?: str

    stabilizationWindowSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerBehaviorScaleUpPoliciesItems0:
    """
    HPAScalingPolicy is a single policy which must hold true for a specified past interval.

    Attributes
    ----------
    periodSeconds : int, default is Undefined, required
        periodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
    $type : str, default is Undefined, required
        type is used to specify the scaling policy.
    value : int, default is Undefined, required
        value contains the amount of change which is permitted by the policy. It must be greater than zero
    """


    periodSeconds: int

    $type: str

    value: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0:
    """
    MetricSpec defines a subset of metrics to be defined for the HPA's metric array more metric type can be supported as needed. See https://pkg.go.dev/k8s.io/api/autoscaling/v2#MetricSpec for reference.

    Attributes
    ----------
    pods : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0Pods, default is Undefined, optional
        pods
    $type : str, default is Undefined, required
        MetricSourceType indicates the type of metric.
    """


    pods?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0Pods

    $type: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0Pods:
    """
    PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second).

    Attributes
    ----------
    metric : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetric, default is Undefined, required
        metric
    target : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsTarget, default is Undefined, required
        target
    """


    metric: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetric

    target: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsTarget


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetric:
    """
    metric identifies the target metric by name and selector

    Attributes
    ----------
    name : str, default is Undefined, required
        name is the name of the given metric
    selector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetricSelector, default is Undefined, optional
        selector
    """


    name: str

    selector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetricSelector


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetricSelector:
    """
    selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scopi

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetricSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetricSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsMetricSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecAutoscalerMetricsItems0PodsTarget:
    """
    target specifies the target value for the given metric

    Attributes
    ----------
    averageUtilization : int, default is Undefined, optional
        averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
    averageValue : int | str, default is Undefined, optional
        averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
    $type : str, default is Undefined, required
        type represents whether the metric type is Utilization, Value, or AverageValue
    value : int | str, default is Undefined, optional
        value is the target value of the metric (as a quantity).
    """


    averageUtilization?: int

    averageValue?: int | str

    $type: str

    value?: int | str


    check:
        regex.match(str(averageValue), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if averageValue
        regex.match(str(value), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if value


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecConfigmapsItems0:
    """
    opentelemetry io v1alpha1 open telemetry collector spec configmaps items0

    Attributes
    ----------
    mountpath : str, default is Undefined, required
        mountpath
    name : str, default is Undefined, required
        Configmap defines name and path where the configMaps should be mounted.
    """


    mountpath: str

    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0SecretRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngress:
    """
    Ingress is used to specify how OpenTelemetry Collector is exposed. This functionality is only available if one of the valid modes is set. Valid modes are: deployment, daemonset and statefulset.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations to add to ingress. e.g. 'cert-manager.io/cluster-issuer: "letsencrypt"'
    hostname : str, default is Undefined, optional
        Hostname by which the ingress proxy can be reached.
    ingressClassName : str, default is Undefined, optional
        IngressClassName is the name of an IngressClass cluster resource. Ingress controller implementations use this field to know whether they should be serving this Ingress resource.
    route : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngressRoute, default is Undefined, optional
        route
    ruleType : str, default is Undefined, optional
        RuleType defines how Ingress exposes collector receivers. IngressRuleTypePath ("path") exposes each receiver port on a unique path on single domain defined in Hostname.
    tls : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngressTLSItems0], default is Undefined, optional
        TLS configuration.
    $type : str, default is Undefined, optional
        Type default value is: "" Supported types are: ingress, route
    """


    annotations?: {str:str}

    hostname?: str

    ingressClassName?: str

    route?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngressRoute

    ruleType?: "path" | "subdomain"

    tls?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngressTLSItems0]

    $type?: "ingress" | "route"


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngressRoute:
    """
    Route is an OpenShift specific section that is only considered when type "route" is used.

    Attributes
    ----------
    termination : str, default is Undefined, optional
        Termination indicates termination type. By default "edge" is used.
    """


    termination?: "insecure" | "edge" | "passthrough" | "reencrypt"


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecIngressTLSItems0:
    """
    IngressTLS describes the transport layer security associated with an ingress.

    Attributes
    ----------
    hosts : [str], default is Undefined, optional
        hosts is a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret.
    secretName : str, default is Undefined, optional
        secretName is the name of the secret used to terminate TLS traffic on port 443. Field is left optional to allow TLS routing based on SNI hostname alone.
    """


    hosts?: [str]

    secretName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment.
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment.
    env : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.
    lifecycle : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.
    readinessProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0Resources, default is Undefined, optional
        resources
    restartPolicy : str, default is Undefined, optional
        RestartPolicy defines the restart behavior of individual containers in a pod. This field may only be set for init containers, and the only allowed value is "Always".
    securityContext : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions.
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0]

    envFrom?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0Lifecycle

    livenessProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbe

    name: str

    ports?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0PortsItems0]

    readinessProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbe

    resizePolicy?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ResizePolicyItems0]

    resources?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0Resources

    restartPolicy?: str

    securityContext?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContext

    startupProbe?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0VolumeDevicesItems0]

    volumeMounts?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0VolumeMountsItems0]

    workingDir?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0SecretRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFrom


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStart

    preStop?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStop


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartExec

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartTCPSocket


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopExec

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopTCPSocket


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeGrpc

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
    """


    port: int

    service?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeGrpc

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
    """


    port: int

    service?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process.
    capabilities : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    seLinuxOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextSeccompProfile

    windowsOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextWindowsOptions


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used.
    """


    localhostProfile?: str

    $type: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeGrpc

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
    """


    port: int

    service?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecInitContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStart, default is Undefined, optional
        post start
    preStop : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStart

    preStop?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStop


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartExec

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartHTTPGet

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartTCPSocket


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc.

    Attributes
    ----------
    exec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopExec

    httpGet?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopHTTPGet

    tcpSocket?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopTCPSocket


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem.
    """


    command?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecLivenessProbe:
    """
    Liveness config for the OpenTelemetry Collector except the probe handler which is auto generated from the health extension of the collector.

    Attributes
    ----------
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. Defaults to 0 seconds. Minimum value is 0. More info: https://kubernetes.
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    failureThreshold?: int

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecObservability:
    """
    ObservabilitySpec defines how telemetry data gets handled.

    Attributes
    ----------
    metrics : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecObservabilityMetrics, default is Undefined, optional
        metrics
    """


    metrics?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecObservabilityMetrics


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecObservabilityMetrics:
    """
    Metrics defines the metrics configuration for operands.

    Attributes
    ----------
    enableMetrics : bool, default is Undefined, optional
        EnableMetrics specifies if ServiceMonitor should be created for the OpenTelemetry Collector and Prometheus Exporters. The operator.observability.
    """


    enableMetrics?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodDisruptionBudget:
    """
    PodDisruptionBudget specifies the pod disruption budget configuration to use for the OpenTelemetryCollector workload.

    Attributes
    ----------
    maxUnavailable : int | str, default is Undefined, optional
        An eviction is allowed if at most "maxUnavailable" pods selected by "selector" are unavailable after the eviction, i.e. even in absence of the evicted pod.
    minAvailable : int | str, default is Undefined, optional
        An eviction is allowed if at least "minAvailable" pods selected by "selector" will still be available after the eviction, i.e. even in the absence of the evicted pod.
    """


    maxUnavailable?: int | str

    minAvailable?: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContext:
    """
    PodSecurityContext configures the pod security context for the opentelemetry-collector pod, when running as a deployment, daemonset, or statefulset.

    Attributes
    ----------
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
         1.
    fsGroupChangePolicy : str, default is Undefined, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.
    seLinuxOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for th
    sysctls : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.
    windowsOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    fsGroup?: int

    fsGroupChangePolicy?: str

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions

    seccompProfile?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile

    supplementalGroups?: [int]

    sysctls?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSysctlsItems0]

    windowsOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSeccompProfile:
    """
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used.
    """


    localhostProfile?: str

    $type: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextSysctlsItems0:
    """
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """


    name: str

    value: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPodSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecPortsItems0:
    """
    ServicePort contains information on service's port.

    Attributes
    ----------
    appProtocol : str, default is Undefined, optional
        The application protocol for this port. This is used as a hint for implementations to offer richer behavior for protocols that they understand. This field follows standard Kubernetes label syntax.
    name : str, default is Undefined, optional
        The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names.
    nodePort : int, default is Undefined, optional
        The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system.
    port : int, default is Undefined, required
        The port that will be exposed by this service.
    $protocol : str, default is "TCP", optional
        The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
    targetPort : int | str, default is Undefined, optional
        Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    appProtocol?: str

    name?: str

    nodePort?: int

    port: int

    $protocol?: str = "TCP"

    targetPort?: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecResources:
    """
    Resources to set on the OpenTelemetry Collector pods.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContext:
    """
    SecurityContext configures the container security context for the opentelemetry-collector container.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process.
    capabilities : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    seLinuxOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions

    seccompProfile?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextSeccompProfile

    windowsOptions?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextWindowsOptions


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work.
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used.
    """


    localhostProfile?: str

    $type: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocator:
    """
    TargetAllocator indicates a value which determines whether to spawn a target allocation resource or not.

    Attributes
    ----------
    affinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinity, default is Undefined, optional
        affinity
    allocationStrategy : str, default is Undefined, optional
        AllocationStrategy determines which strategy the target allocator should use for allocation. The current options are least-weighted and consistent-hashing. The default option is least-weighted
    enabled : bool, default is Undefined, optional
        Enabled indicates whether to use a target allocation mechanism for Prometheus targets or not.
    env : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0], default is Undefined, optional
        ENV vars to set on the OpenTelemetry TargetAllocator's Pods. These can then in certain cases be consumed in the config file for the TargetAllocator.
    filterStrategy : str, default is Undefined, optional
        FilterStrategy determines how to filter targets before allocating them among the collectors. The only current option is relabel-config (drops targets based on prom relabel_config).
    image : str, default is Undefined, optional
        Image indicates the container image to use for the OpenTelemetry TargetAllocator.
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector to schedule OpenTelemetry TargetAllocator pods.
    prometheusCR : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorPrometheusCR, default is Undefined, optional
        prometheus c r
    replicas : int, default is Undefined, optional
        Replicas is the number of pod instances for the underlying TargetAllocator. This should only be set to a value other than 1 if a strategy that allows for high availability is chosen.
    resources : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorResources, default is Undefined, optional
        resources
    serviceAccount : str, default is Undefined, optional
        ServiceAccount indicates the name of an existing service account to use with this instance. When set, the operator will not automatically create a ServiceAccount for the TargetAllocator.
    tolerations : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTolerationsItems0], default is Undefined, optional
        Toleration embedded kubernetes pod configuration option, controls how pods can be scheduled with matching taints
    topologySpreadConstraints : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints embedded kubernetes pod configuration option, controls how pods are spread across your cluster among failure-domains such as regions, zones, nodes, and other user-defined top
    """


    affinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinity

    allocationStrategy?: "least-weighted" | "consistent-hashing"

    enabled?: bool

    env?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0]

    filterStrategy?: str

    image?: str

    nodeSelector?: {str:str}

    prometheusCR?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorPrometheusCR

    replicas?: int

    resources?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorResources

    serviceAccount?: str

    tolerations?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTolerationsItems0]

    topologySpreadConstraints?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinity:
    """
    If specified, indicates the pod's scheduling constraints

    Attributes
    ----------
    nodeAffinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity

    podAffinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity

    podAntiAffinity?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinity:
    """
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.

    Attributes
    ----------
    nodeSelectorTerms : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinity:
    """
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-locate

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinity:
    """
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
    requiredDuringSchedulingIgnoredDuringExecution : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-locate

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector.
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose 
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorPrometheusCR:
    """
    PrometheusCR defines the configuration for the retrieval of PrometheusOperator CRDs ( servicemonitor.monitoring.coreos.com/v1 and podmonitor.monitoring.coreos.com/v1 )  retrieval.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled indicates whether to use a PrometheusOperator custom resources as targets or not.
    podMonitorSelector : {str:str}, default is Undefined, optional
        PodMonitors to be selected for target discovery. This is a map of {key,value} pairs. Each {key,value} in the map is going to exactly match a label in a PodMonitor's meta labels.
    scrapeInterval : str, default is "30s", optional
        Interval between consecutive scrapes. Equivalent to the same setting on the Prometheus CRD. 
         Default: "30s"
    serviceMonitorSelector : {str:str}, default is Undefined, optional
        ServiceMonitors to be selected for target discovery. This is a map of {key,value} pairs. Each {key,value} in the map is going to exactly match a label in a ServiceMonitor's meta labels.
    """


    enabled?: bool

    podMonitorSelector?: {str:str}

    scrapeInterval?: str = "30s"

    serviceMonitorSelector?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorResources:
    """
    Resources to set on the OpenTelemetryTargetAllocator containers.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated.
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains.
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it.
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTargetAllocatorTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated.
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains.
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it.
    """


    labelSelector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecUpdateStrategy:
    """
    UpdateStrategy represents the strategy the operator will take replacing existing DaemonSet pods with new pods https://kubernetes.

    Attributes
    ----------
    rollingUpdate : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate, default is Undefined, optional
        rolling update
    $type : str, default is Undefined, optional
        Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
    """


    rollingUpdate?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate

    $type?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecUpdateStrategyRollingUpdate:
    """
    Rolling update config params. Present only if type = "RollingUpdate". --- TODO: Update this to follow our convention for oneOf, whatever we decide it to be. Same as Deployment `strategy.

    Attributes
    ----------
    maxSurge : int | str, default is Undefined, optional
        The maximum number of nodes with an existing available DaemonSet pod that can have an updated DaemonSet pod during during an update.
    maxUnavailable : int | str, default is Undefined, optional
        The maximum number of DaemonSet pods that can be unavailable during the update.
    """


    maxSurge?: int | str

    maxUnavailable?: int | str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0:
    """
    PersistentVolumeClaim is a user's request for and claim to a persistent volume

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values.
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase.
    metadata : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Metadata, default is Undefined, optional
        metadata
    spec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Spec, default is Undefined, optional
        spec
    status : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Status, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Metadata

    spec?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Spec

    status?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Status


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Metadata:
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Spec:
    """
    spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecResources, default is Undefined, optional
        resources
    selector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecDataSource

    dataSourceRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecDataSourceRef

    resources?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecResources

    selector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecResources:
    """
    resources represents the minimum resources the volume should have.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0SpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0Status:
    """
    status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResourceStatuses : {str:str}, default is Undefined, optional
        allocatedResourceStatuses stores status of resource being resized for the given PVC. Key names follow standard Kubernetes label syntax.
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources tracks the resources allocated to a PVC including its capacity. Key names follow standard Kubernetes label syntax.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0StatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    """


    accessModes?: [str]

    allocatedResourceStatuses?: {str:str}

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0StatusConditionsItems0]

    phase?: str


    check:
        all _, n in allocatedResources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeClaimTemplatesItems0StatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contains details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0:
    """
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    iscsi : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """


    awsElasticBlockStore?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AwsElasticBlockStore

    azureDisk?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AzureDisk

    azureFile?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AzureFile

    cephfs?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Cephfs

    cinder?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Cinder

    configMap?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ConfigMap

    csi?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Csi

    downwardAPI?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPI

    emptyDir?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EmptyDir

    ephemeral?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Ephemeral

    fc?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Fc

    flexVolume?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0FlexVolume

    flocker?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Flocker

    gcePersistentDisk?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0GcePersistentDisk

    gitRepo?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0GitRepo

    glusterfs?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Glusterfs

    hostPath?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0HostPath

    iscsi?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Iscsi

    name: str

    nfs?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Nfs

    persistentVolumeClaim?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PersistentVolumeClaim

    photonPersistentDisk?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PhotonPersistentDisk

    portworxVolume?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PortworxVolume

    projected?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Projected

    quobyte?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Quobyte

    rbd?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Rbd

    scaleIO?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ScaleIO

    secret?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Secret

    storageos?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Storageos

    vsphereVolume?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0VsphereVolume


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AwsElasticBlockStore:
    """
    awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1".
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """


    fsType?: str

    partition?: int

    readOnly?: bool

    volumeID: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AzureDisk:
    """
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is Undefined, optional
        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set).
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    """


    cachingMode?: str

    diskName: str

    diskURI: str

    fsType?: str

    kind?: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0AzureFile:
    """
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """


    readOnly?: bool

    secretName: str

    shareName: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Cephfs:
    """
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """


    monitors: [str]

    path?: str

    readOnly?: bool

    secretFile?: str

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CephfsSecretRef

    user?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CephfsSecretRef:
    """
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Cinder:
    """
    cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """


    fsType?: str

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CinderSecretRef

    volumeID: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CinderSecretRef:
    """
    secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ConfigMap:
    """
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Csi:
    """
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    nodePublishSecretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0CsiNodePublishSecretRef:
    """
    nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPI:
    """
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default.
    items : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """


    defaultMode?: int

    items?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EmptyDir:
    """
    emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory.
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium.
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Ephemeral:
    """
    ephemeral represents a volume that is handled by a cluster storage driver.

    Attributes
    ----------
    volumeClaimTemplate : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplate


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e.

    Attributes
    ----------
    metadata : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateMetadata, default is Undefined, optional
        metadata
    spec : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateMetadata

    spec: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpec


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateMetadata:
    """
    May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        annotations
    finalizers : [str], default is Undefined, optional
        finalizers
    labels : {str:str}, default is Undefined, optional
        labels
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    annotations?: {str:str}

    finalizers?: [str]

    labels?: {str:str}

    name?: str

    namespace?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources

    selector?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs.
    """


    matchExpressions?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Fc:
    """
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """


    fsType?: str

    lun?: int

    readOnly?: bool

    targetWWNs?: [str]

    wwids?: [str]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0FlexVolume:
    """
    flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """


    driver: str

    fsType?: str

    options?: {str:str}

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0FlexVolumeSecretRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0FlexVolumeSecretRef:
    """
    secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Flocker:
    """
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """


    datasetName?: str

    datasetUUID?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0GcePersistentDisk:
    """
    gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1".
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """


    fsType?: str

    partition?: int

    pdName: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0GitRepo:
    """
    gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """


    directory?: str

    repository: str

    revision?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Glusterfs:
    """
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """


    endpoints: str

    path: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0HostPath:
    """
    hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container.

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """


    path: str

    $type?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Iscsi:
    """
    iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is Undefined, optional
        iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    """


    chapAuthDiscovery?: bool

    chapAuthSession?: bool

    fsType?: str

    initiatorName?: str

    iqn: str

    iscsiInterface?: str

    lun: int

    portals?: [str]

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0IscsiSecretRef

    targetPortal: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0IscsiSecretRef:
    """
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Nfs:
    """
    nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """


    path: str

    readOnly?: bool

    server: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PersistentVolumeClaim:
    """
    persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PhotonPersistentDisk:
    """
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """


    fsType?: str

    pdID: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0PortworxVolume:
    """
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """


    fsType?: str

    readOnly?: bool

    volumeID: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Projected:
    """
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    sources : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections
    """


    defaultMode?: int

    sources?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0:
    """
    Projection that may be projected along with other supported volume types

    Attributes
    ----------
    configMap : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    """
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    """
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0Secret:
    """
    secret information about the secret data to project

    Attributes
    ----------
    items : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    """
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Quobyte:
    """
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """


    group?: str

    readOnly?: bool

    registry: str

    tenant?: str

    user?: str

    volume: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Rbd:
    """
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs".
    image : str, default is Undefined, required
        image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is Undefined, optional
        keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is Undefined, optional
        pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """


    fsType?: str

    image: str

    keyring?: str

    monitors: [str]

    pool?: str

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0RbdSecretRef

    user?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0RbdSecretRef:
    """
    secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ScaleIO:
    """
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is Undefined, optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
    """


    fsType?: str

    gateway: str

    protectionDomain?: str

    readOnly?: bool

    secretRef: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool

    storageMode?: str

    storagePool?: str

    system: str

    volumeName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0ScaleIOSecretRef:
    """
    secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Secret:
    """
    secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    items : [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0Storageos:
    """
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.
    """


    fsType?: str

    readOnly?: bool

    secretRef?: OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0StorageosSecretRef

    volumeName?: str

    volumeNamespace?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0StorageosSecretRef:
    """
    secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorSpecVolumesItems0VsphereVolume:
    """
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """


    fsType?: str

    storagePolicyID?: str

    storagePolicyName?: str

    volumePath: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorStatus:
    """
    OpenTelemetryCollectorStatus defines the observed state of OpenTelemetryCollector.

    Attributes
    ----------
    image : str, default is Undefined, optional
        Image indicates the container image to use for the OpenTelemetry Collector.
    messages : [str], default is Undefined, optional
        Messages about actions performed by the operator on this resource. Deprecated: use Kubernetes events instead.
    replicas : int, default is Undefined, optional
        Replicas is currently not being set and might be removed in the next version. Deprecated: use "OpenTelemetryCollector.Status.Scale.Replicas" instead.
    scale : OpentelemetryIoV1alpha1OpenTelemetryCollectorStatusScale, default is Undefined, optional
        scale
    version : str, default is Undefined, optional
        Version of the managed OpenTelemetry Collector (operand)
    """


    image?: str

    messages?: [str]

    replicas?: int

    scale?: OpentelemetryIoV1alpha1OpenTelemetryCollectorStatusScale

    version?: str


schema OpentelemetryIoV1alpha1OpenTelemetryCollectorStatusScale:
    """
    Scale is the OpenTelemetryCollector's scale subresource status.

    Attributes
    ----------
    replicas : int, default is Undefined, optional
        The total number non-terminated pods targeted by this OpenTelemetryCollector's deployment or statefulSet.
    selector : str, default is Undefined, optional
        The selector used to match the OpenTelemetryCollector's deployment or statefulSet pods.
    statusReplicas : str, default is Undefined, optional
        StatusReplicas is the number of pods targeted by this OpenTelemetryCollector's with a Ready Condition / Total number of non-terminated pods targeted by this OpenTelemetryCollector's (their labels matc
    """


    replicas?: int

    selector?: str

    statusReplicas?: str


