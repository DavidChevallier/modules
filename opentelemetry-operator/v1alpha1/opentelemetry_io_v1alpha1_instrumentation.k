"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Instrumentation:
    """
    Instrumentation is the spec for OpenTelemetry instrumentation.

    Attributes
    ----------
    apiVersion : str, default is "opentelemetry.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instrumentation", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpentelemetryIoV1alpha1InstrumentationSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        InstrumentationStatus defines status of the instrumentation.
    """


    apiVersion: "opentelemetry.io/v1alpha1" = "opentelemetry.io/v1alpha1"

    kind: "Instrumentation" = "Instrumentation"

    metadata?: v1.ObjectMeta

    spec?: OpentelemetryIoV1alpha1InstrumentationSpec

    status?: any


schema OpentelemetryIoV1alpha1InstrumentationSpec:
    """
    InstrumentationSpec defines the desired state of OpenTelemetry SDK and instrumentation.

    Attributes
    ----------
    apacheHttpd : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpd, default is Undefined, optional
        apache httpd
    dotnet : OpentelemetryIoV1alpha1InstrumentationSpecDotnet, default is Undefined, optional
        dotnet
    env : [OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0], default is Undefined, optional
        Env defines common env vars.
    exporter : OpentelemetryIoV1alpha1InstrumentationSpecExporter, default is Undefined, optional
        exporter
    go : OpentelemetryIoV1alpha1InstrumentationSpecGo, default is Undefined, optional
        go
    java : OpentelemetryIoV1alpha1InstrumentationSpecJava, default is Undefined, optional
        java
    nginx : OpentelemetryIoV1alpha1InstrumentationSpecNginx, default is Undefined, optional
        nginx
    nodejs : OpentelemetryIoV1alpha1InstrumentationSpecNodejs, default is Undefined, optional
        nodejs
    propagators : [str], default is Undefined, optional
        Propagators defines inter-process context propagation configuration. Values in this list will be set in the OTEL_PROPAGATORS env var. Enum=tracecontext;baggage;b3;b3multi;jaeger;xray;ottrace;none
    python : OpentelemetryIoV1alpha1InstrumentationSpecPython, default is Undefined, optional
        python
    resource : OpentelemetryIoV1alpha1InstrumentationSpecResource, default is Undefined, optional
        resource
    sampler : OpentelemetryIoV1alpha1InstrumentationSpecSampler, default is Undefined, optional
        sampler
    """


    apacheHttpd?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpd

    dotnet?: OpentelemetryIoV1alpha1InstrumentationSpecDotnet

    env?: [OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0]

    exporter?: OpentelemetryIoV1alpha1InstrumentationSpecExporter

    go?: OpentelemetryIoV1alpha1InstrumentationSpecGo

    java?: OpentelemetryIoV1alpha1InstrumentationSpecJava

    nginx?: OpentelemetryIoV1alpha1InstrumentationSpecNginx

    nodejs?: OpentelemetryIoV1alpha1InstrumentationSpecNodejs

    propagators?: [str]

    python?: OpentelemetryIoV1alpha1InstrumentationSpecPython

    resource?: OpentelemetryIoV1alpha1InstrumentationSpecResource

    sampler?: OpentelemetryIoV1alpha1InstrumentationSpecSampler


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpd:
    """
    ApacheHttpd defines configuration for Apache HTTPD auto-instrumentation.

    Attributes
    ----------
    attrs : [OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0], default is Undefined, optional
        Attrs defines Apache HTTPD agent specific attributes. The precedence is: `agent default attributes` > `instrument spec attributes` . Attributes are documented at https://github.
    configPath : str, default is Undefined, optional
        Location of Apache HTTPD server configuration. Needed only if different from default "/usr/local/apache2/conf"
    env : [OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0], default is Undefined, optional
        Env defines Apache HTTPD specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with Apache SDK and auto-instrumentation.
    resourceRequirements : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdResourceRequirements, default is Undefined, optional
        resource requirements
    version : str, default is Undefined, optional
        Apache HTTPD server version. One of 2.4 or 2.2. Default is 2.4
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    attrs?: [OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0]

    configPath?: str

    env?: [OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0]

    image?: str

    resourceRequirements?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdResourceRequirements

    version?: str

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdAttrsItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdResourceRequirements:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdResourceRequirementsClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdResourceRequirementsClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecApacheHttpdResourceRequirementsClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnet:
    """
    DotNet defines configuration for DotNet auto-instrumentation.

    Attributes
    ----------
    env : [OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0], default is Undefined, optional
        Env defines DotNet specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with DotNet SDK and auto-instrumentation.
    resourceRequirements : OpentelemetryIoV1alpha1InstrumentationSpecDotnetResourceRequirements, default is Undefined, optional
        resource requirements
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    env?: [OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0]

    image?: str

    resourceRequirements?: OpentelemetryIoV1alpha1InstrumentationSpecDotnetResourceRequirements

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetResourceRequirements:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecDotnetResourceRequirementsClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecDotnetResourceRequirementsClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecDotnetResourceRequirementsClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecExporter:
    """
    Exporter defines exporter configuration.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        Endpoint is address of the collector with OTLP endpoint.
    """


    endpoint?: str


schema OpentelemetryIoV1alpha1InstrumentationSpecGo:
    """
    Go defines configuration for Go auto-instrumentation.

    Attributes
    ----------
    env : [OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0], default is Undefined, optional
        Env defines Go specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with Go SDK and auto-instrumentation.
    resourceRequirements : OpentelemetryIoV1alpha1InstrumentationSpecGoResourceRequirements, default is Undefined, optional
        resource requirements
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    env?: [OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0]

    image?: str

    resourceRequirements?: OpentelemetryIoV1alpha1InstrumentationSpecGoResourceRequirements

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecGoEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecGoResourceRequirements:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecGoResourceRequirementsClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecGoResourceRequirementsClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecGoResourceRequirementsClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecJava:
    """
    Java defines configuration for java auto-instrumentation.

    Attributes
    ----------
    env : [OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0], default is Undefined, optional
        Env defines java specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with javaagent auto-instrumentation JAR.
    resources : OpentelemetryIoV1alpha1InstrumentationSpecJavaResources, default is Undefined, optional
        resources
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    env?: [OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0]

    image?: str

    resources?: OpentelemetryIoV1alpha1InstrumentationSpecJavaResources

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaResources:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecJavaResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecJavaResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecJavaResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecNginx:
    """
    Nginx defines configuration for Nginx auto-instrumentation.

    Attributes
    ----------
    attrs : [OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0], default is Undefined, optional
        Attrs defines Nginx agent specific attributes. The precedence order is: `agent default attributes` > `instrument spec attributes` . Attributes are documented at https://github.
    configFile : str, default is Undefined, optional
        Location of Nginx configuration file. Needed only if different from default "/etx/nginx/nginx.conf"
    env : [OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0], default is Undefined, optional
        Env defines Nginx specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with Nginx SDK and auto-instrumentation.
    resourceRequirements : OpentelemetryIoV1alpha1InstrumentationSpecNginxResourceRequirements, default is Undefined, optional
        resource requirements
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    attrs?: [OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0]

    configFile?: str

    env?: [OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0]

    image?: str

    resourceRequirements?: OpentelemetryIoV1alpha1InstrumentationSpecNginxResourceRequirements

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxAttrsItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxResourceRequirements:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecNginxResourceRequirementsClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecNginxResourceRequirementsClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecNginxResourceRequirementsClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejs:
    """
    NodeJS defines configuration for nodejs auto-instrumentation.

    Attributes
    ----------
    env : [OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0], default is Undefined, optional
        Env defines nodejs specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with NodeJS SDK and auto-instrumentation.
    resourceRequirements : OpentelemetryIoV1alpha1InstrumentationSpecNodejsResourceRequirements, default is Undefined, optional
        resource requirements
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    env?: [OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0]

    image?: str

    resourceRequirements?: OpentelemetryIoV1alpha1InstrumentationSpecNodejsResourceRequirements

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsResourceRequirements:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecNodejsResourceRequirementsClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecNodejsResourceRequirementsClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecNodejsResourceRequirementsClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecPython:
    """
    Python defines configuration for python auto-instrumentation.

    Attributes
    ----------
    env : [OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0], default is Undefined, optional
        Env defines python specific env vars.
    image : str, default is Undefined, optional
        Image is a container image with Python SDK and auto-instrumentation.
    resourceRequirements : OpentelemetryIoV1alpha1InstrumentationSpecPythonResourceRequirements, default is Undefined, optional
        resource requirements
    volumeLimitSize : int | str, default is Undefined, optional
        VolumeSizeLimit defines size limit for volume used for auto-instrumentation. The default size is 200Mi.
    """


    env?: [OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0]

    image?: str

    resourceRequirements?: OpentelemetryIoV1alpha1InstrumentationSpecPythonResourceRequirements

    volumeLimitSize?: int | str


    check:
        regex.match(str(volumeLimitSize), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if volumeLimitSize


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables.
    valueFrom : OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFrom


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromConfigMapKeyRef

    fieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromFieldRef

    resourceFieldRef?: OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromResourceFieldRef

    secretKeyRef?: OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromSecretKeyRef


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonEnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonResourceRequirements:
    """
    Resources describes the compute resource requirements.

    Attributes
    ----------
    claims : [OpentelemetryIoV1alpha1InstrumentationSpecPythonResourceRequirementsClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required.
    """


    claims?: [OpentelemetryIoV1alpha1InstrumentationSpecPythonResourceRequirementsClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema OpentelemetryIoV1alpha1InstrumentationSpecPythonResourceRequirementsClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema OpentelemetryIoV1alpha1InstrumentationSpecResource:
    """
    Resource defines the configuration for the resource attributes, as defined by the OpenTelemetry specification.

    Attributes
    ----------
    addK8sUIDAttributes : bool, default is Undefined, optional
        AddK8sUIDAttributes defines whether K8s UID attributes should be collected (e.g. k8s.deployment.uid).
    resourceAttributes : {str:str}, default is Undefined, optional
        Attributes defines attributes that are added to the resource. For example environment: dev
    """


    addK8sUIDAttributes?: bool

    resourceAttributes?: {str:str}


schema OpentelemetryIoV1alpha1InstrumentationSpecSampler:
    """
    Sampler defines sampling configuration.

    Attributes
    ----------
    argument : str, default is Undefined, optional
        Argument defines sampler argument. The value depends on the sampler type. For instance for parentbased_traceidratio sampler type it is a number in range [0..1] e.g. 0.25.
    $type : str, default is Undefined, optional
        Type defines sampler type. The value will be set in the OTEL_TRACES_SAMPLER env var. The value can be for instance parentbased_always_on, parentbased_always_off, parentbased_traceidratio...
    """


    argument?: str

    $type?: "always_on" | "always_off" | "traceidratio" | "parentbased_always_on" | "parentbased_always_off" | "parentbased_traceidratio" | "jaeger_remote" | "xray"


