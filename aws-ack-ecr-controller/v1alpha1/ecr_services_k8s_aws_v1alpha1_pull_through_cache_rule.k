"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PullThroughCacheRule:
    """
    PullThroughCacheRule is the Schema for the PullThroughCacheRules API

    Attributes
    ----------
    apiVersion : str, default is "ecr.services.k8s.aws/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PullThroughCacheRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcrServicesK8sAwsV1alpha1PullThroughCacheRuleSpec, default is Undefined, optional
        spec
    status : EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecr.services.k8s.aws/v1alpha1" = "ecr.services.k8s.aws/v1alpha1"

    kind: "PullThroughCacheRule" = "PullThroughCacheRule"

    metadata?: v1.ObjectMeta

    spec?: EcrServicesK8sAwsV1alpha1PullThroughCacheRuleSpec

    status?: EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatus


schema EcrServicesK8sAwsV1alpha1PullThroughCacheRuleSpec:
    """
    PullThroughCacheRuleSpec defines the desired state of PullThroughCacheRule. 
     The details of a pull through cache rule.

    Attributes
    ----------
    ecrRepositoryPrefix : str, default is Undefined, required
        The repository name prefix to use when caching images from the source registry.
    registryID : str, default is Undefined, optional
        The Amazon Web Services account ID associated with the registry to create the pull through cache rule for. If you do not specify a registry, the default registry is assumed.
    upstreamRegistryURL : str, default is Undefined, required
        The registry URL of the upstream public registry to use as the source for the pull through cache rule.
    """


    ecrRepositoryPrefix: str

    registryID?: str

    upstreamRegistryURL: str


schema EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatus:
    """
    PullThroughCacheRuleStatus defines the observed state of PullThroughCacheRule

    Attributes
    ----------
    ackResourceMetadata : EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatusAckResourceMetadata, default is Undefined, optional
        ack resource metadata
    conditions : [EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatusConditionsItems0], default is Undefined, optional
        All CRS managed by ACK have a common `Status.Conditions` member that contains a collection of `ackv1alpha1.Condition` objects that describe the various terminal states of the CR and its backend AWS service API resource
    createdAt : str, default is Undefined, optional
        The date and time, in JavaScript date format, when the pull through cache rule was created.
    """


    ackResourceMetadata?: EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatusAckResourceMetadata

    conditions?: [EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatusConditionsItems0]

    createdAt?: str


schema EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatusAckResourceMetadata:
    """
    All CRs managed by ACK have a common `Status.ACKResourceMetadata` member that is used to contain resource sync state, account ownership, constructed ARN for the resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN is the Amazon Resource Name for the resource. This is a globally-unique identifier and is set only by the ACK service controller once the controller has orchestrated the creation of the resource OR when it has verified that an "adopted" resource (a resource where the ARN annotation was set by the Kubernetes user on the CR) exists and matches the supplied CR's Spec field values. TODO(vijat@): Find a better strategy for resources that do not have ARN in CreateOutputResponse https://github.com/aws/aws-controllers-k8s/issues/270
    ownerAccountID : str, default is Undefined, required
        OwnerAccountID is the AWS Account ID of the account that owns the backend AWS service API resource.
    region : str, default is Undefined, required
        Region is the AWS region in which the resource exists or will exist.
    """


    arn?: str

    ownerAccountID: str

    region: str


schema EcrServicesK8sAwsV1alpha1PullThroughCacheRuleStatusConditionsItems0:
    """
    Condition is the common struct used by all CRDs managed by ACK service controllers to indicate terminal states  of the CR and its backend AWS service API resource

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type is the type of the Condition
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


