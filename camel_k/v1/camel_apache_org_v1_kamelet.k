"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Kamelet:
    """
    Kamelet is the Schema for the kamelets API.

    Attributes
    ----------
    apiVersion : str, default is "camel.apache.org/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Kamelet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CamelApacheOrgV1KameletSpec, default is Undefined, optional
        spec
    status : CamelApacheOrgV1KameletStatus, default is Undefined, optional
        status
    """


    apiVersion: "camel.apache.org/v1" = "camel.apache.org/v1"

    kind: "Kamelet" = "Kamelet"

    metadata?: v1.ObjectMeta

    spec?: CamelApacheOrgV1KameletSpec

    status?: CamelApacheOrgV1KameletStatus


schema CamelApacheOrgV1KameletSpec:
    """
    the desired specification

    Attributes
    ----------
    dataTypes : {str:CamelApacheOrgV1KameletSpecDataTypesAnon}, default is Undefined, optional
        data specification types for the events consumed/produced by the Kamelet
    definition : CamelApacheOrgV1KameletSpecDefinition, default is Undefined, optional
        definition
    dependencies : [str], default is Undefined, optional
        Camel dependencies needed by the Kamelet
    sources : [CamelApacheOrgV1KameletSpecSourcesItems0], default is Undefined, optional
        sources in any Camel DSL supported
    template : any, default is Undefined, optional
        the main source in YAML DSL
    types : {str:CamelApacheOrgV1KameletSpecTypesAnon}, default is Undefined, optional
        data specification types for the events consumed/produced by the Kamelet Deprecated: In favor of using DataTypes
    """


    dataTypes?: {str:CamelApacheOrgV1KameletSpecDataTypesAnon}

    definition?: CamelApacheOrgV1KameletSpecDefinition

    dependencies?: [str]

    sources?: [CamelApacheOrgV1KameletSpecSourcesItems0]

    template?: any

    types?: {str:CamelApacheOrgV1KameletSpecTypesAnon}


schema CamelApacheOrgV1KameletSpecDataTypesAnon:
    """
    DataTypesSpec represents the specification for a set of data types.

    Attributes
    ----------
    default : str, default is Undefined, optional
        the default data type for this Kamelet
    headers : {str:CamelApacheOrgV1KameletSpecDataTypesAnonHeadersAnon}, default is Undefined, optional
        one to many header specifications
    types : {str:CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnon}, default is Undefined, optional
        one to many data type specifications
    """


    default?: str

    headers?: {str:CamelApacheOrgV1KameletSpecDataTypesAnonHeadersAnon}

    types?: {str:CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnon}


schema CamelApacheOrgV1KameletSpecDataTypesAnonHeadersAnon:
    """
    HeaderSpec represents the specification for a header used in the Kamelet.

    Attributes
    ----------
    default : str, default is Undefined, optional
        default
    description : str, default is Undefined, optional
        description
    required : bool, default is Undefined, optional
        required
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    """


    default?: str

    description?: str

    required?: bool

    title?: str

    $type?: str


schema CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnon:
    """
    DataTypeSpec represents the specification for a data type.

    Attributes
    ----------
    dependencies : [str], default is Undefined, optional
        the list of Camel or Maven dependencies required by the data type
    description : str, default is Undefined, optional
        optional description
    format : str, default is Undefined, optional
        the data type format name
    headers : {str:CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonHeadersAnon}, default is Undefined, optional
        one to many header specifications
    mediaType : str, default is Undefined, optional
        media type as expected for HTTP media types (ie, application/json)
    $schema : CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchema, default is Undefined, optional
        schema
    scheme : str, default is Undefined, optional
        the data type component scheme
    """


    dependencies?: [str]

    description?: str

    format?: str

    headers?: {str:CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonHeadersAnon}

    mediaType?: str

    $schema?: CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchema

    scheme?: str


schema CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonHeadersAnon:
    """
    HeaderSpec represents the specification for a header used in the Kamelet.

    Attributes
    ----------
    default : str, default is Undefined, optional
        default
    description : str, default is Undefined, optional
        description
    required : bool, default is Undefined, optional
        required
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    """


    default?: str

    description?: str

    required?: bool

    title?: str

    $type?: str


schema CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchema:
    """
    the expected schema for the data type

    Attributes
    ----------
    $schema : str, default is Undefined, optional
        JSONSchemaURL represents a schema url.
    description : str, default is Undefined, optional
        description
    example : any, default is Undefined, optional
        JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
    externalDocs : CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchemaExternalDocs, default is Undefined, optional
        external docs
    id : str, default is Undefined, optional
        id
    properties : {str:CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchemaPropertiesAnon}, default is Undefined, optional
        properties
    required : [str], default is Undefined, optional
        required
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    """


    $schema?: str

    description?: str

    example?: any

    externalDocs?: CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchemaExternalDocs

    id?: str

    properties?: {str:CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchemaPropertiesAnon}

    required?: [str]

    title?: str

    $type?: str


schema CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchemaExternalDocs:
    """
    ExternalDocumentation allows referencing an external resource for extended documentation.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    url : str, default is Undefined, optional
        url
    """


    description?: str

    url?: str


schema CamelApacheOrgV1KameletSpecDataTypesAnonTypesAnonSchemaPropertiesAnon:
    """
    camel apache org v1 kamelet spec data types anon types anon schema properties anon

    Attributes
    ----------
    default : any, default is Undefined, optional
        default is a default value for undefined object fields.
    deprecated : bool, default is Undefined, optional
        deprecated
    description : str, default is Undefined, optional
        description
    enum : [any], default is Undefined, optional
        enum
    example : any, default is Undefined, optional
        JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
    exclusiveMaximum : bool, default is Undefined, optional
        exclusive maximum
    exclusiveMinimum : bool, default is Undefined, optional
        exclusive minimum
    format : str, default is Undefined, optional
        format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: 
         - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF" following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,255)" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
    id : str, default is Undefined, optional
        id
    maxItems : int, default is Undefined, optional
        max items
    maxLength : int, default is Undefined, optional
        max length
    maxProperties : int, default is Undefined, optional
        max properties
    maximum : str, default is Undefined, optional
        A Number represents a JSON number literal.
    minItems : int, default is Undefined, optional
        min items
    minLength : int, default is Undefined, optional
        min length
    minProperties : int, default is Undefined, optional
        min properties
    minimum : str, default is Undefined, optional
        A Number represents a JSON number literal.
    multipleOf : str, default is Undefined, optional
        A Number represents a JSON number literal.
    nullable : bool, default is Undefined, optional
        nullable
    pattern : str, default is Undefined, optional
        pattern
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    uniqueItems : bool, default is Undefined, optional
        unique items
    x_descriptors : [str], default is Undefined, optional
        XDescriptors is a list of extended properties that trigger a custom behavior in external systems
    """


    default?: any

    deprecated?: bool

    description?: str

    enum?: [any]

    example?: any

    exclusiveMaximum?: bool

    exclusiveMinimum?: bool

    format?: str

    id?: str

    maxItems?: int

    maxLength?: int

    maxProperties?: int

    maximum?: str

    minItems?: int

    minLength?: int

    minProperties?: int

    minimum?: str

    multipleOf?: str

    nullable?: bool

    pattern?: str

    title?: str

    $type?: str

    uniqueItems?: bool

    x_descriptors?: [str]


schema CamelApacheOrgV1KameletSpecDefinition:
    """
    defines the formal configuration of the Kamelet

    Attributes
    ----------
    $schema : str, default is Undefined, optional
        JSONSchemaURL represents a schema url.
    description : str, default is Undefined, optional
        description
    example : any, default is Undefined, optional
        JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
    externalDocs : CamelApacheOrgV1KameletSpecDefinitionExternalDocs, default is Undefined, optional
        external docs
    id : str, default is Undefined, optional
        id
    properties : {str:CamelApacheOrgV1KameletSpecDefinitionPropertiesAnon}, default is Undefined, optional
        properties
    required : [str], default is Undefined, optional
        required
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    """


    $schema?: str

    description?: str

    example?: any

    externalDocs?: CamelApacheOrgV1KameletSpecDefinitionExternalDocs

    id?: str

    properties?: {str:CamelApacheOrgV1KameletSpecDefinitionPropertiesAnon}

    required?: [str]

    title?: str

    $type?: str


schema CamelApacheOrgV1KameletSpecDefinitionExternalDocs:
    """
    ExternalDocumentation allows referencing an external resource for extended documentation.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    url : str, default is Undefined, optional
        url
    """


    description?: str

    url?: str


schema CamelApacheOrgV1KameletSpecDefinitionPropertiesAnon:
    """
    camel apache org v1 kamelet spec definition properties anon

    Attributes
    ----------
    default : any, default is Undefined, optional
        default is a default value for undefined object fields.
    deprecated : bool, default is Undefined, optional
        deprecated
    description : str, default is Undefined, optional
        description
    enum : [any], default is Undefined, optional
        enum
    example : any, default is Undefined, optional
        JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
    exclusiveMaximum : bool, default is Undefined, optional
        exclusive maximum
    exclusiveMinimum : bool, default is Undefined, optional
        exclusive minimum
    format : str, default is Undefined, optional
        format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: 
         - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF" following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,255)" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
    id : str, default is Undefined, optional
        id
    maxItems : int, default is Undefined, optional
        max items
    maxLength : int, default is Undefined, optional
        max length
    maxProperties : int, default is Undefined, optional
        max properties
    maximum : str, default is Undefined, optional
        A Number represents a JSON number literal.
    minItems : int, default is Undefined, optional
        min items
    minLength : int, default is Undefined, optional
        min length
    minProperties : int, default is Undefined, optional
        min properties
    minimum : str, default is Undefined, optional
        A Number represents a JSON number literal.
    multipleOf : str, default is Undefined, optional
        A Number represents a JSON number literal.
    nullable : bool, default is Undefined, optional
        nullable
    pattern : str, default is Undefined, optional
        pattern
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    uniqueItems : bool, default is Undefined, optional
        unique items
    x_descriptors : [str], default is Undefined, optional
        XDescriptors is a list of extended properties that trigger a custom behavior in external systems
    """


    default?: any

    deprecated?: bool

    description?: str

    enum?: [any]

    example?: any

    exclusiveMaximum?: bool

    exclusiveMinimum?: bool

    format?: str

    id?: str

    maxItems?: int

    maxLength?: int

    maxProperties?: int

    maximum?: str

    minItems?: int

    minLength?: int

    minProperties?: int

    minimum?: str

    multipleOf?: str

    nullable?: bool

    pattern?: str

    title?: str

    $type?: str

    uniqueItems?: bool

    x_descriptors?: [str]


schema CamelApacheOrgV1KameletSpecSourcesItems0:
    """
    SourceSpec defines the configuration for one or more routes to be executed in a certain Camel DSL language.

    Attributes
    ----------
    compression : bool, default is Undefined, optional
        if the content is compressed (base64 encrypted)
    content : str, default is Undefined, optional
        the source code (plain text)
    contentKey : str, default is Undefined, optional
        the confimap key holding the source content
    contentRef : str, default is Undefined, optional
        the confimap reference holding the source content
    contentType : str, default is Undefined, optional
        the content type (tipically text or binary)
    from_kamelet : bool, default is Undefined, optional
        True if the spec is generated from a Kamelet
    interceptors : [str], default is Undefined, optional
        Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
    language : str, default is Undefined, optional
        specify which is the language (Camel DSL) used to interpret this source code
    loader : str, default is Undefined, optional
        Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
    name : str, default is Undefined, optional
        the name of the specification
    path : str, default is Undefined, optional
        the path where the file is stored
    property_names : [str], default is Undefined, optional
        List of property names defined in the source (e.g. if type is "template")
    rawContent : str, default is Undefined, optional
        the source code (binary)
    $type : str, default is Undefined, optional
        Type defines the kind of source described by this object
    """


    compression?: bool

    content?: str

    contentKey?: str

    contentRef?: str

    contentType?: str

    from_kamelet?: bool

    interceptors?: [str]

    language?: str

    loader?: str

    name?: str

    path?: str

    property_names?: [str]

    rawContent?: str

    $type?: str


schema CamelApacheOrgV1KameletSpecTypesAnon:
    """
    EventTypeSpec represents a specification for an event type. Deprecated: In favor of using DataTypeSpec.

    Attributes
    ----------
    mediaType : str, default is Undefined, optional
        media type as expected for HTTP media types (ie, application/json)
    $schema : CamelApacheOrgV1KameletSpecTypesAnonSchema, default is Undefined, optional
        schema
    """


    mediaType?: str

    $schema?: CamelApacheOrgV1KameletSpecTypesAnonSchema


schema CamelApacheOrgV1KameletSpecTypesAnonSchema:
    """
    the expected schema for the event

    Attributes
    ----------
    $schema : str, default is Undefined, optional
        JSONSchemaURL represents a schema url.
    description : str, default is Undefined, optional
        description
    example : any, default is Undefined, optional
        JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
    externalDocs : CamelApacheOrgV1KameletSpecTypesAnonSchemaExternalDocs, default is Undefined, optional
        external docs
    id : str, default is Undefined, optional
        id
    properties : {str:CamelApacheOrgV1KameletSpecTypesAnonSchemaPropertiesAnon}, default is Undefined, optional
        properties
    required : [str], default is Undefined, optional
        required
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    """


    $schema?: str

    description?: str

    example?: any

    externalDocs?: CamelApacheOrgV1KameletSpecTypesAnonSchemaExternalDocs

    id?: str

    properties?: {str:CamelApacheOrgV1KameletSpecTypesAnonSchemaPropertiesAnon}

    required?: [str]

    title?: str

    $type?: str


schema CamelApacheOrgV1KameletSpecTypesAnonSchemaExternalDocs:
    """
    ExternalDocumentation allows referencing an external resource for extended documentation.

    Attributes
    ----------
    description : str, default is Undefined, optional
        description
    url : str, default is Undefined, optional
        url
    """


    description?: str

    url?: str


schema CamelApacheOrgV1KameletSpecTypesAnonSchemaPropertiesAnon:
    """
    camel apache org v1 kamelet spec types anon schema properties anon

    Attributes
    ----------
    default : any, default is Undefined, optional
        default is a default value for undefined object fields.
    deprecated : bool, default is Undefined, optional
        deprecated
    description : str, default is Undefined, optional
        description
    enum : [any], default is Undefined, optional
        enum
    example : any, default is Undefined, optional
        JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
    exclusiveMaximum : bool, default is Undefined, optional
        exclusive maximum
    exclusiveMinimum : bool, default is Undefined, optional
        exclusive minimum
    format : str, default is Undefined, optional
        format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated: 
         - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF" following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,255)" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
    id : str, default is Undefined, optional
        id
    maxItems : int, default is Undefined, optional
        max items
    maxLength : int, default is Undefined, optional
        max length
    maxProperties : int, default is Undefined, optional
        max properties
    maximum : str, default is Undefined, optional
        A Number represents a JSON number literal.
    minItems : int, default is Undefined, optional
        min items
    minLength : int, default is Undefined, optional
        min length
    minProperties : int, default is Undefined, optional
        min properties
    minimum : str, default is Undefined, optional
        A Number represents a JSON number literal.
    multipleOf : str, default is Undefined, optional
        A Number represents a JSON number literal.
    nullable : bool, default is Undefined, optional
        nullable
    pattern : str, default is Undefined, optional
        pattern
    title : str, default is Undefined, optional
        title
    $type : str, default is Undefined, optional
        type
    uniqueItems : bool, default is Undefined, optional
        unique items
    x_descriptors : [str], default is Undefined, optional
        XDescriptors is a list of extended properties that trigger a custom behavior in external systems
    """


    default?: any

    deprecated?: bool

    description?: str

    enum?: [any]

    example?: any

    exclusiveMaximum?: bool

    exclusiveMinimum?: bool

    format?: str

    id?: str

    maxItems?: int

    maxLength?: int

    maxProperties?: int

    maximum?: str

    minItems?: int

    minLength?: int

    minProperties?: int

    minimum?: str

    multipleOf?: str

    nullable?: bool

    pattern?: str

    title?: str

    $type?: str

    uniqueItems?: bool

    x_descriptors?: [str]


schema CamelApacheOrgV1KameletStatus:
    """
    the actual status of the resource

    Attributes
    ----------
    conditions : [CamelApacheOrgV1KameletStatusConditionsItems0], default is Undefined, optional
        Conditions --
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the most recent generation observed for this Kamelet.
    phase : str, default is Undefined, optional
        Phase --
    properties : [CamelApacheOrgV1KameletStatusPropertiesItems0], default is Undefined, optional
        Properties --
    """


    conditions?: [CamelApacheOrgV1KameletStatusConditionsItems0]

    observedGeneration?: int

    phase?: str

    properties?: [CamelApacheOrgV1KameletStatusPropertiesItems0]


schema CamelApacheOrgV1KameletStatusConditionsItems0:
    """
    KameletCondition describes the state of a resource at a certain point.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    lastUpdateTime : str, default is Undefined, optional
        The last time this condition was updated.
    message : str, default is Undefined, optional
        A human-readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of kamelet condition.
    """


    lastTransitionTime?: str

    lastUpdateTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema CamelApacheOrgV1KameletStatusPropertiesItems0:
    """
    KameletProperty specify the behavior of a property in a Kamelet.

    Attributes
    ----------
    default : str, default is Undefined, optional
        the default value of the property (if any)
    name : str, default is Undefined, optional
        the name of the property
    """


    default?: str

    name?: str


