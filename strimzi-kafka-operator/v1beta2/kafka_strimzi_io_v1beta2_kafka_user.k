"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema KafkaUser:
    """
    kafka strimzi io v1beta2 kafka user

    Attributes
    ----------
    apiVersion : str, default is "kafka.strimzi.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KafkaUser", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaStrimziIoV1beta2KafkaUserSpec, default is Undefined, optional
        spec
    status : KafkaStrimziIoV1beta2KafkaUserStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafka.strimzi.io/v1beta2" = "kafka.strimzi.io/v1beta2"

    kind: "KafkaUser" = "KafkaUser"

    metadata?: v1.ObjectMeta

    spec?: KafkaStrimziIoV1beta2KafkaUserSpec

    status?: KafkaStrimziIoV1beta2KafkaUserStatus


schema KafkaStrimziIoV1beta2KafkaUserSpec:
    """
    The specification of the user.

    Attributes
    ----------
    authentication : KafkaStrimziIoV1beta2KafkaUserSpecAuthentication, default is Undefined, optional
        authentication
    authorization : KafkaStrimziIoV1beta2KafkaUserSpecAuthorization, default is Undefined, optional
        authorization
    quotas : KafkaStrimziIoV1beta2KafkaUserSpecQuotas, default is Undefined, optional
        quotas
    template : KafkaStrimziIoV1beta2KafkaUserSpecTemplate, default is Undefined, optional
        template
    """


    authentication?: KafkaStrimziIoV1beta2KafkaUserSpecAuthentication

    authorization?: KafkaStrimziIoV1beta2KafkaUserSpecAuthorization

    quotas?: KafkaStrimziIoV1beta2KafkaUserSpecQuotas

    template?: KafkaStrimziIoV1beta2KafkaUserSpecTemplate


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthentication:
    """
    Authentication mechanism enabled for this Kafka user. The supported authentication mechanisms are `scram-sha-512`, `tls`, and `tls-external`. 

    * `scram-sha-512` generates a secret with SASL SCRAM-SHA-512 credentials.
    * `tls` generates a secret with user certificate for mutual TLS authentication.
    * `tls-external` does not generate a user certificate.   But prepares the user for using mutual TLS authentication using a user certificate generated outside the User Operator.
      ACLs and quotas set for this user are configured in the `CN=<username>` format.

    Authentication is optional. If authentication is not configured, no credentials are generated. ACLs and quotas set for the user are configured in the `<username>` format suitable for SASL authentication.

    Attributes
    ----------
    password : KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPassword, default is Undefined, optional
        password
    $type : str, default is Undefined, required
        Authentication type.
    """


    password?: KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPassword

    $type: "tls" | "tls-external" | "scram-sha-512"


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPassword:
    """
    Specify the password for the user. If not set, a new password is generated by the User Operator.

    Attributes
    ----------
    valueFrom : KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPasswordValueFrom, default is Undefined, required
        value from
    """


    valueFrom: KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPasswordValueFrom


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPasswordValueFrom:
    """
    Secret from which the password should be read.

    Attributes
    ----------
    secretKeyRef : KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthenticationPasswordValueFromSecretKeyRef:
    """
    Selects a key of a Secret in the resource's namespace.

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    name : str, default is Undefined, optional
        name
    optional : bool, default is Undefined, optional
        optional
    """


    key?: str

    name?: str

    optional?: bool


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthorization:
    """
    Authorization rules for this Kafka user.

    Attributes
    ----------
    acls : [KafkaStrimziIoV1beta2KafkaUserSpecAuthorizationAclsItems0], default is Undefined, required
        List of ACL rules which should be applied to this user.
    $type : str, default is Undefined, required
        Authorization type. Currently the only supported type is `simple`. `simple` authorization type uses the Kafka Admin API for managing the ACL rules.
    """


    acls: [KafkaStrimziIoV1beta2KafkaUserSpecAuthorizationAclsItems0]

    $type: "simple"


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthorizationAclsItems0:
    """
    kafka strimzi io v1beta2 kafka user spec authorization acls items0

    Attributes
    ----------
    host : str, default is Undefined, optional
        The host from which the action described in the ACL rule is allowed or denied.
    operation : str, default is Undefined, optional
        Operation which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
    operations : [str], default is Undefined, optional
        List of operations which will be allowed or denied. Supported operations are: Read, Write, Create, Delete, Alter, Describe, ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite and All.
    resource : KafkaStrimziIoV1beta2KafkaUserSpecAuthorizationAclsItems0Resource, default is Undefined, required
        resource
    $type : str, default is Undefined, optional
        The type of the rule. Currently the only supported type is `allow`. ACL rules with type `allow` are used to allow user to execute the specified operations. Default value is `allow`.
    """


    host?: str

    operation?: "Read" | "Write" | "Create" | "Delete" | "Alter" | "Describe" | "ClusterAction" | "AlterConfigs" | "DescribeConfigs" | "IdempotentWrite" | "All"

    operations?: [str]

    resource: KafkaStrimziIoV1beta2KafkaUserSpecAuthorizationAclsItems0Resource

    $type?: "allow" | "deny"


schema KafkaStrimziIoV1beta2KafkaUserSpecAuthorizationAclsItems0Resource:
    """
    Indicates the resource for which given ACL rule applies.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of resource for which given ACL rule applies. Can be combined with `patternType` field to use prefix pattern.
    patternType : str, default is Undefined, optional
        Describes the pattern used in the resource field. The supported types are `literal` and `prefix`. With `literal` pattern type, the resource field will be used as a definition of a full name. With `prefix` pattern type, the resource name will be used only as a prefix. Default value is `literal`.
    $type : str, default is Undefined, required
        Resource type. The available resource types are `topic`, `group`, `cluster`, and `transactionalId`.
    """


    name?: str

    patternType?: "literal" | "prefix"

    $type: "topic" | "group" | "cluster" | "transactionalId"


schema KafkaStrimziIoV1beta2KafkaUserSpecQuotas:
    """
    Quotas on requests to control the broker resources used by clients. Network bandwidth and request rate quotas can be enforced.Kafka documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.

    Attributes
    ----------
    consumerByteRate : int, default is Undefined, optional
        A quota on the maximum bytes per-second that each client group can fetch from a broker before the clients in the group are throttled. Defined on a per-broker basis.
    controllerMutationRate : float, default is Undefined, optional
        A quota on the rate at which mutations are accepted for the create topics request, the create partitions request and the delete topics request. The rate is accumulated by the number of partitions created or deleted.
    producerByteRate : int, default is Undefined, optional
        A quota on the maximum bytes per-second that each client group can publish to a broker before the clients in the group are throttled. Defined on a per-broker basis.
    requestPercentage : int, default is Undefined, optional
        A quota on the maximum CPU utilization of each client group as a percentage of network and I/O threads.
    """


    consumerByteRate?: int

    controllerMutationRate?: float

    producerByteRate?: int

    requestPercentage?: int


    check:
        consumerByteRate >= 0
        controllerMutationRate >= 0
        producerByteRate >= 0
        requestPercentage >= 0


schema KafkaStrimziIoV1beta2KafkaUserSpecTemplate:
    """
    Template to specify how Kafka User `Secrets` are generated.

    Attributes
    ----------
    secret : KafkaStrimziIoV1beta2KafkaUserSpecTemplateSecret, default is Undefined, optional
        secret
    """


    secret?: KafkaStrimziIoV1beta2KafkaUserSpecTemplateSecret


schema KafkaStrimziIoV1beta2KafkaUserSpecTemplateSecret:
    """
    Template for KafkaUser resources. The template allows users to specify how the `Secret` with password or TLS certificates is generated.

    Attributes
    ----------
    metadata : KafkaStrimziIoV1beta2KafkaUserSpecTemplateSecretMetadata, default is Undefined, optional
        metadata
    """


    metadata?: KafkaStrimziIoV1beta2KafkaUserSpecTemplateSecretMetadata


schema KafkaStrimziIoV1beta2KafkaUserSpecTemplateSecretMetadata:
    """
    Metadata applied to the resource.

    Attributes
    ----------
    annotations : any, default is Undefined, optional
        Annotations added to the Kubernetes resource.
    labels : any, default is Undefined, optional
        Labels added to the Kubernetes resource.
    """


    annotations?: any

    labels?: any


schema KafkaStrimziIoV1beta2KafkaUserStatus:
    """
    The status of the Kafka User.

    Attributes
    ----------
    conditions : [KafkaStrimziIoV1beta2KafkaUserStatusConditionsItems0], default is Undefined, optional
        List of status conditions.
    observedGeneration : int, default is Undefined, optional
        The generation of the CRD that was last reconciled by the operator.
    secret : str, default is Undefined, optional
        The name of `Secret` where the credentials are stored.
    username : str, default is Undefined, optional
        Username.
    """


    conditions?: [KafkaStrimziIoV1beta2KafkaUserStatusConditionsItems0]

    observedGeneration?: int

    secret?: str

    username?: str


schema KafkaStrimziIoV1beta2KafkaUserStatusConditionsItems0:
    """
    kafka strimzi io v1beta2 kafka user status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
    message : str, default is Undefined, optional
        Human-readable message indicating details about the condition's last transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition (a single word in CamelCase).
    status : str, default is Undefined, optional
        The status of the condition, either True, False or Unknown.
    $type : str, default is Undefined, optional
        The unique identifier of a condition, used to distinguish between other conditions in the resource.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


