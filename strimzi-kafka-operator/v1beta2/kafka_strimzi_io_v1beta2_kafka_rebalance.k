"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema KafkaRebalance:
    """
    kafka strimzi io v1beta2 kafka rebalance

    Attributes
    ----------
    apiVersion : str, default is "kafka.strimzi.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KafkaRebalance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaStrimziIoV1beta2KafkaRebalanceSpec, default is Undefined, optional
        spec
    status : KafkaStrimziIoV1beta2KafkaRebalanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafka.strimzi.io/v1beta2" = "kafka.strimzi.io/v1beta2"

    kind: "KafkaRebalance" = "KafkaRebalance"

    metadata?: v1.ObjectMeta

    spec?: KafkaStrimziIoV1beta2KafkaRebalanceSpec

    status?: KafkaStrimziIoV1beta2KafkaRebalanceStatus


schema KafkaStrimziIoV1beta2KafkaRebalanceSpec:
    """
    The specification of the Kafka rebalance.

    Attributes
    ----------
    brokers : [int], default is Undefined, optional
        The list of newly added brokers in case of scaling up or the ones to be removed in case of scaling down to use for rebalancing. This list can be used only with rebalancing mode `add-brokers` and `removed-brokers`. It is ignored with `full` mode.
    concurrentIntraBrokerPartitionMovements : int, default is Undefined, optional
        The upper bound of ongoing partition replica movements between disks within each broker. Default is 2.
    concurrentLeaderMovements : int, default is Undefined, optional
        The upper bound of ongoing partition leadership movements. Default is 1000.
    concurrentPartitionMovementsPerBroker : int, default is Undefined, optional
        The upper bound of ongoing partition replica movements going into/out of each broker. Default is 5.
    excludedTopics : str, default is Undefined, optional
        A regular expression where any matching topics will be excluded from the calculation of optimization proposals. This expression will be parsed by the java.util.regex.Pattern class; for more information on the supported format consult the documentation for that class.
    goals : [str], default is Undefined, optional
        A list of goals, ordered by decreasing priority, to use for generating and executing the rebalance proposal. The supported goals are available at https://github.com/linkedin/cruise-control#goals. If an empty goals list is provided, the goals declared in the default.goals Cruise Control configuration parameter are used.
    mode : str, default is Undefined, optional
        Mode to run the rebalancing. The supported modes are `full`, `add-brokers`, `remove-brokers`.
        If not specified, the `full` mode is used by default. 

        * `full` mode runs the rebalancing across all the brokers in the cluster.
        * `add-brokers` mode can be used after scaling up the cluster to move some replicas to the newly added brokers.
        * `remove-brokers` mode can be used before scaling down the cluster to move replicas out of the brokers to be removed.

    rebalanceDisk : bool, default is Undefined, optional
        Enables intra-broker disk balancing, which balances disk space utilization between disks on the same broker. Only applies to Kafka deployments that use JBOD storage with multiple disks. When enabled, inter-broker balancing is disabled. Default is false.
    replicaMovementStrategies : [str], default is Undefined, optional
        A list of strategy class names used to determine the execution order for the replica movements in the generated optimization proposal. By default BaseReplicaMovementStrategy is used, which will execute the replica movements in the order that they were generated.
    replicationThrottle : int, default is Undefined, optional
        The upper bound, in bytes per second, on the bandwidth used to move replicas. There is no limit by default.
    skipHardGoalCheck : bool, default is Undefined, optional
        Whether to allow the hard goals specified in the Kafka CR to be skipped in optimization proposal generation. This can be useful when some of those hard goals are preventing a balance solution being found. Default is false.
    """


    brokers?: [int]

    concurrentIntraBrokerPartitionMovements?: int

    concurrentLeaderMovements?: int

    concurrentPartitionMovementsPerBroker?: int

    excludedTopics?: str

    goals?: [str]

    mode?: "full" | "add-brokers" | "remove-brokers"

    rebalanceDisk?: bool

    replicaMovementStrategies?: [str]

    replicationThrottle?: int

    skipHardGoalCheck?: bool


    check:
        concurrentIntraBrokerPartitionMovements >= 0
        concurrentLeaderMovements >= 0
        concurrentPartitionMovementsPerBroker >= 0
        replicationThrottle >= 0


schema KafkaStrimziIoV1beta2KafkaRebalanceStatus:
    """
    The status of the Kafka rebalance.

    Attributes
    ----------
    conditions : [KafkaStrimziIoV1beta2KafkaRebalanceStatusConditionsItems0], default is Undefined, optional
        List of status conditions.
    observedGeneration : int, default is Undefined, optional
        The generation of the CRD that was last reconciled by the operator.
    optimizationResult : any, default is Undefined, optional
        A JSON object describing the optimization result.
    sessionId : str, default is Undefined, optional
        The session identifier for requests to Cruise Control pertaining to this KafkaRebalance resource. This is used by the Kafka Rebalance operator to track the status of ongoing rebalancing operations.
    """


    conditions?: [KafkaStrimziIoV1beta2KafkaRebalanceStatusConditionsItems0]

    observedGeneration?: int

    optimizationResult?: any

    sessionId?: str


schema KafkaStrimziIoV1beta2KafkaRebalanceStatusConditionsItems0:
    """
    kafka strimzi io v1beta2 kafka rebalance status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
    message : str, default is Undefined, optional
        Human-readable message indicating details about the condition's last transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition (a single word in CamelCase).
    status : str, default is Undefined, optional
        The status of the condition, either True, False or Unknown.
    $type : str, default is Undefined, optional
        The unique identifier of a condition, used to distinguish between other conditions in the resource.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


