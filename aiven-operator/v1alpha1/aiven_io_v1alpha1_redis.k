"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Redis:
    """
    Redis is the Schema for the redis API

    Attributes
    ----------
    apiVersion : str, default is "aiven.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Redis", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AivenIoV1alpha1RedisSpec, default is Undefined, optional
        spec
    status : AivenIoV1alpha1RedisStatus, default is Undefined, optional
        status
    """


    apiVersion: "aiven.io/v1alpha1" = "aiven.io/v1alpha1"

    kind: "Redis" = "Redis"

    metadata?: v1.ObjectMeta

    spec?: AivenIoV1alpha1RedisSpec

    status?: AivenIoV1alpha1RedisStatus


schema AivenIoV1alpha1RedisSpec:
    """
    RedisSpec defines the desired state of Redis

    Attributes
    ----------
    authSecretRef : AivenIoV1alpha1RedisSpecAuthSecretRef, default is Undefined, optional
        auth secret ref
    cloudName : str, default is Undefined, optional
        Cloud the service runs in.
    connInfoSecretTarget : AivenIoV1alpha1RedisSpecConnInfoSecretTarget, default is Undefined, optional
        conn info secret target
    disk_space : str, default is Undefined, optional
        The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing.
    maintenanceWindowDow : str, default is Undefined, optional
        Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
    maintenanceWindowTime : str, default is Undefined, optional
        Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
    plan : str, default is Undefined, required
        Subscription plan.
    project : str, default is Undefined, required
        Target project.
    projectVPCRef : AivenIoV1alpha1RedisSpecProjectVPCRef, default is Undefined, optional
        project v p c ref
    projectVpcId : str, default is Undefined, optional
        Identifier of the VPC the service should be in, if any.
    serviceIntegrations : [AivenIoV1alpha1RedisSpecServiceIntegrationsItems0], default is Undefined, optional
        Service integrations to specify when creating a service. Not applied after initial service creation
    tags : {str:str}, default is Undefined, optional
        Tags are key-value pairs that allow you to categorize services.
    terminationProtection : bool, default is Undefined, optional
        Prevent service from being deleted. It is recommended to have this enabled for all services.
    userConfig : AivenIoV1alpha1RedisSpecUserConfig, default is Undefined, optional
        user config
    """


    authSecretRef?: AivenIoV1alpha1RedisSpecAuthSecretRef

    cloudName?: str

    connInfoSecretTarget?: AivenIoV1alpha1RedisSpecConnInfoSecretTarget

    disk_space?: str

    maintenanceWindowDow?: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday"

    maintenanceWindowTime?: str

    plan: str

    project: str

    projectVPCRef?: AivenIoV1alpha1RedisSpecProjectVPCRef

    projectVpcId?: str

    serviceIntegrations?: [AivenIoV1alpha1RedisSpecServiceIntegrationsItems0]

    tags?: {str:str}

    terminationProtection?: bool

    userConfig?: AivenIoV1alpha1RedisSpecUserConfig


    check:
        len(cloudName) <= 256
        len(maintenanceWindowTime) <= 8
        len(plan) <= 128
        len(project) <= 63
        len(projectVpcId) <= 36
        len(serviceIntegrations) <= 1


schema AivenIoV1alpha1RedisSpecAuthSecretRef:
    """
    Authentication reference to Aiven token in a secret

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        name
    """


    key: str

    name: str


    check:
        len(key) >= 1
        len(name) >= 1


schema AivenIoV1alpha1RedisSpecConnInfoSecretTarget:
    """
    Information regarding secret creation. 
     Exposed keys: `REDIS_HOST`, `REDIS_PORT`, `REDIS_USER`, `REDIS_PASSWORD`

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations added to the secret
    labels : {str:str}, default is Undefined, optional
        Labels added to the secret
    name : str, default is Undefined, required
        Name of the secret resource to be created. By default, is equal to the resource name
    prefix : str, default is Undefined, optional
        Prefix for the secret's keys. Added "as is" without any transformations. By default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.
    """


    annotations?: {str:str}

    labels?: {str:str}

    name: str

    prefix?: str


schema AivenIoV1alpha1RedisSpecProjectVPCRef:
    """
    ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    name: str

    namespace?: str


    check:
        len(name) >= 1
        len(namespace) >= 1


schema AivenIoV1alpha1RedisSpecServiceIntegrationsItems0:
    """
    Service integrations to specify when creating a service. Not applied after initial service creation

    Attributes
    ----------
    integrationType : str, default is Undefined, required
        integration type
    sourceServiceName : str, default is Undefined, required
        source service name
    """


    integrationType: "read_replica"

    sourceServiceName: str


    check:
        len(sourceServiceName) <= 64
        len(sourceServiceName) >= 1


schema AivenIoV1alpha1RedisSpecUserConfig:
    """
    Redis specific user configuration options

    Attributes
    ----------
    additional_backup_regions : [str], default is Undefined, optional
        Additional Cloud Regions for Backup Replication
    ip_filter : [AivenIoV1alpha1RedisSpecUserConfigIPFilterItems0], default is Undefined, optional
        Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
    migration : AivenIoV1alpha1RedisSpecUserConfigMigration, default is Undefined, optional
        migration
    private_access : AivenIoV1alpha1RedisSpecUserConfigPrivateAccess, default is Undefined, optional
        private access
    privatelink_access : AivenIoV1alpha1RedisSpecUserConfigPrivatelinkAccess, default is Undefined, optional
        privatelink access
    project_to_fork_from : str, default is Undefined, optional
        Name of another project to fork a service from. This has effect only when a new service is being created.
    public_access : AivenIoV1alpha1RedisSpecUserConfigPublicAccess, default is Undefined, optional
        public access
    recovery_basebackup_name : str, default is Undefined, optional
        Name of the basebackup to restore in forked service
    redis_acl_channels_default : str, default is Undefined, optional
        Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
    redis_io_threads : int, default is Undefined, optional
        Redis IO thread count
    redis_lfu_decay_time : int, default is Undefined, optional
        LFU maxmemory-policy counter decay time in minutes
    redis_lfu_log_factor : int, default is Undefined, optional
        Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies
    redis_maxmemory_policy : str, default is Undefined, optional
        Redis maxmemory-policy
    redis_notify_keyspace_events : str, default is Undefined, optional
        Set notify-keyspace-events option
    redis_number_of_databases : int, default is Undefined, optional
        Set number of redis databases. Changing this will cause a restart of redis service.
    redis_persistence : str, default is Undefined, optional
        When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.
    redis_pubsub_client_output_buffer_limit : int, default is Undefined, optional
        Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
    redis_ssl : bool, default is Undefined, optional
        Require SSL to access Redis
    redis_timeout : int, default is Undefined, optional
        Redis idle connection timeout in seconds
    service_to_fork_from : str, default is Undefined, optional
        Name of another service to fork from. This has effect only when a new service is being created.
    static_ips : bool, default is Undefined, optional
        Use static public IP addresses
    """


    additional_backup_regions?: [str]

    ip_filter?: [AivenIoV1alpha1RedisSpecUserConfigIPFilterItems0]

    migration?: AivenIoV1alpha1RedisSpecUserConfigMigration

    private_access?: AivenIoV1alpha1RedisSpecUserConfigPrivateAccess

    privatelink_access?: AivenIoV1alpha1RedisSpecUserConfigPrivatelinkAccess

    project_to_fork_from?: str

    public_access?: AivenIoV1alpha1RedisSpecUserConfigPublicAccess

    recovery_basebackup_name?: str

    redis_acl_channels_default?: "allchannels" | "resetchannels"

    redis_io_threads?: int

    redis_lfu_decay_time?: int

    redis_lfu_log_factor?: int

    redis_maxmemory_policy?: "noeviction" | "allkeys-lru" | "volatile-lru" | "allkeys-random" | "volatile-random" | "volatile-ttl" | "volatile-lfu" | "allkeys-lfu"

    redis_notify_keyspace_events?: str

    redis_number_of_databases?: int

    redis_persistence?: "off" | "rdb"

    redis_pubsub_client_output_buffer_limit?: int

    redis_ssl?: bool

    redis_timeout?: int

    service_to_fork_from?: str

    static_ips?: bool


    check:
        len(additional_backup_regions) <= 1
        len(ip_filter) <= 1024
        len(project_to_fork_from) <= 63
        len(recovery_basebackup_name) <= 128
        regex.match(str(recovery_basebackup_name), r"^[a-zA-Z0-9-_:.]+$") if recovery_basebackup_name
        redis_io_threads <= 32
        redis_io_threads >= 1
        redis_lfu_decay_time <= 120
        redis_lfu_decay_time >= 1
        redis_lfu_log_factor <= 100
        redis_lfu_log_factor >= 0
        len(redis_notify_keyspace_events) <= 32
        regex.match(str(redis_notify_keyspace_events), r"^[KEg\$lshzxeA]*$") if redis_notify_keyspace_events
        redis_number_of_databases <= 128
        redis_number_of_databases >= 1
        redis_pubsub_client_output_buffer_limit <= 512
        redis_pubsub_client_output_buffer_limit >= 32
        redis_timeout <= 3.1536e+07
        redis_timeout >= 0
        len(service_to_fork_from) <= 64


schema AivenIoV1alpha1RedisSpecUserConfigIPFilterItems0:
    """
    CIDR address block, either as a string, or in a dict with an optional description field

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description for IP filter list entry
    network : str, default is Undefined, required
        CIDR address block
    """


    description?: str

    network: str


    check:
        len(description) <= 1024
        len(network) <= 43


schema AivenIoV1alpha1RedisSpecUserConfigMigration:
    """
    Migrate data from existing server

    Attributes
    ----------
    dbname : str, default is Undefined, optional
        Database name for bootstrapping the initial connection
    host : str, default is Undefined, required
        Hostname or IP address of the server where to migrate data from
    ignore_dbs : str, default is Undefined, optional
        Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment)
    method : str, default is Undefined, optional
        The migration method to be used (currently supported only by Redis, MySQL and PostgreSQL service types)
    password : str, default is Undefined, optional
        Password for authentication with the server where to migrate data from
    port : int, default is Undefined, required
        Port number of the server where to migrate data from
    ssl : bool, default is Undefined, optional
        The server where to migrate data from is secured with SSL
    username : str, default is Undefined, optional
        User name for authentication with the server where to migrate data from
    """


    dbname?: str

    host: str

    ignore_dbs?: str

    method?: "dump" | "replication"

    password?: str

    port: int

    ssl?: bool

    username?: str


    check:
        len(dbname) <= 63
        len(host) <= 255
        len(ignore_dbs) <= 2048
        len(password) <= 256
        port <= 65535
        port >= 1
        len(username) <= 256


schema AivenIoV1alpha1RedisSpecUserConfigPrivateAccess:
    """
    Allow access to selected service ports from private networks

    Attributes
    ----------
    prometheus : bool, default is Undefined, optional
        Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations
    redis : bool, default is Undefined, optional
        Allow clients to connect to redis with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations
    """


    prometheus?: bool

    redis?: bool


schema AivenIoV1alpha1RedisSpecUserConfigPrivatelinkAccess:
    """
    Allow access to selected service components through Privatelink

    Attributes
    ----------
    prometheus : bool, default is Undefined, optional
        Enable prometheus
    redis : bool, default is Undefined, optional
        Enable redis
    """


    prometheus?: bool

    redis?: bool


schema AivenIoV1alpha1RedisSpecUserConfigPublicAccess:
    """
    Allow access to selected service ports from the public Internet

    Attributes
    ----------
    prometheus : bool, default is Undefined, optional
        Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network
    redis : bool, default is Undefined, optional
        Allow clients to connect to redis from the public internet for service nodes that are in a project VPC or another type of private network
    """


    prometheus?: bool

    redis?: bool


schema AivenIoV1alpha1RedisStatus:
    """
    ServiceStatus defines the observed state of service

    Attributes
    ----------
    conditions : [AivenIoV1alpha1RedisStatusConditionsItems0], default is Undefined, required
        Conditions represent the latest available observations of a service state
    state : str, default is Undefined, required
        Service state
    """


    conditions: [AivenIoV1alpha1RedisStatusConditionsItems0]

    state: str


schema AivenIoV1alpha1RedisStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


