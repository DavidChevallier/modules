"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema MySQL:
    """
    MySQL is the Schema for the mysqls API

    Attributes
    ----------
    apiVersion : str, default is "aiven.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MySQL", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AivenIoV1alpha1MySQLSpec, default is Undefined, optional
        spec
    status : AivenIoV1alpha1MySQLStatus, default is Undefined, optional
        status
    """


    apiVersion: "aiven.io/v1alpha1" = "aiven.io/v1alpha1"

    kind: "MySQL" = "MySQL"

    metadata?: v1.ObjectMeta

    spec?: AivenIoV1alpha1MySQLSpec

    status?: AivenIoV1alpha1MySQLStatus


schema AivenIoV1alpha1MySQLSpec:
    """
    MySQLSpec defines the desired state of MySQL

    Attributes
    ----------
    authSecretRef : AivenIoV1alpha1MySQLSpecAuthSecretRef, default is Undefined, optional
        auth secret ref
    cloudName : str, default is Undefined, optional
        Cloud the service runs in.
    connInfoSecretTarget : AivenIoV1alpha1MySQLSpecConnInfoSecretTarget, default is Undefined, optional
        conn info secret target
    disk_space : str, default is Undefined, optional
        The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing.
    maintenanceWindowDow : str, default is Undefined, optional
        Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
    maintenanceWindowTime : str, default is Undefined, optional
        Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
    plan : str, default is Undefined, required
        Subscription plan.
    project : str, default is Undefined, required
        Target project.
    projectVPCRef : AivenIoV1alpha1MySQLSpecProjectVPCRef, default is Undefined, optional
        project v p c ref
    projectVpcId : str, default is Undefined, optional
        Identifier of the VPC the service should be in, if any.
    serviceIntegrations : [AivenIoV1alpha1MySQLSpecServiceIntegrationsItems0], default is Undefined, optional
        Service integrations to specify when creating a service. Not applied after initial service creation
    tags : {str:str}, default is Undefined, optional
        Tags are key-value pairs that allow you to categorize services.
    terminationProtection : bool, default is Undefined, optional
        Prevent service from being deleted. It is recommended to have this enabled for all services.
    userConfig : AivenIoV1alpha1MySQLSpecUserConfig, default is Undefined, optional
        user config
    """


    authSecretRef?: AivenIoV1alpha1MySQLSpecAuthSecretRef

    cloudName?: str

    connInfoSecretTarget?: AivenIoV1alpha1MySQLSpecConnInfoSecretTarget

    disk_space?: str

    maintenanceWindowDow?: "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday"

    maintenanceWindowTime?: str

    plan: str

    project: str

    projectVPCRef?: AivenIoV1alpha1MySQLSpecProjectVPCRef

    projectVpcId?: str

    serviceIntegrations?: [AivenIoV1alpha1MySQLSpecServiceIntegrationsItems0]

    tags?: {str:str}

    terminationProtection?: bool

    userConfig?: AivenIoV1alpha1MySQLSpecUserConfig


    check:
        len(cloudName) <= 256
        len(maintenanceWindowTime) <= 8
        len(plan) <= 128
        len(project) <= 63
        len(projectVpcId) <= 36
        len(serviceIntegrations) <= 1


schema AivenIoV1alpha1MySQLSpecAuthSecretRef:
    """
    Authentication reference to Aiven token in a secret

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        name
    """


    key: str

    name: str


    check:
        len(key) >= 1
        len(name) >= 1


schema AivenIoV1alpha1MySQLSpecConnInfoSecretTarget:
    """
    Information regarding secret creation. 
     Exposed keys: `MYSQL_HOST`, `MYSQL_PORT`, `MYSQL_DATABASE`, `MYSQL_USER`, `MYSQL_PASSWORD`, `MYSQL_SSL_MODE`, `MYSQL_URI`, `MYSQL_REPLICA_URI`

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations added to the secret
    labels : {str:str}, default is Undefined, optional
        Labels added to the secret
    name : str, default is Undefined, required
        Name of the secret resource to be created. By default, is equal to the resource name
    prefix : str, default is Undefined, optional
        Prefix for the secret's keys. Added "as is" without any transformations. By default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.
    """


    annotations?: {str:str}

    labels?: {str:str}

    name: str

    prefix?: str


schema AivenIoV1alpha1MySQLSpecProjectVPCRef:
    """
    ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    name: str

    namespace?: str


    check:
        len(name) >= 1
        len(namespace) >= 1


schema AivenIoV1alpha1MySQLSpecServiceIntegrationsItems0:
    """
    Service integrations to specify when creating a service. Not applied after initial service creation

    Attributes
    ----------
    integrationType : str, default is Undefined, required
        integration type
    sourceServiceName : str, default is Undefined, required
        source service name
    """


    integrationType: "read_replica"

    sourceServiceName: str


    check:
        len(sourceServiceName) <= 64
        len(sourceServiceName) >= 1


schema AivenIoV1alpha1MySQLSpecUserConfig:
    """
    MySQL specific user configuration options

    Attributes
    ----------
    additional_backup_regions : [str], default is Undefined, optional
        Additional Cloud Regions for Backup Replication
    admin_password : str, default is Undefined, optional
        Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
    admin_username : str, default is Undefined, optional
        Custom username for admin user. This must be set only when a new service is being created.
    backup_hour : int, default is Undefined, optional
        The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
    backup_minute : int, default is Undefined, optional
        The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
    binlog_retention_period : int, default is Undefined, optional
        The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
    ip_filter : [AivenIoV1alpha1MySQLSpecUserConfigIPFilterItems0], default is Undefined, optional
        Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'
    migration : AivenIoV1alpha1MySQLSpecUserConfigMigration, default is Undefined, optional
        migration
    mysql : AivenIoV1alpha1MySQLSpecUserConfigMysql, default is Undefined, optional
        mysql
    mysql_version : str, default is Undefined, optional
        MySQL major version
    private_access : AivenIoV1alpha1MySQLSpecUserConfigPrivateAccess, default is Undefined, optional
        private access
    privatelink_access : AivenIoV1alpha1MySQLSpecUserConfigPrivatelinkAccess, default is Undefined, optional
        privatelink access
    project_to_fork_from : str, default is Undefined, optional
        Name of another project to fork a service from. This has effect only when a new service is being created.
    public_access : AivenIoV1alpha1MySQLSpecUserConfigPublicAccess, default is Undefined, optional
        public access
    recovery_target_time : str, default is Undefined, optional
        Recovery target time when forking a service. This has effect only when a new service is being created.
    service_to_fork_from : str, default is Undefined, optional
        Name of another service to fork from. This has effect only when a new service is being created.
    static_ips : bool, default is Undefined, optional
        Use static public IP addresses
    """


    additional_backup_regions?: [str]

    admin_password?: str

    admin_username?: str

    backup_hour?: int

    backup_minute?: int

    binlog_retention_period?: int

    ip_filter?: [AivenIoV1alpha1MySQLSpecUserConfigIPFilterItems0]

    migration?: AivenIoV1alpha1MySQLSpecUserConfigMigration

    mysql?: AivenIoV1alpha1MySQLSpecUserConfigMysql

    mysql_version?: "8"

    private_access?: AivenIoV1alpha1MySQLSpecUserConfigPrivateAccess

    privatelink_access?: AivenIoV1alpha1MySQLSpecUserConfigPrivatelinkAccess

    project_to_fork_from?: str

    public_access?: AivenIoV1alpha1MySQLSpecUserConfigPublicAccess

    recovery_target_time?: str

    service_to_fork_from?: str

    static_ips?: bool


    check:
        len(additional_backup_regions) <= 1
        len(admin_password) <= 256
        len(admin_password) >= 8
        regex.match(str(admin_password), r"^[a-zA-Z0-9-_]+$") if admin_password
        len(admin_username) <= 64
        regex.match(str(admin_username), r"^[_A-Za-z0-9][-._A-Za-z0-9]{0,63}$") if admin_username
        backup_hour <= 23
        backup_hour >= 0
        backup_minute <= 59
        backup_minute >= 0
        binlog_retention_period <= 86400
        binlog_retention_period >= 600
        len(ip_filter) <= 1024
        len(project_to_fork_from) <= 63
        len(recovery_target_time) <= 32
        len(service_to_fork_from) <= 64


schema AivenIoV1alpha1MySQLSpecUserConfigIPFilterItems0:
    """
    CIDR address block, either as a string, or in a dict with an optional description field

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description for IP filter list entry
    network : str, default is Undefined, required
        CIDR address block
    """


    description?: str

    network: str


    check:
        len(description) <= 1024
        len(network) <= 43


schema AivenIoV1alpha1MySQLSpecUserConfigMigration:
    """
    Migrate data from existing server

    Attributes
    ----------
    dbname : str, default is Undefined, optional
        Database name for bootstrapping the initial connection
    host : str, default is Undefined, required
        Hostname or IP address of the server where to migrate data from
    ignore_dbs : str, default is Undefined, optional
        Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment)
    method : str, default is Undefined, optional
        The migration method to be used (currently supported only by Redis, MySQL and PostgreSQL service types)
    password : str, default is Undefined, optional
        Password for authentication with the server where to migrate data from
    port : int, default is Undefined, required
        Port number of the server where to migrate data from
    ssl : bool, default is Undefined, optional
        The server where to migrate data from is secured with SSL
    username : str, default is Undefined, optional
        User name for authentication with the server where to migrate data from
    """


    dbname?: str

    host: str

    ignore_dbs?: str

    method?: "dump" | "replication"

    password?: str

    port: int

    ssl?: bool

    username?: str


    check:
        len(dbname) <= 63
        len(host) <= 255
        len(ignore_dbs) <= 2048
        len(password) <= 256
        port <= 65535
        port >= 1
        len(username) <= 256


schema AivenIoV1alpha1MySQLSpecUserConfigMysql:
    """
    mysql.conf configuration values

    Attributes
    ----------
    connect_timeout : int, default is Undefined, optional
        The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake
    default_time_zone : str, default is Undefined, optional
        Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
    group_concat_max_len : int, default is Undefined, optional
        The maximum permitted result length in bytes for the GROUP_CONCAT() function.
    information_schema_stats_expiry : int, default is Undefined, optional
        The time, in seconds, before cached statistics expire
    innodb_change_buffer_max_size : int, default is Undefined, optional
        Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25
    innodb_flush_neighbors : int, default is Undefined, optional
        Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed,  1 - flush contiguous dirty pages in the same extent,  2 - flush dirty pages in the same extent
    innodb_ft_min_token_size : int, default is Undefined, optional
        Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
    innodb_ft_server_stopword_table : str, default is Undefined, optional
        This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
    innodb_lock_wait_timeout : int, default is Undefined, optional
        The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
    innodb_log_buffer_size : int, default is Undefined, optional
        The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
    innodb_online_alter_log_max_size : int, default is Undefined, optional
        The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
    innodb_print_all_deadlocks : bool, default is Undefined, optional
        When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
    innodb_read_io_threads : int, default is Undefined, optional
        The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
    innodb_rollback_on_timeout : bool, default is Undefined, optional
        When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
    innodb_thread_concurrency : int, default is Undefined, optional
        Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit)
    innodb_write_io_threads : int, default is Undefined, optional
        The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
    interactive_timeout : int, default is Undefined, optional
        The number of seconds the server waits for activity on an interactive connection before closing it.
    internal_tmp_mem_storage_engine : str, default is Undefined, optional
        The storage engine for in-memory internal temporary tables.
    long_query_time : float, default is Undefined, optional
        The slow_query_logs work as SQL statements that take more than long_query_time seconds to execute. Default is 10s
    max_allowed_packet : int, default is Undefined, optional
        Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M)
    max_heap_table_size : int, default is Undefined, optional
        Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M)
    net_buffer_length : int, default is Undefined, optional
        Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
    net_read_timeout : int, default is Undefined, optional
        The number of seconds to wait for more data from a connection before aborting the read.
    net_write_timeout : int, default is Undefined, optional
        The number of seconds to wait for a block to be written to a connection before aborting the write.
    slow_query_log : bool, default is Undefined, optional
        Slow query log enables capturing of slow queries. Setting slow_query_log to false also truncates the mysql.slow_log table. Default is off
    sort_buffer_size : int, default is Undefined, optional
        Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K)
    sql_mode : str, default is Undefined, optional
        Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
    sql_require_primary_key : bool, default is Undefined, optional
        Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
    tmp_table_size : int, default is Undefined, optional
        Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M)
    wait_timeout : int, default is Undefined, optional
        The number of seconds the server waits for activity on a noninteractive connection before closing it.
    """


    connect_timeout?: int

    default_time_zone?: str

    group_concat_max_len?: int

    information_schema_stats_expiry?: int

    innodb_change_buffer_max_size?: int

    innodb_flush_neighbors?: int

    innodb_ft_min_token_size?: int

    innodb_ft_server_stopword_table?: str

    innodb_lock_wait_timeout?: int

    innodb_log_buffer_size?: int

    innodb_online_alter_log_max_size?: int

    innodb_print_all_deadlocks?: bool

    innodb_read_io_threads?: int

    innodb_rollback_on_timeout?: bool

    innodb_thread_concurrency?: int

    innodb_write_io_threads?: int

    interactive_timeout?: int

    internal_tmp_mem_storage_engine?: "TempTable" | "MEMORY"

    long_query_time?: float

    max_allowed_packet?: int

    max_heap_table_size?: int

    net_buffer_length?: int

    net_read_timeout?: int

    net_write_timeout?: int

    slow_query_log?: bool

    sort_buffer_size?: int

    sql_mode?: str

    sql_require_primary_key?: bool

    tmp_table_size?: int

    wait_timeout?: int


    check:
        connect_timeout <= 3600
        connect_timeout >= 2
        len(default_time_zone) <= 100
        len(default_time_zone) >= 2
        group_concat_max_len >= 4
        information_schema_stats_expiry <= 3.1536e+07
        information_schema_stats_expiry >= 900
        innodb_change_buffer_max_size <= 50
        innodb_change_buffer_max_size >= 0
        innodb_flush_neighbors <= 2
        innodb_flush_neighbors >= 0
        innodb_ft_min_token_size <= 16
        innodb_ft_min_token_size >= 0
        len(innodb_ft_server_stopword_table) <= 1024
        regex.match(str(innodb_ft_server_stopword_table), r"^.+/.+$") if innodb_ft_server_stopword_table
        innodb_lock_wait_timeout <= 3600
        innodb_lock_wait_timeout >= 1
        innodb_log_buffer_size <= 4.294967295e+09
        innodb_log_buffer_size >= 1.048576e+06
        innodb_online_alter_log_max_size <= 1.099511627776e+12
        innodb_online_alter_log_max_size >= 65536
        innodb_read_io_threads <= 64
        innodb_read_io_threads >= 1
        innodb_thread_concurrency <= 1000
        innodb_thread_concurrency >= 0
        innodb_write_io_threads <= 64
        innodb_write_io_threads >= 1
        interactive_timeout <= 604800
        interactive_timeout >= 30
        long_query_time <= 3600
        long_query_time >= 0
        max_allowed_packet <= 1.073741824e+09
        max_allowed_packet >= 102400
        max_heap_table_size <= 1.073741824e+09
        max_heap_table_size >= 1.048576e+06
        net_buffer_length <= 1.048576e+06
        net_buffer_length >= 1024
        net_read_timeout <= 3600
        net_read_timeout >= 1
        net_write_timeout <= 3600
        net_write_timeout >= 1
        sort_buffer_size <= 1.073741824e+09
        sort_buffer_size >= 32768
        len(sql_mode) <= 1024
        regex.match(str(sql_mode), r"^[A-Z_]*(,[A-Z_]+)*$") if sql_mode
        tmp_table_size <= 1.073741824e+09
        tmp_table_size >= 1.048576e+06
        wait_timeout <= 2.147483e+06
        wait_timeout >= 1


schema AivenIoV1alpha1MySQLSpecUserConfigPrivateAccess:
    """
    Allow access to selected service ports from private networks

    Attributes
    ----------
    mysql : bool, default is Undefined, optional
        Allow clients to connect to mysql with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations
    mysqlx : bool, default is Undefined, optional
        Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations
    prometheus : bool, default is Undefined, optional
        Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations
    """


    mysql?: bool

    mysqlx?: bool

    prometheus?: bool


schema AivenIoV1alpha1MySQLSpecUserConfigPrivatelinkAccess:
    """
    Allow access to selected service components through Privatelink

    Attributes
    ----------
    mysql : bool, default is Undefined, optional
        Enable mysql
    mysqlx : bool, default is Undefined, optional
        Enable mysqlx
    prometheus : bool, default is Undefined, optional
        Enable prometheus
    """


    mysql?: bool

    mysqlx?: bool

    prometheus?: bool


schema AivenIoV1alpha1MySQLSpecUserConfigPublicAccess:
    """
    Allow access to selected service ports from the public Internet

    Attributes
    ----------
    mysql : bool, default is Undefined, optional
        Allow clients to connect to mysql from the public internet for service nodes that are in a project VPC or another type of private network
    mysqlx : bool, default is Undefined, optional
        Allow clients to connect to mysqlx from the public internet for service nodes that are in a project VPC or another type of private network
    prometheus : bool, default is Undefined, optional
        Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network
    """


    mysql?: bool

    mysqlx?: bool

    prometheus?: bool


schema AivenIoV1alpha1MySQLStatus:
    """
    ServiceStatus defines the observed state of service

    Attributes
    ----------
    conditions : [AivenIoV1alpha1MySQLStatusConditionsItems0], default is Undefined, required
        Conditions represent the latest available observations of a service state
    state : str, default is Undefined, required
        Service state
    """


    conditions: [AivenIoV1alpha1MySQLStatusConditionsItems0]

    state: str


schema AivenIoV1alpha1MySQLStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


