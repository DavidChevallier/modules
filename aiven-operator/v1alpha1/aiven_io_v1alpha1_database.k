"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Database:
    """
    Database is the Schema for the databases API

    Attributes
    ----------
    apiVersion : str, default is "aiven.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Database", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AivenIoV1alpha1DatabaseSpec, default is Undefined, optional
        spec
    status : AivenIoV1alpha1DatabaseStatus, default is Undefined, optional
        status
    """


    apiVersion: "aiven.io/v1alpha1" = "aiven.io/v1alpha1"

    kind: "Database" = "Database"

    metadata?: v1.ObjectMeta

    spec?: AivenIoV1alpha1DatabaseSpec

    status?: AivenIoV1alpha1DatabaseStatus


schema AivenIoV1alpha1DatabaseSpec:
    """
    DatabaseSpec defines the desired state of Database

    Attributes
    ----------
    authSecretRef : AivenIoV1alpha1DatabaseSpecAuthSecretRef, default is Undefined, optional
        auth secret ref
    lcCollate : str, default is Undefined, optional
        Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8
    lcCtype : str, default is Undefined, optional
        Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8
    project : str, default is Undefined, required
        Project to link the database to
    serviceName : str, default is Undefined, required
        PostgreSQL service to link the database to
    terminationProtection : bool, default is Undefined, optional
        It is a Kubernetes side deletion protections, which prevents the database from being deleted by Kubernetes. It is recommended to enable this for any production databases containing critical data.
    """


    authSecretRef?: AivenIoV1alpha1DatabaseSpecAuthSecretRef

    lcCollate?: str

    lcCtype?: str

    project: str

    serviceName: str

    terminationProtection?: bool


    check:
        len(lcCollate) <= 128
        len(lcCtype) <= 128
        len(project) <= 63
        len(serviceName) <= 63


schema AivenIoV1alpha1DatabaseSpecAuthSecretRef:
    """
    Authentication reference to Aiven token in a secret

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        name
    """


    key: str

    name: str


    check:
        len(key) >= 1
        len(name) >= 1


schema AivenIoV1alpha1DatabaseStatus:
    """
    DatabaseStatus defines the observed state of Database

    Attributes
    ----------
    conditions : [AivenIoV1alpha1DatabaseStatusConditionsItems0], default is Undefined, required
        Conditions represent the latest available observations of an Database state
    """


    conditions: [AivenIoV1alpha1DatabaseStatusConditionsItems0]


schema AivenIoV1alpha1DatabaseStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


