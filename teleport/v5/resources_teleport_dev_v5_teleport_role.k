"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema TeleportRole:
    """
    Role is the Schema for the roles API

    Attributes
    ----------
    apiVersion : str, default is "resources.teleport.dev/v5", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TeleportRole", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ResourcesTeleportDevV5TeleportRoleSpec, default is Undefined, optional
        spec
    status : ResourcesTeleportDevV5TeleportRoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "resources.teleport.dev/v5" = "resources.teleport.dev/v5"

    kind: "TeleportRole" = "TeleportRole"

    metadata?: v1.ObjectMeta

    spec?: ResourcesTeleportDevV5TeleportRoleSpec

    status?: ResourcesTeleportDevV5TeleportRoleStatus


schema ResourcesTeleportDevV5TeleportRoleSpec:
    """
    Role resource definition v5 from Teleport

    Attributes
    ----------
    allow : ResourcesTeleportDevV5TeleportRoleSpecAllow, default is Undefined, optional
        allow
    deny : ResourcesTeleportDevV5TeleportRoleSpecDeny, default is Undefined, optional
        deny
    options : ResourcesTeleportDevV5TeleportRoleSpecOptions, default is Undefined, optional
        options
    """


    allow?: ResourcesTeleportDevV5TeleportRoleSpecAllow

    deny?: ResourcesTeleportDevV5TeleportRoleSpecDeny

    options?: ResourcesTeleportDevV5TeleportRoleSpecOptions


schema ResourcesTeleportDevV5TeleportRoleSpecAllow:
    """
    Allow is the set of conditions evaluated to grant access.

    Attributes
    ----------
    app_labels : {str:any}, default is Undefined, optional
        AppLabels is a map of labels used as part of the RBAC system.
    app_labels_expression : str, default is Undefined, optional
        AppLabelsExpression is a predicate expression used to allow/deny access to Apps.
    aws_role_arns : [str], default is Undefined, optional
        AWSRoleARNs is a list of AWS role ARNs this role is allowed to assume.
    azure_identities : [str], default is Undefined, optional
        AzureIdentities is a list of Azure identities this role is allowed to assume.
    cluster_labels : {str:any}, default is Undefined, optional
        ClusterLabels is a map of node labels (used to dynamically grant access to clusters).
    cluster_labels_expression : str, default is Undefined, optional
        ClusterLabelsExpression is a predicate expression used to allow/deny access to remote Teleport clusters.
    db_labels : {str:any}, default is Undefined, optional
        DatabaseLabels are used in RBAC system to allow/deny access to databases.
    db_labels_expression : str, default is Undefined, optional
        DatabaseLabelsExpression is a predicate expression used to allow/deny access to Databases.
    db_names : [str], default is Undefined, optional
        DatabaseNames is a list of database names this role is allowed to connect to.
    db_roles : [str], default is Undefined, optional
        DatabaseRoles is a list of databases roles for automatic user creation.
    db_service_labels : {str:any}, default is Undefined, optional
        DatabaseServiceLabels are used in RBAC system to allow/deny access to Database Services.
    db_service_labels_expression : str, default is Undefined, optional
        DatabaseServiceLabelsExpression is a predicate expression used to allow/deny access to Database Services.
    db_users : [str], default is Undefined, optional
        DatabaseUsers is a list of databases users this role is allowed to connect as.
    desktop_groups : [str], default is Undefined, optional
        DesktopGroups is a list of groups for created desktop users to be added to
    gcp_service_accounts : [str], default is Undefined, optional
        GCPServiceAccounts is a list of GCP service accounts this role is allowed to assume.
    group_labels : {str:any}, default is Undefined, optional
        GroupLabels is a map of labels used as part of the RBAC system.
    group_labels_expression : str, default is Undefined, optional
        GroupLabelsExpression is a predicate expression used to allow/deny access to user groups.
    host_groups : [str], default is Undefined, optional
        HostGroups is a list of groups for created users to be added to
    host_sudoers : [str], default is Undefined, optional
        HostSudoers is a list of entries to include in a users sudoer file
    impersonate : ResourcesTeleportDevV5TeleportRoleSpecAllowImpersonate, default is Undefined, optional
        impersonate
    join_sessions : [ResourcesTeleportDevV5TeleportRoleSpecAllowJoinSessionsItems0], default is Undefined, optional
        JoinSessions specifies policies to allow users to join other sessions.
    kubernetes_groups : [str], default is Undefined, optional
        KubeGroups is a list of kubernetes groups
    kubernetes_labels : {str:any}, default is Undefined, optional
        KubernetesLabels is a map of kubernetes cluster labels used for RBAC.
    kubernetes_labels_expression : str, default is Undefined, optional
        KubernetesLabelsExpression is a predicate expression used to allow/deny access to kubernetes clusters.
    kubernetes_resources : [ResourcesTeleportDevV5TeleportRoleSpecAllowKubernetesResourcesItems0], default is Undefined, optional
        KubernetesResources is the Kubernetes Resources this Role grants access to.
    kubernetes_users : [str], default is Undefined, optional
        KubeUsers is an optional kubernetes users to impersonate
    logins : [str], default is Undefined, optional
        Logins is a list of *nix system logins.
    node_labels : {str:any}, default is Undefined, optional
        NodeLabels is a map of node labels (used to dynamically grant access to nodes).
    node_labels_expression : str, default is Undefined, optional
        NodeLabelsExpression is a predicate expression used to allow/deny access to SSH nodes.
    request : ResourcesTeleportDevV5TeleportRoleSpecAllowRequest, default is Undefined, optional
        request
    require_session_join : [ResourcesTeleportDevV5TeleportRoleSpecAllowRequireSessionJoinItems0], default is Undefined, optional
        RequireSessionJoin specifies policies for required users to start a session.
    review_requests : ResourcesTeleportDevV5TeleportRoleSpecAllowReviewRequests, default is Undefined, optional
        review requests
    rules : [ResourcesTeleportDevV5TeleportRoleSpecAllowRulesItems0], default is Undefined, optional
        Rules is a list of rules and their access levels. Rules are a high level construct used for access control.
    windows_desktop_labels : {str:any}, default is Undefined, optional
        WindowsDesktopLabels are used in the RBAC system to allow/deny access to Windows desktops.
    windows_desktop_labels_expression : str, default is Undefined, optional
        WindowsDesktopLabelsExpression is a predicate expression used to allow/deny access to Windows desktops.
    windows_desktop_logins : [str], default is Undefined, optional
        WindowsDesktopLogins is a list of desktop login names allowed/denied for Windows desktops.
    """


    app_labels?: {str:any}

    app_labels_expression?: str

    aws_role_arns?: [str]

    azure_identities?: [str]

    cluster_labels?: {str:any}

    cluster_labels_expression?: str

    db_labels?: {str:any}

    db_labels_expression?: str

    db_names?: [str]

    db_roles?: [str]

    db_service_labels?: {str:any}

    db_service_labels_expression?: str

    db_users?: [str]

    desktop_groups?: [str]

    gcp_service_accounts?: [str]

    group_labels?: {str:any}

    group_labels_expression?: str

    host_groups?: [str]

    host_sudoers?: [str]

    impersonate?: ResourcesTeleportDevV5TeleportRoleSpecAllowImpersonate

    join_sessions?: [ResourcesTeleportDevV5TeleportRoleSpecAllowJoinSessionsItems0]

    kubernetes_groups?: [str]

    kubernetes_labels?: {str:any}

    kubernetes_labels_expression?: str

    kubernetes_resources?: [ResourcesTeleportDevV5TeleportRoleSpecAllowKubernetesResourcesItems0]

    kubernetes_users?: [str]

    logins?: [str]

    node_labels?: {str:any}

    node_labels_expression?: str

    request?: ResourcesTeleportDevV5TeleportRoleSpecAllowRequest

    require_session_join?: [ResourcesTeleportDevV5TeleportRoleSpecAllowRequireSessionJoinItems0]

    review_requests?: ResourcesTeleportDevV5TeleportRoleSpecAllowReviewRequests

    rules?: [ResourcesTeleportDevV5TeleportRoleSpecAllowRulesItems0]

    windows_desktop_labels?: {str:any}

    windows_desktop_labels_expression?: str

    windows_desktop_logins?: [str]


schema ResourcesTeleportDevV5TeleportRoleSpecAllowImpersonate:
    """
    Impersonate specifies what users and roles this role is allowed to impersonate by issuing certificates or other possible means.

    Attributes
    ----------
    roles : [str], default is Undefined, optional
        Roles is a list of resources this role is allowed to impersonate
    users : [str], default is Undefined, optional
        Users is a list of resources this role is allowed to impersonate, could be an empty list or a Wildcard pattern
    where : str, default is Undefined, optional
        Where specifies optional advanced matcher
    """


    roles?: [str]

    users?: [str]

    where?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowJoinSessionsItems0:
    """
    resources teleport dev v5 teleport role spec allow join sessions items0

    Attributes
    ----------
    kinds : [str], default is Undefined, optional
        Kinds are the session kinds this policy applies to.
    modes : [str], default is Undefined, optional
        Modes is a list of permitted participant modes for this policy.
    name : str, default is Undefined, optional
        Name is the name of the policy.
    roles : [str], default is Undefined, optional
        Roles is a list of roles that you can join the session of.
    """


    kinds?: [str]

    modes?: [str]

    name?: str

    roles?: [str]


schema ResourcesTeleportDevV5TeleportRoleSpecAllowKubernetesResourcesItems0:
    """
    resources teleport dev v5 teleport role spec allow kubernetes resources items0

    Attributes
    ----------
    kind : str, default is Undefined, optional
        Kind specifies the Kubernetes Resource type. At the moment only "pod" is supported.
    name : str, default is Undefined, optional
        Name is the resource name. It supports wildcards.
    namespace : str, default is Undefined, optional
        Namespace is the resource namespace. It supports wildcards.
    """


    kind?: str

    name?: str

    namespace?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowRequest:
    """
    resources teleport dev v5 teleport role spec allow request

    Attributes
    ----------
    annotations : {str:[str]}, default is Undefined, optional
        Annotations is a collection of annotations to be programmatically appended to pending access requests at the time of their creation. These annotations serve as a mechanism to propagate extra information to plugins.  Since these annotations support variable interpolation syntax, they also offer a mechanism for forwarding claims from an external identity provider, to a plugin via `{{external.trait_name}}` style substitutions.
    claims_to_roles : [ResourcesTeleportDevV5TeleportRoleSpecAllowRequestClaimsToRolesItems0], default is Undefined, optional
        ClaimsToRoles specifies a mapping from claims (traits) to teleport roles.
    max_duration : str, default is Undefined, optional
        MaxDuration is the amount of time the access will be granted for. If this is zero, the default duration is used.
    roles : [str], default is Undefined, optional
        Roles is the name of roles which will match the request rule.
    search_as_roles : [str], default is Undefined, optional
        SearchAsRoles is a list of extra roles which should apply to a user while they are searching for resources as part of a Resource Access Request, and defines the underlying roles which will be requested as part of any Resource Access Request.
    suggested_reviewers : [str], default is Undefined, optional
        SuggestedReviewers is a list of reviewer suggestions.  These can be teleport usernames, but that is not a requirement.
    thresholds : [ResourcesTeleportDevV5TeleportRoleSpecAllowRequestThresholdsItems0], default is Undefined, optional
        Thresholds is a list of thresholds, one of which must be met in order for reviews to trigger a state-transition.  If no thresholds are provided, a default threshold of 1 for approval and denial is used.
    """


    annotations?: {str:[str]}

    claims_to_roles?: [ResourcesTeleportDevV5TeleportRoleSpecAllowRequestClaimsToRolesItems0]

    max_duration?: str

    roles?: [str]

    search_as_roles?: [str]

    suggested_reviewers?: [str]

    thresholds?: [ResourcesTeleportDevV5TeleportRoleSpecAllowRequestThresholdsItems0]


schema ResourcesTeleportDevV5TeleportRoleSpecAllowRequestClaimsToRolesItems0:
    """
    resources teleport dev v5 teleport role spec allow request claims to roles items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        Claim is a claim name.
    roles : [str], default is Undefined, optional
        Roles is a list of static teleport roles to match.
    value : str, default is Undefined, optional
        Value is a claim value to match.
    """


    claim?: str

    roles?: [str]

    value?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowRequestThresholdsItems0:
    """
    resources teleport dev v5 teleport role spec allow request thresholds items0

    Attributes
    ----------
    approve : int, default is Undefined, optional
        Approve is the number of matching approvals needed for state-transition.
    deny : int, default is Undefined, optional
        Deny is the number of denials needed for state-transition.
    $filter : str, default is Undefined, optional
        Filter is an optional predicate used to determine which reviews count toward this threshold.
    name : str, default is Undefined, optional
        Name is the optional human-readable name of the threshold.
    """


    approve?: int

    deny?: int

    $filter?: str

    name?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowRequireSessionJoinItems0:
    """
    resources teleport dev v5 teleport role spec allow require session join items0

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count is the amount of people that need to be matched for this policy to be fulfilled.
    $filter : str, default is Undefined, optional
        Filter is a predicate that determines what users count towards this policy.
    kinds : [str], default is Undefined, optional
        Kinds are the session kinds this policy applies to.
    modes : [str], default is Undefined, optional
        Modes is the list of modes that may be used to fulfill this policy.
    name : str, default is Undefined, optional
        Name is the name of the policy.
    on_leave : str, default is Undefined, optional
        OnLeave is the behaviour that's used when the policy is no longer fulfilled for a live session.
    """


    count?: int

    $filter?: str

    kinds?: [str]

    modes?: [str]

    name?: str

    on_leave?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowReviewRequests:
    """
    ReviewRequests defines conditions for submitting access reviews.

    Attributes
    ----------
    claims_to_roles : [ResourcesTeleportDevV5TeleportRoleSpecAllowReviewRequestsClaimsToRolesItems0], default is Undefined, optional
        ClaimsToRoles specifies a mapping from claims (traits) to teleport roles.
    preview_as_roles : [str], default is Undefined, optional
        PreviewAsRoles is a list of extra roles which should apply to a reviewer while they are viewing a Resource Access Request for the purposes of viewing details such as the hostname and labels of requested resources.
    roles : [str], default is Undefined, optional
        Roles is the name of roles which may be reviewed.
    where : str, default is Undefined, optional
        Where is an optional predicate which further limits which requests are reviewable.
    """


    claims_to_roles?: [ResourcesTeleportDevV5TeleportRoleSpecAllowReviewRequestsClaimsToRolesItems0]

    preview_as_roles?: [str]

    roles?: [str]

    where?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowReviewRequestsClaimsToRolesItems0:
    """
    resources teleport dev v5 teleport role spec allow review requests claims to roles items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        Claim is a claim name.
    roles : [str], default is Undefined, optional
        Roles is a list of static teleport roles to match.
    value : str, default is Undefined, optional
        Value is a claim value to match.
    """


    claim?: str

    roles?: [str]

    value?: str


schema ResourcesTeleportDevV5TeleportRoleSpecAllowRulesItems0:
    """
    resources teleport dev v5 teleport role spec allow rules items0

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        Actions specifies optional actions taken when this rule matches
    resources : [str], default is Undefined, optional
        Resources is a list of resources
    verbs : [str], default is Undefined, optional
        Verbs is a list of verbs
    where : str, default is Undefined, optional
        Where specifies optional advanced matcher
    """


    actions?: [str]

    resources?: [str]

    verbs?: [str]

    where?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDeny:
    """
    Deny is the set of conditions evaluated to deny access. Deny takes priority over allow.

    Attributes
    ----------
    app_labels : {str:any}, default is Undefined, optional
        AppLabels is a map of labels used as part of the RBAC system.
    app_labels_expression : str, default is Undefined, optional
        AppLabelsExpression is a predicate expression used to allow/deny access to Apps.
    aws_role_arns : [str], default is Undefined, optional
        AWSRoleARNs is a list of AWS role ARNs this role is allowed to assume.
    azure_identities : [str], default is Undefined, optional
        AzureIdentities is a list of Azure identities this role is allowed to assume.
    cluster_labels : {str:any}, default is Undefined, optional
        ClusterLabels is a map of node labels (used to dynamically grant access to clusters).
    cluster_labels_expression : str, default is Undefined, optional
        ClusterLabelsExpression is a predicate expression used to allow/deny access to remote Teleport clusters.
    db_labels : {str:any}, default is Undefined, optional
        DatabaseLabels are used in RBAC system to allow/deny access to databases.
    db_labels_expression : str, default is Undefined, optional
        DatabaseLabelsExpression is a predicate expression used to allow/deny access to Databases.
    db_names : [str], default is Undefined, optional
        DatabaseNames is a list of database names this role is allowed to connect to.
    db_roles : [str], default is Undefined, optional
        DatabaseRoles is a list of databases roles for automatic user creation.
    db_service_labels : {str:any}, default is Undefined, optional
        DatabaseServiceLabels are used in RBAC system to allow/deny access to Database Services.
    db_service_labels_expression : str, default is Undefined, optional
        DatabaseServiceLabelsExpression is a predicate expression used to allow/deny access to Database Services.
    db_users : [str], default is Undefined, optional
        DatabaseUsers is a list of databases users this role is allowed to connect as.
    desktop_groups : [str], default is Undefined, optional
        DesktopGroups is a list of groups for created desktop users to be added to
    gcp_service_accounts : [str], default is Undefined, optional
        GCPServiceAccounts is a list of GCP service accounts this role is allowed to assume.
    group_labels : {str:any}, default is Undefined, optional
        GroupLabels is a map of labels used as part of the RBAC system.
    group_labels_expression : str, default is Undefined, optional
        GroupLabelsExpression is a predicate expression used to allow/deny access to user groups.
    host_groups : [str], default is Undefined, optional
        HostGroups is a list of groups for created users to be added to
    host_sudoers : [str], default is Undefined, optional
        HostSudoers is a list of entries to include in a users sudoer file
    impersonate : ResourcesTeleportDevV5TeleportRoleSpecDenyImpersonate, default is Undefined, optional
        impersonate
    join_sessions : [ResourcesTeleportDevV5TeleportRoleSpecDenyJoinSessionsItems0], default is Undefined, optional
        JoinSessions specifies policies to allow users to join other sessions.
    kubernetes_groups : [str], default is Undefined, optional
        KubeGroups is a list of kubernetes groups
    kubernetes_labels : {str:any}, default is Undefined, optional
        KubernetesLabels is a map of kubernetes cluster labels used for RBAC.
    kubernetes_labels_expression : str, default is Undefined, optional
        KubernetesLabelsExpression is a predicate expression used to allow/deny access to kubernetes clusters.
    kubernetes_resources : [ResourcesTeleportDevV5TeleportRoleSpecDenyKubernetesResourcesItems0], default is Undefined, optional
        KubernetesResources is the Kubernetes Resources this Role grants access to.
    kubernetes_users : [str], default is Undefined, optional
        KubeUsers is an optional kubernetes users to impersonate
    logins : [str], default is Undefined, optional
        Logins is a list of *nix system logins.
    node_labels : {str:any}, default is Undefined, optional
        NodeLabels is a map of node labels (used to dynamically grant access to nodes).
    node_labels_expression : str, default is Undefined, optional
        NodeLabelsExpression is a predicate expression used to allow/deny access to SSH nodes.
    request : ResourcesTeleportDevV5TeleportRoleSpecDenyRequest, default is Undefined, optional
        request
    require_session_join : [ResourcesTeleportDevV5TeleportRoleSpecDenyRequireSessionJoinItems0], default is Undefined, optional
        RequireSessionJoin specifies policies for required users to start a session.
    review_requests : ResourcesTeleportDevV5TeleportRoleSpecDenyReviewRequests, default is Undefined, optional
        review requests
    rules : [ResourcesTeleportDevV5TeleportRoleSpecDenyRulesItems0], default is Undefined, optional
        Rules is a list of rules and their access levels. Rules are a high level construct used for access control.
    windows_desktop_labels : {str:any}, default is Undefined, optional
        WindowsDesktopLabels are used in the RBAC system to allow/deny access to Windows desktops.
    windows_desktop_labels_expression : str, default is Undefined, optional
        WindowsDesktopLabelsExpression is a predicate expression used to allow/deny access to Windows desktops.
    windows_desktop_logins : [str], default is Undefined, optional
        WindowsDesktopLogins is a list of desktop login names allowed/denied for Windows desktops.
    """


    app_labels?: {str:any}

    app_labels_expression?: str

    aws_role_arns?: [str]

    azure_identities?: [str]

    cluster_labels?: {str:any}

    cluster_labels_expression?: str

    db_labels?: {str:any}

    db_labels_expression?: str

    db_names?: [str]

    db_roles?: [str]

    db_service_labels?: {str:any}

    db_service_labels_expression?: str

    db_users?: [str]

    desktop_groups?: [str]

    gcp_service_accounts?: [str]

    group_labels?: {str:any}

    group_labels_expression?: str

    host_groups?: [str]

    host_sudoers?: [str]

    impersonate?: ResourcesTeleportDevV5TeleportRoleSpecDenyImpersonate

    join_sessions?: [ResourcesTeleportDevV5TeleportRoleSpecDenyJoinSessionsItems0]

    kubernetes_groups?: [str]

    kubernetes_labels?: {str:any}

    kubernetes_labels_expression?: str

    kubernetes_resources?: [ResourcesTeleportDevV5TeleportRoleSpecDenyKubernetesResourcesItems0]

    kubernetes_users?: [str]

    logins?: [str]

    node_labels?: {str:any}

    node_labels_expression?: str

    request?: ResourcesTeleportDevV5TeleportRoleSpecDenyRequest

    require_session_join?: [ResourcesTeleportDevV5TeleportRoleSpecDenyRequireSessionJoinItems0]

    review_requests?: ResourcesTeleportDevV5TeleportRoleSpecDenyReviewRequests

    rules?: [ResourcesTeleportDevV5TeleportRoleSpecDenyRulesItems0]

    windows_desktop_labels?: {str:any}

    windows_desktop_labels_expression?: str

    windows_desktop_logins?: [str]


schema ResourcesTeleportDevV5TeleportRoleSpecDenyImpersonate:
    """
    Impersonate specifies what users and roles this role is allowed to impersonate by issuing certificates or other possible means.

    Attributes
    ----------
    roles : [str], default is Undefined, optional
        Roles is a list of resources this role is allowed to impersonate
    users : [str], default is Undefined, optional
        Users is a list of resources this role is allowed to impersonate, could be an empty list or a Wildcard pattern
    where : str, default is Undefined, optional
        Where specifies optional advanced matcher
    """


    roles?: [str]

    users?: [str]

    where?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyJoinSessionsItems0:
    """
    resources teleport dev v5 teleport role spec deny join sessions items0

    Attributes
    ----------
    kinds : [str], default is Undefined, optional
        Kinds are the session kinds this policy applies to.
    modes : [str], default is Undefined, optional
        Modes is a list of permitted participant modes for this policy.
    name : str, default is Undefined, optional
        Name is the name of the policy.
    roles : [str], default is Undefined, optional
        Roles is a list of roles that you can join the session of.
    """


    kinds?: [str]

    modes?: [str]

    name?: str

    roles?: [str]


schema ResourcesTeleportDevV5TeleportRoleSpecDenyKubernetesResourcesItems0:
    """
    resources teleport dev v5 teleport role spec deny kubernetes resources items0

    Attributes
    ----------
    kind : str, default is Undefined, optional
        Kind specifies the Kubernetes Resource type. At the moment only "pod" is supported.
    name : str, default is Undefined, optional
        Name is the resource name. It supports wildcards.
    namespace : str, default is Undefined, optional
        Namespace is the resource namespace. It supports wildcards.
    """


    kind?: str

    name?: str

    namespace?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyRequest:
    """
    resources teleport dev v5 teleport role spec deny request

    Attributes
    ----------
    annotations : {str:[str]}, default is Undefined, optional
        Annotations is a collection of annotations to be programmatically appended to pending access requests at the time of their creation. These annotations serve as a mechanism to propagate extra information to plugins.  Since these annotations support variable interpolation syntax, they also offer a mechanism for forwarding claims from an external identity provider, to a plugin via `{{external.trait_name}}` style substitutions.
    claims_to_roles : [ResourcesTeleportDevV5TeleportRoleSpecDenyRequestClaimsToRolesItems0], default is Undefined, optional
        ClaimsToRoles specifies a mapping from claims (traits) to teleport roles.
    max_duration : str, default is Undefined, optional
        MaxDuration is the amount of time the access will be granted for. If this is zero, the default duration is used.
    roles : [str], default is Undefined, optional
        Roles is the name of roles which will match the request rule.
    search_as_roles : [str], default is Undefined, optional
        SearchAsRoles is a list of extra roles which should apply to a user while they are searching for resources as part of a Resource Access Request, and defines the underlying roles which will be requested as part of any Resource Access Request.
    suggested_reviewers : [str], default is Undefined, optional
        SuggestedReviewers is a list of reviewer suggestions.  These can be teleport usernames, but that is not a requirement.
    thresholds : [ResourcesTeleportDevV5TeleportRoleSpecDenyRequestThresholdsItems0], default is Undefined, optional
        Thresholds is a list of thresholds, one of which must be met in order for reviews to trigger a state-transition.  If no thresholds are provided, a default threshold of 1 for approval and denial is used.
    """


    annotations?: {str:[str]}

    claims_to_roles?: [ResourcesTeleportDevV5TeleportRoleSpecDenyRequestClaimsToRolesItems0]

    max_duration?: str

    roles?: [str]

    search_as_roles?: [str]

    suggested_reviewers?: [str]

    thresholds?: [ResourcesTeleportDevV5TeleportRoleSpecDenyRequestThresholdsItems0]


schema ResourcesTeleportDevV5TeleportRoleSpecDenyRequestClaimsToRolesItems0:
    """
    resources teleport dev v5 teleport role spec deny request claims to roles items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        Claim is a claim name.
    roles : [str], default is Undefined, optional
        Roles is a list of static teleport roles to match.
    value : str, default is Undefined, optional
        Value is a claim value to match.
    """


    claim?: str

    roles?: [str]

    value?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyRequestThresholdsItems0:
    """
    resources teleport dev v5 teleport role spec deny request thresholds items0

    Attributes
    ----------
    approve : int, default is Undefined, optional
        Approve is the number of matching approvals needed for state-transition.
    deny : int, default is Undefined, optional
        Deny is the number of denials needed for state-transition.
    $filter : str, default is Undefined, optional
        Filter is an optional predicate used to determine which reviews count toward this threshold.
    name : str, default is Undefined, optional
        Name is the optional human-readable name of the threshold.
    """


    approve?: int

    deny?: int

    $filter?: str

    name?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyRequireSessionJoinItems0:
    """
    resources teleport dev v5 teleport role spec deny require session join items0

    Attributes
    ----------
    count : int, default is Undefined, optional
        Count is the amount of people that need to be matched for this policy to be fulfilled.
    $filter : str, default is Undefined, optional
        Filter is a predicate that determines what users count towards this policy.
    kinds : [str], default is Undefined, optional
        Kinds are the session kinds this policy applies to.
    modes : [str], default is Undefined, optional
        Modes is the list of modes that may be used to fulfill this policy.
    name : str, default is Undefined, optional
        Name is the name of the policy.
    on_leave : str, default is Undefined, optional
        OnLeave is the behaviour that's used when the policy is no longer fulfilled for a live session.
    """


    count?: int

    $filter?: str

    kinds?: [str]

    modes?: [str]

    name?: str

    on_leave?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyReviewRequests:
    """
    ReviewRequests defines conditions for submitting access reviews.

    Attributes
    ----------
    claims_to_roles : [ResourcesTeleportDevV5TeleportRoleSpecDenyReviewRequestsClaimsToRolesItems0], default is Undefined, optional
        ClaimsToRoles specifies a mapping from claims (traits) to teleport roles.
    preview_as_roles : [str], default is Undefined, optional
        PreviewAsRoles is a list of extra roles which should apply to a reviewer while they are viewing a Resource Access Request for the purposes of viewing details such as the hostname and labels of requested resources.
    roles : [str], default is Undefined, optional
        Roles is the name of roles which may be reviewed.
    where : str, default is Undefined, optional
        Where is an optional predicate which further limits which requests are reviewable.
    """


    claims_to_roles?: [ResourcesTeleportDevV5TeleportRoleSpecDenyReviewRequestsClaimsToRolesItems0]

    preview_as_roles?: [str]

    roles?: [str]

    where?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyReviewRequestsClaimsToRolesItems0:
    """
    resources teleport dev v5 teleport role spec deny review requests claims to roles items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        Claim is a claim name.
    roles : [str], default is Undefined, optional
        Roles is a list of static teleport roles to match.
    value : str, default is Undefined, optional
        Value is a claim value to match.
    """


    claim?: str

    roles?: [str]

    value?: str


schema ResourcesTeleportDevV5TeleportRoleSpecDenyRulesItems0:
    """
    resources teleport dev v5 teleport role spec deny rules items0

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        Actions specifies optional actions taken when this rule matches
    resources : [str], default is Undefined, optional
        Resources is a list of resources
    verbs : [str], default is Undefined, optional
        Verbs is a list of verbs
    where : str, default is Undefined, optional
        Where specifies optional advanced matcher
    """


    actions?: [str]

    resources?: [str]

    verbs?: [str]

    where?: str


schema ResourcesTeleportDevV5TeleportRoleSpecOptions:
    """
    Options is for OpenSSH options like agent forwarding.

    Attributes
    ----------
    cert_extensions : [ResourcesTeleportDevV5TeleportRoleSpecOptionsCertExtensionsItems0], default is Undefined, optional
        CertExtensions specifies the key/values
    cert_format : str, default is Undefined, optional
        CertificateFormat defines the format of the user certificate to allow compatibility with older versions of OpenSSH.
    client_idle_timeout : str, default is Undefined, optional
        ClientIdleTimeout sets disconnect clients on idle timeout behavior, if set to 0 means do not disconnect, otherwise is set to the idle duration.
    create_db_user : bool, default is Undefined, optional
        CreateDatabaseUser enabled automatic database user creation.
    create_desktop_user : bool, default is Undefined, optional
        CreateDesktopUser allows users to be automatically created on a Windows desktop
    create_host_user : bool, default is Undefined, optional
        CreateHostUser allows users to be automatically created on a host
    create_host_user_mode : int | str, default is Undefined, optional
        CreateHostUserMode allows users to be automatically created on a host when not set to off
    desktop_clipboard : bool, default is Undefined, optional
        DesktopClipboard indicates whether clipboard sharing is allowed between the user's workstation and the remote desktop. It defaults to true unless explicitly set to false.
    desktop_directory_sharing : bool, default is Undefined, optional
        DesktopDirectorySharing indicates whether directory sharing is allowed between the user's workstation and the remote desktop. It defaults to false unless explicitly set to true.
    device_trust_mode : str, default is Undefined, optional
        DeviceTrustMode is the device authorization mode used for the resources associated with the role. See DeviceTrust.Mode. Reserved for future use, not yet used by Teleport.
    disconnect_expired_cert : bool, default is Undefined, optional
        DisconnectExpiredCert sets disconnect clients on expired certificates.
    enhanced_recording : [str], default is Undefined, optional
        BPF defines what events to record for the BPF-based session recorder.
    forward_agent : bool, default is Undefined, optional
        ForwardAgent is SSH agent forwarding.
    idp : ResourcesTeleportDevV5TeleportRoleSpecOptionsIdp, default is Undefined, optional
        idp
    lock : str, default is Undefined, optional
        Lock specifies the locking mode (strict|best_effort) to be applied with the role.
    max_connections : int, default is Undefined, optional
        MaxConnections defines the maximum number of concurrent connections a user may hold.
    max_kubernetes_connections : int, default is Undefined, optional
        MaxKubernetesConnections defines the maximum number of concurrent Kubernetes sessions a user may hold.
    max_session_ttl : str, default is Undefined, optional
        MaxSessionTTL defines how long a SSH session can last for.
    max_sessions : int, default is Undefined, optional
        MaxSessions defines the maximum number of concurrent sessions per connection.
    permit_x11_forwarding : bool, default is Undefined, optional
        PermitX11Forwarding authorizes use of X11 forwarding.
    pin_source_ip : bool, default is Undefined, optional
        PinSourceIP forces the same client IP for certificate generation and usage
    port_forwarding : bool, default is Undefined, optional
        PortForwarding defines if the certificate will have "permit-port-forwarding" in the certificate. PortForwarding is "yes" if not set, that's why this is a pointer
    record_session : ResourcesTeleportDevV5TeleportRoleSpecOptionsRecordSession, default is Undefined, optional
        record session
    request_access : str, default is Undefined, optional
        RequestAccess defines the access request strategy (optional|note|always) where optional is the default.
    request_prompt : str, default is Undefined, optional
        RequestPrompt is an optional message which tells users what they aught to
    require_session_mfa : int | str, default is Undefined, optional
        RequireMFAType is the type of MFA requirement enforced for this user.
    ssh_file_copy : bool, default is Undefined, optional
        SSHFileCopy indicates whether remote file operations via SCP or SFTP are allowed over an SSH session. It defaults to true unless explicitly set to false.
    """


    cert_extensions?: [ResourcesTeleportDevV5TeleportRoleSpecOptionsCertExtensionsItems0]

    cert_format?: str

    client_idle_timeout?: str

    create_db_user?: bool

    create_desktop_user?: bool

    create_host_user?: bool

    create_host_user_mode?: int | str

    desktop_clipboard?: bool

    desktop_directory_sharing?: bool

    device_trust_mode?: str

    disconnect_expired_cert?: bool

    enhanced_recording?: [str]

    forward_agent?: bool

    idp?: ResourcesTeleportDevV5TeleportRoleSpecOptionsIdp

    lock?: str

    max_connections?: int

    max_kubernetes_connections?: int

    max_session_ttl?: str

    max_sessions?: int

    permit_x11_forwarding?: bool

    pin_source_ip?: bool

    port_forwarding?: bool

    record_session?: ResourcesTeleportDevV5TeleportRoleSpecOptionsRecordSession

    request_access?: str

    request_prompt?: str

    require_session_mfa?: int | str

    ssh_file_copy?: bool


schema ResourcesTeleportDevV5TeleportRoleSpecOptionsCertExtensionsItems0:
    """
    resources teleport dev v5 teleport role spec options cert extensions items0

    Attributes
    ----------
    mode : int | str, default is Undefined, optional
        Mode is the type of extension to be used -- currently critical-option is not supported
    name : str, default is Undefined, optional
        Name specifies the key to be used in the cert extension.
    $type : int | str, default is Undefined, optional
        Type represents the certificate type being extended, only ssh is supported at this time.
    value : str, default is Undefined, optional
        Value specifies the value to be used in the cert extension.
    """


    mode?: int | str

    name?: str

    $type?: int | str

    value?: str


schema ResourcesTeleportDevV5TeleportRoleSpecOptionsIdp:
    """
    IDP is a set of options related to accessing IdPs within Teleport. Requires Teleport Enterprise.

    Attributes
    ----------
    saml : ResourcesTeleportDevV5TeleportRoleSpecOptionsIdpSaml, default is Undefined, optional
        saml
    """


    saml?: ResourcesTeleportDevV5TeleportRoleSpecOptionsIdpSaml


schema ResourcesTeleportDevV5TeleportRoleSpecOptionsIdpSaml:
    """
    SAML are options related to the Teleport SAML IdP.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enabled is set to true if this option allows access to the Teleport SAML IdP.
    """


    enabled?: bool


schema ResourcesTeleportDevV5TeleportRoleSpecOptionsRecordSession:
    """
    RecordDesktopSession indicates whether desktop access sessions should be recorded. It defaults to true unless explicitly set to false.

    Attributes
    ----------
    default : str, default is Undefined, optional
        Default indicates the default value for the services.
    desktop : bool, default is Undefined, optional
        Desktop indicates whether desktop sessions should be recorded. It defaults to true unless explicitly set to false.
    ssh : str, default is Undefined, optional
        SSH indicates the session mode used on SSH sessions.
    """


    default?: str

    desktop?: bool

    ssh?: str


schema ResourcesTeleportDevV5TeleportRoleStatus:
    """
    TeleportRoleStatus defines the observed state of TeleportRole

    Attributes
    ----------
    conditions : [ResourcesTeleportDevV5TeleportRoleStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of an object's state
    teleportResourceID : int, default is Undefined, optional
        teleport resource ID
    """


    conditions?: [ResourcesTeleportDevV5TeleportRoleStatusConditionsItems0]

    teleportResourceID?: int


schema ResourcesTeleportDevV5TeleportRoleStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


