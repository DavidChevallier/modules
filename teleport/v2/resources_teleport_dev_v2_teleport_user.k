"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema TeleportUser:
    """
    User is the Schema for the users API

    Attributes
    ----------
    apiVersion : str, default is "resources.teleport.dev/v2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TeleportUser", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ResourcesTeleportDevV2TeleportUserSpec, default is Undefined, optional
        spec
    status : ResourcesTeleportDevV2TeleportUserStatus, default is Undefined, optional
        status
    """


    apiVersion: "resources.teleport.dev/v2" = "resources.teleport.dev/v2"

    kind: "TeleportUser" = "TeleportUser"

    metadata?: v1.ObjectMeta

    spec?: ResourcesTeleportDevV2TeleportUserSpec

    status?: ResourcesTeleportDevV2TeleportUserStatus


schema ResourcesTeleportDevV2TeleportUserSpec:
    """
    User resource definition v2 from Teleport

    Attributes
    ----------
    github_identities : [ResourcesTeleportDevV2TeleportUserSpecGithubIdentitiesItems0], default is Undefined, optional
        GithubIdentities list associated Github OAuth2 identities that let user log in using externally verified identity
    oidc_identities : [ResourcesTeleportDevV2TeleportUserSpecOidcIdentitiesItems0], default is Undefined, optional
        OIDCIdentities lists associated OpenID Connect identities that let user log in using externally verified identity
    roles : [str], default is Undefined, optional
        Roles is a list of roles assigned to user
    saml_identities : [ResourcesTeleportDevV2TeleportUserSpecSamlIdentitiesItems0], default is Undefined, optional
        SAMLIdentities lists associated SAML identities that let user log in using externally verified identity
    traits : {str:[str]}, default is Undefined, optional
        Traits are key/value pairs received from an identity provider (through OIDC claims or SAML assertions) or from a system administrator for local accounts. Traits are used to populate role variables.
    trusted_device_ids : [str], default is Undefined, optional
        TrustedDeviceIDs contains the IDs of trusted devices enrolled by the user. Managed by the Device Trust subsystem, avoid manual edits.
    """


    github_identities?: [ResourcesTeleportDevV2TeleportUserSpecGithubIdentitiesItems0]

    oidc_identities?: [ResourcesTeleportDevV2TeleportUserSpecOidcIdentitiesItems0]

    roles?: [str]

    saml_identities?: [ResourcesTeleportDevV2TeleportUserSpecSamlIdentitiesItems0]

    traits?: {str:[str]}

    trusted_device_ids?: [str]


schema ResourcesTeleportDevV2TeleportUserSpecGithubIdentitiesItems0:
    """
    resources teleport dev v2 teleport user spec github identities items0

    Attributes
    ----------
    connector_id : str, default is Undefined, optional
        ConnectorID is id of registered OIDC connector, e.g. 'google-example.com'
    username : str, default is Undefined, optional
        Username is username supplied by external identity provider
    """


    connector_id?: str

    username?: str


schema ResourcesTeleportDevV2TeleportUserSpecOidcIdentitiesItems0:
    """
    resources teleport dev v2 teleport user spec oidc identities items0

    Attributes
    ----------
    connector_id : str, default is Undefined, optional
        ConnectorID is id of registered OIDC connector, e.g. 'google-example.com'
    username : str, default is Undefined, optional
        Username is username supplied by external identity provider
    """


    connector_id?: str

    username?: str


schema ResourcesTeleportDevV2TeleportUserSpecSamlIdentitiesItems0:
    """
    resources teleport dev v2 teleport user spec saml identities items0

    Attributes
    ----------
    connector_id : str, default is Undefined, optional
        ConnectorID is id of registered OIDC connector, e.g. 'google-example.com'
    username : str, default is Undefined, optional
        Username is username supplied by external identity provider
    """


    connector_id?: str

    username?: str


schema ResourcesTeleportDevV2TeleportUserStatus:
    """
    TeleportUserStatus defines the observed state of TeleportUser

    Attributes
    ----------
    conditions : [ResourcesTeleportDevV2TeleportUserStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of an object's state
    teleportResourceID : int, default is Undefined, optional
        teleport resource ID
    """


    conditions?: [ResourcesTeleportDevV2TeleportUserStatusConditionsItems0]

    teleportResourceID?: int


schema ResourcesTeleportDevV2TeleportUserStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


