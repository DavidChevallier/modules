"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema TeleportProvisionToken:
    """
    ProvisionToken is the Schema for the provisiontokens API

    Attributes
    ----------
    apiVersion : str, default is "resources.teleport.dev/v2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TeleportProvisionToken", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ResourcesTeleportDevV2TeleportProvisionTokenSpec, default is Undefined, optional
        spec
    status : ResourcesTeleportDevV2TeleportProvisionTokenStatus, default is Undefined, optional
        status
    """


    apiVersion: "resources.teleport.dev/v2" = "resources.teleport.dev/v2"

    kind: "TeleportProvisionToken" = "TeleportProvisionToken"

    metadata?: v1.ObjectMeta

    spec?: ResourcesTeleportDevV2TeleportProvisionTokenSpec

    status?: ResourcesTeleportDevV2TeleportProvisionTokenStatus


schema ResourcesTeleportDevV2TeleportProvisionTokenSpec:
    """
    ProvisionToken resource definition v2 from Teleport

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecAllowItems0], default is Undefined, optional
        Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.
    aws_iid_ttl : str, default is Undefined, optional
        AWSIIDTTL is the TTL to use for AWS EC2 Instance Identity Documents used to join the cluster with this token.
    azure : ResourcesTeleportDevV2TeleportProvisionTokenSpecAzure, default is Undefined, optional
        azure
    bot_name : str, default is Undefined, optional
        BotName is the name of the bot this token grants access to, if any
    circleci : ResourcesTeleportDevV2TeleportProvisionTokenSpecCircleci, default is Undefined, optional
        circleci
    gcp : ResourcesTeleportDevV2TeleportProvisionTokenSpecGcp, default is Undefined, optional
        gcp
    github : ResourcesTeleportDevV2TeleportProvisionTokenSpecGithub, default is Undefined, optional
        github
    gitlab : ResourcesTeleportDevV2TeleportProvisionTokenSpecGitlab, default is Undefined, optional
        gitlab
    join_method : str, default is Undefined, optional
        JoinMethod is the joining method required in order to use this token. Supported joining methods include "token", "ec2", and "iam".
    kubernetes : ResourcesTeleportDevV2TeleportProvisionTokenSpecKubernetes, default is Undefined, optional
        kubernetes
    roles : [str], default is Undefined, optional
        Roles is a list of roles associated with the token, that will be converted to metadata in the SSH and X509 certificates issued to the user of the token
    suggested_agent_matcher_labels : {str:any}, default is Undefined, optional
        SuggestedAgentMatcherLabels is a set of labels to be used by agents to match on resources. When an agent uses this token, the agent should monitor resources that match those labels. For databases, this means adding the labels to `db_service.resources.labels`. Currently, only node-join scripts create a configuration according to the suggestion.
    suggested_labels : {str:any}, default is Undefined, optional
        SuggestedLabels is a set of labels that resources should set when using this token to enroll themselves in the cluster. Currently, only node-join scripts create a configuration according to the suggestion.
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecAllowItems0]

    aws_iid_ttl?: str

    azure?: ResourcesTeleportDevV2TeleportProvisionTokenSpecAzure

    bot_name?: str

    circleci?: ResourcesTeleportDevV2TeleportProvisionTokenSpecCircleci

    gcp?: ResourcesTeleportDevV2TeleportProvisionTokenSpecGcp

    github?: ResourcesTeleportDevV2TeleportProvisionTokenSpecGithub

    gitlab?: ResourcesTeleportDevV2TeleportProvisionTokenSpecGitlab

    join_method?: str

    kubernetes?: ResourcesTeleportDevV2TeleportProvisionTokenSpecKubernetes

    roles?: [str]

    suggested_agent_matcher_labels?: {str:any}

    suggested_labels?: {str:any}


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec allow items0

    Attributes
    ----------
    aws_account : str, default is Undefined, optional
        AWSAccount is the AWS account ID.
    aws_arn : str, default is Undefined, optional
        AWSARN is used for the IAM join method, the AWS identity of joining nodes must match this ARN. Supports wildcards "*" and "?".
    aws_regions : [str], default is Undefined, optional
        AWSRegions is used for the EC2 join method and is a list of AWS regions a node is allowed to join from.
    aws_role : str, default is Undefined, optional
        AWSRole is used for the EC2 join method and is the the ARN of the AWS role that the auth server will assume in order to call the ec2 API.
    """


    aws_account?: str

    aws_arn?: str

    aws_regions?: [str]

    aws_role?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecAzure:
    """
    Azure allows the configuration of options specific to the "azure" join method.

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecAzureAllowItems0], default is Undefined, optional
        Allow is a list of Rules, nodes using this token must match one allow rule to use this token.
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecAzureAllowItems0]


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecAzureAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec azure allow items0

    Attributes
    ----------
    resource_groups : [str], default is Undefined, optional
        resource groups
    subscription : str, default is Undefined, optional
        subscription
    """


    resource_groups?: [str]

    subscription?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecCircleci:
    """
    CircleCI allows the configuration of options specific to the "circleci" join method.

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecCircleciAllowItems0], default is Undefined, optional
        Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.
    organization_id : str, default is Undefined, optional
        organization id
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecCircleciAllowItems0]

    organization_id?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecCircleciAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec circleci allow items0

    Attributes
    ----------
    context_id : str, default is Undefined, optional
        context id
    project_id : str, default is Undefined, optional
        project id
    """


    context_id?: str

    project_id?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecGcp:
    """
    GCP allows the configuration of options specific to the "gcp" join method.

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecGcpAllowItems0], default is Undefined, optional
        Allow is a list of Rules, nodes using this token must match one allow rule to use this token.
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecGcpAllowItems0]


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecGcpAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec gcp allow items0

    Attributes
    ----------
    locations : [str], default is Undefined, optional
        locations
    project_ids : [str], default is Undefined, optional
        project ids
    service_accounts : [str], default is Undefined, optional
        service accounts
    """


    locations?: [str]

    project_ids?: [str]

    service_accounts?: [str]


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecGithub:
    """
    GitHub allows the configuration of options specific to the "github" join method.

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecGithubAllowItems0], default is Undefined, optional
        Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.
    enterprise_server_host : str, default is Undefined, optional
        EnterpriseServerHost allows joining from runners associated with a GitHub Enterprise Server instance. When unconfigured, tokens will be validated against github.com, but when configured to the host of a GHES instance, then the tokens will be validated against host.  This value should be the hostname of the GHES instance, and should not include the scheme or a path. The instance must be accessible over HTTPS at this hostname and the certificate must be trusted by the Auth Server.
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecGithubAllowItems0]

    enterprise_server_host?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecGithubAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec github allow items0

    Attributes
    ----------
    actor : str, default is Undefined, optional
        actor
    environment : str, default is Undefined, optional
        environment
    ref : str, default is Undefined, optional
        ref
    ref_type : str, default is Undefined, optional
        ref type
    repository : str, default is Undefined, optional
        repository
    repository_owner : str, default is Undefined, optional
        repository owner
    sub : str, default is Undefined, optional
        sub
    workflow : str, default is Undefined, optional
        workflow
    """


    actor?: str

    environment?: str

    ref?: str

    ref_type?: str

    repository?: str

    repository_owner?: str

    sub?: str

    workflow?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecGitlab:
    """
    GitLab allows the configuration of options specific to the "gitlab" join method.

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecGitlabAllowItems0], default is Undefined, optional
        Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.
    domain : str, default is Undefined, optional
        Domain is the domain of your GitLab instance. This will default to `gitlab.com` - but can be set to the domain of your self-hosted GitLab e.g `gitlab.example.com`.
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecGitlabAllowItems0]

    domain?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecGitlabAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec gitlab allow items0

    Attributes
    ----------
    environment : str, default is Undefined, optional
        environment
    namespace_path : str, default is Undefined, optional
        namespace path
    pipeline_source : str, default is Undefined, optional
        pipeline source
    project_path : str, default is Undefined, optional
        project path
    ref : str, default is Undefined, optional
        ref
    ref_type : str, default is Undefined, optional
        ref type
    sub : str, default is Undefined, optional
        sub
    """


    environment?: str

    namespace_path?: str

    pipeline_source?: str

    project_path?: str

    ref?: str

    ref_type?: str

    sub?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecKubernetes:
    """
    Kubernetes allows the configuration of options specific to the "kubernetes" join method.

    Attributes
    ----------
    allow : [ResourcesTeleportDevV2TeleportProvisionTokenSpecKubernetesAllowItems0], default is Undefined, optional
        Allow is a list of Rules, nodes using this token must match one allow rule to use this token.
    """


    allow?: [ResourcesTeleportDevV2TeleportProvisionTokenSpecKubernetesAllowItems0]


schema ResourcesTeleportDevV2TeleportProvisionTokenSpecKubernetesAllowItems0:
    """
    resources teleport dev v2 teleport provision token spec kubernetes allow items0

    Attributes
    ----------
    service_account : str, default is Undefined, optional
        service account
    """


    service_account?: str


schema ResourcesTeleportDevV2TeleportProvisionTokenStatus:
    """
    TeleportProvisionTokenStatus defines the observed state of TeleportProvisionToken

    Attributes
    ----------
    conditions : [ResourcesTeleportDevV2TeleportProvisionTokenStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of an object's state
    teleportResourceID : int, default is Undefined, optional
        teleport resource ID
    """


    conditions?: [ResourcesTeleportDevV2TeleportProvisionTokenStatusConditionsItems0]

    teleportResourceID?: int


schema ResourcesTeleportDevV2TeleportProvisionTokenStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


