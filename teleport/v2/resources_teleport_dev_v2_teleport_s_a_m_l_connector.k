"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema TeleportSAMLConnector:
    """
    SAMLConnector is the Schema for the samlconnectors API

    Attributes
    ----------
    apiVersion : str, default is "resources.teleport.dev/v2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TeleportSAMLConnector", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ResourcesTeleportDevV2TeleportSAMLConnectorSpec, default is Undefined, optional
        spec
    status : ResourcesTeleportDevV2TeleportSAMLConnectorStatus, default is Undefined, optional
        status
    """


    apiVersion: "resources.teleport.dev/v2" = "resources.teleport.dev/v2"

    kind: "TeleportSAMLConnector" = "TeleportSAMLConnector"

    metadata?: v1.ObjectMeta

    spec?: ResourcesTeleportDevV2TeleportSAMLConnectorSpec

    status?: ResourcesTeleportDevV2TeleportSAMLConnectorStatus


schema ResourcesTeleportDevV2TeleportSAMLConnectorSpec:
    """
    SAMLConnector resource definition v2 from Teleport

    Attributes
    ----------
    acs : str, default is Undefined, optional
        AssertionConsumerService is a URL for assertion consumer service on the service provider (Teleport's side).
    allow_idp_initiated : bool, default is Undefined, optional
        AllowIDPInitiated is a flag that indicates if the connector can be used for IdP-initiated logins.
    assertion_key_pair : ResourcesTeleportDevV2TeleportSAMLConnectorSpecAssertionKeyPair, default is Undefined, optional
        assertion key pair
    attributes_to_roles : [ResourcesTeleportDevV2TeleportSAMLConnectorSpecAttributesToRolesItems0], default is Undefined, optional
        AttributesToRoles is a list of mappings of attribute statements to roles.
    audience : str, default is Undefined, optional
        Audience uniquely identifies our service provider.
    cert : str, default is Undefined, optional
        Cert is the identity provider certificate PEM. IDP signs <Response> responses using this certificate.
    display : str, default is Undefined, optional
        Display controls how this connector is displayed.
    entity_descriptor : str, default is Undefined, optional
        EntityDescriptor is XML with descriptor. It can be used to supply configuration parameters in one XML file rather than supplying them in the individual elements.
    entity_descriptor_url : str, default is Undefined, optional
        EntityDescriptorURL is a URL that supplies a configuration XML.
    issuer : str, default is Undefined, optional
        Issuer is the identity provider issuer.
    provider : str, default is Undefined, optional
        Provider is the external identity provider.
    service_provider_issuer : str, default is Undefined, optional
        ServiceProviderIssuer is the issuer of the service provider (Teleport).
    signing_key_pair : ResourcesTeleportDevV2TeleportSAMLConnectorSpecSigningKeyPair, default is Undefined, optional
        signing key pair
    sso : str, default is Undefined, optional
        SSO is the URL of the identity provider's SSO service.
    """


    acs?: str

    allow_idp_initiated?: bool

    assertion_key_pair?: ResourcesTeleportDevV2TeleportSAMLConnectorSpecAssertionKeyPair

    attributes_to_roles?: [ResourcesTeleportDevV2TeleportSAMLConnectorSpecAttributesToRolesItems0]

    audience?: str

    cert?: str

    display?: str

    entity_descriptor?: str

    entity_descriptor_url?: str

    issuer?: str

    provider?: str

    service_provider_issuer?: str

    signing_key_pair?: ResourcesTeleportDevV2TeleportSAMLConnectorSpecSigningKeyPair

    sso?: str


schema ResourcesTeleportDevV2TeleportSAMLConnectorSpecAssertionKeyPair:
    """
    EncryptionKeyPair is a key pair used for decrypting SAML assertions.

    Attributes
    ----------
    cert : str, default is Undefined, optional
        Cert is a PEM-encoded x509 certificate.
    private_key : str, default is Undefined, optional
        PrivateKey is a PEM encoded x509 private key.
    """


    cert?: str

    private_key?: str


schema ResourcesTeleportDevV2TeleportSAMLConnectorSpecAttributesToRolesItems0:
    """
    resources teleport dev v2 teleport s a m l connector spec attributes to roles items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name is an attribute statement name.
    roles : [str], default is Undefined, optional
        Roles is a list of static teleport roles to map to.
    value : str, default is Undefined, optional
        Value is an attribute statement value to match.
    """


    name?: str

    roles?: [str]

    value?: str


schema ResourcesTeleportDevV2TeleportSAMLConnectorSpecSigningKeyPair:
    """
    SigningKeyPair is an x509 key pair used to sign AuthnRequest.

    Attributes
    ----------
    cert : str, default is Undefined, optional
        Cert is a PEM-encoded x509 certificate.
    private_key : str, default is Undefined, optional
        PrivateKey is a PEM encoded x509 private key.
    """


    cert?: str

    private_key?: str


schema ResourcesTeleportDevV2TeleportSAMLConnectorStatus:
    """
    TeleportSAMLConnectorStatus defines the observed state of TeleportSAMLConnector

    Attributes
    ----------
    conditions : [ResourcesTeleportDevV2TeleportSAMLConnectorStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of an object's state
    teleportResourceID : int, default is Undefined, optional
        teleport resource ID
    """


    conditions?: [ResourcesTeleportDevV2TeleportSAMLConnectorStatusConditionsItems0]

    teleportResourceID?: int


schema ResourcesTeleportDevV2TeleportSAMLConnectorStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0
        len(reason) <= 1024
        len(reason) >= 1
        regex.match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        regex.match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


