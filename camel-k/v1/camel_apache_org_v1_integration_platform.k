"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IntegrationPlatform:
    """
    IntegrationPlatform is the resource used to drive the Camel K operator behavior. It defines the behavior of all Custom Resources (`IntegrationKit`, `Integration`, `Kamelet`) in the given namespace. When the Camel K operator is installed in `global` mode, you will need to specify an `IntegrationPlatform` in each namespace where you want the Camel K operator to be executed.

    Attributes
    ----------
    apiVersion : str, default is "camel.apache.org/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IntegrationPlatform", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CamelApacheOrgV1IntegrationPlatformSpec, default is Undefined, optional
        spec
    status : CamelApacheOrgV1IntegrationPlatformStatus, default is Undefined, optional
        status
    """


    apiVersion: "camel.apache.org/v1" = "camel.apache.org/v1"

    kind: "IntegrationPlatform" = "IntegrationPlatform"

    metadata?: v1.ObjectMeta

    spec?: CamelApacheOrgV1IntegrationPlatformSpec

    status?: CamelApacheOrgV1IntegrationPlatformStatus


schema CamelApacheOrgV1IntegrationPlatformSpec:
    """
    IntegrationPlatformSpec defines the desired state of IntegrationPlatform.

    Attributes
    ----------
    build : CamelApacheOrgV1IntegrationPlatformSpecBuild, default is Undefined, optional
        build
    cluster : str, default is Undefined, optional
        what kind of cluster you're running (ie, plain Kubernetes or OpenShift)
    configuration : [CamelApacheOrgV1IntegrationPlatformSpecConfigurationItems0], default is Undefined, optional
        Deprecated: Use camel trait (camel.properties) to manage properties Use mount trait (mount.configs) to manage configs Use mount trait (mount.resources) to manage resources Use mount trait (mount.volumes) to manage volumes list of configuration properties to be attached to all the Integration/IntegrationKits built from this IntegrationPlatform
    kamelet : CamelApacheOrgV1IntegrationPlatformSpecKamelet, default is Undefined, optional
        kamelet
    profile : str, default is Undefined, optional
        the profile you wish to use. It will apply certain traits which are required by the specific profile chosen. It usually relates the Cluster with the optional definition of special profiles (ie, Knative)
    traits : CamelApacheOrgV1IntegrationPlatformSpecTraits, default is Undefined, optional
        traits
    """


    build?: CamelApacheOrgV1IntegrationPlatformSpecBuild

    cluster?: str

    configuration?: [CamelApacheOrgV1IntegrationPlatformSpecConfigurationItems0]

    kamelet?: CamelApacheOrgV1IntegrationPlatformSpecKamelet

    profile?: str

    traits?: CamelApacheOrgV1IntegrationPlatformSpecTraits


schema CamelApacheOrgV1IntegrationPlatformSpecBuild:
    """
    specify how to build the Integration/IntegrationKits

    Attributes
    ----------
    PublishStrategyOptions : {str:str}, default is Undefined, optional
        Generic options that can used by any publish strategy
    baseImage : str, default is Undefined, optional
        a base image that can be used as base layer for all images. It can be useful if you want to provide some custom base image with further utility softwares
    buildCatalogToolTimeout : str, default is Undefined, optional
        the timeout (in seconds) to use when creating the build tools container image Deprecated: no longer in use
    buildConfiguration : CamelApacheOrgV1IntegrationPlatformSpecBuildBuildConfiguration, default is Undefined, optional
        build configuration
    maven : CamelApacheOrgV1IntegrationPlatformSpecBuildMaven, default is Undefined, optional
        maven
    maxRunningBuilds : int, default is Undefined, optional
        the maximum amount of parallel running pipelines started by this operator instance
    publishStrategy : str, default is Undefined, optional
        the strategy to adopt for publishing an Integration container image
    registry : CamelApacheOrgV1IntegrationPlatformSpecBuildRegistry, default is Undefined, optional
        registry
    runtimeProvider : str, default is Undefined, optional
        the runtime used. Likely Camel Quarkus (we used to have main runtime which has been discontinued since version 1.5)
    runtimeVersion : str, default is Undefined, optional
        the Camel K Runtime dependency version
    timeout : str, default is Undefined, optional
        how much time to wait before time out the pipeline process
    """


    PublishStrategyOptions?: {str:str}

    baseImage?: str

    buildCatalogToolTimeout?: str

    buildConfiguration?: CamelApacheOrgV1IntegrationPlatformSpecBuildBuildConfiguration

    maven?: CamelApacheOrgV1IntegrationPlatformSpecBuildMaven

    maxRunningBuilds?: int

    publishStrategy?: str

    registry?: CamelApacheOrgV1IntegrationPlatformSpecBuildRegistry

    runtimeProvider?: str

    runtimeVersion?: str

    timeout?: str


schema CamelApacheOrgV1IntegrationPlatformSpecBuildBuildConfiguration:
    """
    the configuration required to build an Integration container image

    Attributes
    ----------
    limitCPU : str, default is Undefined, optional
        The maximum amount of CPU required. Only used for `pod` strategy
    limitMemory : str, default is Undefined, optional
        The maximum amount of memory required. Only used for `pod` strategy
    operatorNamespace : str, default is Undefined, optional
        The namespace where to run the builder Pod (must be the same of the operator in charge of this Build reconciliation).
    orderStrategy : str, default is Undefined, optional
        the build order strategy to adopt
    requestCPU : str, default is Undefined, optional
        The minimum amount of CPU required. Only used for `pod` strategy
    requestMemory : str, default is Undefined, optional
        The minimum amount of memory required. Only used for `pod` strategy
    strategy : str, default is Undefined, optional
        the strategy to adopt
    toolImage : str, default is Undefined, optional
        The container image to be used to run the build.
    """


    limitCPU?: str

    limitMemory?: str

    operatorNamespace?: str

    orderStrategy?: "dependencies" | "fifo" | "sequential"

    requestCPU?: str

    requestMemory?: str

    strategy?: "routine" | "pod"

    toolImage?: str


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMaven:
    """
    Maven configuration used to build the Camel/Camel-Quarkus applications

    Attributes
    ----------
    caSecrets : [CamelApacheOrgV1IntegrationPlatformSpecBuildMavenCaSecretsItems0], default is Undefined, optional
        The Secrets name and key, containing the CA certificate(s) used to connect to remote Maven repositories. It can contain X.509 certificates, and PKCS#7 formatted certificate chains. A JKS formatted keystore is automatically created to store the CA certificate(s), and configured to be used as a trusted certificate(s) by the Maven commands. Note that the root CA certificates are also imported into the created keystore.
    cliOptions : [str], default is Undefined, optional
        The CLI options that are appended to the list of arguments for Maven commands, e.g., `-V,--no-transfer-progress,-Dstyle.color=never`. See https://maven.apache.org/ref/3.8.4/maven-embedder/cli.html.
    extension : [CamelApacheOrgV1IntegrationPlatformSpecBuildMavenExtensionItems0], default is Undefined, optional
        The Maven build extensions. See https://maven.apache.org/guides/mini/guide-using-extensions.html.
    localRepository : str, default is Undefined, optional
        The path of the local Maven repository.
    profiles : [CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0], default is Undefined, optional
        A reference to the ConfigMap or Secret key that contains the Maven profile.
    properties : {str:str}, default is Undefined, optional
        The Maven properties.
    settings : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettings, default is Undefined, optional
        settings
    settingsSecurity : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecurity, default is Undefined, optional
        settings security
    """


    caSecrets?: [CamelApacheOrgV1IntegrationPlatformSpecBuildMavenCaSecretsItems0]

    cliOptions?: [str]

    extension?: [CamelApacheOrgV1IntegrationPlatformSpecBuildMavenExtensionItems0]

    localRepository?: str

    profiles?: [CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0]

    properties?: {str:str}

    settings?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettings

    settingsSecurity?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecurity


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenCaSecretsItems0:
    """
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenExtensionItems0:
    """
    MavenArtifact defines a GAV (Group:Artifact:Version) Maven artifact.

    Attributes
    ----------
    artifactId : str, default is Undefined, required
        Maven Artifact
    groupId : str, default is Undefined, required
        Maven Group
    version : str, default is Undefined, optional
        Maven Version
    """


    artifactId: str

    groupId: str

    version?: str


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0:
    """
    ValueSource --.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0ConfigMapKeyRef, default is Undefined, optional
        config map key ref
    secretKeyRef : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0SecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0ConfigMapKeyRef

    secretKeyRef?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0SecretKeyRef


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0ConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenProfilesItems0SecretKeyRef:
    """
    Selects a key of a secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettings:
    """
    A reference to the ConfigMap or Secret key that contains the Maven settings.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsConfigMapKeyRef, default is Undefined, optional
        config map key ref
    secretKeyRef : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsConfigMapKeyRef

    secretKeyRef?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecretKeyRef


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecretKeyRef:
    """
    Selects a key of a secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecurity:
    """
    A reference to the ConfigMap or Secret key that contains the security of the Maven settings.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecurityConfigMapKeyRef, default is Undefined, optional
        config map key ref
    secretKeyRef : CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecuritySecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecurityConfigMapKeyRef

    secretKeyRef?: CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecuritySecretKeyRef


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecurityConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildMavenSettingsSecuritySecretKeyRef:
    """
    Selects a key of a secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecBuildRegistry:
    """
    the image registry used to push/pull Integration images

    Attributes
    ----------
    address : str, default is Undefined, optional
        the URI to access
    ca : str, default is Undefined, optional
        the configmap which stores the Certificate Authority
    insecure : bool, default is Undefined, optional
        if the container registry is insecure (ie, http only)
    organization : str, default is Undefined, optional
        the registry organization
    secret : str, default is Undefined, optional
        the secret where credentials are stored
    """


    address?: str

    ca?: str

    insecure?: bool

    organization?: str

    secret?: str


schema CamelApacheOrgV1IntegrationPlatformSpecConfigurationItems0:
    """
    ConfigurationSpec represents a generic configuration specification.

    Attributes
    ----------
    $type : str, default is Undefined, required
        represents the type of configuration, ie: property, configmap, secret, ...
    value : str, default is Undefined, required
        the value to assign to the configuration (syntax may vary depending on the `Type`)
    """


    $type: str

    value: str


schema CamelApacheOrgV1IntegrationPlatformSpecKamelet:
    """
    configuration to be executed to all Kamelets controlled by this IntegrationPlatform

    Attributes
    ----------
    repositories : [CamelApacheOrgV1IntegrationPlatformSpecKameletRepositoriesItems0], default is Undefined, optional
        remote repository used to retrieve Kamelet catalog
    """


    repositories?: [CamelApacheOrgV1IntegrationPlatformSpecKameletRepositoriesItems0]


schema CamelApacheOrgV1IntegrationPlatformSpecKameletRepositoriesItems0:
    """
    IntegrationPlatformKameletRepositorySpec defines the location of the Kamelet catalog to use.

    Attributes
    ----------
    uri : str, default is Undefined, optional
        the remote repository in the format github:ORG/REPO/PATH_TO_KAMELETS_FOLDER
    """


    uri?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraits:
    """
    list of traits to be executed for all the Integration/IntegrationKits built from this IntegrationPlatform

    Attributes
    ----------
    3scale : CamelApacheOrgV1IntegrationPlatformSpecTraitsNr3scale, default is Undefined, optional
        3scale
    addons : {str:any}, default is Undefined, optional
        The extension point with addon traits
    affinity : CamelApacheOrgV1IntegrationPlatformSpecTraitsAffinity, default is Undefined, optional
        affinity
    builder : CamelApacheOrgV1IntegrationPlatformSpecTraitsBuilder, default is Undefined, optional
        builder
    camel : CamelApacheOrgV1IntegrationPlatformSpecTraitsCamel, default is Undefined, optional
        camel
    container : CamelApacheOrgV1IntegrationPlatformSpecTraitsContainer, default is Undefined, optional
        container
    cron : CamelApacheOrgV1IntegrationPlatformSpecTraitsCron, default is Undefined, optional
        cron
    dependencies : CamelApacheOrgV1IntegrationPlatformSpecTraitsDependencies, default is Undefined, optional
        dependencies
    deployer : CamelApacheOrgV1IntegrationPlatformSpecTraitsDeployer, default is Undefined, optional
        deployer
    deployment : CamelApacheOrgV1IntegrationPlatformSpecTraitsDeployment, default is Undefined, optional
        deployment
    environment : CamelApacheOrgV1IntegrationPlatformSpecTraitsEnvironment, default is Undefined, optional
        environment
    error_handler : CamelApacheOrgV1IntegrationPlatformSpecTraitsErrorHandler, default is Undefined, optional
        error handler
    gc : CamelApacheOrgV1IntegrationPlatformSpecTraitsGc, default is Undefined, optional
        gc
    health : CamelApacheOrgV1IntegrationPlatformSpecTraitsHealth, default is Undefined, optional
        health
    ingress : CamelApacheOrgV1IntegrationPlatformSpecTraitsIngress, default is Undefined, optional
        ingress
    istio : CamelApacheOrgV1IntegrationPlatformSpecTraitsIstio, default is Undefined, optional
        istio
    jolokia : CamelApacheOrgV1IntegrationPlatformSpecTraitsJolokia, default is Undefined, optional
        jolokia
    jvm : CamelApacheOrgV1IntegrationPlatformSpecTraitsJvm, default is Undefined, optional
        jvm
    kamelets : CamelApacheOrgV1IntegrationPlatformSpecTraitsKamelets, default is Undefined, optional
        kamelets
    keda : CamelApacheOrgV1IntegrationPlatformSpecTraitsKeda, default is Undefined, optional
        keda
    knative : CamelApacheOrgV1IntegrationPlatformSpecTraitsKnative, default is Undefined, optional
        knative
    knative_service : CamelApacheOrgV1IntegrationPlatformSpecTraitsKnativeService, default is Undefined, optional
        knative service
    logging : CamelApacheOrgV1IntegrationPlatformSpecTraitsLogging, default is Undefined, optional
        logging
    master : CamelApacheOrgV1IntegrationPlatformSpecTraitsMaster, default is Undefined, optional
        master
    mount : CamelApacheOrgV1IntegrationPlatformSpecTraitsMount, default is Undefined, optional
        mount
    openapi : CamelApacheOrgV1IntegrationPlatformSpecTraitsOpenapi, default is Undefined, optional
        openapi
    owner : CamelApacheOrgV1IntegrationPlatformSpecTraitsOwner, default is Undefined, optional
        owner
    pdb : CamelApacheOrgV1IntegrationPlatformSpecTraitsPdb, default is Undefined, optional
        pdb
    platform : CamelApacheOrgV1IntegrationPlatformSpecTraitsPlatform, default is Undefined, optional
        platform
    pod : CamelApacheOrgV1IntegrationPlatformSpecTraitsPod, default is Undefined, optional
        pod
    prometheus : CamelApacheOrgV1IntegrationPlatformSpecTraitsPrometheus, default is Undefined, optional
        prometheus
    pull_secret : CamelApacheOrgV1IntegrationPlatformSpecTraitsPullSecret, default is Undefined, optional
        pull secret
    quarkus : CamelApacheOrgV1IntegrationPlatformSpecTraitsQuarkus, default is Undefined, optional
        quarkus
    registry : CamelApacheOrgV1IntegrationPlatformSpecTraitsRegistry, default is Undefined, optional
        registry
    route : CamelApacheOrgV1IntegrationPlatformSpecTraitsRoute, default is Undefined, optional
        route
    service : CamelApacheOrgV1IntegrationPlatformSpecTraitsService, default is Undefined, optional
        service
    service_binding : CamelApacheOrgV1IntegrationPlatformSpecTraitsServiceBinding, default is Undefined, optional
        service binding
    strimzi : CamelApacheOrgV1IntegrationPlatformSpecTraitsStrimzi, default is Undefined, optional
        strimzi
    toleration : CamelApacheOrgV1IntegrationPlatformSpecTraitsToleration, default is Undefined, optional
        toleration
    tracing : CamelApacheOrgV1IntegrationPlatformSpecTraitsTracing, default is Undefined, optional
        tracing
    """


    "3scale"?: CamelApacheOrgV1IntegrationPlatformSpecTraitsNr3scale

    addons?: {str:any}

    affinity?: CamelApacheOrgV1IntegrationPlatformSpecTraitsAffinity

    builder?: CamelApacheOrgV1IntegrationPlatformSpecTraitsBuilder

    camel?: CamelApacheOrgV1IntegrationPlatformSpecTraitsCamel

    container?: CamelApacheOrgV1IntegrationPlatformSpecTraitsContainer

    cron?: CamelApacheOrgV1IntegrationPlatformSpecTraitsCron

    dependencies?: CamelApacheOrgV1IntegrationPlatformSpecTraitsDependencies

    deployer?: CamelApacheOrgV1IntegrationPlatformSpecTraitsDeployer

    deployment?: CamelApacheOrgV1IntegrationPlatformSpecTraitsDeployment

    environment?: CamelApacheOrgV1IntegrationPlatformSpecTraitsEnvironment

    error_handler?: CamelApacheOrgV1IntegrationPlatformSpecTraitsErrorHandler

    gc?: CamelApacheOrgV1IntegrationPlatformSpecTraitsGc

    health?: CamelApacheOrgV1IntegrationPlatformSpecTraitsHealth

    ingress?: CamelApacheOrgV1IntegrationPlatformSpecTraitsIngress

    istio?: CamelApacheOrgV1IntegrationPlatformSpecTraitsIstio

    jolokia?: CamelApacheOrgV1IntegrationPlatformSpecTraitsJolokia

    jvm?: CamelApacheOrgV1IntegrationPlatformSpecTraitsJvm

    kamelets?: CamelApacheOrgV1IntegrationPlatformSpecTraitsKamelets

    keda?: CamelApacheOrgV1IntegrationPlatformSpecTraitsKeda

    knative?: CamelApacheOrgV1IntegrationPlatformSpecTraitsKnative

    knative_service?: CamelApacheOrgV1IntegrationPlatformSpecTraitsKnativeService

    logging?: CamelApacheOrgV1IntegrationPlatformSpecTraitsLogging

    master?: CamelApacheOrgV1IntegrationPlatformSpecTraitsMaster

    mount?: CamelApacheOrgV1IntegrationPlatformSpecTraitsMount

    openapi?: CamelApacheOrgV1IntegrationPlatformSpecTraitsOpenapi

    owner?: CamelApacheOrgV1IntegrationPlatformSpecTraitsOwner

    pdb?: CamelApacheOrgV1IntegrationPlatformSpecTraitsPdb

    platform?: CamelApacheOrgV1IntegrationPlatformSpecTraitsPlatform

    pod?: CamelApacheOrgV1IntegrationPlatformSpecTraitsPod

    prometheus?: CamelApacheOrgV1IntegrationPlatformSpecTraitsPrometheus

    pull_secret?: CamelApacheOrgV1IntegrationPlatformSpecTraitsPullSecret

    quarkus?: CamelApacheOrgV1IntegrationPlatformSpecTraitsQuarkus

    registry?: CamelApacheOrgV1IntegrationPlatformSpecTraitsRegistry

    route?: CamelApacheOrgV1IntegrationPlatformSpecTraitsRoute

    service?: CamelApacheOrgV1IntegrationPlatformSpecTraitsService

    service_binding?: CamelApacheOrgV1IntegrationPlatformSpecTraitsServiceBinding

    strimzi?: CamelApacheOrgV1IntegrationPlatformSpecTraitsStrimzi

    toleration?: CamelApacheOrgV1IntegrationPlatformSpecTraitsToleration

    tracing?: CamelApacheOrgV1IntegrationPlatformSpecTraitsTracing


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsAffinity:
    """
    The configuration of Affinity trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    nodeAffinityLabels : [str], default is Undefined, optional
        Defines a set of nodes the integration pod(s) are eligible to be scheduled on, based on labels on the node.
    podAffinity : bool, default is Undefined, optional
        Always co-locates multiple replicas of the integration in the same node (default *false*).
    podAffinityLabels : [str], default is Undefined, optional
        Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should be co-located with.
    podAntiAffinity : bool, default is Undefined, optional
        Never co-locates multiple replicas of the integration in the same node (default *false*).
    podAntiAffinityLabels : [str], default is Undefined, optional
        Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should not be co-located with.
    """


    configuration?: any

    enabled?: bool

    nodeAffinityLabels?: [str]

    podAffinity?: bool

    podAffinityLabels?: [str]

    podAntiAffinity?: bool

    podAntiAffinityLabels?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsBuilder:
    """
    The configuration of Builder trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    incrementalImageBuild : bool, default is Undefined, optional
        Use the incremental image build option, to reuse existing containers (default `true`)
    limitCPU : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    limitMemory : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    mavenProfiles : [str], default is Undefined, optional
        A list of references pointing to configmaps/secrets that contains a maven profile. The content of the maven profile is expected to be a text containing a valid maven profile starting with `<profile>` and ending with `</profile>` that will be integrated as an inline profile in the POM. Syntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).
    orderStrategy : str, default is Undefined, optional
        The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default sequential)
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the build task
    requestCPU : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    requestMemory : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    strategy : str, default is Undefined, optional
        The strategy to use, either `pod` or `routine` (default routine)
    tasks : [str], default is Undefined, optional
        A list of tasks to be executed (available only when using `pod` strategy) with format `<name>;<container-image>;<container-command>`.
    tasksLimitCPU : [str], default is Undefined, optional
        A list of limit cpu configuration for the specific task with format `<task-name>:<limit-cpu-conf>`.
    tasksLimitMemory : [str], default is Undefined, optional
        A list of limit memory configuration for the specific task with format `<task-name>:<limit-memory-conf>`.
    tasksRequestCPU : [str], default is Undefined, optional
        A list of request cpu configuration for the specific task with format `<task-name>:<request-cpu-conf>`.
    tasksRequestMemory : [str], default is Undefined, optional
        A list of request memory configuration for the specific task with format `<task-name>:<request-memory-conf>`.
    verbose : bool, default is Undefined, optional
        Enable verbose logging on build components that support it (e.g. Kaniko build pod).
    """


    configuration?: any

    enabled?: bool

    incrementalImageBuild?: bool

    limitCPU?: str

    limitMemory?: str

    mavenProfiles?: [str]

    orderStrategy?: str

    properties?: [str]

    requestCPU?: str

    requestMemory?: str

    strategy?: str

    tasks?: [str]

    tasksLimitCPU?: [str]

    tasksLimitMemory?: [str]

    tasksRequestCPU?: [str]

    tasksRequestMemory?: [str]

    verbose?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsCamel:
    """
    The configuration of Camel trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the Integration runtime
    runtimeVersion : str, default is Undefined, optional
        The camel-k-runtime version to use for the integration. It overrides the default version set in the Integration Platform.
    """


    configuration?: any

    enabled?: bool

    properties?: [str]

    runtimeVersion?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsContainer:
    """
    The configuration of Container trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically enable the trait
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    expose : bool, default is Undefined, optional
        Can be used to enable/disable exposure via kubernetes Service.
    image : str, default is Undefined, optional
        The main container image
    imagePullPolicy : str, default is Undefined, optional
        The pull policy: Always|Never|IfNotPresent
    limitCPU : str, default is Undefined, optional
        The maximum amount of CPU required.
    limitMemory : str, default is Undefined, optional
        The maximum amount of memory required.
    name : str, default is Undefined, optional
        The main container name. It's named `integration` by default.
    port : int, default is Undefined, optional
        To configure a different port exposed by the container (default `8080`).
    portName : str, default is Undefined, optional
        To configure a different port name for the port exposed by the container. It defaults to `http` only when the `expose` parameter is true.
    requestCPU : str, default is Undefined, optional
        The minimum amount of CPU required.
    requestMemory : str, default is Undefined, optional
        The minimum amount of memory required.
    servicePort : int, default is Undefined, optional
        To configure under which service port the container port is to be exposed (default `80`).
    servicePortName : str, default is Undefined, optional
        To configure under which service port name the container port is to be exposed (default `http`).
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    expose?: bool

    image?: str

    imagePullPolicy?: "Always" | "Never" | "IfNotPresent"

    limitCPU?: str

    limitMemory?: str

    name?: str

    port?: int

    portName?: str

    requestCPU?: str

    requestMemory?: str

    servicePort?: int

    servicePortName?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsCron:
    """
    The configuration of Cron trait

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
        Specifies the duration in seconds, relative to the start time, that the job may be continuously active before it is considered to be failed. It defaults to 60s.
    auto : bool, default is Undefined, optional
        Automatically deploy the integration as CronJob when all routes are either starting from a periodic consumer (only `cron`, `timer` and `quartz` are supported) or a passive consumer (e.g. `direct` is a passive consumer). 
         It's required that all periodic consumers have the same period, and it can be expressed as cron schedule (e.g. `1m` can be expressed as `0/1 * * * *`, while `35m` or `50s` cannot).
    backoffLimit : int, default is Undefined, optional
        Specifies the number of retries before marking the job failed. It defaults to 2.
    components : str, default is Undefined, optional
        A comma separated list of the Camel components that need to be customized in order for them to work when the schedule is triggered externally by Kubernetes. A specific customizer is activated for each specified component. E.g. for the `timer` component, the `cron-timer` customizer is activated (it's present in the `org.apache.camel.k:camel-k-cron` library). 
         Supported components are currently: `cron`, `timer` and `quartz`.
    concurrencyPolicy : str, default is Undefined, optional
        Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow": allows CronJobs to run concurrently; - "Forbid" (default): forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    fallback : bool, default is Undefined, optional
        Use the default Camel implementation of the `cron` endpoint (`quartz`) instead of trying to materialize the integration as Kubernetes CronJob.
    schedule : str, default is Undefined, optional
        The CronJob schedule for the whole integration. If multiple routes are declared, they must have the same schedule for this mechanism to work correctly.
    startingDeadlineSeconds : int, default is Undefined, optional
        Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
    """


    activeDeadlineSeconds?: int

    auto?: bool

    backoffLimit?: int

    components?: str

    concurrencyPolicy?: "Allow" | "Forbid" | "Replace"

    configuration?: any

    enabled?: bool

    fallback?: bool

    schedule?: str

    startingDeadlineSeconds?: int


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsDependencies:
    """
    The configuration of Dependencies trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsDeployer:
    """
    The configuration of Deployer trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    kind : str, default is Undefined, optional
        Allows to explicitly select the desired deployment kind between `deployment`, `cron-job` or `knative-service` when creating the resources for running the integration.
    useSSA : bool, default is Undefined, optional
        Use server-side apply to update the owned resources (default `true`). Note that it automatically falls back to client-side patching, if SSA is not available, e.g., on old Kubernetes clusters.
    """


    configuration?: any

    enabled?: bool

    kind?: "deployment" | "cron-job" | "knative-service"

    useSSA?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsDeployment:
    """
    The configuration of Deployment trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    progressDeadlineSeconds : int, default is Undefined, optional
        The maximum time in seconds for the deployment to make progress before it is considered to be failed. It defaults to 60s.
    rollingUpdateMaxSurge : int, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%.
    rollingUpdateMaxUnavailable : int, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%.
    strategy : str, default is Undefined, optional
        The deployment strategy to use to replace existing pods with new ones.
    """


    configuration?: any

    enabled?: bool

    progressDeadlineSeconds?: int

    rollingUpdateMaxSurge?: int

    rollingUpdateMaxUnavailable?: int

    strategy?: "Recreate" | "RollingUpdate"


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsEnvironment:
    """
    The configuration of Environment trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    containerMeta : bool, default is Undefined, optional
        Enables injection of `NAMESPACE` and `POD_NAME` environment variables (default `true`)
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    httpProxy : bool, default is Undefined, optional
        Propagates the `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables (default `true`)
    vars : [str], default is Undefined, optional
        A list of environment variables to be added to the integration container. The syntax is KEY=VALUE, e.g., `MY_VAR="my value"`. These take precedence over the previously defined environment variables.
    """


    configuration?: any

    containerMeta?: bool

    enabled?: bool

    httpProxy?: bool

    vars?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsErrorHandler:
    """
    The configuration of Error Handler trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    ref : str, default is Undefined, optional
        The error handler ref name provided or found in application properties
    """


    configuration?: any

    enabled?: bool

    ref?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsGc:
    """
    The configuration of GC trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    discoveryCache : str, default is Undefined, optional
        Discovery client cache to be used, either `disabled`, `disk` or `memory` (default `memory`). Deprecated: to be removed from trait configuration.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    discoveryCache?: "disabled" | "disk" | "memory"

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsHealth:
    """
    The configuration of Health trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    livenessFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the liveness probe to be considered failed after having succeeded.
    livenessInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the liveness probe is initiated.
    livenessPeriod : int, default is Undefined, optional
        How often to perform the liveness probe.
    livenessProbeEnabled : bool, default is Undefined, optional
        Configures the liveness probe for the integration container (default `false`).
    livenessScheme : str, default is Undefined, optional
        Scheme to use when connecting to the liveness probe (default `HTTP`).
    livenessSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the liveness probe to be considered successful after having failed.
    livenessTimeout : int, default is Undefined, optional
        Number of seconds after which the liveness probe times out.
    readinessFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the readiness probe to be considered failed after having succeeded.
    readinessInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the readiness probe is initiated.
    readinessPeriod : int, default is Undefined, optional
        How often to perform the readiness probe.
    readinessProbeEnabled : bool, default is Undefined, optional
        Configures the readiness probe for the integration container (default `true`).
    readinessScheme : str, default is Undefined, optional
        Scheme to use when connecting to the readiness probe (default `HTTP`).
    readinessSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the readiness probe to be considered successful after having failed.
    readinessTimeout : int, default is Undefined, optional
        Number of seconds after which the readiness probe times out.
    startupFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the startup probe to be considered failed after having succeeded.
    startupInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the startup probe is initiated.
    startupPeriod : int, default is Undefined, optional
        How often to perform the startup probe.
    startupProbeEnabled : bool, default is Undefined, optional
        Configures the startup probe for the integration container (default `false`).
    startupScheme : str, default is Undefined, optional
        Scheme to use when connecting to the startup probe (default `HTTP`).
    startupSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the startup probe to be considered successful after having failed.
    startupTimeout : int, default is Undefined, optional
        Number of seconds after which the startup probe times out.
    """


    configuration?: any

    enabled?: bool

    livenessFailureThreshold?: int

    livenessInitialDelay?: int

    livenessPeriod?: int

    livenessProbeEnabled?: bool

    livenessScheme?: str

    livenessSuccessThreshold?: int

    livenessTimeout?: int

    readinessFailureThreshold?: int

    readinessInitialDelay?: int

    readinessPeriod?: int

    readinessProbeEnabled?: bool

    readinessScheme?: str

    readinessSuccessThreshold?: int

    readinessTimeout?: int

    startupFailureThreshold?: int

    startupInitialDelay?: int

    startupPeriod?: int

    startupProbeEnabled?: bool

    startupScheme?: str

    startupSuccessThreshold?: int

    startupTimeout?: int


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsIngress:
    """
    The configuration of Ingress trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to the ingress. This can be used to set controller specific annotations, e.g., when using the NGINX Ingress controller: See https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    auto : bool, default is Undefined, optional
        To automatically add an ingress whenever the integration uses an HTTP endpoint consumer.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    host : str, default is Undefined, optional
        To configure the host exposed by the ingress.
    path : str, default is Undefined, optional
        To configure the path exposed by the ingress (default `/`).
    pathType : str, default is Undefined, optional
        To configure the path type exposed by the ingress. One of `Exact`, `Prefix`, `ImplementationSpecific` (default to `Prefix`).
    """


    annotations?: {str:str}

    auto?: bool

    configuration?: any

    enabled?: bool

    host?: str

    path?: str

    pathType?: "Exact" | "Prefix" | "ImplementationSpecific"


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsIstio:
    """
    The configuration of Istio trait

    Attributes
    ----------
    allow : str, default is Undefined, optional
        Configures a (comma-separated) list of CIDR subnets that should not be intercepted by the Istio proxy (`10.0.0.0/8,172.16.0.0/12,192.168.0.0/16` by default).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    inject : bool, default is Undefined, optional
        Forces the value for labels `sidecar.istio.io/inject`. By default the label is set to `true` on deployment and not set on Knative Service.
    """


    allow?: str

    configuration?: any

    enabled?: bool

    inject?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsJolokia:
    """
    The configuration of Jolokia trait

    Attributes
    ----------
    CACert : str, default is Undefined, optional
        The PEM encoded CA certification file path, used to verify client certificates, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt` for OpenShift).
    clientPrincipal : [str], default is Undefined, optional
        The principal(s) which must be given in a client certificate to allow access to the Jolokia endpoint, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `clientPrincipal=cn=system:master-proxy`, `cn=hawtio-online.hawtio.svc` and `cn=fuse-console.fuse.svc` for OpenShift).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    discoveryEnabled : bool, default is Undefined, optional
        Listen for multicast requests (default `false`)
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    extendedClientCheck : bool, default is Undefined, optional
        Mandate the client certificate contains a client flag in the extended key usage section, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `true` for OpenShift).
    host : str, default is Undefined, optional
        The Host address to which the Jolokia agent should bind to. If `"\*"` or `"0.0.0.0"` is given, the servers binds to every network interface (default `"*"`).
    options : [str], default is Undefined, optional
        A list of additional Jolokia options as defined in https://jolokia.org/reference/html/agents.html#agent-jvm-config[JVM agent configuration options]
    password : str, default is Undefined, optional
        The password used for authentication, applicable when the `user` option is set.
    port : int, default is Undefined, optional
        The Jolokia endpoint port (default `8778`).
    $protocol : str, default is Undefined, optional
        The protocol to use, either `http` or `https` (default `https` for OpenShift)
    useSSLClientAuthentication : bool, default is Undefined, optional
        Whether client certificates should be used for authentication (default `true` for OpenShift).
    user : str, default is Undefined, optional
        The user to be used for authentication
    """


    CACert?: str

    clientPrincipal?: [str]

    configuration?: any

    discoveryEnabled?: bool

    enabled?: bool

    extendedClientCheck?: bool

    host?: str

    options?: [str]

    password?: str

    port?: int

    $protocol?: str

    useSSLClientAuthentication?: bool

    user?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsJvm:
    """
    The configuration of JVM trait

    Attributes
    ----------
    classpath : str, default is Undefined, optional
        Additional JVM classpath (use `Linux` classpath separator)
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    debug : bool, default is Undefined, optional
        Activates remote debugging, so that a debugger can be attached to the JVM, e.g., using port-forwarding
    debugAddress : str, default is Undefined, optional
        Transport address at which to listen for the newly launched JVM (default `*:5005`)
    debugSuspend : bool, default is Undefined, optional
        Suspends the target JVM immediately before the main class is loaded
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    options : [str], default is Undefined, optional
        A list of JVM options
    printCommand : bool, default is Undefined, optional
        Prints the command used the start the JVM in the container logs (default `true`)
    """


    classpath?: str

    configuration?: any

    debug?: bool

    debugAddress?: str

    debugSuspend?: bool

    enabled?: bool

    options?: [str]

    printCommand?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsKamelets:
    """
    The configuration of Kamelets trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Automatically inject all referenced Kamelets and their default configuration (enabled by default)
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    list : str, default is Undefined, optional
        Comma separated list of Kamelet names to load into the current integration
    mountPoint : str, default is Undefined, optional
        The directory where the application mounts and reads Kamelet spec (default `/etc/camel/kamelets`)
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    list?: str

    mountPoint?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsKeda:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsKnative:
    """
    The configuration of Knative trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Enable automatic discovery of all trait properties.
    channelSinks : [str], default is Undefined, optional
        List of channels used as destination of integration routes. Can contain simple channel names or full Camel URIs.
    channelSources : [str], default is Undefined, optional
        List of channels used as source of integration routes. Can contain simple channel names or full Camel URIs.
    config : str, default is Undefined, optional
        Can be used to inject a Knative complete configuration in JSON format.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    endpointSinks : [str], default is Undefined, optional
        List of endpoints used as destination of integration routes. Can contain simple endpoint names or full Camel URIs.
    endpointSources : [str], default is Undefined, optional
        List of channels used as source of integration routes.
    eventSinks : [str], default is Undefined, optional
        List of event types that the integration will produce. Can contain simple event types or full Camel URIs (to use a specific broker).
    eventSources : [str], default is Undefined, optional
        List of event types that the integration will be subscribed to. Can contain simple event types or full Camel URIs (to use a specific broker different from "default").
    filterSourceChannels : bool, default is Undefined, optional
        Enables filtering on events based on the header "ce-knativehistory". Since this header has been removed in newer versions of Knative, filtering is disabled by default.
    namespaceLabel : bool, default is Undefined, optional
        Enables the camel-k-operator to set the "bindings.knative.dev/include=true" label to the namespace As Knative requires this label to perform injection of K_SINK URL into the service. If this is false, the integration pod may start and fail, read the SinkBinding Knative documentation. (default: true)
    sinkBinding : bool, default is Undefined, optional
        Allows binding the integration to a sink via a Knative SinkBinding resource. This can be used when the integration targets a single sink. It's enabled by default when the integration targets a single sink (except when the integration is owned by a Knative source).
    """


    auto?: bool

    channelSinks?: [str]

    channelSources?: [str]

    config?: str

    configuration?: any

    enabled?: bool

    endpointSinks?: [str]

    endpointSources?: [str]

    eventSinks?: [str]

    eventSources?: [str]

    filterSourceChannels?: bool

    namespaceLabel?: bool

    sinkBinding?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsKnativeService:
    """
    The configuration of Knative Service trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to route. This can be used to set knative service specific annotations CLI usage example: -t "knative-service.annotations.'haproxy.router.openshift.io/balance'=true"
    auto : bool, default is Undefined, optional
        Automatically deploy the integration as Knative service when all conditions hold: 
         * Integration is using the Knative profile * All routes are either starting from an HTTP based consumer or a passive consumer (e.g. `direct` is a passive consumer)
    autoscalingMetric : str, default is Undefined, optional
        Configures the Knative autoscaling metric property (e.g. to set `concurrency` based or `cpu` based autoscaling). 
         Refer to the Knative documentation for more information.
    autoscalingTarget : int, default is Undefined, optional
        Sets the allowed concurrency level or CPU percentage (depending on the autoscaling metric) for each Pod. 
         Refer to the Knative documentation for more information.
    class : str, default is Undefined, optional
        Configures the Knative autoscaling class property (e.g. to set `hpa.autoscaling.knative.dev` or `kpa.autoscaling.knative.dev` autoscaling). 
         Refer to the Knative documentation for more information.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    maxScale : int, default is Undefined, optional
        An upper bound for the number of Pods that can be running in parallel for the integration. Knative has its own cap value that depends on the installation. 
         Refer to the Knative documentation for more information.
    minScale : int, default is Undefined, optional
        The minimum number of Pods that should be running at any time for the integration. It's **zero** by default, meaning that the integration is scaled down to zero when not used for a configured amount of time. 
         Refer to the Knative documentation for more information.
    rolloutDuration : str, default is Undefined, optional
        Enables to gradually shift traffic to the latest Revision and sets the rollout duration. It's disabled by default and must be expressed as a Golang `time.Duration` string representation, rounded to a second precision.
    visibility : str, default is Undefined, optional
        Setting `cluster-local`, Knative service becomes a private service. Specifically, this option applies the `networking.knative.dev/visibility` label to Knative service. 
         Refer to the Knative documentation for more information.
    """


    annotations?: {str:str}

    auto?: bool

    autoscalingMetric?: str

    autoscalingTarget?: int

    class?: "kpa.autoscaling.knative.dev" | "hpa.autoscaling.knative.dev"

    configuration?: any

    enabled?: bool

    maxScale?: int

    minScale?: int

    rolloutDuration?: str

    visibility?: "cluster-local"


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsLogging:
    """
    The configuration of Logging trait

    Attributes
    ----------
    color : bool, default is Undefined, optional
        Colorize the log output
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    format : str, default is Undefined, optional
        Logs message format
    json : bool, default is Undefined, optional
        Output the logs in JSON
    jsonPrettyPrint : bool, default is Undefined, optional
        Enable "pretty printing" of the JSON logs
    level : str, default is Undefined, optional
        Adjust the logging level (defaults to INFO)
    """


    color?: bool

    configuration?: any

    enabled?: bool

    format?: str

    json?: bool

    jsonPrettyPrint?: bool

    level?: "FATAL" | "WARN" | "INFO" | "DEBUG" | "TRACE"


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsMaster:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsMount:
    """
    The configuration of Mount trait

    Attributes
    ----------
    configs : [str], default is Undefined, optional
        A list of configuration pointing to configmap/secret. The configuration are expected to be UTF-8 resources as they are processed by runtime Camel Context and tried to be parsed as property files. They are also made available on the classpath in order to ease their usage directly from the Route. Syntax: [configmap|secret]:name[/key], where name represents the resource name and key optionally represents the resource key to be filtered
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    hotReload : bool, default is Undefined, optional
        Enable "hot reload" when a secret/configmap mounted is edited (default false)
    resources : [str], default is Undefined, optional
        A list of resources (text or binary content) pointing to configmap/secret. The resources are expected to be any resource type (text or binary content). The destination path can be either a default location or any path specified by the user. Syntax: [configmap|secret]:name[/key][@path], where name represents the resource name, key optionally represents the resource key to be filtered and path represents the destination path
    volumes : [str], default is Undefined, optional
        A list of Persistent Volume Claims to be mounted. Syntax: [pvcname:/container/path]
    """


    configs?: [str]

    configuration?: any

    enabled?: bool

    hotReload?: bool

    resources?: [str]

    volumes?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsNr3scale:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsOpenapi:
    """
    The configuration of OpenAPI trait

    Attributes
    ----------
    configmaps : [str], default is Undefined, optional
        The configmaps holding the spec of the OpenAPI
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    """


    configmaps?: [str]

    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsOwner:
    """
    The configuration of Owner trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    targetAnnotations : [str], default is Undefined, optional
        The set of annotations to be transferred
    targetLabels : [str], default is Undefined, optional
        The set of labels to be transferred
    """


    configuration?: any

    enabled?: bool

    targetAnnotations?: [str]

    targetLabels?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsPdb:
    """
    The configuration of PDB trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    maxUnavailable : str, default is Undefined, optional
        The number of pods for the Integration that can be unavailable after an eviction. It can be either an absolute number or a percentage (default `1` if `min-available` is also not set). Only one of `max-unavailable` and `min-available` can be specified.
    minAvailable : str, default is Undefined, optional
        The number of pods for the Integration that must still be available after an eviction. It can be either an absolute number or a percentage. Only one of `min-available` and `max-unavailable` can be specified.
    """


    configuration?: any

    enabled?: bool

    maxUnavailable?: str

    minAvailable?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsPlatform:
    """
    The configuration of Platform trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically detect from the environment if a default platform can be created (it will be created on OpenShift only).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    createDefault : bool, default is Undefined, optional
        To create a default (empty) platform when the platform is missing.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    global : bool, default is Undefined, optional
        Indicates if the platform should be created globally in the case of global operator (default true).
    """


    auto?: bool

    configuration?: any

    createDefault?: bool

    enabled?: bool

    global?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsPod:
    """
    The configuration of Pod trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsPrometheus:
    """
    The configuration of Prometheus trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    podMonitor : bool, default is Undefined, optional
        Whether a `PodMonitor` resource is created (default `true`).
    podMonitorLabels : [str], default is Undefined, optional
        The `PodMonitor` resource labels, applicable when `pod-monitor` is `true`.
    """


    configuration?: any

    enabled?: bool

    podMonitor?: bool

    podMonitorLabels?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsPullSecret:
    """
    The configuration of Pull Secret trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Automatically configures the platform registry secret on the pod if it is of type `kubernetes.io/dockerconfigjson`.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    imagePullerDelegation : bool, default is Undefined, optional
        When using a global operator with a shared platform, this enables delegation of the `system:image-puller` cluster role on the operator namespace to the integration service account.
    secretName : str, default is Undefined, optional
        The pull secret name to set on the Pod. If left empty this is automatically taken from the `IntegrationPlatform` registry configuration.
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    imagePullerDelegation?: bool

    secretName?: str


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsQuarkus:
    """
    The configuration of Quarkus trait

    Attributes
    ----------
    buildMode : [str], default is Undefined, optional
        The Quarkus mode to run: either `jvm` or `native` (default `jvm`). In case both `jvm` and `native` are specified, two `IntegrationKit` resources are created, with the `native` kit having precedence over the `jvm` one once ready.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    nativeBaseImage : str, default is Undefined, optional
        The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)
    nativeBuilderImage : str, default is Undefined, optional
        The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)
    packageTypes : [str], default is Undefined, optional
        The Quarkus package types, `fast-jar` or `native` (default `fast-jar`). In case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created, with the native kit having precedence over the `fast-jar` one once ready. The order influences the resolution of the current kit for the integration. The kit corresponding to the first package type will be assigned to the integration in case no existing kit that matches the integration exists. Deprecated: use `build-mode` instead.
    """


    buildMode?: [str]

    configuration?: any

    enabled?: bool

    nativeBaseImage?: str

    nativeBuilderImage?: str

    packageTypes?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsRegistry:
    """
    The configuration of Registry trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsRoute:
    """
    The configuration of Route trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to route. This can be used to set route specific annotations For annotations options see https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#route-specific-annotations CLI usage example: -t "route.annotations.'haproxy.router.openshift.io/balance'=true"
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    host : str, default is Undefined, optional
        To configure the host exposed by the route.
    tlsCACertificate : str, default is Undefined, optional
        The TLS CA certificate contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsCACertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the TLS CA certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsCertificate : str, default is Undefined, optional
        The TLS certificate contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsCertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the TLS certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsDestinationCACertificate : str, default is Undefined, optional
        The destination CA certificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify. 
         Refer to the OpenShift route documentation for additional information.
    tlsDestinationCACertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the destination CA certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsInsecureEdgeTerminationPolicy : str, default is Undefined, optional
        To configure how to deal with insecure traffic, e.g. `Allow`, `Disable` or `Redirect` traffic. 
         Refer to the OpenShift route documentation for additional information.
    tlsKey : str, default is Undefined, optional
        The TLS certificate key contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsKeySecret : str, default is Undefined, optional
        The secret name and key reference to the TLS certificate key. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsTermination : str, default is Undefined, optional
        The TLS termination type, like `edge`, `passthrough` or `reencrypt`. 
         Refer to the OpenShift route documentation for additional information.
    """


    annotations?: {str:str}

    configuration?: any

    enabled?: bool

    host?: str

    tlsCACertificate?: str

    tlsCACertificateSecret?: str

    tlsCertificate?: str

    tlsCertificateSecret?: str

    tlsDestinationCACertificate?: str

    tlsDestinationCACertificateSecret?: str

    tlsInsecureEdgeTerminationPolicy?: "None" | "Allow" | "Redirect"

    tlsKey?: str

    tlsKeySecret?: str

    tlsTermination?: "edge" | "reencrypt" | "passthrough"


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsService:
    """
    The configuration of Service trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically detect from the code if a Service needs to be created.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    nodePort : bool, default is Undefined, optional
        Enable Service to be exposed as NodePort (default `false`). Deprecated: Use service type instead.
    $type : str, default is Undefined, optional
        The type of service to be used, either 'ClusterIP', 'NodePort' or 'LoadBalancer'.
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    nodePort?: bool

    $type?: "ClusterIP" | "NodePort" | "LoadBalancer"


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsServiceBinding:
    """
    The configuration of Service Binding trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    services : [str], default is Undefined, optional
        List of Services in the form [[apigroup/]version:]kind:[namespace/]name
    """


    configuration?: any

    enabled?: bool

    services?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsStrimzi:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsToleration:
    """
    The configuration of Toleration trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    taints : [str], default is Undefined, optional
        The list of taints to tolerate, in the form `Key[=Value]:Effect[:Seconds]`
    """


    configuration?: any

    enabled?: bool

    taints?: [str]


schema CamelApacheOrgV1IntegrationPlatformSpecTraitsTracing:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformStatus:
    """
    IntegrationPlatformStatus defines the observed state of IntegrationPlatform.

    Attributes
    ----------
    build : CamelApacheOrgV1IntegrationPlatformStatusBuild, default is Undefined, optional
        build
    cluster : str, default is Undefined, optional
        what kind of cluster you're running (ie, plain Kubernetes or OpenShift)
    conditions : [CamelApacheOrgV1IntegrationPlatformStatusConditionsItems0], default is Undefined, optional
        which are the conditions met (particularly useful when in ERROR phase)
    configuration : [CamelApacheOrgV1IntegrationPlatformStatusConfigurationItems0], default is Undefined, optional
        Deprecated: Use camel trait (camel.properties) to manage properties Use mount trait (mount.configs) to manage configs Use mount trait (mount.resources) to manage resources Use mount trait (mount.volumes) to manage volumes list of configuration properties to be attached to all the Integration/IntegrationKits built from this IntegrationPlatform
    info : {str:str}, default is Undefined, optional
        generic information related to the build of Camel K operator software
    kamelet : CamelApacheOrgV1IntegrationPlatformStatusKamelet, default is Undefined, optional
        kamelet
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the most recent generation observed for this IntegrationPlatform.
    phase : str, default is Undefined, optional
        defines in what phase the IntegrationPlatform is found
    profile : str, default is Undefined, optional
        the profile you wish to use. It will apply certain traits which are required by the specific profile chosen. It usually relates the Cluster with the optional definition of special profiles (ie, Knative)
    traits : CamelApacheOrgV1IntegrationPlatformStatusTraits, default is Undefined, optional
        traits
    version : str, default is Undefined, optional
        the Camel K operator version controlling this IntegrationPlatform
    """


    build?: CamelApacheOrgV1IntegrationPlatformStatusBuild

    cluster?: str

    conditions?: [CamelApacheOrgV1IntegrationPlatformStatusConditionsItems0]

    configuration?: [CamelApacheOrgV1IntegrationPlatformStatusConfigurationItems0]

    info?: {str:str}

    kamelet?: CamelApacheOrgV1IntegrationPlatformStatusKamelet

    observedGeneration?: int

    phase?: str

    profile?: str

    traits?: CamelApacheOrgV1IntegrationPlatformStatusTraits

    version?: str


schema CamelApacheOrgV1IntegrationPlatformStatusBuild:
    """
    specify how to build the Integration/IntegrationKits

    Attributes
    ----------
    PublishStrategyOptions : {str:str}, default is Undefined, optional
        Generic options that can used by any publish strategy
    baseImage : str, default is Undefined, optional
        a base image that can be used as base layer for all images. It can be useful if you want to provide some custom base image with further utility softwares
    buildCatalogToolTimeout : str, default is Undefined, optional
        the timeout (in seconds) to use when creating the build tools container image Deprecated: no longer in use
    buildConfiguration : CamelApacheOrgV1IntegrationPlatformStatusBuildBuildConfiguration, default is Undefined, optional
        build configuration
    maven : CamelApacheOrgV1IntegrationPlatformStatusBuildMaven, default is Undefined, optional
        maven
    maxRunningBuilds : int, default is Undefined, optional
        the maximum amount of parallel running pipelines started by this operator instance
    publishStrategy : str, default is Undefined, optional
        the strategy to adopt for publishing an Integration container image
    registry : CamelApacheOrgV1IntegrationPlatformStatusBuildRegistry, default is Undefined, optional
        registry
    runtimeProvider : str, default is Undefined, optional
        the runtime used. Likely Camel Quarkus (we used to have main runtime which has been discontinued since version 1.5)
    runtimeVersion : str, default is Undefined, optional
        the Camel K Runtime dependency version
    timeout : str, default is Undefined, optional
        how much time to wait before time out the pipeline process
    """


    PublishStrategyOptions?: {str:str}

    baseImage?: str

    buildCatalogToolTimeout?: str

    buildConfiguration?: CamelApacheOrgV1IntegrationPlatformStatusBuildBuildConfiguration

    maven?: CamelApacheOrgV1IntegrationPlatformStatusBuildMaven

    maxRunningBuilds?: int

    publishStrategy?: str

    registry?: CamelApacheOrgV1IntegrationPlatformStatusBuildRegistry

    runtimeProvider?: str

    runtimeVersion?: str

    timeout?: str


schema CamelApacheOrgV1IntegrationPlatformStatusBuildBuildConfiguration:
    """
    the configuration required to build an Integration container image

    Attributes
    ----------
    limitCPU : str, default is Undefined, optional
        The maximum amount of CPU required. Only used for `pod` strategy
    limitMemory : str, default is Undefined, optional
        The maximum amount of memory required. Only used for `pod` strategy
    operatorNamespace : str, default is Undefined, optional
        The namespace where to run the builder Pod (must be the same of the operator in charge of this Build reconciliation).
    orderStrategy : str, default is Undefined, optional
        the build order strategy to adopt
    requestCPU : str, default is Undefined, optional
        The minimum amount of CPU required. Only used for `pod` strategy
    requestMemory : str, default is Undefined, optional
        The minimum amount of memory required. Only used for `pod` strategy
    strategy : str, default is Undefined, optional
        the strategy to adopt
    toolImage : str, default is Undefined, optional
        The container image to be used to run the build.
    """


    limitCPU?: str

    limitMemory?: str

    operatorNamespace?: str

    orderStrategy?: "dependencies" | "fifo" | "sequential"

    requestCPU?: str

    requestMemory?: str

    strategy?: "routine" | "pod"

    toolImage?: str


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMaven:
    """
    Maven configuration used to build the Camel/Camel-Quarkus applications

    Attributes
    ----------
    caSecrets : [CamelApacheOrgV1IntegrationPlatformStatusBuildMavenCaSecretsItems0], default is Undefined, optional
        The Secrets name and key, containing the CA certificate(s) used to connect to remote Maven repositories. It can contain X.509 certificates, and PKCS#7 formatted certificate chains. A JKS formatted keystore is automatically created to store the CA certificate(s), and configured to be used as a trusted certificate(s) by the Maven commands. Note that the root CA certificates are also imported into the created keystore.
    cliOptions : [str], default is Undefined, optional
        The CLI options that are appended to the list of arguments for Maven commands, e.g., `-V,--no-transfer-progress,-Dstyle.color=never`. See https://maven.apache.org/ref/3.8.4/maven-embedder/cli.html.
    extension : [CamelApacheOrgV1IntegrationPlatformStatusBuildMavenExtensionItems0], default is Undefined, optional
        The Maven build extensions. See https://maven.apache.org/guides/mini/guide-using-extensions.html.
    localRepository : str, default is Undefined, optional
        The path of the local Maven repository.
    profiles : [CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0], default is Undefined, optional
        A reference to the ConfigMap or Secret key that contains the Maven profile.
    properties : {str:str}, default is Undefined, optional
        The Maven properties.
    settings : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettings, default is Undefined, optional
        settings
    settingsSecurity : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecurity, default is Undefined, optional
        settings security
    """


    caSecrets?: [CamelApacheOrgV1IntegrationPlatformStatusBuildMavenCaSecretsItems0]

    cliOptions?: [str]

    extension?: [CamelApacheOrgV1IntegrationPlatformStatusBuildMavenExtensionItems0]

    localRepository?: str

    profiles?: [CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0]

    properties?: {str:str}

    settings?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettings

    settingsSecurity?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecurity


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenCaSecretsItems0:
    """
    SecretKeySelector selects a key of a Secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenExtensionItems0:
    """
    MavenArtifact defines a GAV (Group:Artifact:Version) Maven artifact.

    Attributes
    ----------
    artifactId : str, default is Undefined, required
        Maven Artifact
    groupId : str, default is Undefined, required
        Maven Group
    version : str, default is Undefined, optional
        Maven Version
    """


    artifactId: str

    groupId: str

    version?: str


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0:
    """
    ValueSource --.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0ConfigMapKeyRef, default is Undefined, optional
        config map key ref
    secretKeyRef : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0SecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0ConfigMapKeyRef

    secretKeyRef?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0SecretKeyRef


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0ConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenProfilesItems0SecretKeyRef:
    """
    Selects a key of a secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettings:
    """
    A reference to the ConfigMap or Secret key that contains the Maven settings.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsConfigMapKeyRef, default is Undefined, optional
        config map key ref
    secretKeyRef : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsConfigMapKeyRef

    secretKeyRef?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecretKeyRef


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecretKeyRef:
    """
    Selects a key of a secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecurity:
    """
    A reference to the ConfigMap or Secret key that contains the security of the Maven settings.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecurityConfigMapKeyRef, default is Undefined, optional
        config map key ref
    secretKeyRef : CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecuritySecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecurityConfigMapKeyRef

    secretKeyRef?: CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecuritySecretKeyRef


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecurityConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildMavenSettingsSecuritySecretKeyRef:
    """
    Selects a key of a secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusBuildRegistry:
    """
    the image registry used to push/pull Integration images

    Attributes
    ----------
    address : str, default is Undefined, optional
        the URI to access
    ca : str, default is Undefined, optional
        the configmap which stores the Certificate Authority
    insecure : bool, default is Undefined, optional
        if the container registry is insecure (ie, http only)
    organization : str, default is Undefined, optional
        the registry organization
    secret : str, default is Undefined, optional
        the secret where credentials are stored
    """


    address?: str

    ca?: str

    insecure?: bool

    organization?: str

    secret?: str


schema CamelApacheOrgV1IntegrationPlatformStatusConditionsItems0:
    """
    IntegrationPlatformCondition describes the state of a resource at a certain point.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    lastUpdateTime : str, default is Undefined, optional
        The last time this condition was updated.
    message : str, default is Undefined, optional
        A human-readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of integration condition.
    """


    lastTransitionTime?: str

    lastUpdateTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema CamelApacheOrgV1IntegrationPlatformStatusConfigurationItems0:
    """
    ConfigurationSpec represents a generic configuration specification.

    Attributes
    ----------
    $type : str, default is Undefined, required
        represents the type of configuration, ie: property, configmap, secret, ...
    value : str, default is Undefined, required
        the value to assign to the configuration (syntax may vary depending on the `Type`)
    """


    $type: str

    value: str


schema CamelApacheOrgV1IntegrationPlatformStatusKamelet:
    """
    configuration to be executed to all Kamelets controlled by this IntegrationPlatform

    Attributes
    ----------
    repositories : [CamelApacheOrgV1IntegrationPlatformStatusKameletRepositoriesItems0], default is Undefined, optional
        remote repository used to retrieve Kamelet catalog
    """


    repositories?: [CamelApacheOrgV1IntegrationPlatformStatusKameletRepositoriesItems0]


schema CamelApacheOrgV1IntegrationPlatformStatusKameletRepositoriesItems0:
    """
    IntegrationPlatformKameletRepositorySpec defines the location of the Kamelet catalog to use.

    Attributes
    ----------
    uri : str, default is Undefined, optional
        the remote repository in the format github:ORG/REPO/PATH_TO_KAMELETS_FOLDER
    """


    uri?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraits:
    """
    list of traits to be executed for all the Integration/IntegrationKits built from this IntegrationPlatform

    Attributes
    ----------
    3scale : CamelApacheOrgV1IntegrationPlatformStatusTraitsNr3scale, default is Undefined, optional
        3scale
    addons : {str:any}, default is Undefined, optional
        The extension point with addon traits
    affinity : CamelApacheOrgV1IntegrationPlatformStatusTraitsAffinity, default is Undefined, optional
        affinity
    builder : CamelApacheOrgV1IntegrationPlatformStatusTraitsBuilder, default is Undefined, optional
        builder
    camel : CamelApacheOrgV1IntegrationPlatformStatusTraitsCamel, default is Undefined, optional
        camel
    container : CamelApacheOrgV1IntegrationPlatformStatusTraitsContainer, default is Undefined, optional
        container
    cron : CamelApacheOrgV1IntegrationPlatformStatusTraitsCron, default is Undefined, optional
        cron
    dependencies : CamelApacheOrgV1IntegrationPlatformStatusTraitsDependencies, default is Undefined, optional
        dependencies
    deployer : CamelApacheOrgV1IntegrationPlatformStatusTraitsDeployer, default is Undefined, optional
        deployer
    deployment : CamelApacheOrgV1IntegrationPlatformStatusTraitsDeployment, default is Undefined, optional
        deployment
    environment : CamelApacheOrgV1IntegrationPlatformStatusTraitsEnvironment, default is Undefined, optional
        environment
    error_handler : CamelApacheOrgV1IntegrationPlatformStatusTraitsErrorHandler, default is Undefined, optional
        error handler
    gc : CamelApacheOrgV1IntegrationPlatformStatusTraitsGc, default is Undefined, optional
        gc
    health : CamelApacheOrgV1IntegrationPlatformStatusTraitsHealth, default is Undefined, optional
        health
    ingress : CamelApacheOrgV1IntegrationPlatformStatusTraitsIngress, default is Undefined, optional
        ingress
    istio : CamelApacheOrgV1IntegrationPlatformStatusTraitsIstio, default is Undefined, optional
        istio
    jolokia : CamelApacheOrgV1IntegrationPlatformStatusTraitsJolokia, default is Undefined, optional
        jolokia
    jvm : CamelApacheOrgV1IntegrationPlatformStatusTraitsJvm, default is Undefined, optional
        jvm
    kamelets : CamelApacheOrgV1IntegrationPlatformStatusTraitsKamelets, default is Undefined, optional
        kamelets
    keda : CamelApacheOrgV1IntegrationPlatformStatusTraitsKeda, default is Undefined, optional
        keda
    knative : CamelApacheOrgV1IntegrationPlatformStatusTraitsKnative, default is Undefined, optional
        knative
    knative_service : CamelApacheOrgV1IntegrationPlatformStatusTraitsKnativeService, default is Undefined, optional
        knative service
    logging : CamelApacheOrgV1IntegrationPlatformStatusTraitsLogging, default is Undefined, optional
        logging
    master : CamelApacheOrgV1IntegrationPlatformStatusTraitsMaster, default is Undefined, optional
        master
    mount : CamelApacheOrgV1IntegrationPlatformStatusTraitsMount, default is Undefined, optional
        mount
    openapi : CamelApacheOrgV1IntegrationPlatformStatusTraitsOpenapi, default is Undefined, optional
        openapi
    owner : CamelApacheOrgV1IntegrationPlatformStatusTraitsOwner, default is Undefined, optional
        owner
    pdb : CamelApacheOrgV1IntegrationPlatformStatusTraitsPdb, default is Undefined, optional
        pdb
    platform : CamelApacheOrgV1IntegrationPlatformStatusTraitsPlatform, default is Undefined, optional
        platform
    pod : CamelApacheOrgV1IntegrationPlatformStatusTraitsPod, default is Undefined, optional
        pod
    prometheus : CamelApacheOrgV1IntegrationPlatformStatusTraitsPrometheus, default is Undefined, optional
        prometheus
    pull_secret : CamelApacheOrgV1IntegrationPlatformStatusTraitsPullSecret, default is Undefined, optional
        pull secret
    quarkus : CamelApacheOrgV1IntegrationPlatformStatusTraitsQuarkus, default is Undefined, optional
        quarkus
    registry : CamelApacheOrgV1IntegrationPlatformStatusTraitsRegistry, default is Undefined, optional
        registry
    route : CamelApacheOrgV1IntegrationPlatformStatusTraitsRoute, default is Undefined, optional
        route
    service : CamelApacheOrgV1IntegrationPlatformStatusTraitsService, default is Undefined, optional
        service
    service_binding : CamelApacheOrgV1IntegrationPlatformStatusTraitsServiceBinding, default is Undefined, optional
        service binding
    strimzi : CamelApacheOrgV1IntegrationPlatformStatusTraitsStrimzi, default is Undefined, optional
        strimzi
    toleration : CamelApacheOrgV1IntegrationPlatformStatusTraitsToleration, default is Undefined, optional
        toleration
    tracing : CamelApacheOrgV1IntegrationPlatformStatusTraitsTracing, default is Undefined, optional
        tracing
    """


    "3scale"?: CamelApacheOrgV1IntegrationPlatformStatusTraitsNr3scale

    addons?: {str:any}

    affinity?: CamelApacheOrgV1IntegrationPlatformStatusTraitsAffinity

    builder?: CamelApacheOrgV1IntegrationPlatformStatusTraitsBuilder

    camel?: CamelApacheOrgV1IntegrationPlatformStatusTraitsCamel

    container?: CamelApacheOrgV1IntegrationPlatformStatusTraitsContainer

    cron?: CamelApacheOrgV1IntegrationPlatformStatusTraitsCron

    dependencies?: CamelApacheOrgV1IntegrationPlatformStatusTraitsDependencies

    deployer?: CamelApacheOrgV1IntegrationPlatformStatusTraitsDeployer

    deployment?: CamelApacheOrgV1IntegrationPlatformStatusTraitsDeployment

    environment?: CamelApacheOrgV1IntegrationPlatformStatusTraitsEnvironment

    error_handler?: CamelApacheOrgV1IntegrationPlatformStatusTraitsErrorHandler

    gc?: CamelApacheOrgV1IntegrationPlatformStatusTraitsGc

    health?: CamelApacheOrgV1IntegrationPlatformStatusTraitsHealth

    ingress?: CamelApacheOrgV1IntegrationPlatformStatusTraitsIngress

    istio?: CamelApacheOrgV1IntegrationPlatformStatusTraitsIstio

    jolokia?: CamelApacheOrgV1IntegrationPlatformStatusTraitsJolokia

    jvm?: CamelApacheOrgV1IntegrationPlatformStatusTraitsJvm

    kamelets?: CamelApacheOrgV1IntegrationPlatformStatusTraitsKamelets

    keda?: CamelApacheOrgV1IntegrationPlatformStatusTraitsKeda

    knative?: CamelApacheOrgV1IntegrationPlatformStatusTraitsKnative

    knative_service?: CamelApacheOrgV1IntegrationPlatformStatusTraitsKnativeService

    logging?: CamelApacheOrgV1IntegrationPlatformStatusTraitsLogging

    master?: CamelApacheOrgV1IntegrationPlatformStatusTraitsMaster

    mount?: CamelApacheOrgV1IntegrationPlatformStatusTraitsMount

    openapi?: CamelApacheOrgV1IntegrationPlatformStatusTraitsOpenapi

    owner?: CamelApacheOrgV1IntegrationPlatformStatusTraitsOwner

    pdb?: CamelApacheOrgV1IntegrationPlatformStatusTraitsPdb

    platform?: CamelApacheOrgV1IntegrationPlatformStatusTraitsPlatform

    pod?: CamelApacheOrgV1IntegrationPlatformStatusTraitsPod

    prometheus?: CamelApacheOrgV1IntegrationPlatformStatusTraitsPrometheus

    pull_secret?: CamelApacheOrgV1IntegrationPlatformStatusTraitsPullSecret

    quarkus?: CamelApacheOrgV1IntegrationPlatformStatusTraitsQuarkus

    registry?: CamelApacheOrgV1IntegrationPlatformStatusTraitsRegistry

    route?: CamelApacheOrgV1IntegrationPlatformStatusTraitsRoute

    service?: CamelApacheOrgV1IntegrationPlatformStatusTraitsService

    service_binding?: CamelApacheOrgV1IntegrationPlatformStatusTraitsServiceBinding

    strimzi?: CamelApacheOrgV1IntegrationPlatformStatusTraitsStrimzi

    toleration?: CamelApacheOrgV1IntegrationPlatformStatusTraitsToleration

    tracing?: CamelApacheOrgV1IntegrationPlatformStatusTraitsTracing


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsAffinity:
    """
    The configuration of Affinity trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    nodeAffinityLabels : [str], default is Undefined, optional
        Defines a set of nodes the integration pod(s) are eligible to be scheduled on, based on labels on the node.
    podAffinity : bool, default is Undefined, optional
        Always co-locates multiple replicas of the integration in the same node (default *false*).
    podAffinityLabels : [str], default is Undefined, optional
        Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should be co-located with.
    podAntiAffinity : bool, default is Undefined, optional
        Never co-locates multiple replicas of the integration in the same node (default *false*).
    podAntiAffinityLabels : [str], default is Undefined, optional
        Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should not be co-located with.
    """


    configuration?: any

    enabled?: bool

    nodeAffinityLabels?: [str]

    podAffinity?: bool

    podAffinityLabels?: [str]

    podAntiAffinity?: bool

    podAntiAffinityLabels?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsBuilder:
    """
    The configuration of Builder trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    incrementalImageBuild : bool, default is Undefined, optional
        Use the incremental image build option, to reuse existing containers (default `true`)
    limitCPU : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    limitMemory : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    mavenProfiles : [str], default is Undefined, optional
        A list of references pointing to configmaps/secrets that contains a maven profile. The content of the maven profile is expected to be a text containing a valid maven profile starting with `<profile>` and ending with `</profile>` that will be integrated as an inline profile in the POM. Syntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).
    orderStrategy : str, default is Undefined, optional
        The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default sequential)
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the build task
    requestCPU : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    requestMemory : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    strategy : str, default is Undefined, optional
        The strategy to use, either `pod` or `routine` (default routine)
    tasks : [str], default is Undefined, optional
        A list of tasks to be executed (available only when using `pod` strategy) with format `<name>;<container-image>;<container-command>`.
    tasksLimitCPU : [str], default is Undefined, optional
        A list of limit cpu configuration for the specific task with format `<task-name>:<limit-cpu-conf>`.
    tasksLimitMemory : [str], default is Undefined, optional
        A list of limit memory configuration for the specific task with format `<task-name>:<limit-memory-conf>`.
    tasksRequestCPU : [str], default is Undefined, optional
        A list of request cpu configuration for the specific task with format `<task-name>:<request-cpu-conf>`.
    tasksRequestMemory : [str], default is Undefined, optional
        A list of request memory configuration for the specific task with format `<task-name>:<request-memory-conf>`.
    verbose : bool, default is Undefined, optional
        Enable verbose logging on build components that support it (e.g. Kaniko build pod).
    """


    configuration?: any

    enabled?: bool

    incrementalImageBuild?: bool

    limitCPU?: str

    limitMemory?: str

    mavenProfiles?: [str]

    orderStrategy?: str

    properties?: [str]

    requestCPU?: str

    requestMemory?: str

    strategy?: str

    tasks?: [str]

    tasksLimitCPU?: [str]

    tasksLimitMemory?: [str]

    tasksRequestCPU?: [str]

    tasksRequestMemory?: [str]

    verbose?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsCamel:
    """
    The configuration of Camel trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the Integration runtime
    runtimeVersion : str, default is Undefined, optional
        The camel-k-runtime version to use for the integration. It overrides the default version set in the Integration Platform.
    """


    configuration?: any

    enabled?: bool

    properties?: [str]

    runtimeVersion?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsContainer:
    """
    The configuration of Container trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically enable the trait
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    expose : bool, default is Undefined, optional
        Can be used to enable/disable exposure via kubernetes Service.
    image : str, default is Undefined, optional
        The main container image
    imagePullPolicy : str, default is Undefined, optional
        The pull policy: Always|Never|IfNotPresent
    limitCPU : str, default is Undefined, optional
        The maximum amount of CPU required.
    limitMemory : str, default is Undefined, optional
        The maximum amount of memory required.
    name : str, default is Undefined, optional
        The main container name. It's named `integration` by default.
    port : int, default is Undefined, optional
        To configure a different port exposed by the container (default `8080`).
    portName : str, default is Undefined, optional
        To configure a different port name for the port exposed by the container. It defaults to `http` only when the `expose` parameter is true.
    requestCPU : str, default is Undefined, optional
        The minimum amount of CPU required.
    requestMemory : str, default is Undefined, optional
        The minimum amount of memory required.
    servicePort : int, default is Undefined, optional
        To configure under which service port the container port is to be exposed (default `80`).
    servicePortName : str, default is Undefined, optional
        To configure under which service port name the container port is to be exposed (default `http`).
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    expose?: bool

    image?: str

    imagePullPolicy?: "Always" | "Never" | "IfNotPresent"

    limitCPU?: str

    limitMemory?: str

    name?: str

    port?: int

    portName?: str

    requestCPU?: str

    requestMemory?: str

    servicePort?: int

    servicePortName?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsCron:
    """
    The configuration of Cron trait

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
        Specifies the duration in seconds, relative to the start time, that the job may be continuously active before it is considered to be failed. It defaults to 60s.
    auto : bool, default is Undefined, optional
        Automatically deploy the integration as CronJob when all routes are either starting from a periodic consumer (only `cron`, `timer` and `quartz` are supported) or a passive consumer (e.g. `direct` is a passive consumer). 
         It's required that all periodic consumers have the same period, and it can be expressed as cron schedule (e.g. `1m` can be expressed as `0/1 * * * *`, while `35m` or `50s` cannot).
    backoffLimit : int, default is Undefined, optional
        Specifies the number of retries before marking the job failed. It defaults to 2.
    components : str, default is Undefined, optional
        A comma separated list of the Camel components that need to be customized in order for them to work when the schedule is triggered externally by Kubernetes. A specific customizer is activated for each specified component. E.g. for the `timer` component, the `cron-timer` customizer is activated (it's present in the `org.apache.camel.k:camel-k-cron` library). 
         Supported components are currently: `cron`, `timer` and `quartz`.
    concurrencyPolicy : str, default is Undefined, optional
        Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow": allows CronJobs to run concurrently; - "Forbid" (default): forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    fallback : bool, default is Undefined, optional
        Use the default Camel implementation of the `cron` endpoint (`quartz`) instead of trying to materialize the integration as Kubernetes CronJob.
    schedule : str, default is Undefined, optional
        The CronJob schedule for the whole integration. If multiple routes are declared, they must have the same schedule for this mechanism to work correctly.
    startingDeadlineSeconds : int, default is Undefined, optional
        Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
    """


    activeDeadlineSeconds?: int

    auto?: bool

    backoffLimit?: int

    components?: str

    concurrencyPolicy?: "Allow" | "Forbid" | "Replace"

    configuration?: any

    enabled?: bool

    fallback?: bool

    schedule?: str

    startingDeadlineSeconds?: int


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsDependencies:
    """
    The configuration of Dependencies trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsDeployer:
    """
    The configuration of Deployer trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    kind : str, default is Undefined, optional
        Allows to explicitly select the desired deployment kind between `deployment`, `cron-job` or `knative-service` when creating the resources for running the integration.
    useSSA : bool, default is Undefined, optional
        Use server-side apply to update the owned resources (default `true`). Note that it automatically falls back to client-side patching, if SSA is not available, e.g., on old Kubernetes clusters.
    """


    configuration?: any

    enabled?: bool

    kind?: "deployment" | "cron-job" | "knative-service"

    useSSA?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsDeployment:
    """
    The configuration of Deployment trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    progressDeadlineSeconds : int, default is Undefined, optional
        The maximum time in seconds for the deployment to make progress before it is considered to be failed. It defaults to 60s.
    rollingUpdateMaxSurge : int, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%.
    rollingUpdateMaxUnavailable : int, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%.
    strategy : str, default is Undefined, optional
        The deployment strategy to use to replace existing pods with new ones.
    """


    configuration?: any

    enabled?: bool

    progressDeadlineSeconds?: int

    rollingUpdateMaxSurge?: int

    rollingUpdateMaxUnavailable?: int

    strategy?: "Recreate" | "RollingUpdate"


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsEnvironment:
    """
    The configuration of Environment trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    containerMeta : bool, default is Undefined, optional
        Enables injection of `NAMESPACE` and `POD_NAME` environment variables (default `true`)
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    httpProxy : bool, default is Undefined, optional
        Propagates the `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables (default `true`)
    vars : [str], default is Undefined, optional
        A list of environment variables to be added to the integration container. The syntax is KEY=VALUE, e.g., `MY_VAR="my value"`. These take precedence over the previously defined environment variables.
    """


    configuration?: any

    containerMeta?: bool

    enabled?: bool

    httpProxy?: bool

    vars?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsErrorHandler:
    """
    The configuration of Error Handler trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    ref : str, default is Undefined, optional
        The error handler ref name provided or found in application properties
    """


    configuration?: any

    enabled?: bool

    ref?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsGc:
    """
    The configuration of GC trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    discoveryCache : str, default is Undefined, optional
        Discovery client cache to be used, either `disabled`, `disk` or `memory` (default `memory`). Deprecated: to be removed from trait configuration.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    discoveryCache?: "disabled" | "disk" | "memory"

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsHealth:
    """
    The configuration of Health trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    livenessFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the liveness probe to be considered failed after having succeeded.
    livenessInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the liveness probe is initiated.
    livenessPeriod : int, default is Undefined, optional
        How often to perform the liveness probe.
    livenessProbeEnabled : bool, default is Undefined, optional
        Configures the liveness probe for the integration container (default `false`).
    livenessScheme : str, default is Undefined, optional
        Scheme to use when connecting to the liveness probe (default `HTTP`).
    livenessSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the liveness probe to be considered successful after having failed.
    livenessTimeout : int, default is Undefined, optional
        Number of seconds after which the liveness probe times out.
    readinessFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the readiness probe to be considered failed after having succeeded.
    readinessInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the readiness probe is initiated.
    readinessPeriod : int, default is Undefined, optional
        How often to perform the readiness probe.
    readinessProbeEnabled : bool, default is Undefined, optional
        Configures the readiness probe for the integration container (default `true`).
    readinessScheme : str, default is Undefined, optional
        Scheme to use when connecting to the readiness probe (default `HTTP`).
    readinessSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the readiness probe to be considered successful after having failed.
    readinessTimeout : int, default is Undefined, optional
        Number of seconds after which the readiness probe times out.
    startupFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the startup probe to be considered failed after having succeeded.
    startupInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the startup probe is initiated.
    startupPeriod : int, default is Undefined, optional
        How often to perform the startup probe.
    startupProbeEnabled : bool, default is Undefined, optional
        Configures the startup probe for the integration container (default `false`).
    startupScheme : str, default is Undefined, optional
        Scheme to use when connecting to the startup probe (default `HTTP`).
    startupSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the startup probe to be considered successful after having failed.
    startupTimeout : int, default is Undefined, optional
        Number of seconds after which the startup probe times out.
    """


    configuration?: any

    enabled?: bool

    livenessFailureThreshold?: int

    livenessInitialDelay?: int

    livenessPeriod?: int

    livenessProbeEnabled?: bool

    livenessScheme?: str

    livenessSuccessThreshold?: int

    livenessTimeout?: int

    readinessFailureThreshold?: int

    readinessInitialDelay?: int

    readinessPeriod?: int

    readinessProbeEnabled?: bool

    readinessScheme?: str

    readinessSuccessThreshold?: int

    readinessTimeout?: int

    startupFailureThreshold?: int

    startupInitialDelay?: int

    startupPeriod?: int

    startupProbeEnabled?: bool

    startupScheme?: str

    startupSuccessThreshold?: int

    startupTimeout?: int


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsIngress:
    """
    The configuration of Ingress trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to the ingress. This can be used to set controller specific annotations, e.g., when using the NGINX Ingress controller: See https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    auto : bool, default is Undefined, optional
        To automatically add an ingress whenever the integration uses an HTTP endpoint consumer.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    host : str, default is Undefined, optional
        To configure the host exposed by the ingress.
    path : str, default is Undefined, optional
        To configure the path exposed by the ingress (default `/`).
    pathType : str, default is Undefined, optional
        To configure the path type exposed by the ingress. One of `Exact`, `Prefix`, `ImplementationSpecific` (default to `Prefix`).
    """


    annotations?: {str:str}

    auto?: bool

    configuration?: any

    enabled?: bool

    host?: str

    path?: str

    pathType?: "Exact" | "Prefix" | "ImplementationSpecific"


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsIstio:
    """
    The configuration of Istio trait

    Attributes
    ----------
    allow : str, default is Undefined, optional
        Configures a (comma-separated) list of CIDR subnets that should not be intercepted by the Istio proxy (`10.0.0.0/8,172.16.0.0/12,192.168.0.0/16` by default).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    inject : bool, default is Undefined, optional
        Forces the value for labels `sidecar.istio.io/inject`. By default the label is set to `true` on deployment and not set on Knative Service.
    """


    allow?: str

    configuration?: any

    enabled?: bool

    inject?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsJolokia:
    """
    The configuration of Jolokia trait

    Attributes
    ----------
    CACert : str, default is Undefined, optional
        The PEM encoded CA certification file path, used to verify client certificates, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt` for OpenShift).
    clientPrincipal : [str], default is Undefined, optional
        The principal(s) which must be given in a client certificate to allow access to the Jolokia endpoint, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `clientPrincipal=cn=system:master-proxy`, `cn=hawtio-online.hawtio.svc` and `cn=fuse-console.fuse.svc` for OpenShift).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    discoveryEnabled : bool, default is Undefined, optional
        Listen for multicast requests (default `false`)
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    extendedClientCheck : bool, default is Undefined, optional
        Mandate the client certificate contains a client flag in the extended key usage section, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `true` for OpenShift).
    host : str, default is Undefined, optional
        The Host address to which the Jolokia agent should bind to. If `"\*"` or `"0.0.0.0"` is given, the servers binds to every network interface (default `"*"`).
    options : [str], default is Undefined, optional
        A list of additional Jolokia options as defined in https://jolokia.org/reference/html/agents.html#agent-jvm-config[JVM agent configuration options]
    password : str, default is Undefined, optional
        The password used for authentication, applicable when the `user` option is set.
    port : int, default is Undefined, optional
        The Jolokia endpoint port (default `8778`).
    $protocol : str, default is Undefined, optional
        The protocol to use, either `http` or `https` (default `https` for OpenShift)
    useSSLClientAuthentication : bool, default is Undefined, optional
        Whether client certificates should be used for authentication (default `true` for OpenShift).
    user : str, default is Undefined, optional
        The user to be used for authentication
    """


    CACert?: str

    clientPrincipal?: [str]

    configuration?: any

    discoveryEnabled?: bool

    enabled?: bool

    extendedClientCheck?: bool

    host?: str

    options?: [str]

    password?: str

    port?: int

    $protocol?: str

    useSSLClientAuthentication?: bool

    user?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsJvm:
    """
    The configuration of JVM trait

    Attributes
    ----------
    classpath : str, default is Undefined, optional
        Additional JVM classpath (use `Linux` classpath separator)
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    debug : bool, default is Undefined, optional
        Activates remote debugging, so that a debugger can be attached to the JVM, e.g., using port-forwarding
    debugAddress : str, default is Undefined, optional
        Transport address at which to listen for the newly launched JVM (default `*:5005`)
    debugSuspend : bool, default is Undefined, optional
        Suspends the target JVM immediately before the main class is loaded
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    options : [str], default is Undefined, optional
        A list of JVM options
    printCommand : bool, default is Undefined, optional
        Prints the command used the start the JVM in the container logs (default `true`)
    """


    classpath?: str

    configuration?: any

    debug?: bool

    debugAddress?: str

    debugSuspend?: bool

    enabled?: bool

    options?: [str]

    printCommand?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsKamelets:
    """
    The configuration of Kamelets trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Automatically inject all referenced Kamelets and their default configuration (enabled by default)
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    list : str, default is Undefined, optional
        Comma separated list of Kamelet names to load into the current integration
    mountPoint : str, default is Undefined, optional
        The directory where the application mounts and reads Kamelet spec (default `/etc/camel/kamelets`)
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    list?: str

    mountPoint?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsKeda:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsKnative:
    """
    The configuration of Knative trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Enable automatic discovery of all trait properties.
    channelSinks : [str], default is Undefined, optional
        List of channels used as destination of integration routes. Can contain simple channel names or full Camel URIs.
    channelSources : [str], default is Undefined, optional
        List of channels used as source of integration routes. Can contain simple channel names or full Camel URIs.
    config : str, default is Undefined, optional
        Can be used to inject a Knative complete configuration in JSON format.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    endpointSinks : [str], default is Undefined, optional
        List of endpoints used as destination of integration routes. Can contain simple endpoint names or full Camel URIs.
    endpointSources : [str], default is Undefined, optional
        List of channels used as source of integration routes.
    eventSinks : [str], default is Undefined, optional
        List of event types that the integration will produce. Can contain simple event types or full Camel URIs (to use a specific broker).
    eventSources : [str], default is Undefined, optional
        List of event types that the integration will be subscribed to. Can contain simple event types or full Camel URIs (to use a specific broker different from "default").
    filterSourceChannels : bool, default is Undefined, optional
        Enables filtering on events based on the header "ce-knativehistory". Since this header has been removed in newer versions of Knative, filtering is disabled by default.
    namespaceLabel : bool, default is Undefined, optional
        Enables the camel-k-operator to set the "bindings.knative.dev/include=true" label to the namespace As Knative requires this label to perform injection of K_SINK URL into the service. If this is false, the integration pod may start and fail, read the SinkBinding Knative documentation. (default: true)
    sinkBinding : bool, default is Undefined, optional
        Allows binding the integration to a sink via a Knative SinkBinding resource. This can be used when the integration targets a single sink. It's enabled by default when the integration targets a single sink (except when the integration is owned by a Knative source).
    """


    auto?: bool

    channelSinks?: [str]

    channelSources?: [str]

    config?: str

    configuration?: any

    enabled?: bool

    endpointSinks?: [str]

    endpointSources?: [str]

    eventSinks?: [str]

    eventSources?: [str]

    filterSourceChannels?: bool

    namespaceLabel?: bool

    sinkBinding?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsKnativeService:
    """
    The configuration of Knative Service trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to route. This can be used to set knative service specific annotations CLI usage example: -t "knative-service.annotations.'haproxy.router.openshift.io/balance'=true"
    auto : bool, default is Undefined, optional
        Automatically deploy the integration as Knative service when all conditions hold: 
         * Integration is using the Knative profile * All routes are either starting from an HTTP based consumer or a passive consumer (e.g. `direct` is a passive consumer)
    autoscalingMetric : str, default is Undefined, optional
        Configures the Knative autoscaling metric property (e.g. to set `concurrency` based or `cpu` based autoscaling). 
         Refer to the Knative documentation for more information.
    autoscalingTarget : int, default is Undefined, optional
        Sets the allowed concurrency level or CPU percentage (depending on the autoscaling metric) for each Pod. 
         Refer to the Knative documentation for more information.
    class : str, default is Undefined, optional
        Configures the Knative autoscaling class property (e.g. to set `hpa.autoscaling.knative.dev` or `kpa.autoscaling.knative.dev` autoscaling). 
         Refer to the Knative documentation for more information.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    maxScale : int, default is Undefined, optional
        An upper bound for the number of Pods that can be running in parallel for the integration. Knative has its own cap value that depends on the installation. 
         Refer to the Knative documentation for more information.
    minScale : int, default is Undefined, optional
        The minimum number of Pods that should be running at any time for the integration. It's **zero** by default, meaning that the integration is scaled down to zero when not used for a configured amount of time. 
         Refer to the Knative documentation for more information.
    rolloutDuration : str, default is Undefined, optional
        Enables to gradually shift traffic to the latest Revision and sets the rollout duration. It's disabled by default and must be expressed as a Golang `time.Duration` string representation, rounded to a second precision.
    visibility : str, default is Undefined, optional
        Setting `cluster-local`, Knative service becomes a private service. Specifically, this option applies the `networking.knative.dev/visibility` label to Knative service. 
         Refer to the Knative documentation for more information.
    """


    annotations?: {str:str}

    auto?: bool

    autoscalingMetric?: str

    autoscalingTarget?: int

    class?: "kpa.autoscaling.knative.dev" | "hpa.autoscaling.knative.dev"

    configuration?: any

    enabled?: bool

    maxScale?: int

    minScale?: int

    rolloutDuration?: str

    visibility?: "cluster-local"


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsLogging:
    """
    The configuration of Logging trait

    Attributes
    ----------
    color : bool, default is Undefined, optional
        Colorize the log output
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    format : str, default is Undefined, optional
        Logs message format
    json : bool, default is Undefined, optional
        Output the logs in JSON
    jsonPrettyPrint : bool, default is Undefined, optional
        Enable "pretty printing" of the JSON logs
    level : str, default is Undefined, optional
        Adjust the logging level (defaults to INFO)
    """


    color?: bool

    configuration?: any

    enabled?: bool

    format?: str

    json?: bool

    jsonPrettyPrint?: bool

    level?: "FATAL" | "WARN" | "INFO" | "DEBUG" | "TRACE"


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsMaster:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsMount:
    """
    The configuration of Mount trait

    Attributes
    ----------
    configs : [str], default is Undefined, optional
        A list of configuration pointing to configmap/secret. The configuration are expected to be UTF-8 resources as they are processed by runtime Camel Context and tried to be parsed as property files. They are also made available on the classpath in order to ease their usage directly from the Route. Syntax: [configmap|secret]:name[/key], where name represents the resource name and key optionally represents the resource key to be filtered
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    hotReload : bool, default is Undefined, optional
        Enable "hot reload" when a secret/configmap mounted is edited (default false)
    resources : [str], default is Undefined, optional
        A list of resources (text or binary content) pointing to configmap/secret. The resources are expected to be any resource type (text or binary content). The destination path can be either a default location or any path specified by the user. Syntax: [configmap|secret]:name[/key][@path], where name represents the resource name, key optionally represents the resource key to be filtered and path represents the destination path
    volumes : [str], default is Undefined, optional
        A list of Persistent Volume Claims to be mounted. Syntax: [pvcname:/container/path]
    """


    configs?: [str]

    configuration?: any

    enabled?: bool

    hotReload?: bool

    resources?: [str]

    volumes?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsNr3scale:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsOpenapi:
    """
    The configuration of OpenAPI trait

    Attributes
    ----------
    configmaps : [str], default is Undefined, optional
        The configmaps holding the spec of the OpenAPI
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    """


    configmaps?: [str]

    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsOwner:
    """
    The configuration of Owner trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    targetAnnotations : [str], default is Undefined, optional
        The set of annotations to be transferred
    targetLabels : [str], default is Undefined, optional
        The set of labels to be transferred
    """


    configuration?: any

    enabled?: bool

    targetAnnotations?: [str]

    targetLabels?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsPdb:
    """
    The configuration of PDB trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    maxUnavailable : str, default is Undefined, optional
        The number of pods for the Integration that can be unavailable after an eviction. It can be either an absolute number or a percentage (default `1` if `min-available` is also not set). Only one of `max-unavailable` and `min-available` can be specified.
    minAvailable : str, default is Undefined, optional
        The number of pods for the Integration that must still be available after an eviction. It can be either an absolute number or a percentage. Only one of `min-available` and `max-unavailable` can be specified.
    """


    configuration?: any

    enabled?: bool

    maxUnavailable?: str

    minAvailable?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsPlatform:
    """
    The configuration of Platform trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically detect from the environment if a default platform can be created (it will be created on OpenShift only).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    createDefault : bool, default is Undefined, optional
        To create a default (empty) platform when the platform is missing.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    global : bool, default is Undefined, optional
        Indicates if the platform should be created globally in the case of global operator (default true).
    """


    auto?: bool

    configuration?: any

    createDefault?: bool

    enabled?: bool

    global?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsPod:
    """
    The configuration of Pod trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsPrometheus:
    """
    The configuration of Prometheus trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    podMonitor : bool, default is Undefined, optional
        Whether a `PodMonitor` resource is created (default `true`).
    podMonitorLabels : [str], default is Undefined, optional
        The `PodMonitor` resource labels, applicable when `pod-monitor` is `true`.
    """


    configuration?: any

    enabled?: bool

    podMonitor?: bool

    podMonitorLabels?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsPullSecret:
    """
    The configuration of Pull Secret trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Automatically configures the platform registry secret on the pod if it is of type `kubernetes.io/dockerconfigjson`.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    imagePullerDelegation : bool, default is Undefined, optional
        When using a global operator with a shared platform, this enables delegation of the `system:image-puller` cluster role on the operator namespace to the integration service account.
    secretName : str, default is Undefined, optional
        The pull secret name to set on the Pod. If left empty this is automatically taken from the `IntegrationPlatform` registry configuration.
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    imagePullerDelegation?: bool

    secretName?: str


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsQuarkus:
    """
    The configuration of Quarkus trait

    Attributes
    ----------
    buildMode : [str], default is Undefined, optional
        The Quarkus mode to run: either `jvm` or `native` (default `jvm`). In case both `jvm` and `native` are specified, two `IntegrationKit` resources are created, with the `native` kit having precedence over the `jvm` one once ready.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    nativeBaseImage : str, default is Undefined, optional
        The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)
    nativeBuilderImage : str, default is Undefined, optional
        The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)
    packageTypes : [str], default is Undefined, optional
        The Quarkus package types, `fast-jar` or `native` (default `fast-jar`). In case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created, with the native kit having precedence over the `fast-jar` one once ready. The order influences the resolution of the current kit for the integration. The kit corresponding to the first package type will be assigned to the integration in case no existing kit that matches the integration exists. Deprecated: use `build-mode` instead.
    """


    buildMode?: [str]

    configuration?: any

    enabled?: bool

    nativeBaseImage?: str

    nativeBuilderImage?: str

    packageTypes?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsRegistry:
    """
    The configuration of Registry trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsRoute:
    """
    The configuration of Route trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to route. This can be used to set route specific annotations For annotations options see https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#route-specific-annotations CLI usage example: -t "route.annotations.'haproxy.router.openshift.io/balance'=true"
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    host : str, default is Undefined, optional
        To configure the host exposed by the route.
    tlsCACertificate : str, default is Undefined, optional
        The TLS CA certificate contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsCACertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the TLS CA certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsCertificate : str, default is Undefined, optional
        The TLS certificate contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsCertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the TLS certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsDestinationCACertificate : str, default is Undefined, optional
        The destination CA certificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify. 
         Refer to the OpenShift route documentation for additional information.
    tlsDestinationCACertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the destination CA certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsInsecureEdgeTerminationPolicy : str, default is Undefined, optional
        To configure how to deal with insecure traffic, e.g. `Allow`, `Disable` or `Redirect` traffic. 
         Refer to the OpenShift route documentation for additional information.
    tlsKey : str, default is Undefined, optional
        The TLS certificate key contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsKeySecret : str, default is Undefined, optional
        The secret name and key reference to the TLS certificate key. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsTermination : str, default is Undefined, optional
        The TLS termination type, like `edge`, `passthrough` or `reencrypt`. 
         Refer to the OpenShift route documentation for additional information.
    """


    annotations?: {str:str}

    configuration?: any

    enabled?: bool

    host?: str

    tlsCACertificate?: str

    tlsCACertificateSecret?: str

    tlsCertificate?: str

    tlsCertificateSecret?: str

    tlsDestinationCACertificate?: str

    tlsDestinationCACertificateSecret?: str

    tlsInsecureEdgeTerminationPolicy?: "None" | "Allow" | "Redirect"

    tlsKey?: str

    tlsKeySecret?: str

    tlsTermination?: "edge" | "reencrypt" | "passthrough"


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsService:
    """
    The configuration of Service trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically detect from the code if a Service needs to be created.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    nodePort : bool, default is Undefined, optional
        Enable Service to be exposed as NodePort (default `false`). Deprecated: Use service type instead.
    $type : str, default is Undefined, optional
        The type of service to be used, either 'ClusterIP', 'NodePort' or 'LoadBalancer'.
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    nodePort?: bool

    $type?: "ClusterIP" | "NodePort" | "LoadBalancer"


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsServiceBinding:
    """
    The configuration of Service Binding trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    services : [str], default is Undefined, optional
        List of Services in the form [[apigroup/]version:]kind:[namespace/]name
    """


    configuration?: any

    enabled?: bool

    services?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsStrimzi:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsToleration:
    """
    The configuration of Toleration trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    taints : [str], default is Undefined, optional
        The list of taints to tolerate, in the form `Key[=Value]:Effect[:Seconds]`
    """


    configuration?: any

    enabled?: bool

    taints?: [str]


schema CamelApacheOrgV1IntegrationPlatformStatusTraitsTracing:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


