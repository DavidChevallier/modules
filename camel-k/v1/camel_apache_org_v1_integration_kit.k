"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IntegrationKit:
    """
    IntegrationKit defines a container image and additional configuration needed to run an `Integration`. An `IntegrationKit` is a generic image generally built from the requirements of an `Integration`, but agnostic to it, in order to be reused by any other `Integration` which has the same required set of capabilities. An `IntegrationKit` may be used for other kits as a base container layer, when the `incremental` build option is enabled.

    Attributes
    ----------
    apiVersion : str, default is "camel.apache.org/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IntegrationKit", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CamelApacheOrgV1IntegrationKitSpec, default is Undefined, optional
        spec
    status : CamelApacheOrgV1IntegrationKitStatus, default is Undefined, optional
        status
    """


    apiVersion: "camel.apache.org/v1" = "camel.apache.org/v1"

    kind: "IntegrationKit" = "IntegrationKit"

    metadata?: v1.ObjectMeta

    spec?: CamelApacheOrgV1IntegrationKitSpec

    status?: CamelApacheOrgV1IntegrationKitStatus


schema CamelApacheOrgV1IntegrationKitSpec:
    """
    the desired configuration

    Attributes
    ----------
    configuration : [CamelApacheOrgV1IntegrationKitSpecConfigurationItems0], default is Undefined, optional
        Deprecated: Use camel trait (camel.properties) to manage properties Use mount trait (mount.configs) to manage configs Use mount trait (mount.resources) to manage resources Use mount trait (mount.volumes) to manage volumes configuration used by the kit
    dependencies : [str], default is Undefined, optional
        a list of Camel dependecies used by this kit
    image : str, default is Undefined, optional
        the container image as identified in the container registry
    profile : str, default is Undefined, optional
        the profile which is expected by this kit
    repositories : [str], default is Undefined, optional
        Maven repositories that can be used by the kit
    sources : [CamelApacheOrgV1IntegrationKitSpecSourcesItems0], default is Undefined, optional
        the sources to add at build time
    traits : CamelApacheOrgV1IntegrationKitSpecTraits, default is Undefined, optional
        traits
    """


    configuration?: [CamelApacheOrgV1IntegrationKitSpecConfigurationItems0]

    dependencies?: [str]

    image?: str

    profile?: str

    repositories?: [str]

    sources?: [CamelApacheOrgV1IntegrationKitSpecSourcesItems0]

    traits?: CamelApacheOrgV1IntegrationKitSpecTraits


schema CamelApacheOrgV1IntegrationKitSpecConfigurationItems0:
    """
    ConfigurationSpec represents a generic configuration specification.

    Attributes
    ----------
    $type : str, default is Undefined, required
        represents the type of configuration, ie: property, configmap, secret, ...
    value : str, default is Undefined, required
        the value to assign to the configuration (syntax may vary depending on the `Type`)
    """


    $type: str

    value: str


schema CamelApacheOrgV1IntegrationKitSpecSourcesItems0:
    """
    SourceSpec defines the configuration for one or more routes to be executed in a certain Camel DSL language.

    Attributes
    ----------
    compression : bool, default is Undefined, optional
        if the content is compressed (base64 encrypted)
    content : str, default is Undefined, optional
        the source code (plain text)
    contentKey : str, default is Undefined, optional
        the confimap key holding the source content
    contentRef : str, default is Undefined, optional
        the confimap reference holding the source content
    contentType : str, default is Undefined, optional
        the content type (tipically text or binary)
    from_kamelet : bool, default is Undefined, optional
        True if the spec is generated from a Kamelet
    interceptors : [str], default is Undefined, optional
        Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
    language : str, default is Undefined, optional
        specify which is the language (Camel DSL) used to interpret this source code
    loader : str, default is Undefined, optional
        Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
    name : str, default is Undefined, optional
        the name of the specification
    path : str, default is Undefined, optional
        the path where the file is stored
    property_names : [str], default is Undefined, optional
        List of property names defined in the source (e.g. if type is "template")
    rawContent : str, default is Undefined, optional
        the source code (binary)
    $type : str, default is Undefined, optional
        Type defines the kind of source described by this object
    """


    compression?: bool

    content?: str

    contentKey?: str

    contentRef?: str

    contentType?: str

    from_kamelet?: bool

    interceptors?: [str]

    language?: str

    loader?: str

    name?: str

    path?: str

    property_names?: [str]

    rawContent?: str

    $type?: str


schema CamelApacheOrgV1IntegrationKitSpecTraits:
    """
    traits that the kit will execute

    Attributes
    ----------
    addons : {str:any}, default is Undefined, optional
        The collection of addon trait configurations
    builder : CamelApacheOrgV1IntegrationKitSpecTraitsBuilder, default is Undefined, optional
        builder
    camel : CamelApacheOrgV1IntegrationKitSpecTraitsCamel, default is Undefined, optional
        camel
    quarkus : CamelApacheOrgV1IntegrationKitSpecTraitsQuarkus, default is Undefined, optional
        quarkus
    registry : CamelApacheOrgV1IntegrationKitSpecTraitsRegistry, default is Undefined, optional
        registry
    """


    addons?: {str:any}

    builder?: CamelApacheOrgV1IntegrationKitSpecTraitsBuilder

    camel?: CamelApacheOrgV1IntegrationKitSpecTraitsCamel

    quarkus?: CamelApacheOrgV1IntegrationKitSpecTraitsQuarkus

    registry?: CamelApacheOrgV1IntegrationKitSpecTraitsRegistry


schema CamelApacheOrgV1IntegrationKitSpecTraitsBuilder:
    """
    The builder trait is internally used to determine the best strategy to build and configure IntegrationKits.

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    incrementalImageBuild : bool, default is Undefined, optional
        Use the incremental image build option, to reuse existing containers (default `true`)
    limitCPU : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    limitMemory : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    mavenProfiles : [str], default is Undefined, optional
        A list of references pointing to configmaps/secrets that contains a maven profile. The content of the maven profile is expected to be a text containing a valid maven profile starting with `<profile>` and ending with `</profile>` that will be integrated as an inline profile in the POM. Syntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).
    orderStrategy : str, default is Undefined, optional
        The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default sequential)
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the build task
    requestCPU : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    requestMemory : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    strategy : str, default is Undefined, optional
        The strategy to use, either `pod` or `routine` (default routine)
    tasks : [str], default is Undefined, optional
        A list of tasks to be executed (available only when using `pod` strategy) with format `<name>;<container-image>;<container-command>`.
    tasksLimitCPU : [str], default is Undefined, optional
        A list of limit cpu configuration for the specific task with format `<task-name>:<limit-cpu-conf>`.
    tasksLimitMemory : [str], default is Undefined, optional
        A list of limit memory configuration for the specific task with format `<task-name>:<limit-memory-conf>`.
    tasksRequestCPU : [str], default is Undefined, optional
        A list of request cpu configuration for the specific task with format `<task-name>:<request-cpu-conf>`.
    tasksRequestMemory : [str], default is Undefined, optional
        A list of request memory configuration for the specific task with format `<task-name>:<request-memory-conf>`.
    verbose : bool, default is Undefined, optional
        Enable verbose logging on build components that support it (e.g. Kaniko build pod).
    """


    configuration?: any

    enabled?: bool

    incrementalImageBuild?: bool

    limitCPU?: str

    limitMemory?: str

    mavenProfiles?: [str]

    orderStrategy?: str

    properties?: [str]

    requestCPU?: str

    requestMemory?: str

    strategy?: str

    tasks?: [str]

    tasksLimitCPU?: [str]

    tasksLimitMemory?: [str]

    tasksRequestCPU?: [str]

    tasksRequestMemory?: [str]

    verbose?: bool


schema CamelApacheOrgV1IntegrationKitSpecTraitsCamel:
    """
    The Camel trait sets up Camel configuration.

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the Integration runtime
    runtimeVersion : str, default is Undefined, optional
        The camel-k-runtime version to use for the integration. It overrides the default version set in the Integration Platform.
    """


    configuration?: any

    enabled?: bool

    properties?: [str]

    runtimeVersion?: str


schema CamelApacheOrgV1IntegrationKitSpecTraitsQuarkus:
    """
    The Quarkus trait configures the Quarkus runtime. It's enabled by default. NOTE: Compiling to a native executable, requires at least 4GiB of memory, so the Pod running the native build must have enough memory available.

    Attributes
    ----------
    buildMode : [str], default is Undefined, optional
        The Quarkus mode to run: either `jvm` or `native` (default `jvm`). In case both `jvm` and `native` are specified, two `IntegrationKit` resources are created, with the `native` kit having precedence over the `jvm` one once ready.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    nativeBaseImage : str, default is Undefined, optional
        The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)
    nativeBuilderImage : str, default is Undefined, optional
        The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)
    packageTypes : [str], default is Undefined, optional
        The Quarkus package types, `fast-jar` or `native` (default `fast-jar`). In case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created, with the native kit having precedence over the `fast-jar` one once ready. The order influences the resolution of the current kit for the integration. The kit corresponding to the first package type will be assigned to the integration in case no existing kit that matches the integration exists. Deprecated: use `build-mode` instead.
    """


    buildMode?: [str]

    configuration?: any

    enabled?: bool

    nativeBaseImage?: str

    nativeBuilderImage?: str

    packageTypes?: [str]


schema CamelApacheOrgV1IntegrationKitSpecTraitsRegistry:
    """
    The Registry trait sets up Maven to use the Image registry as a Maven repository.

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationKitStatus:
    """
    the actual status

    Attributes
    ----------
    artifacts : [CamelApacheOrgV1IntegrationKitStatusArtifactsItems0], default is Undefined, optional
        list of artifacts used by the kit
    baseImage : str, default is Undefined, optional
        base image used by the kit
    conditions : [CamelApacheOrgV1IntegrationKitStatusConditionsItems0], default is Undefined, optional
        a list of conditions which happened for the events related the kit
    digest : str, default is Undefined, optional
        actual image digest of the kit
    failure : CamelApacheOrgV1IntegrationKitStatusFailure, default is Undefined, optional
        failure
    image : str, default is Undefined, optional
        actual image name of the kit
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the most recent generation observed for this IntegrationKit.
    phase : str, default is Undefined, optional
        phase of the kit
    platform : str, default is Undefined, optional
        the platform for which this kit was configured
    runtimeProvider : str, default is Undefined, optional
        the runtime provider for which this kit was configured
    runtimeVersion : str, default is Undefined, optional
        the runtime version for which this kit was configured
    version : str, default is Undefined, optional
        the Camel K operator version for which this kit was configured
    """


    artifacts?: [CamelApacheOrgV1IntegrationKitStatusArtifactsItems0]

    baseImage?: str

    conditions?: [CamelApacheOrgV1IntegrationKitStatusConditionsItems0]

    digest?: str

    failure?: CamelApacheOrgV1IntegrationKitStatusFailure

    image?: str

    observedGeneration?: int

    phase?: str

    platform?: str

    runtimeProvider?: str

    runtimeVersion?: str

    version?: str


schema CamelApacheOrgV1IntegrationKitStatusArtifactsItems0:
    """
    Artifact represents a materialized artifact (a jar dependency or in general a file used by the build).

    Attributes
    ----------
    checksum : str, default is Undefined, optional
        a checksum (SHA1) of the content
    id : str, default is Undefined, required
        the identification (GAV for maven dependencies or file name for other file types)
    location : str, default is Undefined, optional
        where it is located in the builder `Pod`
    target : str, default is Undefined, optional
        the expected location in the runtime
    """


    checksum?: str

    id: str

    location?: str

    target?: str


schema CamelApacheOrgV1IntegrationKitStatusConditionsItems0:
    """
    IntegrationKitCondition describes the state of a resource at a certain point.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    lastUpdateTime : str, default is Undefined, optional
        The last time this condition was updated.
    message : str, default is Undefined, optional
        A human-readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of integration condition.
    """


    lastTransitionTime?: str

    lastUpdateTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema CamelApacheOrgV1IntegrationKitStatusFailure:
    """
    failure reason (if any)

    Attributes
    ----------
    reason : str, default is Undefined, required
        a short text specifying the reason
    recovery : CamelApacheOrgV1IntegrationKitStatusFailureRecovery, default is Undefined, required
        recovery
    time : str, default is Undefined, required
        the time when the failure has happened
    """


    reason: str

    recovery: CamelApacheOrgV1IntegrationKitStatusFailureRecovery

    time: str


schema CamelApacheOrgV1IntegrationKitStatusFailureRecovery:
    """
    the recovery attempted for this failure

    Attributes
    ----------
    attempt : int, default is Undefined, required
        attempt number
    attemptMax : int, default is Undefined, required
        maximum number of attempts
    attemptTime : str, default is Undefined, optional
        time of the attempt execution
    """


    attempt: int

    attemptMax: int

    attemptTime?: str


