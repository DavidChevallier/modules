"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Integration:
    """
    Integration is the Schema for the integrations API.

    Attributes
    ----------
    apiVersion : str, default is "camel.apache.org/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Integration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CamelApacheOrgV1IntegrationSpec, default is Undefined, optional
        spec
    status : CamelApacheOrgV1IntegrationStatus, default is Undefined, optional
        status
    """


    apiVersion: "camel.apache.org/v1" = "camel.apache.org/v1"

    kind: "Integration" = "Integration"

    metadata?: v1.ObjectMeta

    spec?: CamelApacheOrgV1IntegrationSpec

    status?: CamelApacheOrgV1IntegrationStatus


schema CamelApacheOrgV1IntegrationSpec:
    """
    the desired Integration specification

    Attributes
    ----------
    configuration : [CamelApacheOrgV1IntegrationSpecConfigurationItems0], default is Undefined, optional
        Deprecated: Use camel trait (camel.properties) to manage properties Use mount trait (mount.configs) to manage configs Use mount trait (mount.resources) to manage resources Use mount trait (mount.volumes) to manage volumes
    dependencies : [str], default is Undefined, optional
        the list of Camel or Maven dependencies required by the Integration
    flows : [any], default is Undefined, optional
        a source in YAML DSL language which contain the routes to run
    integrationKit : CamelApacheOrgV1IntegrationSpecIntegrationKit, default is Undefined, optional
        integration kit
    profile : str, default is Undefined, optional
        the profile needed to run this Integration
    replicas : int, default is Undefined, optional
        the number of `Pods` needed for the running Integration
    repositories : [str], default is Undefined, optional
        additional Maven repositories to be used
    serviceAccountName : str, default is Undefined, optional
        custom SA to use for the Integration
    sources : [CamelApacheOrgV1IntegrationSpecSourcesItems0], default is Undefined, optional
        the sources which contain the Camel routes to run
    template : CamelApacheOrgV1IntegrationSpecTemplate, default is Undefined, optional
        template
    traits : CamelApacheOrgV1IntegrationSpecTraits, default is Undefined, optional
        traits
    """


    configuration?: [CamelApacheOrgV1IntegrationSpecConfigurationItems0]

    dependencies?: [str]

    flows?: [any]

    integrationKit?: CamelApacheOrgV1IntegrationSpecIntegrationKit

    profile?: str

    replicas?: int

    repositories?: [str]

    serviceAccountName?: str

    sources?: [CamelApacheOrgV1IntegrationSpecSourcesItems0]

    template?: CamelApacheOrgV1IntegrationSpecTemplate

    traits?: CamelApacheOrgV1IntegrationSpecTraits


schema CamelApacheOrgV1IntegrationSpecConfigurationItems0:
    """
    ConfigurationSpec represents a generic configuration specification.

    Attributes
    ----------
    $type : str, default is Undefined, required
        represents the type of configuration, ie: property, configmap, secret, ...
    value : str, default is Undefined, required
        the value to assign to the configuration (syntax may vary depending on the `Type`)
    """


    $type: str

    value: str


schema CamelApacheOrgV1IntegrationSpecIntegrationKit:
    """
    the reference of the `IntegrationKit` which is used for this Integration

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


schema CamelApacheOrgV1IntegrationSpecSourcesItems0:
    """
    SourceSpec defines the configuration for one or more routes to be executed in a certain Camel DSL language.

    Attributes
    ----------
    compression : bool, default is Undefined, optional
        if the content is compressed (base64 encrypted)
    content : str, default is Undefined, optional
        the source code (plain text)
    contentKey : str, default is Undefined, optional
        the confimap key holding the source content
    contentRef : str, default is Undefined, optional
        the confimap reference holding the source content
    contentType : str, default is Undefined, optional
        the content type (tipically text or binary)
    from_kamelet : bool, default is Undefined, optional
        True if the spec is generated from a Kamelet
    interceptors : [str], default is Undefined, optional
        Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
    language : str, default is Undefined, optional
        specify which is the language (Camel DSL) used to interpret this source code
    loader : str, default is Undefined, optional
        Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
    name : str, default is Undefined, optional
        the name of the specification
    path : str, default is Undefined, optional
        the path where the file is stored
    property_names : [str], default is Undefined, optional
        List of property names defined in the source (e.g. if type is "template")
    rawContent : str, default is Undefined, optional
        the source code (binary)
    $type : str, default is Undefined, optional
        Type defines the kind of source described by this object
    """


    compression?: bool

    content?: str

    contentKey?: str

    contentRef?: str

    contentType?: str

    from_kamelet?: bool

    interceptors?: [str]

    language?: str

    loader?: str

    name?: str

    path?: str

    property_names?: [str]

    rawContent?: str

    $type?: str


schema CamelApacheOrgV1IntegrationSpecTemplate:
    """
    Pod template customization

    Attributes
    ----------
    spec : CamelApacheOrgV1IntegrationSpecTemplateSpec, default is Undefined, optional
        spec
    """


    spec?: CamelApacheOrgV1IntegrationSpecTemplateSpec


schema CamelApacheOrgV1IntegrationSpecTemplateSpec:
    """
    the specification

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
        ActiveDeadlineSeconds
    containers : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0], default is Undefined, required
        Containers
    dnsPolicy : str, default is Undefined, optional
        DNSPolicy
    ephemeralContainers : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0], default is Undefined, optional
        EphemeralContainers
    initContainers : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0], default is Undefined, optional
        InitContainers
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector
    restartPolicy : str, default is Undefined, optional
        RestartPolicy
    securityContext : CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContext, default is Undefined, optional
        security context
    terminationGracePeriodSeconds : int, default is Undefined, optional
        TerminationGracePeriodSeconds
    topologySpreadConstraints : [CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints
    volumes : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0], default is Undefined, optional
        Volumes
    """


    activeDeadlineSeconds?: int

    containers: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0]

    dnsPolicy?: str

    ephemeralContainers?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0]

    initContainers?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0]

    nodeSelector?: {str:str}

    restartPolicy?: str

    securityContext?: CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContext

    terminationGracePeriodSeconds?: int

    topologySpreadConstraints?: [CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0]

    volumes?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
    readinessProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0]

    envFrom?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0Lifecycle

    livenessProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbe

    name: str

    ports?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0PortsItems0]

    readinessProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbe

    resizePolicy?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ResizePolicyItems0]

    resources?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0Resources

    securityContext?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContext

    startupProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0VolumeDevicesItems0]

    volumeMounts?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0VolumeMountsItems0]

    workingDir?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0SecretRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFrom


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStart

    preStop?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStop


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartExec

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartTCPSocket


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopExec

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopTCPSocket


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextSeccompProfile

    windowsOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextWindowsOptions


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0:
    """
    An EphemeralContainer is a temporary container that you may add to an existing Pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a Pod is removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the Pod to exceed its resource allocation. 
     To add an ephemeral container, use the ephemeralcontainers subresource of an existing Pod. Ephemeral containers may not be removed or restarted.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
    ports : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0PortsItems0], default is Undefined, optional
        Ports are not allowed for ephemeral containers.
    readinessProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    targetContainerName : str, default is Undefined, optional
        If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec. 
         The container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined.
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0]

    envFrom?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0Lifecycle

    livenessProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbe

    name: str

    ports?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0PortsItems0]

    readinessProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbe

    resizePolicy?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ResizePolicyItems0]

    resources?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0Resources

    securityContext?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContext

    startupProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    targetContainerName?: str

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0VolumeDevicesItems0]

    volumeMounts?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0VolumeMountsItems0]

    workingDir?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0SecretRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFrom


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0Lifecycle:
    """
    Lifecycle is not allowed for ephemeral containers.

    Attributes
    ----------
    postStart : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStart

    preStop?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStop


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartExec

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartTCPSocket


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopExec

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopTCPSocket


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbe:
    """
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbe:
    """
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0Resources:
    """
    Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.

    Attributes
    ----------
    claims : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContext:
    """
    Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextSeccompProfile

    windowsOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextWindowsOptions


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbe:
    """
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecEphemeralContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
    readinessProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0]

    envFrom?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0Lifecycle

    livenessProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbe

    name: str

    ports?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0PortsItems0]

    readinessProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbe

    resizePolicy?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ResizePolicyItems0]

    resources?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0Resources

    securityContext?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContext

    startupProbe?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0VolumeDevicesItems0]

    volumeMounts?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0VolumeMountsItems0]

    workingDir?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0SecretRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFrom


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStart

    preStop?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStop


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartExec

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartTCPSocket


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopExec

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopTCPSocket


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextSeccompProfile

    windowsOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextWindowsOptions


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeGrpc

    httpGet?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecInitContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContext:
    """
    PodSecurityContext

    Attributes
    ----------
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
         1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
         If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, default is Undefined, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    windowsOptions : CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    fsGroup?: int

    fsGroupChangePolicy?: str

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSeLinuxOptions

    seccompProfile?: CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSeccompProfile

    supplementalGroups?: [int]

    sysctls?: [CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSysctlsItems0]

    windowsOptions?: CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextWindowsOptions


schema CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSeccompProfile:
    """
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextSysctlsItems0:
    """
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """


    name: str

    value: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector. 
         This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule. 
         For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. 
         This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations. 
         If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included. 
         If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """


    labelSelector?: CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema CamelApacheOrgV1IntegrationSpecTemplateSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0:
    """
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    iscsi : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """


    awsElasticBlockStore?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AwsElasticBlockStore

    azureDisk?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AzureDisk

    azureFile?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AzureFile

    cephfs?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Cephfs

    cinder?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Cinder

    configMap?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ConfigMap

    csi?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Csi

    downwardAPI?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPI

    emptyDir?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EmptyDir

    ephemeral?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Ephemeral

    fc?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Fc

    flexVolume?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0FlexVolume

    flocker?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Flocker

    gcePersistentDisk?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0GcePersistentDisk

    gitRepo?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0GitRepo

    glusterfs?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Glusterfs

    hostPath?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0HostPath

    iscsi?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Iscsi

    name: str

    nfs?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Nfs

    persistentVolumeClaim?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PersistentVolumeClaim

    photonPersistentDisk?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PhotonPersistentDisk

    portworxVolume?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PortworxVolume

    projected?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Projected

    quobyte?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Quobyte

    rbd?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Rbd

    scaleIO?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ScaleIO

    secret?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Secret

    storageos?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Storageos

    vsphereVolume?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0VsphereVolume


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AwsElasticBlockStore:
    """
    awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """


    fsType?: str

    partition?: int

    readOnly?: bool

    volumeID: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AzureDisk:
    """
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is Undefined, optional
        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    """


    cachingMode?: str

    diskName: str

    diskURI: str

    fsType?: str

    kind?: str

    readOnly?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0AzureFile:
    """
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """


    readOnly?: bool

    secretName: str

    shareName: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Cephfs:
    """
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """


    monitors: [str]

    path?: str

    readOnly?: bool

    secretFile?: str

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CephfsSecretRef

    user?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CephfsSecretRef:
    """
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Cinder:
    """
    cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """


    fsType?: str

    readOnly?: bool

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CinderSecretRef

    volumeID: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CinderSecretRef:
    """
    secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ConfigMap:
    """
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Csi:
    """
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    nodePublishSecretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0CsiNodePublishSecretRef:
    """
    nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPI:
    """
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """


    defaultMode?: int

    items?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EmptyDir:
    """
    emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Ephemeral:
    """
    ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
     Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). 
     Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
     Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
     A pod can use both types of ephemeral volumes and persistent volumes at the same time.

    Attributes
    ----------
    volumeClaimTemplate : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplate


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
     An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
     This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
     Required, must not be nil.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
    spec : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: any

    spec: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpec


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources

    selector?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef   allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef   preserves all values, and generates an error if a disallowed value is   specified. * While dataSource only allows local objects, dataSourceRef allows objects   in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Fc:
    """
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """


    fsType?: str

    lun?: int

    readOnly?: bool

    targetWWNs?: [str]

    wwids?: [str]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0FlexVolume:
    """
    flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """


    driver: str

    fsType?: str

    options?: {str:str}

    readOnly?: bool

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0FlexVolumeSecretRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0FlexVolumeSecretRef:
    """
    secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Flocker:
    """
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """


    datasetName?: str

    datasetUUID?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0GcePersistentDisk:
    """
    gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """


    fsType?: str

    partition?: int

    pdName: str

    readOnly?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0GitRepo:
    """
    gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """


    directory?: str

    repository: str

    revision?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Glusterfs:
    """
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """


    endpoints: str

    path: str

    readOnly?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0HostPath:
    """
    hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """


    path: str

    $type?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Iscsi:
    """
    iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is Undefined, optional
        iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    """


    chapAuthDiscovery?: bool

    chapAuthSession?: bool

    fsType?: str

    initiatorName?: str

    iqn: str

    iscsiInterface?: str

    lun: int

    portals?: [str]

    readOnly?: bool

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0IscsiSecretRef

    targetPortal: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0IscsiSecretRef:
    """
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Nfs:
    """
    nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """


    path: str

    readOnly?: bool

    server: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PersistentVolumeClaim:
    """
    persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PhotonPersistentDisk:
    """
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """


    fsType?: str

    pdID: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0PortworxVolume:
    """
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """


    fsType?: str

    readOnly?: bool

    volumeID: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Projected:
    """
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    sources : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections
    """


    defaultMode?: int

    sources?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0:
    """
    Projection that may be projected along with other supported volume types

    Attributes
    ----------
    configMap : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    """
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    """
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0Secret:
    """
    secret information about the secret data to project

    Attributes
    ----------
    items : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str

    optional?: bool


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    """
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Quobyte:
    """
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """


    group?: str

    readOnly?: bool

    registry: str

    tenant?: str

    user?: str

    volume: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Rbd:
    """
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
    image : str, default is Undefined, required
        image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is Undefined, optional
        keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is Undefined, optional
        pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """


    fsType?: str

    image: str

    keyring?: str

    monitors: [str]

    pool?: str

    readOnly?: bool

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0RbdSecretRef

    user?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0RbdSecretRef:
    """
    secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ScaleIO:
    """
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is Undefined, optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
    """


    fsType?: str

    gateway: str

    protectionDomain?: str

    readOnly?: bool

    secretRef: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool

    storageMode?: str

    storagePool?: str

    system: str

    volumeName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0ScaleIOSecretRef:
    """
    secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Secret:
    """
    secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0Storageos:
    """
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
    """


    fsType?: str

    readOnly?: bool

    secretRef?: CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0StorageosSecretRef

    volumeName?: str

    volumeNamespace?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0StorageosSecretRef:
    """
    secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema CamelApacheOrgV1IntegrationSpecTemplateSpecVolumesItems0VsphereVolume:
    """
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """


    fsType?: str

    storagePolicyID?: str

    storagePolicyName?: str

    volumePath: str


schema CamelApacheOrgV1IntegrationSpecTraits:
    """
    the traits needed to run this Integration

    Attributes
    ----------
    3scale : CamelApacheOrgV1IntegrationSpecTraitsNr3scale, default is Undefined, optional
        3scale
    addons : {str:any}, default is Undefined, optional
        The extension point with addon traits
    affinity : CamelApacheOrgV1IntegrationSpecTraitsAffinity, default is Undefined, optional
        affinity
    builder : CamelApacheOrgV1IntegrationSpecTraitsBuilder, default is Undefined, optional
        builder
    camel : CamelApacheOrgV1IntegrationSpecTraitsCamel, default is Undefined, optional
        camel
    container : CamelApacheOrgV1IntegrationSpecTraitsContainer, default is Undefined, optional
        container
    cron : CamelApacheOrgV1IntegrationSpecTraitsCron, default is Undefined, optional
        cron
    dependencies : CamelApacheOrgV1IntegrationSpecTraitsDependencies, default is Undefined, optional
        dependencies
    deployer : CamelApacheOrgV1IntegrationSpecTraitsDeployer, default is Undefined, optional
        deployer
    deployment : CamelApacheOrgV1IntegrationSpecTraitsDeployment, default is Undefined, optional
        deployment
    environment : CamelApacheOrgV1IntegrationSpecTraitsEnvironment, default is Undefined, optional
        environment
    error_handler : CamelApacheOrgV1IntegrationSpecTraitsErrorHandler, default is Undefined, optional
        error handler
    gc : CamelApacheOrgV1IntegrationSpecTraitsGc, default is Undefined, optional
        gc
    health : CamelApacheOrgV1IntegrationSpecTraitsHealth, default is Undefined, optional
        health
    ingress : CamelApacheOrgV1IntegrationSpecTraitsIngress, default is Undefined, optional
        ingress
    istio : CamelApacheOrgV1IntegrationSpecTraitsIstio, default is Undefined, optional
        istio
    jolokia : CamelApacheOrgV1IntegrationSpecTraitsJolokia, default is Undefined, optional
        jolokia
    jvm : CamelApacheOrgV1IntegrationSpecTraitsJvm, default is Undefined, optional
        jvm
    kamelets : CamelApacheOrgV1IntegrationSpecTraitsKamelets, default is Undefined, optional
        kamelets
    keda : CamelApacheOrgV1IntegrationSpecTraitsKeda, default is Undefined, optional
        keda
    knative : CamelApacheOrgV1IntegrationSpecTraitsKnative, default is Undefined, optional
        knative
    knative_service : CamelApacheOrgV1IntegrationSpecTraitsKnativeService, default is Undefined, optional
        knative service
    logging : CamelApacheOrgV1IntegrationSpecTraitsLogging, default is Undefined, optional
        logging
    master : CamelApacheOrgV1IntegrationSpecTraitsMaster, default is Undefined, optional
        master
    mount : CamelApacheOrgV1IntegrationSpecTraitsMount, default is Undefined, optional
        mount
    openapi : CamelApacheOrgV1IntegrationSpecTraitsOpenapi, default is Undefined, optional
        openapi
    owner : CamelApacheOrgV1IntegrationSpecTraitsOwner, default is Undefined, optional
        owner
    pdb : CamelApacheOrgV1IntegrationSpecTraitsPdb, default is Undefined, optional
        pdb
    platform : CamelApacheOrgV1IntegrationSpecTraitsPlatform, default is Undefined, optional
        platform
    pod : CamelApacheOrgV1IntegrationSpecTraitsPod, default is Undefined, optional
        pod
    prometheus : CamelApacheOrgV1IntegrationSpecTraitsPrometheus, default is Undefined, optional
        prometheus
    pull_secret : CamelApacheOrgV1IntegrationSpecTraitsPullSecret, default is Undefined, optional
        pull secret
    quarkus : CamelApacheOrgV1IntegrationSpecTraitsQuarkus, default is Undefined, optional
        quarkus
    registry : CamelApacheOrgV1IntegrationSpecTraitsRegistry, default is Undefined, optional
        registry
    route : CamelApacheOrgV1IntegrationSpecTraitsRoute, default is Undefined, optional
        route
    service : CamelApacheOrgV1IntegrationSpecTraitsService, default is Undefined, optional
        service
    service_binding : CamelApacheOrgV1IntegrationSpecTraitsServiceBinding, default is Undefined, optional
        service binding
    strimzi : CamelApacheOrgV1IntegrationSpecTraitsStrimzi, default is Undefined, optional
        strimzi
    toleration : CamelApacheOrgV1IntegrationSpecTraitsToleration, default is Undefined, optional
        toleration
    tracing : CamelApacheOrgV1IntegrationSpecTraitsTracing, default is Undefined, optional
        tracing
    """


    3scale?: CamelApacheOrgV1IntegrationSpecTraitsNr3scale

    addons?: {str:any}

    affinity?: CamelApacheOrgV1IntegrationSpecTraitsAffinity

    builder?: CamelApacheOrgV1IntegrationSpecTraitsBuilder

    camel?: CamelApacheOrgV1IntegrationSpecTraitsCamel

    container?: CamelApacheOrgV1IntegrationSpecTraitsContainer

    cron?: CamelApacheOrgV1IntegrationSpecTraitsCron

    dependencies?: CamelApacheOrgV1IntegrationSpecTraitsDependencies

    deployer?: CamelApacheOrgV1IntegrationSpecTraitsDeployer

    deployment?: CamelApacheOrgV1IntegrationSpecTraitsDeployment

    environment?: CamelApacheOrgV1IntegrationSpecTraitsEnvironment

    error_handler?: CamelApacheOrgV1IntegrationSpecTraitsErrorHandler

    gc?: CamelApacheOrgV1IntegrationSpecTraitsGc

    health?: CamelApacheOrgV1IntegrationSpecTraitsHealth

    ingress?: CamelApacheOrgV1IntegrationSpecTraitsIngress

    istio?: CamelApacheOrgV1IntegrationSpecTraitsIstio

    jolokia?: CamelApacheOrgV1IntegrationSpecTraitsJolokia

    jvm?: CamelApacheOrgV1IntegrationSpecTraitsJvm

    kamelets?: CamelApacheOrgV1IntegrationSpecTraitsKamelets

    keda?: CamelApacheOrgV1IntegrationSpecTraitsKeda

    knative?: CamelApacheOrgV1IntegrationSpecTraitsKnative

    knative_service?: CamelApacheOrgV1IntegrationSpecTraitsKnativeService

    logging?: CamelApacheOrgV1IntegrationSpecTraitsLogging

    master?: CamelApacheOrgV1IntegrationSpecTraitsMaster

    mount?: CamelApacheOrgV1IntegrationSpecTraitsMount

    openapi?: CamelApacheOrgV1IntegrationSpecTraitsOpenapi

    owner?: CamelApacheOrgV1IntegrationSpecTraitsOwner

    pdb?: CamelApacheOrgV1IntegrationSpecTraitsPdb

    platform?: CamelApacheOrgV1IntegrationSpecTraitsPlatform

    pod?: CamelApacheOrgV1IntegrationSpecTraitsPod

    prometheus?: CamelApacheOrgV1IntegrationSpecTraitsPrometheus

    pull_secret?: CamelApacheOrgV1IntegrationSpecTraitsPullSecret

    quarkus?: CamelApacheOrgV1IntegrationSpecTraitsQuarkus

    registry?: CamelApacheOrgV1IntegrationSpecTraitsRegistry

    route?: CamelApacheOrgV1IntegrationSpecTraitsRoute

    service?: CamelApacheOrgV1IntegrationSpecTraitsService

    service_binding?: CamelApacheOrgV1IntegrationSpecTraitsServiceBinding

    strimzi?: CamelApacheOrgV1IntegrationSpecTraitsStrimzi

    toleration?: CamelApacheOrgV1IntegrationSpecTraitsToleration

    tracing?: CamelApacheOrgV1IntegrationSpecTraitsTracing


schema CamelApacheOrgV1IntegrationSpecTraitsAffinity:
    """
    The configuration of Affinity trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    nodeAffinityLabels : [str], default is Undefined, optional
        Defines a set of nodes the integration pod(s) are eligible to be scheduled on, based on labels on the node.
    podAffinity : bool, default is Undefined, optional
        Always co-locates multiple replicas of the integration in the same node (default *false*).
    podAffinityLabels : [str], default is Undefined, optional
        Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should be co-located with.
    podAntiAffinity : bool, default is Undefined, optional
        Never co-locates multiple replicas of the integration in the same node (default *false*).
    podAntiAffinityLabels : [str], default is Undefined, optional
        Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the integration pod(s) should not be co-located with.
    """


    configuration?: any

    enabled?: bool

    nodeAffinityLabels?: [str]

    podAffinity?: bool

    podAffinityLabels?: [str]

    podAntiAffinity?: bool

    podAntiAffinityLabels?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsBuilder:
    """
    The configuration of Builder trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    incrementalImageBuild : bool, default is Undefined, optional
        Use the incremental image build option, to reuse existing containers (default `true`)
    limitCPU : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    limitMemory : str, default is Undefined, optional
        When using `pod` strategy, the maximum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    mavenProfiles : [str], default is Undefined, optional
        A list of references pointing to configmaps/secrets that contains a maven profile. The content of the maven profile is expected to be a text containing a valid maven profile starting with `<profile>` and ending with `</profile>` that will be integrated as an inline profile in the POM. Syntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).
    orderStrategy : str, default is Undefined, optional
        The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default sequential)
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the build task
    requestCPU : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of CPU required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    requestMemory : str, default is Undefined, optional
        When using `pod` strategy, the minimum amount of memory required by the pod builder. Deprecated: use TasksRequestCPU instead with task name `builder`.
    strategy : str, default is Undefined, optional
        The strategy to use, either `pod` or `routine` (default routine)
    tasks : [str], default is Undefined, optional
        A list of tasks to be executed (available only when using `pod` strategy) with format `<name>;<container-image>;<container-command>`.
    tasksLimitCPU : [str], default is Undefined, optional
        A list of limit cpu configuration for the specific task with format `<task-name>:<limit-cpu-conf>`.
    tasksLimitMemory : [str], default is Undefined, optional
        A list of limit memory configuration for the specific task with format `<task-name>:<limit-memory-conf>`.
    tasksRequestCPU : [str], default is Undefined, optional
        A list of request cpu configuration for the specific task with format `<task-name>:<request-cpu-conf>`.
    tasksRequestMemory : [str], default is Undefined, optional
        A list of request memory configuration for the specific task with format `<task-name>:<request-memory-conf>`.
    verbose : bool, default is Undefined, optional
        Enable verbose logging on build components that support it (e.g. Kaniko build pod).
    """


    configuration?: any

    enabled?: bool

    incrementalImageBuild?: bool

    limitCPU?: str

    limitMemory?: str

    mavenProfiles?: [str]

    orderStrategy?: str

    properties?: [str]

    requestCPU?: str

    requestMemory?: str

    strategy?: str

    tasks?: [str]

    tasksLimitCPU?: [str]

    tasksLimitMemory?: [str]

    tasksRequestCPU?: [str]

    tasksRequestMemory?: [str]

    verbose?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsCamel:
    """
    The configuration of Camel trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    properties : [str], default is Undefined, optional
        A list of properties to be provided to the Integration runtime
    runtimeVersion : str, default is Undefined, optional
        The camel-k-runtime version to use for the integration. It overrides the default version set in the Integration Platform.
    """


    configuration?: any

    enabled?: bool

    properties?: [str]

    runtimeVersion?: str


schema CamelApacheOrgV1IntegrationSpecTraitsContainer:
    """
    The configuration of Container trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically enable the trait
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    expose : bool, default is Undefined, optional
        Can be used to enable/disable exposure via kubernetes Service.
    image : str, default is Undefined, optional
        The main container image
    imagePullPolicy : str, default is Undefined, optional
        The pull policy: Always|Never|IfNotPresent
    limitCPU : str, default is Undefined, optional
        The maximum amount of CPU required.
    limitMemory : str, default is Undefined, optional
        The maximum amount of memory required.
    name : str, default is Undefined, optional
        The main container name. It's named `integration` by default.
    port : int, default is Undefined, optional
        To configure a different port exposed by the container (default `8080`).
    portName : str, default is Undefined, optional
        To configure a different port name for the port exposed by the container. It defaults to `http` only when the `expose` parameter is true.
    requestCPU : str, default is Undefined, optional
        The minimum amount of CPU required.
    requestMemory : str, default is Undefined, optional
        The minimum amount of memory required.
    servicePort : int, default is Undefined, optional
        To configure under which service port the container port is to be exposed (default `80`).
    servicePortName : str, default is Undefined, optional
        To configure under which service port name the container port is to be exposed (default `http`).
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    expose?: bool

    image?: str

    imagePullPolicy?: "Always" | "Never" | "IfNotPresent"

    limitCPU?: str

    limitMemory?: str

    name?: str

    port?: int

    portName?: str

    requestCPU?: str

    requestMemory?: str

    servicePort?: int

    servicePortName?: str


schema CamelApacheOrgV1IntegrationSpecTraitsCron:
    """
    The configuration of Cron trait

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
        Specifies the duration in seconds, relative to the start time, that the job may be continuously active before it is considered to be failed. It defaults to 60s.
    auto : bool, default is Undefined, optional
        Automatically deploy the integration as CronJob when all routes are either starting from a periodic consumer (only `cron`, `timer` and `quartz` are supported) or a passive consumer (e.g. `direct` is a passive consumer). 
         It's required that all periodic consumers have the same period, and it can be expressed as cron schedule (e.g. `1m` can be expressed as `0/1 * * * *`, while `35m` or `50s` cannot).
    backoffLimit : int, default is Undefined, optional
        Specifies the number of retries before marking the job failed. It defaults to 2.
    components : str, default is Undefined, optional
        A comma separated list of the Camel components that need to be customized in order for them to work when the schedule is triggered externally by Kubernetes. A specific customizer is activated for each specified component. E.g. for the `timer` component, the `cron-timer` customizer is activated (it's present in the `org.apache.camel.k:camel-k-cron` library). 
         Supported components are currently: `cron`, `timer` and `quartz`.
    concurrencyPolicy : str, default is Undefined, optional
        Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow": allows CronJobs to run concurrently; - "Forbid" (default): forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    fallback : bool, default is Undefined, optional
        Use the default Camel implementation of the `cron` endpoint (`quartz`) instead of trying to materialize the integration as Kubernetes CronJob.
    schedule : str, default is Undefined, optional
        The CronJob schedule for the whole integration. If multiple routes are declared, they must have the same schedule for this mechanism to work correctly.
    startingDeadlineSeconds : int, default is Undefined, optional
        Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
    """


    activeDeadlineSeconds?: int

    auto?: bool

    backoffLimit?: int

    components?: str

    concurrencyPolicy?: "Allow" | "Forbid" | "Replace"

    configuration?: any

    enabled?: bool

    fallback?: bool

    schedule?: str

    startingDeadlineSeconds?: int


schema CamelApacheOrgV1IntegrationSpecTraitsDependencies:
    """
    The configuration of Dependencies trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsDeployer:
    """
    The configuration of Deployer trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    kind : str, default is Undefined, optional
        Allows to explicitly select the desired deployment kind between `deployment`, `cron-job` or `knative-service` when creating the resources for running the integration.
    useSSA : bool, default is Undefined, optional
        Use server-side apply to update the owned resources (default `true`). Note that it automatically falls back to client-side patching, if SSA is not available, e.g., on old Kubernetes clusters.
    """


    configuration?: any

    enabled?: bool

    kind?: "deployment" | "cron-job" | "knative-service"

    useSSA?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsDeployment:
    """
    The configuration of Deployment trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    progressDeadlineSeconds : int, default is Undefined, optional
        The maximum time in seconds for the deployment to make progress before it is considered to be failed. It defaults to 60s.
    rollingUpdateMaxSurge : int, default is Undefined, optional
        The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. Defaults to 25%.
    rollingUpdateMaxUnavailable : int, default is Undefined, optional
        The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%.
    strategy : str, default is Undefined, optional
        The deployment strategy to use to replace existing pods with new ones.
    """


    configuration?: any

    enabled?: bool

    progressDeadlineSeconds?: int

    rollingUpdateMaxSurge?: int

    rollingUpdateMaxUnavailable?: int

    strategy?: "Recreate" | "RollingUpdate"


schema CamelApacheOrgV1IntegrationSpecTraitsEnvironment:
    """
    The configuration of Environment trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    containerMeta : bool, default is Undefined, optional
        Enables injection of `NAMESPACE` and `POD_NAME` environment variables (default `true`)
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    httpProxy : bool, default is Undefined, optional
        Propagates the `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables (default `true`)
    vars : [str], default is Undefined, optional
        A list of environment variables to be added to the integration container. The syntax is KEY=VALUE, e.g., `MY_VAR="my value"`. These take precedence over the previously defined environment variables.
    """


    configuration?: any

    containerMeta?: bool

    enabled?: bool

    httpProxy?: bool

    vars?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsErrorHandler:
    """
    The configuration of Error Handler trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    ref : str, default is Undefined, optional
        The error handler ref name provided or found in application properties
    """


    configuration?: any

    enabled?: bool

    ref?: str


schema CamelApacheOrgV1IntegrationSpecTraitsGc:
    """
    The configuration of GC trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    discoveryCache : str, default is Undefined, optional
        Discovery client cache to be used, either `disabled`, `disk` or `memory` (default `memory`). Deprecated: to be removed from trait configuration.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    discoveryCache?: "disabled" | "disk" | "memory"

    enabled?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsHealth:
    """
    The configuration of Health trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    livenessFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the liveness probe to be considered failed after having succeeded.
    livenessInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the liveness probe is initiated.
    livenessPeriod : int, default is Undefined, optional
        How often to perform the liveness probe.
    livenessProbeEnabled : bool, default is Undefined, optional
        Configures the liveness probe for the integration container (default `false`).
    livenessScheme : str, default is Undefined, optional
        Scheme to use when connecting to the liveness probe (default `HTTP`).
    livenessSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the liveness probe to be considered successful after having failed.
    livenessTimeout : int, default is Undefined, optional
        Number of seconds after which the liveness probe times out.
    readinessFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the readiness probe to be considered failed after having succeeded.
    readinessInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the readiness probe is initiated.
    readinessPeriod : int, default is Undefined, optional
        How often to perform the readiness probe.
    readinessProbeEnabled : bool, default is Undefined, optional
        Configures the readiness probe for the integration container (default `true`).
    readinessScheme : str, default is Undefined, optional
        Scheme to use when connecting to the readiness probe (default `HTTP`).
    readinessSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the readiness probe to be considered successful after having failed.
    readinessTimeout : int, default is Undefined, optional
        Number of seconds after which the readiness probe times out.
    startupFailureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the startup probe to be considered failed after having succeeded.
    startupInitialDelay : int, default is Undefined, optional
        Number of seconds after the container has started before the startup probe is initiated.
    startupPeriod : int, default is Undefined, optional
        How often to perform the startup probe.
    startupProbeEnabled : bool, default is Undefined, optional
        Configures the startup probe for the integration container (default `false`).
    startupScheme : str, default is Undefined, optional
        Scheme to use when connecting to the startup probe (default `HTTP`).
    startupSuccessThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the startup probe to be considered successful after having failed.
    startupTimeout : int, default is Undefined, optional
        Number of seconds after which the startup probe times out.
    """


    configuration?: any

    enabled?: bool

    livenessFailureThreshold?: int

    livenessInitialDelay?: int

    livenessPeriod?: int

    livenessProbeEnabled?: bool

    livenessScheme?: str

    livenessSuccessThreshold?: int

    livenessTimeout?: int

    readinessFailureThreshold?: int

    readinessInitialDelay?: int

    readinessPeriod?: int

    readinessProbeEnabled?: bool

    readinessScheme?: str

    readinessSuccessThreshold?: int

    readinessTimeout?: int

    startupFailureThreshold?: int

    startupInitialDelay?: int

    startupPeriod?: int

    startupProbeEnabled?: bool

    startupScheme?: str

    startupSuccessThreshold?: int

    startupTimeout?: int


schema CamelApacheOrgV1IntegrationSpecTraitsIngress:
    """
    The configuration of Ingress trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to the ingress. This can be used to set controller specific annotations, e.g., when using the NGINX Ingress controller: See https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    auto : bool, default is Undefined, optional
        To automatically add an ingress whenever the integration uses an HTTP endpoint consumer.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    host : str, default is Undefined, optional
        To configure the host exposed by the ingress.
    path : str, default is Undefined, optional
        To configure the path exposed by the ingress (default `/`).
    pathType : str, default is Undefined, optional
        To configure the path type exposed by the ingress. One of `Exact`, `Prefix`, `ImplementationSpecific` (default to `Prefix`).
    """


    annotations?: {str:str}

    auto?: bool

    configuration?: any

    enabled?: bool

    host?: str

    path?: str

    pathType?: "Exact" | "Prefix" | "ImplementationSpecific"


schema CamelApacheOrgV1IntegrationSpecTraitsIstio:
    """
    The configuration of Istio trait

    Attributes
    ----------
    allow : str, default is Undefined, optional
        Configures a (comma-separated) list of CIDR subnets that should not be intercepted by the Istio proxy (`10.0.0.0/8,172.16.0.0/12,192.168.0.0/16` by default).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    inject : bool, default is Undefined, optional
        Forces the value for labels `sidecar.istio.io/inject`. By default the label is set to `true` on deployment and not set on Knative Service.
    """


    allow?: str

    configuration?: any

    enabled?: bool

    inject?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsJolokia:
    """
    The configuration of Jolokia trait

    Attributes
    ----------
    CACert : str, default is Undefined, optional
        The PEM encoded CA certification file path, used to verify client certificates, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt` for OpenShift).
    clientPrincipal : [str], default is Undefined, optional
        The principal(s) which must be given in a client certificate to allow access to the Jolokia endpoint, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `clientPrincipal=cn=system:master-proxy`, `cn=hawtio-online.hawtio.svc` and `cn=fuse-console.fuse.svc` for OpenShift).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    discoveryEnabled : bool, default is Undefined, optional
        Listen for multicast requests (default `false`)
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    extendedClientCheck : bool, default is Undefined, optional
        Mandate the client certificate contains a client flag in the extended key usage section, applicable when `protocol` is `https` and `use-ssl-client-authentication` is `true` (default `true` for OpenShift).
    host : str, default is Undefined, optional
        The Host address to which the Jolokia agent should bind to. If `"\*"` or `"0.0.0.0"` is given, the servers binds to every network interface (default `"*"`).
    options : [str], default is Undefined, optional
        A list of additional Jolokia options as defined in https://jolokia.org/reference/html/agents.html#agent-jvm-config[JVM agent configuration options]
    password : str, default is Undefined, optional
        The password used for authentication, applicable when the `user` option is set.
    port : int, default is Undefined, optional
        The Jolokia endpoint port (default `8778`).
    $protocol : str, default is Undefined, optional
        The protocol to use, either `http` or `https` (default `https` for OpenShift)
    useSSLClientAuthentication : bool, default is Undefined, optional
        Whether client certificates should be used for authentication (default `true` for OpenShift).
    user : str, default is Undefined, optional
        The user to be used for authentication
    """


    CACert?: str

    clientPrincipal?: [str]

    configuration?: any

    discoveryEnabled?: bool

    enabled?: bool

    extendedClientCheck?: bool

    host?: str

    options?: [str]

    password?: str

    port?: int

    $protocol?: str

    useSSLClientAuthentication?: bool

    user?: str


schema CamelApacheOrgV1IntegrationSpecTraitsJvm:
    """
    The configuration of JVM trait

    Attributes
    ----------
    classpath : str, default is Undefined, optional
        Additional JVM classpath (use `Linux` classpath separator)
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    debug : bool, default is Undefined, optional
        Activates remote debugging, so that a debugger can be attached to the JVM, e.g., using port-forwarding
    debugAddress : str, default is Undefined, optional
        Transport address at which to listen for the newly launched JVM (default `*:5005`)
    debugSuspend : bool, default is Undefined, optional
        Suspends the target JVM immediately before the main class is loaded
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    options : [str], default is Undefined, optional
        A list of JVM options
    printCommand : bool, default is Undefined, optional
        Prints the command used the start the JVM in the container logs (default `true`)
    """


    classpath?: str

    configuration?: any

    debug?: bool

    debugAddress?: str

    debugSuspend?: bool

    enabled?: bool

    options?: [str]

    printCommand?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsKamelets:
    """
    The configuration of Kamelets trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Automatically inject all referenced Kamelets and their default configuration (enabled by default)
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    list : str, default is Undefined, optional
        Comma separated list of Kamelet names to load into the current integration
    mountPoint : str, default is Undefined, optional
        The directory where the application mounts and reads Kamelet spec (default `/etc/camel/kamelets`)
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    list?: str

    mountPoint?: str


schema CamelApacheOrgV1IntegrationSpecTraitsKeda:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationSpecTraitsKnative:
    """
    The configuration of Knative trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Enable automatic discovery of all trait properties.
    channelSinks : [str], default is Undefined, optional
        List of channels used as destination of integration routes. Can contain simple channel names or full Camel URIs.
    channelSources : [str], default is Undefined, optional
        List of channels used as source of integration routes. Can contain simple channel names or full Camel URIs.
    config : str, default is Undefined, optional
        Can be used to inject a Knative complete configuration in JSON format.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    endpointSinks : [str], default is Undefined, optional
        List of endpoints used as destination of integration routes. Can contain simple endpoint names or full Camel URIs.
    endpointSources : [str], default is Undefined, optional
        List of channels used as source of integration routes.
    eventSinks : [str], default is Undefined, optional
        List of event types that the integration will produce. Can contain simple event types or full Camel URIs (to use a specific broker).
    eventSources : [str], default is Undefined, optional
        List of event types that the integration will be subscribed to. Can contain simple event types or full Camel URIs (to use a specific broker different from "default").
    filterSourceChannels : bool, default is Undefined, optional
        Enables filtering on events based on the header "ce-knativehistory". Since this header has been removed in newer versions of Knative, filtering is disabled by default.
    namespaceLabel : bool, default is Undefined, optional
        Enables the camel-k-operator to set the "bindings.knative.dev/include=true" label to the namespace As Knative requires this label to perform injection of K_SINK URL into the service. If this is false, the integration pod may start and fail, read the SinkBinding Knative documentation. (default: true)
    sinkBinding : bool, default is Undefined, optional
        Allows binding the integration to a sink via a Knative SinkBinding resource. This can be used when the integration targets a single sink. It's enabled by default when the integration targets a single sink (except when the integration is owned by a Knative source).
    """


    auto?: bool

    channelSinks?: [str]

    channelSources?: [str]

    config?: str

    configuration?: any

    enabled?: bool

    endpointSinks?: [str]

    endpointSources?: [str]

    eventSinks?: [str]

    eventSources?: [str]

    filterSourceChannels?: bool

    namespaceLabel?: bool

    sinkBinding?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsKnativeService:
    """
    The configuration of Knative Service trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to route. This can be used to set knative service specific annotations CLI usage example: -t "knative-service.annotations.'haproxy.router.openshift.io/balance'=true"
    auto : bool, default is Undefined, optional
        Automatically deploy the integration as Knative service when all conditions hold: 
         * Integration is using the Knative profile * All routes are either starting from an HTTP based consumer or a passive consumer (e.g. `direct` is a passive consumer)
    autoscalingMetric : str, default is Undefined, optional
        Configures the Knative autoscaling metric property (e.g. to set `concurrency` based or `cpu` based autoscaling). 
         Refer to the Knative documentation for more information.
    autoscalingTarget : int, default is Undefined, optional
        Sets the allowed concurrency level or CPU percentage (depending on the autoscaling metric) for each Pod. 
         Refer to the Knative documentation for more information.
    class : str, default is Undefined, optional
        Configures the Knative autoscaling class property (e.g. to set `hpa.autoscaling.knative.dev` or `kpa.autoscaling.knative.dev` autoscaling). 
         Refer to the Knative documentation for more information.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    maxScale : int, default is Undefined, optional
        An upper bound for the number of Pods that can be running in parallel for the integration. Knative has its own cap value that depends on the installation. 
         Refer to the Knative documentation for more information.
    minScale : int, default is Undefined, optional
        The minimum number of Pods that should be running at any time for the integration. It's **zero** by default, meaning that the integration is scaled down to zero when not used for a configured amount of time. 
         Refer to the Knative documentation for more information.
    rolloutDuration : str, default is Undefined, optional
        Enables to gradually shift traffic to the latest Revision and sets the rollout duration. It's disabled by default and must be expressed as a Golang `time.Duration` string representation, rounded to a second precision.
    visibility : str, default is Undefined, optional
        Setting `cluster-local`, Knative service becomes a private service. Specifically, this option applies the `networking.knative.dev/visibility` label to Knative service. 
         Refer to the Knative documentation for more information.
    """


    annotations?: {str:str}

    auto?: bool

    autoscalingMetric?: str

    autoscalingTarget?: int

    class?: "kpa.autoscaling.knative.dev" | "hpa.autoscaling.knative.dev"

    configuration?: any

    enabled?: bool

    maxScale?: int

    minScale?: int

    rolloutDuration?: str

    visibility?: "cluster-local"


schema CamelApacheOrgV1IntegrationSpecTraitsLogging:
    """
    The configuration of Logging trait

    Attributes
    ----------
    color : bool, default is Undefined, optional
        Colorize the log output
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    format : str, default is Undefined, optional
        Logs message format
    json : bool, default is Undefined, optional
        Output the logs in JSON
    jsonPrettyPrint : bool, default is Undefined, optional
        Enable "pretty printing" of the JSON logs
    level : str, default is Undefined, optional
        Adjust the logging level (defaults to INFO)
    """


    color?: bool

    configuration?: any

    enabled?: bool

    format?: str

    json?: bool

    jsonPrettyPrint?: bool

    level?: "FATAL" | "WARN" | "INFO" | "DEBUG" | "TRACE"


schema CamelApacheOrgV1IntegrationSpecTraitsMaster:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationSpecTraitsMount:
    """
    The configuration of Mount trait

    Attributes
    ----------
    configs : [str], default is Undefined, optional
        A list of configuration pointing to configmap/secret. The configuration are expected to be UTF-8 resources as they are processed by runtime Camel Context and tried to be parsed as property files. They are also made available on the classpath in order to ease their usage directly from the Route. Syntax: [configmap|secret]:name[/key], where name represents the resource name and key optionally represents the resource key to be filtered
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    hotReload : bool, default is Undefined, optional
        Enable "hot reload" when a secret/configmap mounted is edited (default false)
    resources : [str], default is Undefined, optional
        A list of resources (text or binary content) pointing to configmap/secret. The resources are expected to be any resource type (text or binary content). The destination path can be either a default location or any path specified by the user. Syntax: [configmap|secret]:name[/key][@path], where name represents the resource name, key optionally represents the resource key to be filtered and path represents the destination path
    volumes : [str], default is Undefined, optional
        A list of Persistent Volume Claims to be mounted. Syntax: [pvcname:/container/path]
    """


    configs?: [str]

    configuration?: any

    enabled?: bool

    hotReload?: bool

    resources?: [str]

    volumes?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsNr3scale:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationSpecTraitsOpenapi:
    """
    The configuration of OpenAPI trait

    Attributes
    ----------
    configmaps : [str], default is Undefined, optional
        The configmaps holding the spec of the OpenAPI
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    """


    configmaps?: [str]

    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsOwner:
    """
    The configuration of Owner trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    targetAnnotations : [str], default is Undefined, optional
        The set of annotations to be transferred
    targetLabels : [str], default is Undefined, optional
        The set of labels to be transferred
    """


    configuration?: any

    enabled?: bool

    targetAnnotations?: [str]

    targetLabels?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsPdb:
    """
    The configuration of PDB trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    maxUnavailable : str, default is Undefined, optional
        The number of pods for the Integration that can be unavailable after an eviction. It can be either an absolute number or a percentage (default `1` if `min-available` is also not set). Only one of `max-unavailable` and `min-available` can be specified.
    minAvailable : str, default is Undefined, optional
        The number of pods for the Integration that must still be available after an eviction. It can be either an absolute number or a percentage. Only one of `min-available` and `max-unavailable` can be specified.
    """


    configuration?: any

    enabled?: bool

    maxUnavailable?: str

    minAvailable?: str


schema CamelApacheOrgV1IntegrationSpecTraitsPlatform:
    """
    The configuration of Platform trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically detect from the environment if a default platform can be created (it will be created on OpenShift only).
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    createDefault : bool, default is Undefined, optional
        To create a default (empty) platform when the platform is missing.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    global : bool, default is Undefined, optional
        Indicates if the platform should be created globally in the case of global operator (default true).
    """


    auto?: bool

    configuration?: any

    createDefault?: bool

    enabled?: bool

    global?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsPod:
    """
    The configuration of Pod trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsPrometheus:
    """
    The configuration of Prometheus trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    podMonitor : bool, default is Undefined, optional
        Whether a `PodMonitor` resource is created (default `true`).
    podMonitorLabels : [str], default is Undefined, optional
        The `PodMonitor` resource labels, applicable when `pod-monitor` is `true`.
    """


    configuration?: any

    enabled?: bool

    podMonitor?: bool

    podMonitorLabels?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsPullSecret:
    """
    The configuration of Pull Secret trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        Automatically configures the platform registry secret on the pod if it is of type `kubernetes.io/dockerconfigjson`.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    imagePullerDelegation : bool, default is Undefined, optional
        When using a global operator with a shared platform, this enables delegation of the `system:image-puller` cluster role on the operator namespace to the integration service account.
    secretName : str, default is Undefined, optional
        The pull secret name to set on the Pod. If left empty this is automatically taken from the `IntegrationPlatform` registry configuration.
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    imagePullerDelegation?: bool

    secretName?: str


schema CamelApacheOrgV1IntegrationSpecTraitsQuarkus:
    """
    The configuration of Quarkus trait

    Attributes
    ----------
    buildMode : [str], default is Undefined, optional
        The Quarkus mode to run: either `jvm` or `native` (default `jvm`). In case both `jvm` and `native` are specified, two `IntegrationKit` resources are created, with the `native` kit having precedence over the `jvm` one once ready.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Deprecated: no longer in use.
    nativeBaseImage : str, default is Undefined, optional
        The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)
    nativeBuilderImage : str, default is Undefined, optional
        The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)
    packageTypes : [str], default is Undefined, optional
        The Quarkus package types, `fast-jar` or `native` (default `fast-jar`). In case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created, with the native kit having precedence over the `fast-jar` one once ready. The order influences the resolution of the current kit for the integration. The kit corresponding to the first package type will be assigned to the integration in case no existing kit that matches the integration exists. Deprecated: use `build-mode` instead.
    """


    buildMode?: [str]

    configuration?: any

    enabled?: bool

    nativeBaseImage?: str

    nativeBuilderImage?: str

    packageTypes?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsRegistry:
    """
    The configuration of Registry trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    """


    configuration?: any

    enabled?: bool


schema CamelApacheOrgV1IntegrationSpecTraitsRoute:
    """
    The configuration of Route trait

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        The annotations added to route. This can be used to set route specific annotations For annotations options see https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#route-specific-annotations CLI usage example: -t "route.annotations.'haproxy.router.openshift.io/balance'=true"
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    host : str, default is Undefined, optional
        To configure the host exposed by the route.
    tlsCACertificate : str, default is Undefined, optional
        The TLS CA certificate contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsCACertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the TLS CA certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsCertificate : str, default is Undefined, optional
        The TLS certificate contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsCertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the TLS certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsDestinationCACertificate : str, default is Undefined, optional
        The destination CA certificate provides the contents of the ca certificate of the final destination.  When using reencrypt termination this file should be provided in order to have routers use it for health checks on the secure connection. If this field is not specified, the router may provide its own destination CA and perform hostname validation using the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically verify. 
         Refer to the OpenShift route documentation for additional information.
    tlsDestinationCACertificateSecret : str, default is Undefined, optional
        The secret name and key reference to the destination CA certificate. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsInsecureEdgeTerminationPolicy : str, default is Undefined, optional
        To configure how to deal with insecure traffic, e.g. `Allow`, `Disable` or `Redirect` traffic. 
         Refer to the OpenShift route documentation for additional information.
    tlsKey : str, default is Undefined, optional
        The TLS certificate key contents. 
         Refer to the OpenShift route documentation for additional information.
    tlsKeySecret : str, default is Undefined, optional
        The secret name and key reference to the TLS certificate key. The format is "secret-name[/key-name]", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a "/". 
         Refer to the OpenShift route documentation for additional information.
    tlsTermination : str, default is Undefined, optional
        The TLS termination type, like `edge`, `passthrough` or `reencrypt`. 
         Refer to the OpenShift route documentation for additional information.
    """


    annotations?: {str:str}

    configuration?: any

    enabled?: bool

    host?: str

    tlsCACertificate?: str

    tlsCACertificateSecret?: str

    tlsCertificate?: str

    tlsCertificateSecret?: str

    tlsDestinationCACertificate?: str

    tlsDestinationCACertificateSecret?: str

    tlsInsecureEdgeTerminationPolicy?: "None" | "Allow" | "Redirect"

    tlsKey?: str

    tlsKeySecret?: str

    tlsTermination?: "edge" | "reencrypt" | "passthrough"


schema CamelApacheOrgV1IntegrationSpecTraitsService:
    """
    The configuration of Service trait

    Attributes
    ----------
    auto : bool, default is Undefined, optional
        To automatically detect from the code if a Service needs to be created.
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    nodePort : bool, default is Undefined, optional
        Enable Service to be exposed as NodePort (default `false`). Deprecated: Use service type instead.
    $type : str, default is Undefined, optional
        The type of service to be used, either 'ClusterIP', 'NodePort' or 'LoadBalancer'.
    """


    auto?: bool

    configuration?: any

    enabled?: bool

    nodePort?: bool

    $type?: "ClusterIP" | "NodePort" | "LoadBalancer"


schema CamelApacheOrgV1IntegrationSpecTraitsServiceBinding:
    """
    The configuration of Service Binding trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    services : [str], default is Undefined, optional
        List of Services in the form [[apigroup/]version:]kind:[namespace/]name
    """


    configuration?: any

    enabled?: bool

    services?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsStrimzi:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationSpecTraitsToleration:
    """
    The configuration of Toleration trait

    Attributes
    ----------
    configuration : any, default is Undefined, optional
        Legacy trait configuration parameters. Deprecated: for backward compatibility.
    enabled : bool, default is Undefined, optional
        Can be used to enable or disable a trait. All traits share this common property.
    taints : [str], default is Undefined, optional
        The list of taints to tolerate, in the form `Key[=Value]:Effect[:Seconds]`
    """


    configuration?: any

    enabled?: bool

    taints?: [str]


schema CamelApacheOrgV1IntegrationSpecTraitsTracing:
    """
    Deprecated: for backward compatibility.

    Attributes
    ----------
    configuration : any, default is Undefined, required
        TraitConfiguration parameters configuration
    """


    configuration: any


schema CamelApacheOrgV1IntegrationStatus:
    """
    the status of the Integration

    Attributes
    ----------
    capabilities : [str], default is Undefined, optional
        features offered by the Integration
    conditions : [CamelApacheOrgV1IntegrationStatusConditionsItems0], default is Undefined, optional
        a list of events happened for the Integration
    configuration : [CamelApacheOrgV1IntegrationStatusConfigurationItems0], default is Undefined, optional
        Deprecated: a list of configuration specification
    dependencies : [str], default is Undefined, optional
        a list of dependencies needed by the application
    digest : str, default is Undefined, optional
        the digest calculated for this Integration
    generatedSources : [CamelApacheOrgV1IntegrationStatusGeneratedSourcesItems0], default is Undefined, optional
        a list of sources generated for this Integration
    image : str, default is Undefined, optional
        the container image used
    integrationKit : CamelApacheOrgV1IntegrationStatusIntegrationKit, default is Undefined, optional
        integration kit
    lastInitTimestamp : str, default is Undefined, optional
        the timestamp representing the last time when this integration was initialized.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the most recent generation observed for this Integration.
    phase : str, default is Undefined, optional
        the actual phase
    platform : str, default is Undefined, optional
        The IntegrationPlatform watching this Integration
    profile : str, default is Undefined, optional
        the profile needed to run this Integration
    replicas : int, default is Undefined, optional
        the number of replicas
    runtimeProvider : str, default is Undefined, optional
        the runtime provider targeted for this Integration
    runtimeVersion : str, default is Undefined, optional
        the runtime version targeted for this Integration
    selector : str, default is Undefined, optional
        label selector
    version : str, default is Undefined, optional
        the operator version
    """


    capabilities?: [str]

    conditions?: [CamelApacheOrgV1IntegrationStatusConditionsItems0]

    configuration?: [CamelApacheOrgV1IntegrationStatusConfigurationItems0]

    dependencies?: [str]

    digest?: str

    generatedSources?: [CamelApacheOrgV1IntegrationStatusGeneratedSourcesItems0]

    image?: str

    integrationKit?: CamelApacheOrgV1IntegrationStatusIntegrationKit

    lastInitTimestamp?: str

    observedGeneration?: int

    phase?: str

    platform?: str

    profile?: str

    replicas?: int

    runtimeProvider?: str

    runtimeVersion?: str

    selector?: str

    version?: str


schema CamelApacheOrgV1IntegrationStatusConditionsItems0:
    """
    IntegrationCondition describes the state of a resource at a certain point.

    Attributes
    ----------
    firstTruthyTime : str, default is Undefined, optional
        First time the condition status transitioned to True.
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    lastUpdateTime : str, default is Undefined, optional
        The last time this condition was updated.
    message : str, default is Undefined, optional
        A human-readable message indicating details about the transition.
    pods : [CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0], default is Undefined, optional
        Pods collect health and conditions information from the owned PODs
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of integration condition.
    """


    firstTruthyTime?: str

    lastTransitionTime?: str

    lastUpdateTime?: str

    message?: str

    pods?: [CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0]

    reason?: str

    status: str

    $type: str


schema CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0:
    """
    camel apache org v1 integration status conditions items0 pods items0

    Attributes
    ----------
    condition : CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0Condition, default is Undefined, required
        condition
    health : [CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0HealthItems0], default is Undefined, optional
        health
    name : str, default is Undefined, optional
        name
    """


    condition: CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0Condition

    health?: [CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0HealthItems0]

    name?: str


schema CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0Condition:
    """
    PodCondition contains details for the current condition of this pod.

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        Last time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, required
        Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
    $type : str, default is Undefined, required
        Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema CamelApacheOrgV1IntegrationStatusConditionsItems0PodsItems0HealthItems0:
    """
    camel apache org v1 integration status conditions items0 pods items0 health items0

    Attributes
    ----------
    data : any, default is Undefined, optional
        RawMessage is a raw encoded JSON value. It implements Marshaler and Unmarshaler and can be used to delay JSON decoding or precompute a JSON encoding.
    name : str, default is Undefined, optional
        name
    status : str, default is Undefined, optional
        status
    """


    data?: any

    name?: str

    status?: str


schema CamelApacheOrgV1IntegrationStatusConfigurationItems0:
    """
    ConfigurationSpec represents a generic configuration specification.

    Attributes
    ----------
    $type : str, default is Undefined, required
        represents the type of configuration, ie: property, configmap, secret, ...
    value : str, default is Undefined, required
        the value to assign to the configuration (syntax may vary depending on the `Type`)
    """


    $type: str

    value: str


schema CamelApacheOrgV1IntegrationStatusGeneratedSourcesItems0:
    """
    SourceSpec defines the configuration for one or more routes to be executed in a certain Camel DSL language.

    Attributes
    ----------
    compression : bool, default is Undefined, optional
        if the content is compressed (base64 encrypted)
    content : str, default is Undefined, optional
        the source code (plain text)
    contentKey : str, default is Undefined, optional
        the confimap key holding the source content
    contentRef : str, default is Undefined, optional
        the confimap reference holding the source content
    contentType : str, default is Undefined, optional
        the content type (tipically text or binary)
    from_kamelet : bool, default is Undefined, optional
        True if the spec is generated from a Kamelet
    interceptors : [str], default is Undefined, optional
        Interceptors are optional identifiers the org.apache.camel.k.RoutesLoader uses to pre/post process sources
    language : str, default is Undefined, optional
        specify which is the language (Camel DSL) used to interpret this source code
    loader : str, default is Undefined, optional
        Loader is an optional id of the org.apache.camel.k.RoutesLoader that will interpret this source at runtime
    name : str, default is Undefined, optional
        the name of the specification
    path : str, default is Undefined, optional
        the path where the file is stored
    property_names : [str], default is Undefined, optional
        List of property names defined in the source (e.g. if type is "template")
    rawContent : str, default is Undefined, optional
        the source code (binary)
    $type : str, default is Undefined, optional
        Type defines the kind of source described by this object
    """


    compression?: bool

    content?: str

    contentKey?: str

    contentRef?: str

    contentType?: str

    from_kamelet?: bool

    interceptors?: [str]

    language?: str

    loader?: str

    name?: str

    path?: str

    property_names?: [str]

    rawContent?: str

    $type?: str


schema CamelApacheOrgV1IntegrationStatusIntegrationKit:
    """
    the reference of the `IntegrationKit` which is used for this Integration

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
    kind : str, default is Undefined, optional
        Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    uid : str, default is Undefined, optional
        UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    uid?: str


