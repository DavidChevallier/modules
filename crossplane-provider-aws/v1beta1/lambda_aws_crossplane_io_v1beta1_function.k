"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Function:
    """
    Function is the Schema for the Functions API

    Attributes
    ----------
    apiVersion : str, default is "lambda.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Function", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LambdaAwsCrossplaneIoV1beta1FunctionSpec, default is Undefined, required
        spec
    status : LambdaAwsCrossplaneIoV1beta1FunctionStatus, default is Undefined, optional
        status
    """


    apiVersion: "lambda.aws.crossplane.io/v1beta1" = "lambda.aws.crossplane.io/v1beta1"

    kind: "Function" = "Function"

    metadata?: v1.ObjectMeta

    spec: LambdaAwsCrossplaneIoV1beta1FunctionSpec

    status?: LambdaAwsCrossplaneIoV1beta1FunctionStatus


schema LambdaAwsCrossplaneIoV1beta1FunctionSpec:
    """
    FunctionSpec defines the desired state of Function

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProvider

    providerConfigRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderConfigRef

    providerRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderRef

    publishConnectionDetailsTo?: LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecWriteConnectionSecretToRef


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProvider:
    """
    FunctionParameters defines the desired state of Function

    Attributes
    ----------
    architectures : [str], default is Undefined, optional
        The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is x86_64.
    code : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCode, default is Undefined, required
        code
    codeSigningConfigARN : str, default is Undefined, optional
        To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
    deadLetterConfig : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderDeadLetterConfig, default is Undefined, optional
        dead letter config
    description : str, default is Undefined, optional
        A description of the function.
    environment : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderEnvironment, default is Undefined, optional
        environment
    ephemeralStorage : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderEphemeralStorage, default is Undefined, optional
        ephemeral storage
    fileSystemConfigs : [LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderFileSystemConfigsItems0], default is Undefined, optional
        Connection settings for an Amazon EFS file system.
    handler : str, default is Undefined, optional
        The name of the method within your code that Lambda calls to execute your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see Programming Model (https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html).
    imageConfig : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderImageConfig, default is Undefined, optional
        image config
    kmsKeyARN : str, default is Undefined, optional
        The ARN of the Amazon Web Services Key Management Service (KMS) key that's used to encrypt your function's environment variables. If it's not provided, Lambda uses a default service key.
    kmsKeyARNRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNRef, default is Undefined, optional
        kms key a r n ref
    kmsKeyARNSelector : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNSelector, default is Undefined, optional
        kms key a r n selector
    layers : [str], default is Undefined, optional
        A list of function layers (https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html) to add to the function's execution environment. Specify each layer by its ARN, including the version.
    memorySize : int, default is Undefined, optional
        The amount of memory available to the function (https://docs.aws.amazon.com/lambda/latest/dg/configuration-memory.html) at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
    packageType : str, default is Undefined, optional
        The type of deployment package. Set to Image for container image and set Zip for ZIP archive.
    publish : bool, default is Undefined, optional
        Set to true to publish the first version of the function during creation.
    region : str, default is Undefined, required
        Region is which region the Function will be created.
    role : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the function's execution role. One of role, roleRef or roleSelector is required.
    roleRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleRef, default is Undefined, optional
        role ref
    roleSelector : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleSelector, default is Undefined, optional
        role selector
    runtime : str, default is Undefined, optional
        The identifier of the function's runtime (https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html). Runtime is required if the deployment package is a .zip file archive.
    tags : {str:str}, default is Undefined, optional
        A list of tags (https://docs.aws.amazon.com/lambda/latest/dg/tagging.html) to apply to the function.
    timeout : int, default is Undefined, optional
        The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For additional information, see Lambda execution environment (https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html).
    tracingConfig : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderTracingConfig, default is Undefined, optional
        tracing config
    vpcConfig : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    architectures?: [str]

    code: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCode

    codeSigningConfigARN?: str

    deadLetterConfig?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderDeadLetterConfig

    description?: str

    environment?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderEnvironment

    ephemeralStorage?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderEphemeralStorage

    fileSystemConfigs?: [LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderFileSystemConfigsItems0]

    handler?: str

    imageConfig?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderImageConfig

    kmsKeyARN?: str

    kmsKeyARNRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNRef

    kmsKeyARNSelector?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNSelector

    layers?: [str]

    memorySize?: int

    packageType?: str

    publish?: bool

    region: str

    role?: str

    roleRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleRef

    roleSelector?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleSelector

    runtime?: str

    tags?: {str:str}

    timeout?: int

    tracingConfig?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderTracingConfig

    vpcConfig?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfig


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCode:
    """
    The code for the function.

    Attributes
    ----------
    imageURI : str, default is Undefined, optional
        image URI
    s3Bucket : str, default is Undefined, optional
        s3 bucket
    s3BucketRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketRef, default is Undefined, optional
        s3 bucket ref
    s3BucketSelector : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketSelector, default is Undefined, optional
        s3 bucket selector
    s3Key : str, default is Undefined, optional
        s3 key
    s3ObjectVersion : str, default is Undefined, optional
        s3 object version
    """


    imageURI?: str

    s3Bucket?: str

    s3BucketRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketRef

    s3BucketSelector?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketSelector

    s3Key?: str

    s3ObjectVersion?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketRef:
    """
    S3BucketRef is a reference to an S3 Bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketRefPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketSelector:
    """
    S3BucketSelector selects references to an S3 Bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketSelectorPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderCodeS3BucketSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderDeadLetterConfig:
    """
    A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see Dead Letter Queues (https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq).

    Attributes
    ----------
    targetARN : str, default is Undefined, optional
        target a r n
    """


    targetARN?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderEnvironment:
    """
    Environment variables that are accessible from function code during execution.

    Attributes
    ----------
    variables : {str:str}, default is Undefined, optional
        variables
    """


    variables?: {str:str}


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderEphemeralStorage:
    """
    The size of the function’s /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10240 MB.

    Attributes
    ----------
    size : int, default is Undefined, optional
        size
    """


    size?: int


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderFileSystemConfigsItems0:
    """
    lambda aws crossplane io v1beta1 function spec for provider file system configs items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        arn
    localMountPath : str, default is Undefined, optional
        local mount path
    """


    arn?: str

    localMountPath?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderImageConfig:
    """
    Container image configuration values (https://docs.aws.amazon.com/lambda/latest/dg/configuration-images.html#configuration-images-settings) that override the values in the container image Dockerfile.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    entryPoint : [str], default is Undefined, optional
        entry point
    workingDirectory : str, default is Undefined, optional
        working directory
    """


    command?: [str]

    entryPoint?: [str]

    workingDirectory?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNRef:
    """
    KMSKeyARNRef is a reference to a kms key used to set the KMSKeyARN.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNRefPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNSelector:
    """
    KMSKeyARNSelector selects references to kms key arn used to set the KMSKeyARN.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNSelectorPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderKmsKeyARNSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleRef:
    """
    RoleRef is a reference to an iam role

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleRefPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleSelector:
    """
    RoleSelector selects references to iam role arn used to set the lambda Role.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleSelectorPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderRoleSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderTracingConfig:
    """
    Set Mode to Active to sample and trace a subset of incoming requests with X-Ray (https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html).

    Attributes
    ----------
    mode : str, default is Undefined, optional
        mode
    """


    mode?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfig:
    """
    For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see VPC Settings (https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).

    Attributes
    ----------
    securityGroupIDRefs : [LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDRefsItems0], default is Undefined, optional
        SecurityGroupIDRefs is a list of references to SecurityGroups used to set the SecurityGroupIDs.
    securityGroupIDSelector : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDSelector, default is Undefined, optional
        security group ID selector
    securityGroupIDs : [str], default is Undefined, optional
        security group i ds
    subnetIDRefs : [LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        SubnetIDRefs is a list of references to Subnets used to set the SubnetIDs.
    subnetIDSelector : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet ID selector
    subnetIDs : [str], default is Undefined, optional
        subnet i ds
    """


    securityGroupIDRefs?: [LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDRefsItems0]

    securityGroupIDSelector?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDSelector

    securityGroupIDs?: [str]

    subnetIDRefs?: [LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDRefsItems0]

    subnetIDSelector?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDSelector

    subnetIDs?: [str]


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDRefsItems0Policy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDSelector:
    """
    SecurityGroupIDsSelector selects references to SecurityGroupID used to set the SecurityGroupIDs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDSelectorPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSecurityGroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDRefsItems0Policy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDSelector:
    """
    SubnetIDsSelector selects references to Subnets used to set the SubnetIDs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDSelectorPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecForProviderVpcConfigSubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderConfigRefPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderRefPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRef

    metadata?: LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToMetadata

    name: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRefPolicy


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LambdaAwsCrossplaneIoV1beta1FunctionStatus:
    """
    FunctionStatus defines the observed state of Function.

    Attributes
    ----------
    atProvider : LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LambdaAwsCrossplaneIoV1beta1FunctionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProvider

    conditions?: [LambdaAwsCrossplaneIoV1beta1FunctionStatusConditionsItems0]


schema LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProvider:
    """
    FunctionObservation defines the observed state of Function

    Attributes
    ----------
    codeSHA256 : str, default is Undefined, optional
        The SHA256 hash of the function's deployment package.
    codeSize : int, default is Undefined, optional
        The size of the function's deployment package, in bytes.
    functionARN : str, default is Undefined, optional
        The function's Amazon Resource Name (ARN).
    functionName : str, default is Undefined, optional
        The name of the function.
    imageConfigResponse : LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponse, default is Undefined, optional
        image config response
    lastModified : str, default is Undefined, optional
        The date and time that the function was last updated, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime) (YYYY-MM-DDThh:mm:ss.sTZD).
    lastUpdateStatus : str, default is Undefined, optional
        The status of the last update that was performed on the function. This is first set to Successful after function creation completes.
    lastUpdateStatusReason : str, default is Undefined, optional
        The reason for the last update that was performed on the function.
    lastUpdateStatusReasonCode : str, default is Undefined, optional
        The reason code for the last update that was performed on the function.
    masterARN : str, default is Undefined, optional
        For Lambda@Edge functions, the ARN of the main function.
    revisionID : str, default is Undefined, optional
        The latest updated revision of the function or alias.
    role : str, default is Undefined, optional
        The function's execution role.
    signingJobARN : str, default is Undefined, optional
        The ARN of the signing job.
    signingProfileVersionARN : str, default is Undefined, optional
        The ARN of the signing profile version.
    state : str, default is Undefined, optional
        The current state of the function. When the state is Inactive, you can reactivate the function by invoking it.
    stateReason : str, default is Undefined, optional
        The reason for the function's current state.
    stateReasonCode : str, default is Undefined, optional
        The reason code for the function's current state. When the code is Creating, you can't invoke or modify the function.
    version : str, default is Undefined, optional
        The version of the Lambda function.
    vpcConfig : LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    codeSHA256?: str

    codeSize?: int

    functionARN?: str

    functionName?: str

    imageConfigResponse?: LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponse

    lastModified?: str

    lastUpdateStatus?: str

    lastUpdateStatusReason?: str

    lastUpdateStatusReasonCode?: str

    masterARN?: str

    revisionID?: str

    role?: str

    signingJobARN?: str

    signingProfileVersionARN?: str

    state?: str

    stateReason?: str

    stateReasonCode?: str

    version?: str

    vpcConfig?: LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderVpcConfig


schema LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponse:
    """
    The function's image configuration values.

    Attributes
    ----------
    error : LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponseError, default is Undefined, optional
        error
    imageConfig : LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponseImageConfig, default is Undefined, optional
        image config
    """


    error?: LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponseError

    imageConfig?: LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponseImageConfig


schema LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponseError:
    """
    Error response to GetFunctionConfiguration.

    Attributes
    ----------
    errorCode : str, default is Undefined, optional
        error code
    message : str, default is Undefined, optional
        message
    """


    errorCode?: str

    message?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderImageConfigResponseImageConfig:
    """
    Configuration values that override the container image Dockerfile settings. See Container settings (https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms).

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    entryPoint : [str], default is Undefined, optional
        entry point
    workingDirectory : str, default is Undefined, optional
        working directory
    """


    command?: [str]

    entryPoint?: [str]

    workingDirectory?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionStatusAtProviderVpcConfig:
    """
    The function's networking configuration.

    Attributes
    ----------
    securityGroupIDs : [str], default is Undefined, optional
        security group i ds
    subnetIDs : [str], default is Undefined, optional
        subnet i ds
    vpcID : str, default is Undefined, optional
        vpc ID
    """


    securityGroupIDs?: [str]

    subnetIDs?: [str]

    vpcID?: str


schema LambdaAwsCrossplaneIoV1beta1FunctionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


