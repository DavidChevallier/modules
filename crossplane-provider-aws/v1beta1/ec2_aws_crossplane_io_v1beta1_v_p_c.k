"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPC:
    """
    A VPC is a managed resource that represents an AWS Virtual Private Cloud.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPC", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1beta1VPCSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1beta1VPCStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1beta1" = "ec2.aws.crossplane.io/v1beta1"

    kind: "VPC" = "VPC"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1beta1VPCSpec

    status?: Ec2AwsCrossplaneIoV1beta1VPCStatus


schema Ec2AwsCrossplaneIoV1beta1VPCSpec:
    """
    A VPCSpec defines the desired state of a VPC.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1beta1VPCSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1beta1VPCSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1beta1VPCSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1beta1VPCSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1beta1VPCSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1beta1VPCSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1beta1VPCSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1beta1VPCSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1beta1VPCSpecForProvider:
    """
    VPCParameters define the desired state of an AWS Virtual Private Cloud.

    Attributes
    ----------
    amazonProvidedIpv6CidrBlock : bool, default is Undefined, optional
        Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.
    cidrBlock : str, default is Undefined, required
        CIDRBlock is the IPv4 network range for the VPC, in CIDR notation. For example, 10.0.0.0/16.
    enableDnsHostNames : bool, default is Undefined, optional
        Indicates whether the instances launched in the VPC get DNS hostnames.
    enableDnsSupport : bool, default is Undefined, optional
        A boolean flag to enable/disable DNS support in the VPC
    instanceTenancy : str, default is Undefined, optional
        The allowed tenancy of instances launched into the VPC.
    ipv6CidrBlock : str, default is Undefined, optional
        The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request. To let Amazon choose the IPv6 CIDR block for you, omit this parameter.
    ipv6Pool : str, default is Undefined, optional
        The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
    region : str, default is Undefined, optional
        Region is the region you'd like your VPC to be created in.
    tags : [Ec2AwsCrossplaneIoV1beta1VPCSpecForProviderTagsItems0], default is Undefined, optional
        Tags are used as identification helpers between AWS resources.
    """


    amazonProvidedIpv6CidrBlock?: bool

    cidrBlock: str

    enableDnsHostNames?: bool

    enableDnsSupport?: bool

    instanceTenancy?: str

    ipv6CidrBlock?: str

    ipv6Pool?: str

    region?: str

    tags?: [Ec2AwsCrossplaneIoV1beta1VPCSpecForProviderTagsItems0]


schema Ec2AwsCrossplaneIoV1beta1VPCSpecForProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1beta1VPCSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1VPCSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1VPCSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1VPCSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1VPCSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1VPCSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1VPCSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1beta1VPCSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1VPCSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1beta1VPCSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1beta1VPCStatus:
    """
    A VPCStatus represents the observed state of a VPC.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1beta1VPCStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1beta1VPCStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1beta1VPCStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1beta1VPCStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1beta1VPCStatusAtProvider:
    """
    VPCObservation keeps the state for the external resource

    Attributes
    ----------
    cidrBlockAssociationSet : [Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderCidrBlockAssociationSetItems0], default is Undefined, optional
        Information about the IPv4 CIDR blocks associated with the VPC.
    dhcpOptionsId : str, default is Undefined, optional
        The ID of the set of DHCP options you've associated with the VPC.
    ipv6CidrBlockAssociationSet : [Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderIPV6CidrBlockAssociationSetItems0], default is Undefined, optional
        Information about the IPv6 CIDR blocks associated with the VPC.
    isDefault : bool, default is Undefined, optional
        Indicates whether the VPC is the default VPC.
    ownerId : str, default is Undefined, optional
        The ID of the AWS account that owns the VPC.
    vpcId : str, default is Undefined, optional
        The ID of the VPC.
    vpcState : str, default is Undefined, optional
        VPCState is the current state of the VPC.
    """


    cidrBlockAssociationSet?: [Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderCidrBlockAssociationSetItems0]

    dhcpOptionsId?: str

    ipv6CidrBlockAssociationSet?: [Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderIPV6CidrBlockAssociationSetItems0]

    isDefault?: bool

    ownerId?: str

    vpcId?: str

    vpcState?: str


schema Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderCidrBlockAssociationSetItems0:
    """
    VPCCIDRBlockAssociation represents the association of IPv4 CIDR blocks with the VPC.

    Attributes
    ----------
    associationId : str, default is Undefined, optional
        The association ID for the IPv4 CIDR block.
    cidrBlock : str, default is Undefined, optional
        The IPv4 CIDR block.
    cidrBlockState : Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderCidrBlockAssociationSetItems0CidrBlockState, default is Undefined, optional
        cidr block state
    """


    associationId?: str

    cidrBlock?: str

    cidrBlockState?: Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderCidrBlockAssociationSetItems0CidrBlockState


schema Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderCidrBlockAssociationSetItems0CidrBlockState:
    """
    Information about the state of the CIDR block.

    Attributes
    ----------
    state : str, default is Undefined, optional
        The state of the CIDR block.
    statusMessage : str, default is Undefined, optional
        A message about the status of the CIDR block, if applicable.
    """


    state?: str

    statusMessage?: str


schema Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderIPV6CidrBlockAssociationSetItems0:
    """
    VPCIPv6CidrBlockAssociation represents the association of IPv6 CIDR blocks with the VPC.

    Attributes
    ----------
    associationId : str, default is Undefined, optional
        The association ID for the IPv6 CIDR block.
    ipv6CidrBlock : str, default is Undefined, optional
        The IPv6 CIDR block.
    ipv6CidrBlockState : Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderIPV6CidrBlockAssociationSetItems0IPV6CidrBlockState, default is Undefined, optional
        ipv6 cidr block state
    ipv6Pool : str, default is Undefined, optional
        The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.
    networkBorderGroup : str, default is Undefined, optional
        The name of the location from which we advertise the IPV6 CIDR block.
    """


    associationId?: str

    ipv6CidrBlock?: str

    ipv6CidrBlockState?: Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderIPV6CidrBlockAssociationSetItems0IPV6CidrBlockState

    ipv6Pool?: str

    networkBorderGroup?: str


schema Ec2AwsCrossplaneIoV1beta1VPCStatusAtProviderIPV6CidrBlockAssociationSetItems0IPV6CidrBlockState:
    """
    Information about the state of the CIDR block.

    Attributes
    ----------
    state : str, default is Undefined, optional
        The state of the CIDR block.
    statusMessage : str, default is Undefined, optional
        A message about the status of the CIDR block, if applicable.
    """


    state?: str

    statusMessage?: str


schema Ec2AwsCrossplaneIoV1beta1VPCStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


