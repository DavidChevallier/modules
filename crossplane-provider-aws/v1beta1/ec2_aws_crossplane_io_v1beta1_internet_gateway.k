"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InternetGateway:
    """
    An InternetGateway is a managed resource that represents an AWS VPC Internet Gateway.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InternetGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1beta1InternetGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1beta1" = "ec2.aws.crossplane.io/v1beta1"

    kind: "InternetGateway" = "InternetGateway"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpec

    status?: Ec2AwsCrossplaneIoV1beta1InternetGatewayStatus


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpec:
    """
    An InternetGatewaySpec defines the desired state of an InternetGateway.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProvider:
    """
    InternetGatewayParameters define the desired state of an AWS VPC Internet Gateway.

    Attributes
    ----------
    region : str, default is Undefined, optional
        Region is the region you'd like your VPC to be created in.
    tags : [Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderTagsItems0], default is Undefined, optional
        Tags represents to current ec2 tags.
    vpcId : str, default is Undefined, optional
        VPCID is the ID of the VPC.
    vpcIdRef : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    region?: str

    tags?: [Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderTagsItems0]

    vpcId?: str

    vpcIdRef?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDRef

    vpcIdSelector?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDSelector


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDRef:
    """
    VPCIDRef references a VPC to and retrieves its vpcId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDSelector:
    """
    VPCIDSelector selects a reference to a VPC to and retrieves its vpcId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecForProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1beta1InternetGatewaySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1beta1InternetGatewayStatus:
    """
    An InternetGatewayStatus represents the observed state of an InternetGateway.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusAtProvider:
    """
    InternetGatewayObservation keeps the state for the external resource

    Attributes
    ----------
    attachments : [Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusAtProviderAttachmentsItems0], default is Undefined, optional
        Any VPCs attached to the internet gateway.
    internetGatewayId : str, default is Undefined, required
        The ID of the internet gateway.
    ownerID : str, default is Undefined, required
        The ID of the AWS account that owns the internet gateway.
    """


    attachments?: [Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusAtProviderAttachmentsItems0]

    internetGatewayId: str

    ownerID: str


schema Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusAtProviderAttachmentsItems0:
    """
    InternetGatewayAttachment describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.

    Attributes
    ----------
    attachmentStatus : str, default is Undefined, required
        The current state of the attachment. For an internet gateway, the state is available when attached to a VPC; otherwise, this value is not returned.
    vpcId : str, default is Undefined, required
        VPCID is the ID of the attached VPC.
    """


    attachmentStatus: "available" | "attaching" | "attached" | "detaching" | "detached"

    vpcId: str


schema Ec2AwsCrossplaneIoV1beta1InternetGatewayStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


