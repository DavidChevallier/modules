"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouteTable:
    """
    A RouteTable is a managed resource that represents an AWS VPC Route Table.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouteTable", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1beta1RouteTableSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1beta1RouteTableStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1beta1" = "ec2.aws.crossplane.io/v1beta1"

    kind: "RouteTable" = "RouteTable"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1beta1RouteTableSpec

    status?: Ec2AwsCrossplaneIoV1beta1RouteTableStatus


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpec:
    """
    A RouteTableSpec defines the desired state of a RouteTable.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProvider:
    """
    RouteTableParameters define the desired state of an AWS VPC Route Table.

    Attributes
    ----------
    associations : [Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0], default is Undefined, required
        The associations between the route table and one or more subnets.
    ignoreRoutes : bool, default is Undefined, optional
        Indicates whether we reconcile inline routes
    region : str, default is Undefined, required
        Region is the region you'd like your VPC to be created in.
    routes : [Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0], default is Undefined, optional
        inline routes in the route table Deprecated: Routes inline exists for historical compatibility and should not be used. Please use separate route resource.
    tags : [Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderTagsItems0], default is Undefined, optional
        Tags represents to current ec2 tags.
    vpcId : str, default is Undefined, optional
        VPCID is the ID of the VPC.
    vpcIdRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    associations: [Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0]

    ignoreRoutes?: bool

    region: str

    routes?: [Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0]

    tags?: [Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderTagsItems0]

    vpcId?: str

    vpcIdRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDRef

    vpcIdSelector?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDSelector


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0:
    """
    Association describes an association between a route table and a subnet.

    Attributes
    ----------
    subnetId : str, default is Undefined, optional
        The ID of the subnet. A subnet ID is not returned for an implicit association.
    subnetIdRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    subnetId?: str

    subnetIdRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDRef

    subnetIdSelector?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDSelector


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDRef:
    """
    A referencer to retrieve the ID of a subnet

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDSelector:
    """
    A selector to select a referencer to retrieve the ID of a subnet

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderAssociationsItems0SubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0:
    """
    RouteBeta describes a route in a route table. provider-aws currently provides both a standalone Route resource and a RouteTable resource with routes defined in-line. At this time you cannot use a Route Table with in-line routes in conjunction with any Route resources. Doing so will cause a conflict of rule settings and will overwrite rules.

    Attributes
    ----------
    destinationCidrBlock : str, default is Undefined, optional
        The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.
    destinationIpv6CidrBlock : str, default is Undefined, optional
        The IPv6 CIDR address block used for the destination match. Routing decisions are based on the most specific match.
    egressOnlyInternetGatewayId : str, default is Undefined, optional
        [IPv6 traffic only] The ID of an egress-only internet gateway.
    gatewayId : str, default is Undefined, optional
        The ID of an internet gateway or virtual private gateway attached to your VPC.
    gatewayIdRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDRef, default is Undefined, optional
        gateway Id ref
    gatewayIdSelector : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDSelector, default is Undefined, optional
        gateway Id selector
    instanceId : str, default is Undefined, optional
        The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    localGatewayId : str, default is Undefined, optional
        The ID of the local gateway.
    natGatewayId : str, default is Undefined, optional
        [IPv4 traffic only] The ID of a NAT gateway.
    natGatewayIdRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDRef, default is Undefined, optional
        nat gateway Id ref
    natGatewayIdSelector : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDSelector, default is Undefined, optional
        nat gateway Id selector
    networkInterfaceId : str, default is Undefined, optional
        The ID of a network interface.
    transitGatewayId : str, default is Undefined, optional
        The ID of a transit gateway.
    vpcPeeringConnectionId : str, default is Undefined, optional
        The ID of a VPC peering connection.
    """


    destinationCidrBlock?: str

    destinationIpv6CidrBlock?: str

    egressOnlyInternetGatewayId?: str

    gatewayId?: str

    gatewayIdRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDRef

    gatewayIdSelector?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDSelector

    instanceId?: str

    localGatewayId?: str

    natGatewayId?: str

    natGatewayIdRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDRef

    natGatewayIdSelector?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDSelector

    networkInterfaceId?: str

    transitGatewayId?: str

    vpcPeeringConnectionId?: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDRef:
    """
    A referencer to retrieve the ID of a gateway

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDSelector:
    """
    A selector to select a referencer to retrieve the ID of a gateway

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0GatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDRef:
    """
    A referencer to retrieve the ID of a NAT gateway

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDSelector:
    """
    A selector to select a referencer to retrieve the ID of a NAT gateway

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderRoutesItems0NatGatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDRef:
    """
    VPCIDRef references a VPC to retrieve its vpcId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDSelector:
    """
    VPCIDSelector selects a reference to a VPC to retrieve its vpcId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecForProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableStatus:
    """
    A RouteTableStatus represents the observed state of a RouteTable.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1beta1RouteTableStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1beta1RouteTableStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProvider:
    """
    RouteTableObservation keeps the state for the external resource

    Attributes
    ----------
    associations : [Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProviderAssociationsItems0], default is Undefined, optional
        The actual associations created for the route table.
    ownerId : str, default is Undefined, optional
        The ID of the AWS account that owns the route table.
    routeTableId : str, default is Undefined, optional
        RouteTableID is the ID of the RouteTable.
    routes : [Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProviderRoutesItems0], default is Undefined, optional
        The actual routes created for the route table.
    """


    associations?: [Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProviderAssociationsItems0]

    ownerId?: str

    routeTableId?: str

    routes?: [Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProviderRoutesItems0]


schema Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProviderAssociationsItems0:
    """
    AssociationState describes an association state in the route table.

    Attributes
    ----------
    associationId : str, default is Undefined, optional
        The ID of the association between a route table and a subnet.
    main : bool, default is Undefined, required
        Indicates whether this is the main route table.
    state : str, default is Undefined, optional
        The state of the association.
    subnetId : str, default is Undefined, optional
        The ID of the subnet. A subnet ID is not returned for an implicit association.
    """


    associationId?: str

    main: bool

    state?: str

    subnetId?: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableStatusAtProviderRoutesItems0:
    """
    RouteState describes a route state in the route table.

    Attributes
    ----------
    destinationCidrBlock : str, default is Undefined, optional
        The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match.
    destinationIpv6CidrBlock : str, default is Undefined, optional
        The IPv6 CIDR address block used for the destination match. Routing decisions are based on the most specific match.
    gatewayId : str, default is Undefined, optional
        The ID of an internet gateway or virtual private gateway attached to your VPC.
    instanceId : str, default is Undefined, optional
        The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    localGatewayId : str, default is Undefined, optional
        The ID of the local gateway.
    natGatewayId : str, default is Undefined, optional
        [IPv4 traffic only] The ID of a NAT gateway.
    networkInterfaceId : str, default is Undefined, optional
        The ID of a network interface.
    state : str, default is Undefined, optional
        The state of the route. The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).
    transitGatewayId : str, default is Undefined, optional
        The ID of a transit gateway.
    vpcPeeringConnectionId : str, default is Undefined, optional
        The ID of a VPC peering connection.
    """


    destinationCidrBlock?: str

    destinationIpv6CidrBlock?: str

    gatewayId?: str

    instanceId?: str

    localGatewayId?: str

    natGatewayId?: str

    networkInterfaceId?: str

    state?: str

    transitGatewayId?: str

    vpcPeeringConnectionId?: str


schema Ec2AwsCrossplaneIoV1beta1RouteTableStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


