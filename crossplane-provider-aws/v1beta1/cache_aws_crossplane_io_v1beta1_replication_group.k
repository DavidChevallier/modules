"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ReplicationGroup:
    """
    A ReplicationGroup is a managed resource that represents an AWS ElastiCache Replication Group.

    Attributes
    ----------
    apiVersion : str, default is "cache.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ReplicationGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpec, default is Undefined, required
        spec
    status : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "cache.aws.crossplane.io/v1beta1" = "cache.aws.crossplane.io/v1beta1"

    kind: "ReplicationGroup" = "ReplicationGroup"

    metadata?: v1.ObjectMeta

    spec: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpec

    status?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatus


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpec:
    """
    A ReplicationGroupSpec defines the desired state of a ReplicationGroup.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProvider

    providerConfigRef?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderConfigRef

    providerRef?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderRef

    publishConnectionDetailsTo?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecWriteConnectionSecretToRef


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProvider:
    """
    ReplicationGroupParameters define the desired state of an AWS ElastiCache Replication Group. Most fields map directly to an AWS ReplicationGroup: https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html#API_CreateReplicationGroup_RequestParameters

    Attributes
    ----------
    applyModificationsImmediately : bool, default is Undefined, required
        If true, this parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible, regardless of the PreferredMaintenanceWindow setting for the replication group. 
         If false, changes to the nodes in the replication group are applied on the next maintenance reboot, or the next failure reboot, whichever occurs first.
    atRestEncryptionEnabled : bool, default is Undefined, optional
        AtRestEncryptionEnabled enables encryption at rest when set to true. 
         You cannot modify the value of AtRestEncryptionEnabled after the replication group is created. To enable encryption at rest on a replication group you must set AtRestEncryptionEnabled to true when you create the replication group. 
         Only available when creating a replication group in an Amazon VPC using redis version 3.2.6 or 4.x.
    authEnabled : bool, default is Undefined, optional
        AuthEnabled enables mandatory authentication when connecting to the managed replication group. AuthEnabled requires TransitEncryptionEnabled to be true. 
         While ReplicationGroupSpec mirrors the fields of the upstream replication group object as closely as possible, we expose a boolean here rather than requiring the operator pass in a string authentication token. Crossplane will generate a token automatically and expose it via a Secret.
    automaticFailoverEnabled : bool, default is Undefined, optional
        AutomaticFailoverEnabled specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails. Must be set to true if Multi-AZ is enabled for this replication group. If false, Multi-AZ cannot be enabled for this replication group. 
         AutomaticFailoverEnabled must be enabled for Redis (cluster mode enabled) replication groups. 
         Amazon ElastiCache for Redis does not support Multi-AZ with automatic failover on: * Redis versions earlier than 2.8.6. * Redis (cluster mode disabled): T1 and T2 cache node types. * Redis (cluster mode enabled): T1 node types.
    cacheNodeType : str, default is Undefined, required
        CacheNodeType specifies the compute and memory capacity of the nodes in the node group (shard). For a complete listing of node types and specifications, see: * Amazon ElastiCache Product Features and Details (http://aws.amazon.com/elasticache/details) * Cache Node Type-Specific Parameters for Memcached (http://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/ParameterGroups.Memcached.html#ParameterGroups.Memcached.NodeSpecific) * Cache Node Type-Specific Parameters for Redis (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/ParameterGroups.Redis.html#ParameterGroups.Redis.NodeSpecific)
    cacheParameterGroupName : str, default is Undefined, optional
        CacheParameterGroupName specifies the name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. 
         If you are running Redis version 3.2.4 or later, only one node group (shard), and want to use a default parameter group, we recommend that you specify the parameter group by name. * To create a Redis (cluster mode disabled) replication group, use CacheParameterGroupName=default.redis3.2. * To create a Redis (cluster mode enabled) replication group, use CacheParameterGroupName=default.redis3.2.cluster.on.
    cacheSecurityGroupNameRefs : [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameRefsItems0], default is Undefined, optional
        CacheSecurityGroupNameRefs are references to SecurityGroups used to set the CacheSecurityGroupNames.
    cacheSecurityGroupNameSelector : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameSelector, default is Undefined, optional
        cache security group name selector
    cacheSecurityGroupNames : [str], default is Undefined, optional
        CacheSecurityGroupNames specifies a list of cache security group names to associate with this replication group. Only for EC2-Classic mode.
    cacheSubnetGroupName : str, default is Undefined, optional
        CacheSubnetGroupName specifies the name of the cache subnet group to be used for the replication group. If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see Subnets and Subnet Groups (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).
    cacheSubnetGroupNameRef : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRef, default is Undefined, optional
        cache subnet group name ref
    cacheSubnetGroupNameRefs : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefs, default is Undefined, optional
        cache subnet group name refs
    cacheSubnetGroupNameSelector : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameSelector, default is Undefined, optional
        cache subnet group name selector
    engine : str, default is Undefined, required
        Engine is the name of the cache engine (memcached or redis) to be used for the clusters in this replication group.
    engineVersion : str, default is Undefined, optional
        EngineVersion specifies the version number of the cache engine to be used for the clusters in this replication group. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation. 
         Important: You can upgrade to a newer engine version (see Selecting a Cache Engine and Version (http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)) in the ElastiCache User Guide, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version.
    multiAZEnabled : bool, default is Undefined, optional
        MultiAZEnabled specifies if Multi-AZ is enabled to enhance fault tolerance You must have nodes across two or more Availability Zones in order to enable this feature. If this feature is set, automaticFailoverEnabled must be set to true.
    nodeGroupConfiguration : [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNodeGroupConfigurationItems0], default is Undefined, optional
        NodeGroupConfigurationSpec specifies a list of node group (shard) configuration options. 
         If you're creating a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group, you can use this parameter to individually configure each node group (shard), or you can omit this parameter. However, when seeding a Redis (cluster mode enabled) cluster from a S3 rdb file, you must configure each node group (shard) using this parameter because you must specify the slots for each node group.
    notificationTopicArn : str, default is Undefined, optional
        NotificationTopicARN specifies the Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent. The Amazon SNS topic owner must be the same as the cluster owner.
    notificationTopicArnRef : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnRef, default is Undefined, optional
        notification topic arn ref
    notificationTopicArnSelector : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnSelector, default is Undefined, optional
        notification topic arn selector
    notificationTopicStatus : str, default is Undefined, optional
        NotificationTopicStatus is the status of the Amazon SNS notification topic for the replication group. Notifications are sent only if the status is active. 
         Valid values: active | inactive
    numCacheClusters : int, default is Undefined, optional
        NumCacheClusters specifies the number of clusters this replication group initially has. This parameter is not used if there is more than one node group (shard). You should use ReplicasPerNodeGroup instead. 
         If AutomaticFailoverEnabled is true, the value of this parameter must be at least 2. If AutomaticFailoverEnabled is false you can omit this parameter (it will default to 1), or you can explicitly set it to a value between 2 and 6. 
         The maximum permitted value for NumCacheClusters is 6 (1 primary plus 5 replicas).
    numNodeGroups : int, default is Undefined, optional
        NumNodeGroups specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group. For Redis (cluster mode disabled) either omit this parameter or set it to 1. 
         Default: 1
    port : int, default is Undefined, optional
        Port number on which each member of the replication group accepts connections.
    preferredCacheClusterAzs : [str], default is Undefined, optional
        PreferredCacheClusterAZs specifies a list of EC2 Availability Zones in which the replication group's clusters are created. The order of the Availability Zones in the list is the order in which clusters are allocated. The primary cluster is created in the first AZ in the list. 
         This parameter is not used if there is more than one node group (shard). You should use NodeGroupConfigurationSpec instead. 
         If you are creating your replication group in an Amazon VPC (recommended), you can only locate clusters in Availability Zones associated with the subnets in the selected subnet group. 
         The number of Availability Zones listed must equal the value of NumCacheClusters. 
         Default: system chosen Availability Zones.
    preferredMaintenanceWindow : str, default is Undefined, optional
        PreferredMaintenanceWindow specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. 
         Example: sun:23:00-mon:01:30
    primaryClusterId : str, default is Undefined, optional
        PrimaryClusterId is the identifier of the cluster that serves as the primary for this replication group. This cluster must already exist and have a status of available. 
         This parameter is not required if NumCacheClusters, NumNodeGroups or ReplicasPerNodeGroup is specified.
    region : str, default is Undefined, optional
        Region is the region you'd like your ReplicationGroup to be created in.
    replicasPerNodeGroup : int, default is Undefined, optional
        ReplicasPerNodeGroup specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.
    replicationGroupDescription : str, default is Undefined, required
        ReplicationGroupDescription is the description for the replication group.
    securityGroupIdRefs : [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        SecurityGroupIDRefs are references to SecurityGroups used to set the SecurityGroupIDs.
    securityGroupIdSelector : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        SecurityGroupIDs specifies one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon VPC.
    snapshotArns : [str], default is Undefined, optional
        SnapshotARNs specifies a list of Amazon Resource Names (ARN) that uniquely identify the Redis RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new replication group. The Amazon S3 object name in the ARN cannot contain any commas. The new replication group will have the number of node groups (console: shards) specified by the parameter NumNodeGroups or the number of node groups configured by NodeGroupConfigurationSpec regardless of the number of ARNs specified here.
    snapshotName : str, default is Undefined, optional
        SnapshotName specifies the name of a snapshot from which to restore data into the new replication group. The snapshot status changes to restoring while the new replication group is being created.
    snapshotRetentionLimit : int, default is Undefined, optional
        SnapshotRetentionLimit specifies the number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted. Default: 0 (i.e., automatic backups are disabled for this cluster).
    snapshotWindow : str, default is Undefined, optional
        SnapshotWindow specifies the daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard). 
         Example: 05:00-09:00 
         If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.
    snapshottingClusterID : str, default is Undefined, optional
        SnapshottingClusterID is used as the daily snapshot source for the replication group. This parameter cannot be set for Redis (cluster mode enabled) replication groups.
    tags : [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderTagsItems0], default is Undefined, optional
        A list of cost allocation tags to be added to this resource. A tag is a key-value pair.
    transitEncryptionEnabled : bool, default is Undefined, optional
        TransitEncryptionEnabled enables in-transit encryption when set to true. 
         You cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must TransitEncryptionEnabled to true when you create a cluster. 
         This parameter is valid only if the Engine parameter is redis, the EngineVersion parameter is 3.2.6 or 4.x, and the cluster is being created in an Amazon VPC. 
         If you enable in-transit encryption, you must also specify a value for CacheSubnetGroup. 
         Required: Only available when creating a replication group in an Amazon VPC using redis version 3.2.6 or 4.x. 
         Default: false 
         For HIPAA compliance, you must specify TransitEncryptionEnabled as true, an AuthToken, and a CacheSubnetGroup.
    """


    applyModificationsImmediately: bool

    atRestEncryptionEnabled?: bool

    authEnabled?: bool

    automaticFailoverEnabled?: bool

    cacheNodeType: str

    cacheParameterGroupName?: str

    cacheSecurityGroupNameRefs?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameRefsItems0]

    cacheSecurityGroupNameSelector?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameSelector

    cacheSecurityGroupNames?: [str]

    cacheSubnetGroupName?: str

    cacheSubnetGroupNameRef?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRef

    cacheSubnetGroupNameRefs?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefs

    cacheSubnetGroupNameSelector?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameSelector

    engine: str

    engineVersion?: str

    multiAZEnabled?: bool

    nodeGroupConfiguration?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNodeGroupConfigurationItems0]

    notificationTopicArn?: str

    notificationTopicArnRef?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnRef

    notificationTopicArnSelector?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnSelector

    notificationTopicStatus?: str

    numCacheClusters?: int

    numNodeGroups?: int

    port?: int

    preferredCacheClusterAzs?: [str]

    preferredMaintenanceWindow?: str

    primaryClusterId?: str

    region?: str

    replicasPerNodeGroup?: int

    replicationGroupDescription: str

    securityGroupIdRefs?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: int

    snapshotWindow?: str

    snapshottingClusterID?: str

    tags?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderTagsItems0]

    transitEncryptionEnabled?: bool


    check:
        numCacheClusters <= 6


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameRefsItems0Policy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameSelector:
    """
    CacheSecurityGroupNameSelector selects references to SecurityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameSelectorPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSecurityGroupNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRef:
    """
    CacheSubnetGroupNameRef is a reference to a Subnet Group used to set the CacheSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefs:
    """
    DeprecatedCacheSubnetGroupNameRef is a reference to a Subnet Group used to set the CacheSubnetGroupName. 
     Deprecated: Use CacheSubnetGroupNameRef. This field exists because we introduced it with the JSON tag cacheSubnetGroupNameRefs (plural) when it should have been cacheSubnetGroupNameRef (singular). This is a bug that we need to avoid a breaking change to this v1beta1 API.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefsPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefsPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameRefsPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameSelector:
    """
    CacheSubnetGroupNameSelector selects a reference to a CacheSubnetGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameSelectorPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderCacheSubnetGroupNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNodeGroupConfigurationItems0:
    """
    A NodeGroupConfigurationSpec specifies the desired state of a node group.

    Attributes
    ----------
    primaryAvailabilityZone : str, default is Undefined, optional
        PrimaryAvailabilityZone specifies the Availability Zone where the primary node of this node group (shard) is launched.
    replicaAvailabilityZones : [str], default is Undefined, optional
        ReplicaAvailabilityZones specifies a list of Availability Zones to be used for the read replicas. The number of Availability Zones in this list must match the value of ReplicaCount or ReplicasPerNodeGroup if not specified.
    replicaCount : int, default is Undefined, optional
        ReplicaCount specifies the number of read replica nodes in this node group (shard).
    slots : str, default is Undefined, optional
        Slots specifies the keyspace for a particular node group. Keyspaces range from 0 to 16,383. The string is in the format startkey-endkey. 
         Example: "0-3999"
    """


    primaryAvailabilityZone?: str

    replicaAvailabilityZones?: [str]

    replicaCount?: int

    slots?: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnRef:
    """
    NotificationTopicARNRef references an SNS Topic to retrieve its NotificationTopicARN

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnRefPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnSelector:
    """
    NotificationTopicARNSelector selects a reference to an SNS Topic to retrieve its NotificationTopicARN

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnSelectorPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderNotificationTopicArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0Policy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDSelector:
    """
    SecurityGroupIDSelector selects references to SecurityGroups used to set the SecurityGroupIDs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDSelectorPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderSecurityGroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecForProviderTagsItems0:
    """
    A Tag is used to tag the ElastiCache resources in AWS.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key for the tag.
    value : str, default is Undefined, required
        Value of the tag.
    """


    key: str

    value: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderConfigRefPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderRefPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatus:
    """
    A ReplicationGroupStatus defines the observed state of a ReplicationGroup.

    Attributes
    ----------
    atProvider : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProvider

    conditions?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusConditionsItems0]


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProvider:
    """
    ReplicationGroupObservation contains the observation of the status of the given ReplicationGroup.

    Attributes
    ----------
    automaticFailoverStatus : str, default is Undefined, optional
        AutomaticFailover indicates the status of Multi-AZ with automatic failover for this Redis replication group.
    clusterEnabled : bool, default is Undefined, optional
        ClusterEnabled is a flag indicating whether or not this replication group is cluster enabled; i.e., whether its data can be partitioned across multiple shards (API/CLI: node groups).
    configurationEndpoint : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderConfigurationEndpoint, default is Undefined, optional
        configuration endpoint
    memberClusters : [str], default is Undefined, optional
        MemberClusters is the list of names of all the cache clusters that are part of this replication group.
    nodeGroups : [CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0], default is Undefined, optional
        NodeGroups is a list of node groups in this replication group. For Redis (cluster mode disabled) replication groups, this is a single-element list. For Redis (cluster mode enabled) replication groups, the list contains an entry for each node group (shard).
    pendingModifiedValues : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValues, default is Undefined, optional
        pending modified values
    status : str, default is Undefined, optional
        Status is the current state of this replication group - creating, available, modifying, deleting, create-failed, snapshotting.
    """


    automaticFailoverStatus?: str

    clusterEnabled?: bool

    configurationEndpoint?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderConfigurationEndpoint

    memberClusters?: [str]

    nodeGroups?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0]

    pendingModifiedValues?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValues

    status?: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderConfigurationEndpoint:
    """
    ConfigurationEndpoint for this replication group. Use the configuration endpoint to connect to this replication group.

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address is the DNS hostname of the cache node.
    port : int, default is Undefined, optional
        Port number that the cache engine is listening on.
    """


    address?: str

    port?: int


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0:
    """
    NodeGroup represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes. Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticache-2015-02-02/NodeGroup

    Attributes
    ----------
    nodeGroupID : str, default is Undefined, optional
        NodeGroupID is the identifier for the node group (shard). A Redis (cluster mode disabled) replication group contains only 1 node group; therefore, the node group ID is 0001. A Redis (cluster mode enabled) replication group contains 1 to 15 node groups numbered 0001 to 0015.
    nodeGroupMembers : [CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0NodeGroupMembersItems0], default is Undefined, optional
        NodeGroupMembers is a list containing information about individual nodes within the node group (shard).
    primaryEndpoint : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0PrimaryEndpoint, default is Undefined, optional
        primary endpoint
    slots : str, default is Undefined, optional
        Slots is the keyspace for this node group (shard).
    status : str, default is Undefined, optional
        Status of this replication group - creating, available, etc.
    """


    nodeGroupID?: str

    nodeGroupMembers?: [CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0NodeGroupMembersItems0]

    primaryEndpoint?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0PrimaryEndpoint

    slots?: str

    status?: str


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0NodeGroupMembersItems0:
    """
    NodeGroupMember represents a single node within a node group (shard). Please also see https://docs.aws.amazon.com/goto/WebAPI/elasticache-2015-02-02/NodeGroupMember

    Attributes
    ----------
    cacheClusterId : str, default is Undefined, optional
        CacheClusterID is the ID of the cluster to which the node belongs.
    cacheNodeId : str, default is Undefined, optional
        CacheNodeID is the ID of the node within its cluster. A node ID is a numeric identifier (0001, 0002, etc.).
    currentRole : str, default is Undefined, optional
        CurrentRole is the role that is currently assigned to the node - primary or replica. This member is only applicable for Redis (cluster mode disabled) replication groups.
    preferredAvailabilityZone : str, default is Undefined, optional
        PreferredAvailabilityZone is the name of the Availability Zone in which the node is located.
    readEndpoint : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0NodeGroupMembersItems0ReadEndpoint, default is Undefined, optional
        read endpoint
    """


    cacheClusterId?: str

    cacheNodeId?: str

    currentRole?: str

    preferredAvailabilityZone?: str

    readEndpoint?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0NodeGroupMembersItems0ReadEndpoint


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0NodeGroupMembersItems0ReadEndpoint:
    """
    ReadEndpoint is the information required for client programs to connect to a node for read operations. The read endpoint is only applicable on Redis (cluster mode disabled) clusters.

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address is the DNS hostname of the cache node.
    port : int, default is Undefined, optional
        Port number that the cache engine is listening on.
    """


    address?: str

    port?: int


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderNodeGroupsItems0PrimaryEndpoint:
    """
    PrimaryEndpoint is the endpoint of the primary node in this node group (shard).

    Attributes
    ----------
    address : str, default is Undefined, optional
        Address is the DNS hostname of the cache node.
    port : int, default is Undefined, optional
        Port number that the cache engine is listening on.
    """


    address?: str

    port?: int


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValues:
    """
    PendingModifiedValues is a group of settings to be applied to the replication group, either immediately or during the next maintenance window.

    Attributes
    ----------
    automaticFailoverStatus : str, default is Undefined, optional
        AutomaticFailoverStatus indicates the status of Multi-AZ with automatic failover for this Redis replication group.
    primaryClusterId : str, default is Undefined, optional
        PrimaryClusterID that is applied immediately or during the next maintenance window.
    resharding : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValuesResharding, default is Undefined, optional
        resharding
    """


    automaticFailoverStatus?: str

    primaryClusterId?: str

    resharding?: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValuesResharding


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValuesResharding:
    """
    Resharding is the status of an online resharding operation.

    Attributes
    ----------
    slotMigration : CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValuesReshardingSlotMigration, default is Undefined, required
        slot migration
    """


    slotMigration: CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValuesReshardingSlotMigration


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusAtProviderPendingModifiedValuesReshardingSlotMigration:
    """
    Represents the progress of an online resharding operation.

    Attributes
    ----------
    progressPercentage : int, default is Undefined, required
        ProgressPercentage is the percentage of the slot migration that is complete.
    """


    progressPercentage: int


schema CacheAwsCrossplaneIoV1beta1ReplicationGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


