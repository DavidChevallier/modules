"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Queue:
    """
    A Queue is a managed resource that represents a AWS Simple Queue

    Attributes
    ----------
    apiVersion : str, default is "sqs.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Queue", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SqsAwsCrossplaneIoV1beta1QueueSpec, default is Undefined, required
        spec
    status : SqsAwsCrossplaneIoV1beta1QueueStatus, default is Undefined, optional
        status
    """


    apiVersion: "sqs.aws.crossplane.io/v1beta1" = "sqs.aws.crossplane.io/v1beta1"

    kind: "Queue" = "Queue"

    metadata?: v1.ObjectMeta

    spec: SqsAwsCrossplaneIoV1beta1QueueSpec

    status?: SqsAwsCrossplaneIoV1beta1QueueStatus


schema SqsAwsCrossplaneIoV1beta1QueueSpec:
    """
    QueueSpec defines the desired state of a Queue.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : SqsAwsCrossplaneIoV1beta1QueueSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : SqsAwsCrossplaneIoV1beta1QueueSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : SqsAwsCrossplaneIoV1beta1QueueSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SqsAwsCrossplaneIoV1beta1QueueSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SqsAwsCrossplaneIoV1beta1QueueSpecForProvider

    providerConfigRef?: SqsAwsCrossplaneIoV1beta1QueueSpecProviderConfigRef

    providerRef?: SqsAwsCrossplaneIoV1beta1QueueSpecProviderRef

    publishConnectionDetailsTo?: SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SqsAwsCrossplaneIoV1beta1QueueSpecWriteConnectionSecretToRef


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProvider:
    """
    QueueParameters define the desired state of an AWS Queue

    Attributes
    ----------
    contentBasedDeduplication : bool, default is Undefined, optional
        ContentBasedDeduplication - Enables content-based deduplication. Valid values: true, false. For more information, see Exactly-Once Processing (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing) in the Amazon Simple Queue Service Developer Guide. Every message must have a unique MessageDeduplicationId, You may provide a MessageDeduplicationId explicitly. If you aren't able to provide a MessageDeduplicationId and you enable ContentBasedDeduplication for your queue, Amazon SQS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message). If you don't provide a MessageDeduplicationId and the queue doesn't have ContentBasedDeduplication set, the action fails with an error. If the queue has ContentBasedDeduplication set, your MessageDeduplicationId overrides the generated one. When ContentBasedDeduplication is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered. If you send one message with ContentBasedDeduplication enabled and then another message with a MessageDeduplicationId that is the same as the one generated for the first MessageDeduplicationId, the two messages are treated as duplicates and only one copy of the message is delivered.
    delaySeconds : int, default is Undefined, optional
        DelaySeconds - The length of time, in seconds, for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). Default: 0.
    fifoQueue : bool, default is Undefined, optional
        FIFOQueue - Designates a queue as FIFO. Valid values: true, false. If you don't specify the FifoQueue attribute, Amazon SQS creates a standard queue. You can provide this attribute only during queue creation. You can't change it for an existing queue. When you set this attribute, you must also provide the MessageGroupId for your messages explicitly. For more information, see FIFO Queue Logic (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-understanding-logic) in the Amazon Simple Queue Service Developer Guide.
    kmsDataKeyReusePeriodSeconds : int, default is Undefined, optional
        KMSDataKeyReusePeriodSeconds - The length of time, in seconds, for which Amazon SQS can reuse a data key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys) to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). Default: 300 (5 minutes). A shorter time period provides better security but results in more calls to KMS which might incur charges after Free Tier. For more information, see How Does the Data Key Reuse Period Work? (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work). Applies only to server-side-encryption (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html):
    kmsMasterKeyId : str, default is Undefined, optional
        KMSMasterKeyID - The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms). While the alias of the AWS-managed CMK for Amazon SQS is always alias/aws/sqs, the alias of a custom CMK can, for example, be alias/MyAlias . For more examples, see KeyId (https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the AWS Key Management Service API Reference. Applies only to server-side-encryption (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html):
    kmsMasterKeyIdRef : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDRef, default is Undefined, optional
        kms master key Id ref
    kmsMasterKeyIdSelector : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDSelector, default is Undefined, optional
        kms master key Id selector
    maximumMessageSize : int, default is Undefined, optional
        MaximumMessageSize is the limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB). Default: 262,144 (256 KiB).
    messageRetentionPeriod : int, default is Undefined, optional
        MessageRetentionPeriod - The length of time, in seconds, for which Amazon SQS retains a message. Valid values: An integer representing seconds, from 60 (1 minute) to 1,209,600 (14 days). Default: 345,600 (4 days).
    policy : str, default is Undefined, optional
        The queue's policy. A valid AWS policy. For more information about policy structure, see Overview of AWS IAM Policies (https://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html) in the Amazon IAM User Guide.
    receiveMessageWaitTimeSeconds : int, default is Undefined, optional
        ReceiveMessageWaitTimeSeconds - The length of time, in seconds, for which a ReceiveMessage action waits for a message to arrive. Valid values: an integer from 0 to 20 (seconds). Default: 0.
    redrivePolicy : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicy, default is Undefined, optional
        redrive policy
    region : str, default is Undefined, required
        Region is the region you'd like your Queue to be created in.
    tags : {str:str}, default is Undefined, optional
        Tags add cost allocation tags to the specified Amazon SQS queue.
    visibilityTimeout : int, default is Undefined, optional
        VisibilityTimeout - The visibility timeout for the queue, in seconds. Valid values: an integer from 0 to 43,200 (12 hours). Default: 30. For more information about the visibility timeout, see Visibility Timeout (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html) in the Amazon Simple Queue Service Developer Guide.
    """


    contentBasedDeduplication?: bool

    delaySeconds?: int

    fifoQueue?: bool

    kmsDataKeyReusePeriodSeconds?: int

    kmsMasterKeyId?: str

    kmsMasterKeyIdRef?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDRef

    kmsMasterKeyIdSelector?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDSelector

    maximumMessageSize?: int

    messageRetentionPeriod?: int

    policy?: str

    receiveMessageWaitTimeSeconds?: int

    redrivePolicy?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicy

    region: str

    tags?: {str:str}

    visibilityTimeout?: int


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDRefPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDSelectorPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderKmsMasterKeyIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicy:
    """
    RedrivePolicy includes the parameters for the dead-letter queue functionality of the source queue. For more information about the redrive policy and dead-letter queues, see Using Amazon SQS Dead-Letter Queues (https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html) in the Amazon Simple Queue Service Developer Guide

    Attributes
    ----------
    deadLetterTargetArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of maxReceiveCount is exceeded.
    deadLetterTargetArnRef : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnRef, default is Undefined, optional
        dead letter target arn ref
    deadLetterTargetArnSelector : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnSelector, default is Undefined, optional
        dead letter target arn selector
    maxReceiveCount : int, default is Undefined, required
        The number of times a message is delivered to the source queue before being moved to the dead-letter queue.
    """


    deadLetterTargetArn?: str

    deadLetterTargetArnRef?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnRef

    deadLetterTargetArnSelector?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnSelector

    maxReceiveCount: int


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnRef:
    """
    DeadLetterTargetARNRef reference a Queue to retrieve its ARN.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnRefPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnSelector:
    """
    DeadLetterTargetARNSelector selects reference to a Queue to retrieve its ARN

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnSelectorPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecForProviderRedrivePolicyDeadLetterTargetArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecProviderConfigRefPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecProviderRefPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef

    metadata?: SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToMetadata

    name: str


schema SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy


schema SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsCrossplaneIoV1beta1QueueSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SqsAwsCrossplaneIoV1beta1QueueSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SqsAwsCrossplaneIoV1beta1QueueStatus:
    """
    QueueStatus represents the observed state of a Queue.

    Attributes
    ----------
    atProvider : SqsAwsCrossplaneIoV1beta1QueueStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SqsAwsCrossplaneIoV1beta1QueueStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: SqsAwsCrossplaneIoV1beta1QueueStatusAtProvider

    conditions?: [SqsAwsCrossplaneIoV1beta1QueueStatusConditionsItems0]


schema SqsAwsCrossplaneIoV1beta1QueueStatusAtProvider:
    """
    QueueObservation is the representation of the current state that is observed

    Attributes
    ----------
    approximateNumberOfMessages : int, default is Undefined, optional
        ApproximateNumberOfMessages - The approximate number of messages available for retrieval from the queue.
    approximateNumberOfMessagesDelayed : int, default is Undefined, optional
        ApproximateNumberOfMessagesDelayed - The approximate number of messages in the queue that are delayed and not available for reading immediately. This can happen when the queue is configured as a delay queue or when a message has been sent with a delay parameter.
    approximateNumberOfMessagesNotVisible : int, default is Undefined, optional
        ApproximateNumberOfMessagesNotVisible - The approximate number of messages that are in flight. Messages are considered to be in flight if they have been sent to a client but have not yet been deleted or have not yet reached the end of their visibility window.
    arn : str, default is Undefined, optional
        The Amazon resource name (ARN) of the queue.
    createdTimestamp : str, default is Undefined, optional
        CreatedTimestamp is the time when the queue was created
    lastModifiedTimestamp : str, default is Undefined, optional
        LastModifiedTimestamp - Returns the time when the queue was last changed.
    url : str, default is Undefined, optional
        The URL of the created Amazon SQS queue.
    """


    approximateNumberOfMessages?: int

    approximateNumberOfMessagesDelayed?: int

    approximateNumberOfMessagesNotVisible?: int

    arn?: str

    createdTimestamp?: str

    lastModifiedTimestamp?: str

    url?: str


schema SqsAwsCrossplaneIoV1beta1QueueStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


