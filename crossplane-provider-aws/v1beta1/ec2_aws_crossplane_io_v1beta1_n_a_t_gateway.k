"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NATGateway:
    """
    A NATGateway is a managed resource that represents an AWS VPC NAT Gateway.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NATGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1beta1NATGatewaySpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1beta1NATGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1beta1" = "ec2.aws.crossplane.io/v1beta1"

    kind: "NATGateway" = "NATGateway"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1beta1NATGatewaySpec

    status?: Ec2AwsCrossplaneIoV1beta1NATGatewayStatus


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpec:
    """
    NATGatewaySpec defines the desired state of a NAT Gateway

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProvider:
    """
    NATGatewayParameters defined the desired state of an AWS VPC NAT Gateway

    Attributes
    ----------
    allocationId : str, default is Undefined, optional
        AllocationID is the Elastic IP allocation ID
    allocationIdRef : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDRef, default is Undefined, optional
        allocation Id ref
    allocationIdSelector : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDSelector, default is Undefined, optional
        allocation Id selector
    connectivityType : str, default is Undefined, optional
        Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.
    region : str, default is Undefined, required
        Region is the region you'd like your NATGateway to be created in.
    subnetId : str, default is Undefined, optional
        SubnetID is the subnet the NAT gateways needs to be associated to
    subnetIdRef : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : [Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderTagsItems0], default is Undefined, optional
        Tags represents to current ec2 tags.
    """


    allocationId?: str

    allocationIdRef?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDRef

    allocationIdSelector?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDSelector

    connectivityType?: "public" | "private"

    region: str

    subnetId?: str

    subnetIdRef?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDSelector

    tags?: [Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderTagsItems0]


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDRef:
    """
    AllocationIDRef references an EIP and retrieves it's allocation id

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDSelector:
    """
    AllocationIDSelector references an EIP by selector and retrieves it's allocation id

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderAllocationIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDRef:
    """
    SubnetIDRef references a subnet and retrives it's subnet id

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDSelector:
    """
    SubnetIDSelector references a subnet by selector and retrives it's subnet id

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderSubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecForProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1beta1NATGatewaySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1beta1NATGatewayStatus:
    """
    NATGatewayStatus describes the observed state

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1beta1NATGatewayStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1beta1NATGatewayStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1beta1NATGatewayStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1beta1NATGatewayStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1beta1NATGatewayStatusAtProvider:
    """
    NATGatewayObservation keeps the state for the CR

    Attributes
    ----------
    createTime : str, default is Undefined, optional
        create time
    deleteTime : str, default is Undefined, optional
        delete time
    failureCode : str, default is Undefined, optional
        failure code
    failureMessage : str, default is Undefined, optional
        failure message
    natGatewayAddresses : [Ec2AwsCrossplaneIoV1beta1NATGatewayStatusAtProviderNatGatewayAddressesItems0], default is Undefined, optional
        nat gateway addresses
    natGatewayId : str, default is Undefined, optional
        nat gateway Id
    state : str, default is Undefined, optional
        state
    vpcId : str, default is Undefined, optional
        vpc Id
    """


    createTime?: str

    deleteTime?: str

    failureCode?: str

    failureMessage?: str

    natGatewayAddresses?: [Ec2AwsCrossplaneIoV1beta1NATGatewayStatusAtProviderNatGatewayAddressesItems0]

    natGatewayId?: str

    state?: str

    vpcId?: str


schema Ec2AwsCrossplaneIoV1beta1NATGatewayStatusAtProviderNatGatewayAddressesItems0:
    """
    NATGatewayAddress describes the details of network

    Attributes
    ----------
    allocationId : str, default is Undefined, optional
        allocation Id
    networkInterfaceId : str, default is Undefined, optional
        network interface Id
    privateIp : str, default is Undefined, optional
        private Ip
    publicIp : str, default is Undefined, optional
        public Ip
    """


    allocationId?: str

    networkInterfaceId?: str

    privateIp?: str

    publicIp?: str


schema Ec2AwsCrossplaneIoV1beta1NATGatewayStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


