"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecurityGroup:
    """
    A SecurityGroup is a managed resource that represents an AWS VPC Security Group.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecurityGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1beta1SecurityGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1beta1" = "ec2.aws.crossplane.io/v1beta1"

    kind: "SecurityGroup" = "SecurityGroup"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpec

    status?: Ec2AwsCrossplaneIoV1beta1SecurityGroupStatus


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpec:
    """
    A SecurityGroupSpec defines the desired state of a SecurityGroup.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProvider:
    """
    SecurityGroupParameters define the desired state of an AWS VPC Security Group.

    Attributes
    ----------
    description : str, default is Undefined, required
        A description of the security group.
    egress : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0], default is Undefined, optional
        [EC2-VPC] One or more outbound rules associated with the security group.
    groupName : str, default is Undefined, required
        The name of the security group.
    ignoreEgress : bool, default is Undefined, optional
        Dont manage the egress settings for the created resource
    ignoreIngress : bool, default is Undefined, optional
        Dont manage the ingress settings for the created resource
    ingress : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0], default is Undefined, optional
        One or more inbound rules associated with the security group.
    region : str, default is Undefined, optional
        Region is the region you'd like your SecurityGroup to be created in.
    tags : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderTagsItems0], default is Undefined, optional
        Tags represents to current ec2 tags.
    vpcId : str, default is Undefined, optional
        VPCID is the ID of the VPC.
    vpcIdRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    description: str

    egress?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0]

    groupName: str

    ignoreEgress?: bool

    ignoreIngress?: bool

    ingress?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0]

    region?: str

    tags?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderTagsItems0]

    vpcId?: str

    vpcIdRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDRef

    vpcIdSelector?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDSelector


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0:
    """
    IPPermission Describes a set of permissions for a security group rule.

    Attributes
    ----------
    fromPort : int, default is Undefined, optional
        The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    ipProtocol : str, default is Undefined, required
        The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). 
         [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
    ipRanges : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0IPRangesItems0], default is Undefined, optional
        The IPv4 ranges.
    ipv6Ranges : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0IPV6RangesItems0], default is Undefined, optional
        The IPv6 ranges. 
         [VPC only]
    prefixListIds : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0PrefixListIdsItems0], default is Undefined, optional
        PrefixListIDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group. 
         [VPC only]
    toPort : int, default is Undefined, optional
        The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    userIdGroupPairs : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0], default is Undefined, optional
        UserIDGroupPairs are the source security group and AWS account ID pairs. It contains one or more accounts and security groups to allow flows from security groups of other accounts.
    """


    fromPort?: int

    ipProtocol: str

    ipRanges?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0IPRangesItems0]

    ipv6Ranges?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0IPV6RangesItems0]

    prefixListIds?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0PrefixListIdsItems0]

    toPort?: int

    userIdGroupPairs?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0]


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0IPRangesItems0:
    """
    IPRange describes an IPv4 range.

    Attributes
    ----------
    cidrIp : str, default is Undefined, required
        The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
    description : str, default is Undefined, optional
        A description for the security group rule that references this IPv4 address range. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
    """


    cidrIp: str

    description?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0IPV6RangesItems0:
    """
    IPv6Range describes an IPv6 range.

    Attributes
    ----------
    cidrIPv6 : str, default is Undefined, required
        The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
    description : str, default is Undefined, optional
        A description for the security group rule that references this IPv6 address range. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
    """


    cidrIPv6: str

    description?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0PrefixListIdsItems0:
    """
    PrefixListID describes a prefix list ID.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the security group rule that references this prefix list ID. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
    prefixListId : str, default is Undefined, required
        The ID of the prefix.
    """


    description?: str

    prefixListId: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0:
    """
    UserIDGroupPair describes a security group and AWS account ID pair.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the security group rule that references this user ID group pair. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
    groupId : str, default is Undefined, optional
        The ID of the security group.
    groupIdRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDSelector, default is Undefined, optional
        group Id selector
    groupName : str, default is Undefined, optional
        The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. 
         For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.
    userId : str, default is Undefined, optional
        The ID of an AWS account. 
         For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned. 
         [EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.
    vpcId : str, default is Undefined, optional
        The ID of the VPC for the referenced security group, if applicable.
    vpcIdRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    vpcPeeringConnectionId : str, default is Undefined, optional
        The ID of the VPC peering connection, if applicable.
    """


    description?: str

    groupId?: str

    groupIdRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDRef

    groupIdSelector?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDSelector

    groupName?: str

    userId?: str

    vpcId?: str

    vpcIdRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDRef

    vpcIdSelector?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDSelector

    vpcPeeringConnectionId?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDRef:
    """
    GroupIDRef reference a security group to retrieve its GroupID

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDSelector:
    """
    GroupIDSelector selects reference to a security group to retrieve its GroupID

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0GroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDRef:
    """
    VPCIDRef reference a VPC to retrieve its vpcId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDSelector:
    """
    VPCIDSelector selects reference to a VPC to retrieve its vpcId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderEgressItems0UserIDGroupPairsItems0VpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0:
    """
    IPPermission Describes a set of permissions for a security group rule.

    Attributes
    ----------
    fromPort : int, default is Undefined, optional
        The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    ipProtocol : str, default is Undefined, required
        The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). 
         [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
    ipRanges : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0IPRangesItems0], default is Undefined, optional
        The IPv4 ranges.
    ipv6Ranges : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0IPV6RangesItems0], default is Undefined, optional
        The IPv6 ranges. 
         [VPC only]
    prefixListIds : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0PrefixListIdsItems0], default is Undefined, optional
        PrefixListIDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group. 
         [VPC only]
    toPort : int, default is Undefined, optional
        The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
    userIdGroupPairs : [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0], default is Undefined, optional
        UserIDGroupPairs are the source security group and AWS account ID pairs. It contains one or more accounts and security groups to allow flows from security groups of other accounts.
    """


    fromPort?: int

    ipProtocol: str

    ipRanges?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0IPRangesItems0]

    ipv6Ranges?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0IPV6RangesItems0]

    prefixListIds?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0PrefixListIdsItems0]

    toPort?: int

    userIdGroupPairs?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0]


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0IPRangesItems0:
    """
    IPRange describes an IPv4 range.

    Attributes
    ----------
    cidrIp : str, default is Undefined, required
        The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
    description : str, default is Undefined, optional
        A description for the security group rule that references this IPv4 address range. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
    """


    cidrIp: str

    description?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0IPV6RangesItems0:
    """
    IPv6Range describes an IPv6 range.

    Attributes
    ----------
    cidrIPv6 : str, default is Undefined, required
        The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
    description : str, default is Undefined, optional
        A description for the security group rule that references this IPv6 address range. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
    """


    cidrIPv6: str

    description?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0PrefixListIdsItems0:
    """
    PrefixListID describes a prefix list ID.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the security group rule that references this prefix list ID. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
    prefixListId : str, default is Undefined, required
        The ID of the prefix.
    """


    description?: str

    prefixListId: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0:
    """
    UserIDGroupPair describes a security group and AWS account ID pair.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the security group rule that references this user ID group pair. 
         Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
    groupId : str, default is Undefined, optional
        The ID of the security group.
    groupIdRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDRef, default is Undefined, optional
        group Id ref
    groupIdSelector : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDSelector, default is Undefined, optional
        group Id selector
    groupName : str, default is Undefined, optional
        The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. 
         For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.
    userId : str, default is Undefined, optional
        The ID of an AWS account. 
         For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned. 
         [EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.
    vpcId : str, default is Undefined, optional
        The ID of the VPC for the referenced security group, if applicable.
    vpcIdRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    vpcPeeringConnectionId : str, default is Undefined, optional
        The ID of the VPC peering connection, if applicable.
    """


    description?: str

    groupId?: str

    groupIdRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDRef

    groupIdSelector?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDSelector

    groupName?: str

    userId?: str

    vpcId?: str

    vpcIdRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDRef

    vpcIdSelector?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDSelector

    vpcPeeringConnectionId?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDRef:
    """
    GroupIDRef reference a security group to retrieve its GroupID

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDSelector:
    """
    GroupIDSelector selects reference to a security group to retrieve its GroupID

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0GroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDRef:
    """
    VPCIDRef reference a VPC to retrieve its vpcId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDSelector:
    """
    VPCIDSelector selects reference to a VPC to retrieve its vpcId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderIngressItems0UserIDGroupPairsItems0VpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderTagsItems0:
    """
    Tag defines a tag

    Attributes
    ----------
    key : str, default is Undefined, required
        Key is the name of the tag.
    value : str, default is Undefined, required
        Value is the value of the tag.
    """


    key: str

    value: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDRef:
    """
    VPCIDRef references a VPC to and retrieves its vpcId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDSelector:
    """
    VPCIDSelector selects a reference to a VPC to and retrieves its vpcId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecForProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupStatus:
    """
    A SecurityGroupStatus represents the observed state of a SecurityGroup.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1beta1SecurityGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1beta1SecurityGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1beta1SecurityGroupStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1beta1SecurityGroupStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupStatusAtProvider:
    """
    SecurityGroupObservation keeps the state for the external resource

    Attributes
    ----------
    ownerId : str, default is Undefined, required
        The AWS account ID of the owner of the security group.
    securityGroupID : str, default is Undefined, required
        SecurityGroupID is the ID of the SecurityGroup.
    """


    ownerId: str

    securityGroupID: str


schema Ec2AwsCrossplaneIoV1beta1SecurityGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


