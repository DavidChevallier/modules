"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema User:
    """
    An User is a managed resource that represents an AWS IAM User.

    Attributes
    ----------
    apiVersion : str, default is "iam.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "User", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IamAwsCrossplaneIoV1beta1UserSpec, default is Undefined, required
        spec
    status : IamAwsCrossplaneIoV1beta1UserStatus, default is Undefined, optional
        status
    """


    apiVersion: "iam.aws.crossplane.io/v1beta1" = "iam.aws.crossplane.io/v1beta1"

    kind: "User" = "User"

    metadata?: v1.ObjectMeta

    spec: IamAwsCrossplaneIoV1beta1UserSpec

    status?: IamAwsCrossplaneIoV1beta1UserStatus


schema IamAwsCrossplaneIoV1beta1UserSpec:
    """
    An UserSpec defines the desired state of an IAM User.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : IamAwsCrossplaneIoV1beta1UserSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : IamAwsCrossplaneIoV1beta1UserSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : IamAwsCrossplaneIoV1beta1UserSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IamAwsCrossplaneIoV1beta1UserSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IamAwsCrossplaneIoV1beta1UserSpecForProvider

    providerConfigRef?: IamAwsCrossplaneIoV1beta1UserSpecProviderConfigRef

    providerRef?: IamAwsCrossplaneIoV1beta1UserSpecProviderRef

    publishConnectionDetailsTo?: IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IamAwsCrossplaneIoV1beta1UserSpecWriteConnectionSecretToRef


schema IamAwsCrossplaneIoV1beta1UserSpecForProvider:
    """
    UserParameters define the desired state of an AWS IAM User.

    Attributes
    ----------
    path : str, default is Undefined, optional
        The path for the user name.
    permissionsBoundary : str, default is Undefined, optional
        The ARN of the policy that is used to set the permissions boundary for the user.
    tags : [IamAwsCrossplaneIoV1beta1UserSpecForProviderTagsItems0], default is Undefined, optional
        A list of tags that you want to attach to the newly created user.
    """


    path?: str

    permissionsBoundary?: str

    tags?: [IamAwsCrossplaneIoV1beta1UserSpecForProviderTagsItems0]


schema IamAwsCrossplaneIoV1beta1UserSpecForProviderTagsItems0:
    """
    Tag represents user-provided metadata that can be associated with a IAM role. For more information about tagging, see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.
    value : str, default is Undefined, optional
        The value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources, Accounting, and Support. Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values. 
         AWS always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.
    """


    key: str

    value?: str


schema IamAwsCrossplaneIoV1beta1UserSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamAwsCrossplaneIoV1beta1UserSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamAwsCrossplaneIoV1beta1UserSpecProviderConfigRefPolicy


schema IamAwsCrossplaneIoV1beta1UserSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamAwsCrossplaneIoV1beta1UserSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamAwsCrossplaneIoV1beta1UserSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamAwsCrossplaneIoV1beta1UserSpecProviderRefPolicy


schema IamAwsCrossplaneIoV1beta1UserSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToConfigRef

    metadata?: IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToMetadata

    name: str


schema IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToConfigRefPolicy


schema IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamAwsCrossplaneIoV1beta1UserSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IamAwsCrossplaneIoV1beta1UserSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IamAwsCrossplaneIoV1beta1UserStatus:
    """
    An UserStatus represents the observed state of an IAM User.

    Attributes
    ----------
    atProvider : IamAwsCrossplaneIoV1beta1UserStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IamAwsCrossplaneIoV1beta1UserStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: IamAwsCrossplaneIoV1beta1UserStatusAtProvider

    conditions?: [IamAwsCrossplaneIoV1beta1UserStatusConditionsItems0]


schema IamAwsCrossplaneIoV1beta1UserStatusAtProvider:
    """
    UserObservation keeps the state for the external resource

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the user.
    userId : str, default is Undefined, optional
        The stable and unique string identifying the user.
    """


    arn?: str

    userId?: str


schema IamAwsCrossplaneIoV1beta1UserStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


