"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Role:
    """
    An Role is a managed resource that represents an AWS IAM Role.

    Attributes
    ----------
    apiVersion : str, default is "iam.aws.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Role", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IamAwsCrossplaneIoV1beta1RoleSpec, default is Undefined, required
        spec
    status : IamAwsCrossplaneIoV1beta1RoleStatus, default is Undefined, optional
        status
    """


    apiVersion: "iam.aws.crossplane.io/v1beta1" = "iam.aws.crossplane.io/v1beta1"

    kind: "Role" = "Role"

    metadata?: v1.ObjectMeta

    spec: IamAwsCrossplaneIoV1beta1RoleSpec

    status?: IamAwsCrossplaneIoV1beta1RoleStatus


schema IamAwsCrossplaneIoV1beta1RoleSpec:
    """
    An RoleSpec defines the desired state of an Role.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : IamAwsCrossplaneIoV1beta1RoleSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : IamAwsCrossplaneIoV1beta1RoleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : IamAwsCrossplaneIoV1beta1RoleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IamAwsCrossplaneIoV1beta1RoleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IamAwsCrossplaneIoV1beta1RoleSpecForProvider

    providerConfigRef?: IamAwsCrossplaneIoV1beta1RoleSpecProviderConfigRef

    providerRef?: IamAwsCrossplaneIoV1beta1RoleSpecProviderRef

    publishConnectionDetailsTo?: IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IamAwsCrossplaneIoV1beta1RoleSpecWriteConnectionSecretToRef


schema IamAwsCrossplaneIoV1beta1RoleSpecForProvider:
    """
    RoleParameters define the desired state of an AWS IAM Role.

    Attributes
    ----------
    assumeRolePolicyDocument : str, default is Undefined, required
        AssumeRolePolicyDocument is the the trust relationship policy document that grants an entity permission to assume the role.
    description : str, default is Undefined, optional
        Description is a description of the role.
    maxSessionDuration : int, default is Undefined, optional
        MaxSessionDuration is the duration (in seconds) that you want to set for the specified role. The default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours. Default: 3600
    path : str, default is Undefined, optional
        Path is the path to the role. Default: /
    permissionsBoundary : str, default is Undefined, optional
        PermissionsBoundary is the ARN of the policy that is used to set the permissions boundary for the role.
    tags : [IamAwsCrossplaneIoV1beta1RoleSpecForProviderTagsItems0], default is Undefined, optional
        Tags. For more information about tagging, see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide.
    """


    assumeRolePolicyDocument: str

    description?: str

    maxSessionDuration?: int

    path?: str

    permissionsBoundary?: str

    tags?: [IamAwsCrossplaneIoV1beta1RoleSpecForProviderTagsItems0]


schema IamAwsCrossplaneIoV1beta1RoleSpecForProviderTagsItems0:
    """
    Tag represents user-provided metadata that can be associated with a IAM role. For more information about tagging, see Tagging IAM Identities (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the IAM User Guide.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key name that can be used to look up or retrieve the associated value. For example, Department or Cost Center are common choices.
    value : str, default is Undefined, optional
        The value associated with this tag. For example, tags with a key name of Department could have values such as Human Resources, Accounting, and Support. Tags with a key name of Cost Center might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values. 
         AWS always interprets the tag Value as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.
    """


    key: str

    value?: str


schema IamAwsCrossplaneIoV1beta1RoleSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamAwsCrossplaneIoV1beta1RoleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamAwsCrossplaneIoV1beta1RoleSpecProviderConfigRefPolicy


schema IamAwsCrossplaneIoV1beta1RoleSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamAwsCrossplaneIoV1beta1RoleSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamAwsCrossplaneIoV1beta1RoleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamAwsCrossplaneIoV1beta1RoleSpecProviderRefPolicy


schema IamAwsCrossplaneIoV1beta1RoleSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToConfigRef

    metadata?: IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToMetadata

    name: str


schema IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToConfigRefPolicy


schema IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IamAwsCrossplaneIoV1beta1RoleSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IamAwsCrossplaneIoV1beta1RoleSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IamAwsCrossplaneIoV1beta1RoleStatus:
    """
    An RoleStatus represents the observed state of an Role.

    Attributes
    ----------
    atProvider : IamAwsCrossplaneIoV1beta1RoleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IamAwsCrossplaneIoV1beta1RoleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: IamAwsCrossplaneIoV1beta1RoleStatusAtProvider

    conditions?: [IamAwsCrossplaneIoV1beta1RoleStatusConditionsItems0]


schema IamAwsCrossplaneIoV1beta1RoleStatusAtProvider:
    """
    RoleExternalStatus keeps the state for the external resource

    Attributes
    ----------
    arn : str, default is Undefined, required
        ARN is the Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see IAM Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the IAM User Guide guide.
    roleID : str, default is Undefined, required
        RoleID is the stable and unique string identifying the role. For more information about IDs, see IAM Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the Using IAM guide.
    """


    arn: str

    roleID: str


schema IamAwsCrossplaneIoV1beta1RoleStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


