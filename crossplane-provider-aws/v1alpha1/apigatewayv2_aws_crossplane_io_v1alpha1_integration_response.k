"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IntegrationResponse:
    """
    IntegrationResponse is the Schema for the IntegrationResponses API

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IntegrationResponse", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.crossplane.io/v1alpha1" = "apigatewayv2.aws.crossplane.io/v1alpha1"

    kind: "IntegrationResponse" = "IntegrationResponse"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpec

    status?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatus


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpec:
    """
    IntegrationResponseSpec defines the desired state of IntegrationResponse

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProvider

    providerConfigRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderConfigRef

    providerRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderRef

    publishConnectionDetailsTo?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProvider:
    """
    IntegrationResponseParameters defines the desired state of IntegrationResponse

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        APIID is the ID for the API.
    apiIdRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    contentHandlingStrategy : str, default is Undefined, optional
        content handling strategy
    integrationId : str, default is Undefined, optional
        IntegrationID is the ID for the Integration.
    integrationIdRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDRef, default is Undefined, optional
        integration Id ref
    integrationIdSelector : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDSelector, default is Undefined, optional
        integration Id selector
    integrationResponseKey : str, default is Undefined, required
        integration response key
    region : str, default is Undefined, required
        Region is which region the IntegrationResponse will be created.
    responseParameters : {str:str}, default is Undefined, optional
        response parameters
    responseTemplates : {str:str}, default is Undefined, optional
        response templates
    templateSelectionExpression : str, default is Undefined, optional
        template selection expression
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDSelector

    contentHandlingStrategy?: str

    integrationId?: str

    integrationIdRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDRef

    integrationIdSelector?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDSelector

    integrationResponseKey: str

    region: str

    responseParameters?: {str:str}

    responseTemplates?: {str:str}

    templateSelectionExpression?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDRef:
    """
    APIIDRef is a reference to an API used to set the APIID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDSelector:
    """
    APIIDSelector selects references to API used to set the APIID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderAPIIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDRef:
    """
    IntegrationIDRef is a reference to an Integration used to set the IntegrationID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDSelector:
    """
    IntegrationIDSelector selects references to Integration used to set the IntegrationID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDSelectorPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecForProviderIntegrationIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatus:
    """
    IntegrationResponseStatus defines the observed state of IntegrationResponse.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatusAtProvider

    conditions?: [Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatusConditionsItems0]


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatusAtProvider:
    """
    IntegrationResponseObservation defines the observed state of IntegrationResponse

    Attributes
    ----------
    integrationResponseID : str, default is Undefined, optional
        integration response ID
    """


    integrationResponseID?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationResponseStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


