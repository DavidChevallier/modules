"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UserPoolClient:
    """
    UserPoolClient is the Schema for the UserPoolClients API

    Attributes
    ----------
    apiVersion : str, default is "cognitoidentityprovider.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UserPoolClient", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpec, default is Undefined, required
        spec
    status : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatus, default is Undefined, optional
        status
    """


    apiVersion: "cognitoidentityprovider.aws.crossplane.io/v1alpha1" = "cognitoidentityprovider.aws.crossplane.io/v1alpha1"

    kind: "UserPoolClient" = "UserPoolClient"

    metadata?: v1.ObjectMeta

    spec: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpec

    status?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatus


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpec:
    """
    UserPoolClientSpec defines the desired state of UserPoolClient

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProvider

    providerConfigRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderConfigRef

    providerRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderRef

    publishConnectionDetailsTo?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecWriteConnectionSecretToRef


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProvider:
    """
    UserPoolClientParameters defines the desired state of UserPoolClient

    Attributes
    ----------
    accessTokenValidity : int, default is Undefined, optional
        The time limit, between 5 minutes and 1 day, after which the access token is no longer valid and can't be used. If you supply a TokenValidityUnits value, you will override the default time unit.
    allowedOAuthFlows : [str], default is Undefined, optional
        The allowed OAuth flows. 
         Set to code to initiate a code grant flow, which provides an authorization code as the response. This code can be exchanged for access tokens with the token endpoint. 
         Set to implicit to specify that the client should get the access token (and, optionally, ID token, based on scopes) directly. 
         Set to client_credentials to specify that the client should get the access token (and, optionally, ID token, based on scopes) from the token endpoint using a combination of client and client_secret.
    allowedOAuthFlowsUserPoolClient : bool, default is Undefined, optional
        Set to true if the client is allowed to follow the OAuth protocol when interacting with Amazon Cognito user pools.
    allowedOAuthScopes : [str], default is Undefined, optional
        The allowed OAuth scopes. Possible values provided by OAuth are: phone, email, openid, and profile. Possible values provided by Amazon Web Services are: aws.cognito.signin.user.admin. Custom scopes created in Resource Servers are also supported.
    analyticsConfiguration : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderAnalyticsConfiguration, default is Undefined, optional
        analytics configuration
    callbackURLs : [str], default is Undefined, optional
        A list of allowed redirect (callback) URLs for the identity providers. 
         A redirect URI must: 
         * Be an absolute URI. 
         * Be registered with the authorization server. 
         * Not include a fragment component. 
         See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2). 
         Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes only. 
         App callback URLs such as myapp://example are also supported.
    clientName : str, default is Undefined, required
        The client name for the user pool client you would like to create.
    defaultRedirectURI : str, default is Undefined, optional
        The default redirect URI. Must be in the CallbackURLs list. 
         A redirect URI must: 
         * Be an absolute URI. 
         * Be registered with the authorization server. 
         * Not include a fragment component. 
         See OAuth 2.0 - Redirection Endpoint (https://tools.ietf.org/html/rfc6749#section-3.1.2). 
         Amazon Cognito requires HTTPS over HTTP except for http://localhost for testing purposes only. 
         App callback URLs such as myapp://example are also supported.
    enableTokenRevocation : bool, default is Undefined, optional
        Activates or deactivates token revocation. For more information about revoking tokens, see RevokeToken (https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_RevokeToken.html). 
         If you don't include this parameter, token revocation is automatically activated for the new user pool client.
    explicitAuthFlows : [str], default is Undefined, optional
        The authentication flows that are supported by the user pool clients. Flow names without the ALLOW_ prefix are no longer supported, in favor of new names with the ALLOW_ prefix. 
         Values with ALLOW_ prefix must be used only along with the ALLOW_ prefix. 
         Valid values include: 
         * ALLOW_ADMIN_USER_PASSWORD_AUTH: Enable admin based user password authentication flow ADMIN_USER_PASSWORD_AUTH. This setting replaces the ADMIN_NO_SRP_AUTH setting. With this authentication flow, Amazon Cognito receives the password in the request instead of using the Secure Remote Password (SRP) protocol to verify passwords. 
         * ALLOW_CUSTOM_AUTH: Enable Lambda trigger based authentication. 
         * ALLOW_USER_PASSWORD_AUTH: Enable user password-based authentication. In this flow, Amazon Cognito receives the password in the request instead of using the SRP protocol to verify passwords. 
         * ALLOW_USER_SRP_AUTH: Enable SRP-based authentication. 
         * ALLOW_REFRESH_TOKEN_AUTH: Enable authflow to refresh tokens.
    generateSecret : bool, default is Undefined, optional
        Boolean to specify whether you want to generate a secret for the user pool client being created.
    idTokenValidity : int, default is Undefined, optional
        The time limit, between 5 minutes and 1 day, after which the access token is no longer valid and can't be used. If you supply a TokenValidityUnits value, you will override the default time unit.
    logoutURLs : [str], default is Undefined, optional
        A list of allowed logout URLs for the identity providers.
    preventUserExistenceErrors : str, default is Undefined, optional
        Errors and responses that you want Amazon Cognito APIs to return during authentication, account confirmation, and password recovery when the user doesn't exist in the user pool. When set to ENABLED and the user doesn't exist, authentication returns an error indicating either the username or password was incorrect. Account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to LEGACY, those APIs return a UserNotFoundException exception if the user doesn't exist in the user pool. 
         Valid values include: 
         * ENABLED - This prevents user existence-related errors. 
         * LEGACY - This represents the early behavior of Amazon Cognito where user existence related errors aren't prevented.
    readAttributes : [str], default is Undefined, optional
        The read attributes.
    refreshTokenValidity : int, default is Undefined, optional
        The time limit, in days, after which the refresh token is no longer valid and can't be used.
    region : str, default is Undefined, required
        Region is which region the UserPoolClient will be created.
    supportedIdentityProviders : [str], default is Undefined, optional
        A list of provider names for the identity providers that are supported on this client. The following are supported: COGNITO, Facebook, Google and LoginWithAmazon.
    tokenValidityUnits : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderTokenValidityUnits, default is Undefined, optional
        token validity units
    userPoolId : str, default is Undefined, optional
        The user pool ID.
    userPoolIdRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    writeAttributes : [str], default is Undefined, optional
        The user pool attributes that the app client can write to. 
         If your app client allows users to sign in through an identity provider, this array must include all attributes that you have mapped to identity provider attributes. Amazon Cognito updates mapped attributes when users sign in to your application through an identity provider. If your app client does not have write access to a mapped attribute, Amazon Cognito throws an error when it tries to update the attribute. For more information, see Specifying Identity Provider Attribute Mappings for Your user pool (https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html).
    """


    accessTokenValidity?: int

    allowedOAuthFlows?: [str]

    allowedOAuthFlowsUserPoolClient?: bool

    allowedOAuthScopes?: [str]

    analyticsConfiguration?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderAnalyticsConfiguration

    callbackURLs?: [str]

    clientName: str

    defaultRedirectURI?: str

    enableTokenRevocation?: bool

    explicitAuthFlows?: [str]

    generateSecret?: bool

    idTokenValidity?: int

    logoutURLs?: [str]

    preventUserExistenceErrors?: str

    readAttributes?: [str]

    refreshTokenValidity?: int

    region: str

    supportedIdentityProviders?: [str]

    tokenValidityUnits?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderTokenValidityUnits

    userPoolId?: str

    userPoolIdRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDRef

    userPoolIdSelector?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDSelector

    writeAttributes?: [str]


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderAnalyticsConfiguration:
    """
    The user pool analytics configuration for collecting metrics and sending them to your Amazon Pinpoint campaign. 
     In Amazon Web Services Regions where Amazon Pinpoint isn't available, user pools only support sending events to Amazon Pinpoint projects in Amazon Web Services Region us-east-1. In Regions where Amazon Pinpoint is available, user pools support sending events to Amazon Pinpoint projects within that same Region.

    Attributes
    ----------
    applicationARN : str, default is Undefined, optional
        application a r n
    applicationID : str, default is Undefined, optional
        application ID
    externalID : str, default is Undefined, optional
        external ID
    roleARN : str, default is Undefined, optional
        role a r n
    userDataShared : bool, default is Undefined, optional
        user data shared
    """


    applicationARN?: str

    applicationID?: str

    externalID?: str

    roleARN?: str

    userDataShared?: bool


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderTokenValidityUnits:
    """
    The units in which the validity times are represented. Default for RefreshToken is days, and default for ID and access tokens are hours.

    Attributes
    ----------
    accessToken : str, default is Undefined, optional
        access token
    idToken : str, default is Undefined, optional
        id token
    refreshToken : str, default is Undefined, optional
        refresh token
    """


    accessToken?: str

    idToken?: str

    refreshToken?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDRef:
    """
    UserPoolIDRef is a reference to an server instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDSelector:
    """
    UserPoolIDSelector selects references to an server instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDSelectorPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecForProviderUserPoolIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToConfigRef

    metadata?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToMetadata

    name: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatus:
    """
    UserPoolClientStatus defines the observed state of UserPoolClient.

    Attributes
    ----------
    atProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatusAtProvider

    conditions?: [CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatusConditionsItems0]


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatusAtProvider:
    """
    UserPoolClientObservation defines the observed state of UserPoolClient

    Attributes
    ----------
    clientID : str, default is Undefined, optional
        The ID of the client associated with the user pool.
    clientSecret : str, default is Undefined, optional
        The client secret from the user pool request of the client type.
    creationDate : str, default is Undefined, optional
        The date the user pool client was created.
    lastModifiedDate : str, default is Undefined, optional
        The date the user pool client was last modified.
    userPoolID : str, default is Undefined, optional
        The user pool ID for the user pool client.
    """


    clientID?: str

    clientSecret?: str

    creationDate?: str

    lastModifiedDate?: str

    userPoolID?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1UserPoolClientStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


