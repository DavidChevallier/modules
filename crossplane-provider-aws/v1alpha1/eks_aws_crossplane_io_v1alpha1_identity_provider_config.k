"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IdentityProviderConfig:
    """
    An IdentityProviderConfig is a managed resource that represents an AWS Elastic Kubernetes Service IdentityProviderConfig.

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IdentityProviderConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpec, default is Undefined, required
        spec
    status : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.crossplane.io/v1alpha1" = "eks.aws.crossplane.io/v1alpha1"

    kind: "IdentityProviderConfig" = "IdentityProviderConfig"

    metadata?: v1.ObjectMeta

    spec: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpec

    status?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatus


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpec:
    """
    A IdentityProviderConfigSpec defines the desired state of an EKS identity provider.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProvider

    providerConfigRef?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderConfigRef

    providerRef?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderRef

    publishConnectionDetailsTo?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecWriteConnectionSecretToRef


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProvider:
    """
    IdentityProviderConfigParameters define the desired state of an AWS Elastic Kubernetes Service Identity Provider.

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        The name of the cluster to associate the identity provider with.
    clusterNameRef : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    oidc : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderOidc, default is Undefined, required
        oidc
    region : str, default is Undefined, required
        Region is the region you'd like the identity provider to be created in.
    tags : {str:str}, default is Undefined, optional
        The metadata to apply to the configuration to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define.
    """


    clusterName?: str

    clusterNameRef?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameRef

    clusterNameSelector?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameSelector

    oidc: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderOidc

    region: str

    tags?: {str:str}


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameRef:
    """
    ClusterNameRef is a reference to a Cluster used to set the ClusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameRefPolicy


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameSelector:
    """
    ClusterNameSelector selects references to a Cluster used to set the ClusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderClusterNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecForProviderOidc:
    """
    An object that represents an OpenID Connect (OIDC) identity provider configuration.

    Attributes
    ----------
    clientId : str, default is Undefined, required
        This is also known as audience. The ID for the client application that makes authentication requests to the OpenID identity provider.
    groupsClaim : str, default is Undefined, optional
        The JWT claim that the provider uses to return your groups.
    groupsPrefix : str, default is Undefined, optional
        The prefix that is prepended to group claims to prevent clashes with existing names (such as system: groups). For example, the value oidc: will create group names like oidc:engineering and oidc:infra.
    issuerUrl : str, default is Undefined, required
        The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens. The URL must begin with https:// and should correspond to the iss claim in the provider's OIDC ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like https://server.example.org or https://example.com. This URL should point to the level below .well-known/openid-configuration and must be publicly accessible over the internet.
    requiredClaims : {str:str}, default is Undefined, optional
        The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value. For the maximum number of claims that you can require, see Amazon EKS service quotas (https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html) in the Amazon EKS User Guide.
    usernameClaim : str, default is Undefined, optional
        The JSON Web Token (JWT) claim to use as the username. The default is sub, which is expected to be a unique identifier of the end user. You can choose other claims, such as email or name, depending on the OpenID identity provider. Claims other than email are prefixed with the issuer URL to prevent naming clashes with other plug-ins.
    usernamePrefix : str, default is Undefined, optional
        The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and username is a value other than email, the prefix defaults to issuerurl#. You can use the value - to disable all prefixing.
    """


    clientId: str

    groupsClaim?: str

    groupsPrefix?: str

    issuerUrl: str

    requiredClaims?: {str:str}

    usernameClaim?: str

    usernamePrefix?: str


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderConfigRefPolicy


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderRefPolicy


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatus:
    """
    An IdentityProviderConfigStatus represents the observed state of an EKS associated identity provider.

    Attributes
    ----------
    atProvider : EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatusAtProvider

    conditions?: [EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatusConditionsItems0]


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatusAtProvider:
    """
    IdentityProviderConfigObservation is the observed state of an identity provider.

    Attributes
    ----------
    identityProviderConfigArn : str, default is Undefined, optional
        identity provider config arn
    status : str, default is Undefined, optional
        The current status of the managed identity provider config.
    """


    identityProviderConfigArn?: str

    status?: str


schema EksAwsCrossplaneIoV1alpha1IdentityProviderConfigStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


