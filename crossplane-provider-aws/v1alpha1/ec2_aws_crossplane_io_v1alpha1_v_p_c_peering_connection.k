"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPCPeeringConnection:
    """
    VPCPeeringConnection is the Schema for the VPCPeeringConnections API

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPCPeeringConnection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "VPCPeeringConnection" = "VPCPeeringConnection"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpec

    status?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatus


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpec:
    """
    VPCPeeringConnectionSpec defines the desired state of VPCPeeringConnection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProvider:
    """
    VPCPeeringConnectionParameters defines the desired state of VPCPeeringConnection

    Attributes
    ----------
    acceptRequest : bool, default is Undefined, optional
        Automatically accepts the peering connection. If this is not set, the peering connection will be created, but will be in pending-acceptance state. This will only lead to an active connection if both VPCs are in the same tenant.
    accepterPeeringOptions : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderAccepterPeeringOptions, default is Undefined, optional
        accepter peering options
    peerOwnerID : str, default is Undefined, optional
        The Amazon Web Services account ID of the owner of the accepter VPC. 
         Default: Your Amazon Web Services account ID
    peerRegion : str, default is Undefined, optional
        The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request. 
         Default: The Region in which you make the request.
    peerVPCID : str, default is Undefined, optional
        The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
    peerVPCIDRef : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDRef, default is Undefined, optional
        peer v p c ID ref
    peerVPCIDSelector : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDSelector, default is Undefined, optional
        peer v p c ID selector
    region : str, default is Undefined, required
        Region is which region the VPCPeeringConnection will be created.
    requesterPeeringOptions : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderRequesterPeeringOptions, default is Undefined, optional
        requester peering options
    tagSpecifications : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagSpecificationsItems0], default is Undefined, optional
        The tags to assign to the peering connection.
    tags : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagsItems0], default is Undefined, optional
        Metadata tagging key value pairs
    vpcID : str, default is Undefined, optional
        The ID of the requester VPC. You must specify this parameter in the request.
    vpcIDRef : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDRef, default is Undefined, optional
        vpc ID ref
    vpcIDSelector : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc ID selector
    """


    acceptRequest?: bool

    accepterPeeringOptions?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderAccepterPeeringOptions

    peerOwnerID?: str

    peerRegion?: str

    peerVPCID?: str

    peerVPCIDRef?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDRef

    peerVPCIDSelector?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDSelector

    region: str

    requesterPeeringOptions?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderRequesterPeeringOptions

    tagSpecifications?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagSpecificationsItems0]

    tags?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagsItems0]

    vpcID?: str

    vpcIDRef?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDRef

    vpcIDSelector?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDSelector


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderAccepterPeeringOptions:
    """
    AccepterRequesterPeeringOptions describes the Accepter VPC peering connection options.

    Attributes
    ----------
    allowDNSResolutionFromRemoteVPC : bool, default is Undefined, optional
        allow DNS resolution from remote v p c
    allowEgressFromLocalClassicLinkToRemoteVPC : bool, default is Undefined, optional
        allow egress from local classic link to remote v p c
    allowEgressFromLocalVPCToRemoteClassicLink : bool, default is Undefined, optional
        allow egress from local v p c to remote classic link
    """


    allowDNSResolutionFromRemoteVPC?: bool

    allowEgressFromLocalClassicLinkToRemoteVPC?: bool

    allowEgressFromLocalVPCToRemoteClassicLink?: bool


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDRef:
    """
    PeerVPCIDRef is a reference to an API used to set the PeerVPCID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDSelector:
    """
    PeerVPCIDSelector selects references to API used to set the PeerVPCID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderPeerVPCIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderRequesterPeeringOptions:
    """
    RequesterPeeringOptions describes the Requester VPC peering connection options.

    Attributes
    ----------
    allowDNSResolutionFromRemoteVPC : bool, default is Undefined, optional
        allow DNS resolution from remote v p c
    allowEgressFromLocalClassicLinkToRemoteVPC : bool, default is Undefined, optional
        allow egress from local classic link to remote v p c
    allowEgressFromLocalVPCToRemoteClassicLink : bool, default is Undefined, optional
        allow egress from local v p c to remote classic link
    """


    allowDNSResolutionFromRemoteVPC?: bool

    allowEgressFromLocalClassicLinkToRemoteVPC?: bool

    allowEgressFromLocalVPCToRemoteClassicLink?: bool


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagSpecificationsItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection spec for provider tag specifications items0

    Attributes
    ----------
    resourceType : str, default is Undefined, optional
        resource type
    tags : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagSpecificationsItems0TagsItems0], default is Undefined, optional
        tags
    """


    resourceType?: str

    tags?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagSpecificationsItems0TagsItems0]


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagSpecificationsItems0TagsItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection spec for provider tag specifications items0 tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderTagsItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDRef:
    """
    VPCIDRef is a reference to an API used to set the VPCID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDSelector:
    """
    VPCIDSelector selects references to API used to set the VPCID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecForProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatus:
    """
    VPCPeeringConnectionStatus defines the observed state of VPCPeeringConnection.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProvider:
    """
    VPCPeeringConnectionObservation defines the observed state of VPCPeeringConnection

    Attributes
    ----------
    accepterVPCInfo : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfo, default is Undefined, optional
        accepter v p c info
    expirationTime : str, default is Undefined, optional
        The time that an unaccepted VPC peering connection will expire.
    requesterVPCInfo : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfo, default is Undefined, optional
        requester v p c info
    status : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderStatus, default is Undefined, optional
        status
    tags : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderTagsItems0], default is Undefined, optional
        Any tags assigned to the resource.
    vpcPeeringConnectionID : str, default is Undefined, optional
        The ID of the VPC peering connection.
    """


    accepterVPCInfo?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfo

    expirationTime?: str

    requesterVPCInfo?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfo

    status?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderStatus

    tags?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderTagsItems0]

    vpcPeeringConnectionID?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfo:
    """
    Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr block
    cidrBlockSet : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoCidrBlockSetItems0], default is Undefined, optional
        cidr block set
    ipv6CIDRBlockSet : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoIPV6CIDRBlockSetItems0], default is Undefined, optional
        ipv6 c ID r block set
    ownerID : str, default is Undefined, optional
        owner ID
    peeringOptions : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoPeeringOptions, default is Undefined, optional
        peering options
    region : str, default is Undefined, optional
        region
    vpcID : str, default is Undefined, optional
        vpc ID
    """


    cidrBlock?: str

    cidrBlockSet?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoCidrBlockSetItems0]

    ipv6CIDRBlockSet?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoIPV6CIDRBlockSetItems0]

    ownerID?: str

    peeringOptions?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoPeeringOptions

    region?: str

    vpcID?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoCidrBlockSetItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection status at provider accepter v p c info cidr block set items0

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr block
    """


    cidrBlock?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoIPV6CIDRBlockSetItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection status at provider accepter v p c info IP v6 c ID r block set items0

    Attributes
    ----------
    ipv6CIDRBlock : str, default is Undefined, optional
        ipv6 c ID r block
    """


    ipv6CIDRBlock?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderAccepterVPCInfoPeeringOptions:
    """
    Describes the VPC peering connection options.

    Attributes
    ----------
    allowDNSResolutionFromRemoteVPC : bool, default is Undefined, optional
        allow DNS resolution from remote v p c
    allowEgressFromLocalClassicLinkToRemoteVPC : bool, default is Undefined, optional
        allow egress from local classic link to remote v p c
    allowEgressFromLocalVPCToRemoteClassicLink : bool, default is Undefined, optional
        allow egress from local v p c to remote classic link
    """


    allowDNSResolutionFromRemoteVPC?: bool

    allowEgressFromLocalClassicLinkToRemoteVPC?: bool

    allowEgressFromLocalVPCToRemoteClassicLink?: bool


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfo:
    """
    Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr block
    cidrBlockSet : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoCidrBlockSetItems0], default is Undefined, optional
        cidr block set
    ipv6CIDRBlockSet : [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoIPV6CIDRBlockSetItems0], default is Undefined, optional
        ipv6 c ID r block set
    ownerID : str, default is Undefined, optional
        owner ID
    peeringOptions : Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoPeeringOptions, default is Undefined, optional
        peering options
    region : str, default is Undefined, optional
        region
    vpcID : str, default is Undefined, optional
        vpc ID
    """


    cidrBlock?: str

    cidrBlockSet?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoCidrBlockSetItems0]

    ipv6CIDRBlockSet?: [Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoIPV6CIDRBlockSetItems0]

    ownerID?: str

    peeringOptions?: Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoPeeringOptions

    region?: str

    vpcID?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoCidrBlockSetItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection status at provider requester v p c info cidr block set items0

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr block
    """


    cidrBlock?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoIPV6CIDRBlockSetItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection status at provider requester v p c info IP v6 c ID r block set items0

    Attributes
    ----------
    ipv6CIDRBlock : str, default is Undefined, optional
        ipv6 c ID r block
    """


    ipv6CIDRBlock?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderRequesterVPCInfoPeeringOptions:
    """
    Describes the VPC peering connection options.

    Attributes
    ----------
    allowDNSResolutionFromRemoteVPC : bool, default is Undefined, optional
        allow DNS resolution from remote v p c
    allowEgressFromLocalClassicLinkToRemoteVPC : bool, default is Undefined, optional
        allow egress from local classic link to remote v p c
    allowEgressFromLocalVPCToRemoteClassicLink : bool, default is Undefined, optional
        allow egress from local v p c to remote classic link
    """


    allowDNSResolutionFromRemoteVPC?: bool

    allowEgressFromLocalClassicLinkToRemoteVPC?: bool

    allowEgressFromLocalVPCToRemoteClassicLink?: bool


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderStatus:
    """
    The status of the VPC peering connection.

    Attributes
    ----------
    code : str, default is Undefined, optional
        code
    message : str, default is Undefined, optional
        message
    """


    code?: str

    message?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusAtProviderTagsItems0:
    """
    ec2 aws crossplane io v1alpha1 v p c peering connection status at provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCPeeringConnectionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


