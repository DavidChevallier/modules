"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RepositoryPolicy:
    """
    A RepositoryPolicy is a managed resource that represents an Elastic Container Repository Policy Deprecated: Please use v1beta1 version of this resource.

    Attributes
    ----------
    apiVersion : str, default is "ecr.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RepositoryPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpec, default is Undefined, required
        spec
    status : EcrAwsCrossplaneIoV1alpha1RepositoryPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecr.aws.crossplane.io/v1alpha1" = "ecr.aws.crossplane.io/v1alpha1"

    kind: "RepositoryPolicy" = "RepositoryPolicy"

    metadata?: v1.ObjectMeta

    spec: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpec

    status?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicyStatus


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpec:
    """
    A RepositoryPolicySpec defines the desired state of a Elastic Container Repository.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProvider

    providerConfigRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderConfigRef

    providerRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderRef

    publishConnectionDetailsTo?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecWriteConnectionSecretToRef


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProvider:
    """
    RepositoryPolicyParameters define the desired state of an AWS Elastic Container Repository

    Attributes
    ----------
    force : bool, default is Undefined, optional
        If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the SetRepositoryPolicy operation. This is intended to prevent accidental repository lock outs.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicy, default is Undefined, optional
        policy
    rawPolicy : str, default is Undefined, optional
        Policy stringified version of JSON repository policy either policy or rawPolicy must be specified in the policy
    region : str, default is Undefined, required
        Region is the region you'd like your RepositoryPolicy to be created in.
    registryId : str, default is Undefined, optional
        The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.
    repositoryName : str, default is Undefined, optional
        The name of the repository to receive the policy. 
         One of RepositoryName, RepositoryNameRef, or RepositoryNameSelector is required.
    repositoryNameRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameRef, default is Undefined, optional
        repository name ref
    repositoryNameSelector : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameSelector, default is Undefined, optional
        repository name selector
    """


    force?: bool

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicy

    rawPolicy?: str

    region: str

    registryId?: str

    repositoryName?: str

    repositoryNameRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameRef

    repositoryNameSelector?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameSelector


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicy:
    """
    Policy is a well defined type which can be parsed into an JSON Repository Policy either policy or rawPolicy must be specified in the policy

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID is the policy's optional identifier
    statements : [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0], default is Undefined, optional
        Statements is the list of statement this policy applies either jsonStatements or statements must be specified in the policy
    version : str, default is "2012-10-17", required
        Version is the current IAM policy version
    """


    id?: str

    statements?: [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0]

    version: "2012-10-17" | "2008-10-17" = "2012-10-17"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0:
    """
    RepositoryPolicyStatement defines an individual statement within the RepositoryPolicyBody

    Attributes
    ----------
    action : [str], default is Undefined, optional
        Each element of the PolicyAction array describes the specific action or actions that will be allowed or denied with this PolicyStatement.
    condition : [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0ConditionItems0], default is Undefined, optional
        Condition specifies where conditions for policy are in effect. https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonelasticcontainerregistry.html#amazonelasticcontainerregistry-policy-keys
    effect : str, default is Undefined, required
        The effect is required and specifies whether the statement results in an allow or an explicit deny. Valid values for Effect are Allow and Deny.
    notAction : [str], default is Undefined, optional
        Each element of the NotPolicyAction array will allow the property to match all but the listed actions.
    notPrincipal : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipal, default is Undefined, optional
        not principal
    notResource : [str], default is Undefined, optional
        This will explicitly match all resource paths except the ones specified in this array
    principal : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0Principal, default is Undefined, optional
        principal
    resource : [str], default is Undefined, optional
        The paths on which this resource will apply
    sid : str, default is Undefined, optional
        Optional identifier for this statement, must be unique within the policy if provided.
    """


    action?: [str]

    condition?: [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0ConditionItems0]

    effect: "Allow" | "Deny"

    notAction?: [str]

    notPrincipal?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipal

    notResource?: [str]

    principal?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0Principal

    resource?: [str]

    sid?: str


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0ConditionItems0:
    """
    Condition represents a set of condition pairs for a Repository policy

    Attributes
    ----------
    conditions : [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0ConditionItems0ConditionsItems0], default is Undefined, required
        Conditions represents each of the key/value pairs for the operator key
    operatorKey : str, default is Undefined, required
        OperatorKey matches the condition key and value in the policy against values in the request context
    """


    conditions: [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0ConditionItems0ConditionsItems0]

    operatorKey: str


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0ConditionItems0ConditionsItems0:
    """
    ConditionPair represents one condition inside of the set of conditions for a Repository policy

    Attributes
    ----------
    booleanValue : bool, default is Undefined, optional
        ConditionBooleanValue is the expected boolean value of the key from the parent condition
    dateValue : str, default is Undefined, optional
        ConditionDateValue is the expected string value of the key from the parent condition. The date value must be in ISO 8601 format. The time is always midnight UTC.
    key : str, default is Undefined, required
        ConditionKey is the key condition being applied to the parent condition
    listValue : [str], default is Undefined, optional
        ConditionListValue is the list value of the key from the parent condition
    numericValue : int, default is Undefined, optional
        ConditionNumericValue is the expected string value of the key from the parent condition
    stringValue : str, default is Undefined, optional
        ConditionStringValue is the expected string value of the key from the parent condition
    """


    booleanValue?: bool

    dateValue?: str

    key: str

    listValue?: [str]

    numericValue?: int

    stringValue?: str


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipal:
    """
    Used with the Repository policy to specify the users which are not included in this policy

    Attributes
    ----------
    allowAnon : bool, default is Undefined, optional
        This flag indicates if the policy should be made available to all anonymous users. Principal: "*"
    awsPrincipals : [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0], default is Undefined, optional
        This list contains the all of the AWS IAM users which are affected by the policy statement.
    raw : str, default is Undefined, optional
        Raw string input can be used for *
    service : [str], default is Undefined, optional
        Service define the services which can have access to this bucket
    """


    allowAnon?: bool

    awsPrincipals?: [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0]

    raw?: str

    service?: [str]


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0:
    """
    AWSPrincipal wraps the potential values a policy principal can take. Only one of the values should be set.

    Attributes
    ----------
    awsAccountId : str, default is Undefined, optional
        AWSAccountID identifies an AWS account as the principal
    iamRoleArn : str, default is Undefined, optional
        IAMRoleARN contains the ARN of an IAM role
    iamRoleArnRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    iamUserArn : str, default is Undefined, optional
        UserARN contains the ARN of an IAM user
    iamUserArnRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnRef, default is Undefined, optional
        iam user arn ref
    iamUserArnSelector : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnSelector, default is Undefined, optional
        iam user arn selector
    """


    awsAccountId?: str

    iamRoleArn?: str

    iamRoleArnRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnRef

    iamRoleArnSelector?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnSelector

    iamUserArn?: str

    iamUserArnRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnRef

    iamUserArnSelector?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnSelector


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnRef:
    """
    IAMRoleARNRef contains the reference to an IAMRole

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnSelector:
    """
    IAMRoleARNSelector queries for an IAM role to retrieve its userName

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnSelectorPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamRoleArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnRef:
    """
    UserARNRef contains the reference to an User

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnSelector:
    """
    UserARNSelector queries for an User to retrieve its userName

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnSelectorPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0NotPrincipalAwsPrincipalsItems0IamUserArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0Principal:
    """
    Used with the Repository policy to specify the principal that is allowed or denied access to a resource.

    Attributes
    ----------
    allowAnon : bool, default is Undefined, optional
        This flag indicates if the policy should be made available to all anonymous users. Principal: "*"
    awsPrincipals : [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0], default is Undefined, optional
        This list contains the all of the AWS IAM users which are affected by the policy statement.
    raw : str, default is Undefined, optional
        Raw string input can be used for *
    service : [str], default is Undefined, optional
        Service define the services which can have access to this bucket
    """


    allowAnon?: bool

    awsPrincipals?: [EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0]

    raw?: str

    service?: [str]


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0:
    """
    AWSPrincipal wraps the potential values a policy principal can take. Only one of the values should be set.

    Attributes
    ----------
    awsAccountId : str, default is Undefined, optional
        AWSAccountID identifies an AWS account as the principal
    iamRoleArn : str, default is Undefined, optional
        IAMRoleARN contains the ARN of an IAM role
    iamRoleArnRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    iamUserArn : str, default is Undefined, optional
        UserARN contains the ARN of an IAM user
    iamUserArnRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnRef, default is Undefined, optional
        iam user arn ref
    iamUserArnSelector : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnSelector, default is Undefined, optional
        iam user arn selector
    """


    awsAccountId?: str

    iamRoleArn?: str

    iamRoleArnRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnRef

    iamRoleArnSelector?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnSelector

    iamUserArn?: str

    iamUserArnRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnRef

    iamUserArnSelector?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnSelector


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnRef:
    """
    IAMRoleARNRef contains the reference to an IAMRole

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnSelector:
    """
    IAMRoleARNSelector queries for an IAM role to retrieve its userName

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnSelectorPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamRoleArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnRef:
    """
    UserARNRef contains the reference to an User

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnSelector:
    """
    UserARNSelector queries for an User to retrieve its userName

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnSelectorPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderPolicyStatementsItems0PrincipalAwsPrincipalsItems0IamUserArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameRef:
    """
    A referencer to retrieve the name of a repository One of RepositoryName, RepositoryNameRef, or RepositoryNameSelector is required.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameSelector:
    """
    A selector to select a referencer to retrieve the name of a repository One of RepositoryName, RepositoryNameRef, or RepositoryNameSelector is required.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameSelectorPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecForProviderRepositoryNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderConfigRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToConfigRef

    metadata?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToMetadata

    name: str


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToConfigRefPolicy


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicyStatus:
    """
    A RepositoryPolicyStatus represents the observed state of a repository policy

    Attributes
    ----------
    atProvider : any, default is Undefined, optional
        RepositoryPolicyObservation keeps the state for the external resource
    conditions : [EcrAwsCrossplaneIoV1alpha1RepositoryPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: any

    conditions?: [EcrAwsCrossplaneIoV1alpha1RepositoryPolicyStatusConditionsItems0]


schema EcrAwsCrossplaneIoV1alpha1RepositoryPolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


