"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ResolverRule:
    """
    ResolverRule is the Schema for the ResolverRules API

    Attributes
    ----------
    apiVersion : str, default is "route53resolver.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ResolverRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpec, default is Undefined, required
        spec
    status : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53resolver.aws.crossplane.io/v1alpha1" = "route53resolver.aws.crossplane.io/v1alpha1"

    kind: "ResolverRule" = "ResolverRule"

    metadata?: v1.ObjectMeta

    spec: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpec

    status?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatus


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpec:
    """
    ResolverRuleSpec defines the desired state of ResolverRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProvider

    providerConfigRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderConfigRef

    providerRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderRef

    publishConnectionDetailsTo?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecWriteConnectionSecretToRef


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProvider:
    """
    ResolverRuleParameters defines the desired state of ResolverRule

    Attributes
    ----------
    domainName : str, default is Undefined, required
        DNS queries for this domain name are forwarded to the IP addresses that you specify in TargetIps. If a query matches multiple Resolver rules (example.com and www.example.com), outbound DNS queries are routed using the Resolver rule that contains the most specific domain name (www.example.com).
    name : str, default is Undefined, optional
        A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.
    region : str, default is Undefined, required
        Region is which region the ResolverRule will be created.
    resolverEndpointID : str, default is Undefined, optional
        The ID of the outbound Resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in TargetIps.
    resolverEndpointIdRefs : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDRefs, default is Undefined, optional
        resolver endpoint Id refs
    resolverEndpointIdSelector : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDSelector, default is Undefined, optional
        resolver endpoint Id selector
    ruleType : str, default is Undefined, required
        When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. 
         When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM. 
         For example, to forward DNS queries for example.com to resolvers on your network, you create a rule and specify FORWARD for RuleType. To then have Resolver process queries for apex.example.com, you create a rule and specify SYSTEM for RuleType. 
         Currently, only Resolver can create rules that have a value of RECURSIVE for RuleType.
    tags : [Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderTagsItems0], default is Undefined, optional
        A list of the tag keys and values that you want to associate with the endpoint.
    targetIPs : [Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderTargetIPsItems0], default is Undefined, optional
        The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a space. 
         TargetIps is available only when the value of Rule type is FORWARD.
    """


    domainName: str

    name?: str

    region: str

    resolverEndpointID?: str

    resolverEndpointIdRefs?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDRefs

    resolverEndpointIdSelector?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDSelector

    ruleType: str

    tags?: [Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderTagsItems0]

    targetIPs?: [Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderTargetIPsItems0]


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDRefs:
    """
    ResolverEndpointIDRef is the reference to the ResolverEndpoint used to set the ResolverEndpointID

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDRefsPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDRefsPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDRefsPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDSelector:
    """
    ResolverEndpointIDSelector selects references to ResolverEndpoint used to set the ResolverEndpointID

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDSelectorPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderResolverEndpointIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderTagsItems0:
    """
    route53resolver aws crossplane io v1alpha1 resolver rule spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecForProviderTargetIPsItems0:
    """
    route53resolver aws crossplane io v1alpha1 resolver rule spec for provider target i ps items0

    Attributes
    ----------
    ip : str, default is Undefined, optional
        ip
    port : int, default is Undefined, optional
        port
    """


    ip?: str

    port?: int


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderConfigRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatus:
    """
    ResolverRuleStatus defines the observed state of ResolverRule.

    Attributes
    ----------
    atProvider : Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatusAtProvider

    conditions?: [Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatusConditionsItems0]


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatusAtProvider:
    """
    ResolverRuleObservation defines the observed state of ResolverRule

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN (Amazon Resource Name) for the Resolver rule specified by Id.
    creationTime : str, default is Undefined, optional
        The date and time that the Resolver rule was created, in Unix time format and Coordinated Universal Time (UTC).
    creatorRequestID : str, default is Undefined, optional
        A unique string that you specified when you created the Resolver rule. CreatorRequestId identifies the request and allows failed requests to be retried without the risk of running the operation twice.
    id : str, default is Undefined, optional
        The ID that Resolver assigned to the Resolver rule when you created it.
    modificationTime : str, default is Undefined, optional
        The date and time that the Resolver rule was last updated, in Unix time format and Coordinated Universal Time (UTC).
    ownerID : str, default is Undefined, optional
        When a rule is shared with another Amazon Web Services account, the account ID of the account that the rule is shared with.
    shareStatus : str, default is Undefined, optional
        Whether the rule is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.
    status : str, default is Undefined, optional
        A code that specifies the current status of the Resolver rule.
    statusMessage : str, default is Undefined, optional
        A detailed description of the status of a Resolver rule.
    """


    arn?: str

    creationTime?: str

    creatorRequestID?: str

    id?: str

    modificationTime?: str

    ownerID?: str

    shareStatus?: str

    status?: str

    statusMessage?: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverRuleStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


