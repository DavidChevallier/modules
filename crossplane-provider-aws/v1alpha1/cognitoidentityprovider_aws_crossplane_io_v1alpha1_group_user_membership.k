"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GroupUserMembership:
    """
    An GroupUserMembership is a managed resource that represents an AWS Cognito User group membership.

    Attributes
    ----------
    apiVersion : str, default is "cognitoidentityprovider.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GroupUserMembership", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpec, default is Undefined, required
        spec
    status : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatus, default is Undefined, optional
        status
    """


    apiVersion: "cognitoidentityprovider.aws.crossplane.io/v1alpha1" = "cognitoidentityprovider.aws.crossplane.io/v1alpha1"

    kind: "GroupUserMembership" = "GroupUserMembership"

    metadata?: v1.ObjectMeta

    spec: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpec

    status?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatus


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpec:
    """
    An GroupUserMembershipSpec defines the desired state of an GroupUserMembership.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProvider

    providerConfigRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderConfigRef

    providerRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderRef

    publishConnectionDetailsTo?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecWriteConnectionSecretToRef


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProvider:
    """
    GroupUserMembershipParameters define the desired state of an AWS GroupUserMembership.

    Attributes
    ----------
    groupname : str, default is Undefined, optional
        Groupname is the Amazon Cognito Group Name (Group) of the Cognito User-Pool group you want to add User to.
    groupnameRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameRef, default is Undefined, optional
        groupname ref
    groupnameSelector : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameSelector, default is Undefined, optional
        groupname selector
    region : str, default is Undefined, required
        Region is which region the Group will be created.
    userPoolId : str, default is Undefined, optional
        UserPoolID is the Amazon Cognito Group Name (Group) of the Cognito User-Pool group you want to add User to.
    userPoolIdRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    username : str, default is Undefined, optional
        Username presents the name of the User.
    """


    groupname?: str

    groupnameRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameRef

    groupnameSelector?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameSelector

    region: str

    userPoolId?: str

    userPoolIdRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDRef

    userPoolIdSelector?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDSelector

    username?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameRef:
    """
    GroupnameRef references to an Group to retrieve its groupName

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameSelector:
    """
    GroupnameSelector selects a reference to an Group to retrieve its groupName

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameSelectorPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderGroupnameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDRef:
    """
    UserPoolIDRef references to an Group to retrieve its userPoolId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDSelector:
    """
    UserPoolIDSelector selects a reference to an Group to retrieve its userPoolId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDSelectorPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecForProviderUserPoolIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToConfigRef

    metadata?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToMetadata

    name: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatus:
    """
    An GroupUserMembershipStatus represents the observed state of an GroupUserMembership.

    Attributes
    ----------
    atProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatusAtProvider

    conditions?: [CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatusConditionsItems0]


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatusAtProvider:
    """
    GroupUserMembershipObservation keeps the state for the external resource

    Attributes
    ----------
    groupname : str, default is Undefined, optional
        Groupname is the name of the attached group. If nil, the group is not yet attached
    """


    groupname?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupUserMembershipStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


