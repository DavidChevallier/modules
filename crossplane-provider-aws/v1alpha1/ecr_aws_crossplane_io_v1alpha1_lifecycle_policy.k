"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LifecyclePolicy:
    """
    LifecyclePolicy is the Schema for the LifecyclePolicies API

    Attributes
    ----------
    apiVersion : str, default is "ecr.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LifecyclePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpec, default is Undefined, required
        spec
    status : EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecr.aws.crossplane.io/v1alpha1" = "ecr.aws.crossplane.io/v1alpha1"

    kind: "LifecyclePolicy" = "LifecyclePolicy"

    metadata?: v1.ObjectMeta

    spec: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpec

    status?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatus


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpec:
    """
    LifecyclePolicySpec defines the desired state of LifecyclePolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProvider

    providerConfigRef?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderConfigRef

    providerRef?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderRef

    publishConnectionDetailsTo?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecWriteConnectionSecretToRef


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProvider:
    """
    LifecyclePolicyParameters defines the desired state of LifecyclePolicy

    Attributes
    ----------
    lifecyclePolicyText : str, default is Undefined, required
        The JSON repository policy text to apply to the repository.
    region : str, default is Undefined, required
        Region is which region the LifecyclePolicy will be created.
    registryID : str, default is Undefined, optional
        The Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.
    repositoryName : str, default is Undefined, optional
        RepositoryName is the name of the Repository that the policy should attach to
    repositoryNameRef : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameRef, default is Undefined, optional
        repository name ref
    repositoryNameSelector : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameSelector, default is Undefined, optional
        repository name selector
    """


    lifecyclePolicyText: str

    region: str

    registryID?: str

    repositoryName?: str

    repositoryNameRef?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameRef

    repositoryNameSelector?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameSelector


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameRef:
    """
    RepositoryNameRef is the name of the Repository that the policy should attach to

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameRefPolicy


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameSelector:
    """
    RepositoryNameSelector selects a references to the Repository the policy should attach to

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameSelectorPolicy


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecForProviderRepositoryNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderConfigRefPolicy


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderRefPolicy


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToConfigRef

    metadata?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToMetadata

    name: str


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToConfigRefPolicy


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatus:
    """
    LifecyclePolicyStatus defines the observed state of LifecyclePolicy.

    Attributes
    ----------
    atProvider : EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatusAtProvider

    conditions?: [EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatusConditionsItems0]


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatusAtProvider:
    """
    LifecyclePolicyObservation defines the observed state of LifecyclePolicy

    Attributes
    ----------
    repositoryName : str, default is Undefined, optional
        The repository name associated with the request.
    """


    repositoryName?: str


schema EcrAwsCrossplaneIoV1alpha1LifecyclePolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


