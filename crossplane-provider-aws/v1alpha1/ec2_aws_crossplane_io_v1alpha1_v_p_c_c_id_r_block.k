"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPCCIDRBlock:
    """
    A VPCCIDRBlock is a managed resource that represents an secondary CIDR block for a VPC Deprecated: Please use v1beta1 version of this resource.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPCCIDRBlock", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "VPCCIDRBlock" = "VPCCIDRBlock"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpec

    status?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatus


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpec:
    """
    A VPCCIDRBlockSpec defines the desired state of a VPCCIDRBlock.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProvider:
    """
    VPCCIDRBlockParameters define the desired state of an VPC CIDR Block

    Attributes
    ----------
    amazonProvidedIpv6CidrBlock : bool, default is Undefined, optional
        Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
    cidrBlock : str, default is Undefined, optional
        An IPv4 CIDR block to associate with the VPC.
    ipv6CdirBlock : str, default is Undefined, optional
        An IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool in the request. 
         To let Amazon choose the IPv6 CIDR block for you, omit this parameter.
    ipv6CidrBlockNetworkBorderGroup : str, default is Undefined, optional
        The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CiDR block to this location. 
         You must set AmazonProvidedIpv6CIDRBlock to true to use this parameter. 
         You can have one IPv6 CIDR block association per network border group.
    ipv6Pool : str, default is Undefined, optional
        The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
    region : str, default is Undefined, required
        Region is the region you'd like your VPC CIDR to be created in.
    vpcId : str, default is Undefined, optional
        VPCID is the ID of the VPC.
    vpcIdRef : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    amazonProvidedIpv6CidrBlock?: bool

    cidrBlock?: str

    ipv6CdirBlock?: str

    ipv6CidrBlockNetworkBorderGroup?: str

    ipv6Pool?: str

    region: str

    vpcId?: str

    vpcIdRef?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDRef

    vpcIdSelector?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDSelector


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDRef:
    """
    VPCIDRef references a VPC to and retrieves its vpcId

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDSelector:
    """
    VPCIDSelector selects a reference to a VPC to and retrieves its vpcId

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecForProviderVpcIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatus:
    """
    A VPCCIDRBlockStatus represents the observed state of a ElasticIP.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProvider:
    """
    VPCCIDRBlockObservation keeps the state for the external resource

    Attributes
    ----------
    associationId : str, default is Undefined, optional
        The association ID for the CIDR block.
    cidrBlock : str, default is Undefined, optional
        The IPv4 CIDR block.
    cidrBlockState : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProviderCidrBlockState, default is Undefined, optional
        cidr block state
    ipv6CidrBlock : str, default is Undefined, optional
        The IPv6 CIDR block.
    ipv6CidrrBlockState : Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProviderIPV6CidrrBlockState, default is Undefined, optional
        ipv6 cidrr block state
    ipv6Pool : str, default is Undefined, optional
        The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.
    networkBorderGroup : str, default is Undefined, optional
        The name of the location from which we advertise the IPV6 CIDR block.
    """


    associationId?: str

    cidrBlock?: str

    cidrBlockState?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProviderCidrBlockState

    ipv6CidrBlock?: str

    ipv6CidrrBlockState?: Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProviderIPV6CidrrBlockState

    ipv6Pool?: str

    networkBorderGroup?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProviderCidrBlockState:
    """
    Information about the state of the CIDR block.

    Attributes
    ----------
    state : str, default is Undefined, optional
        The state of the CIDR block.
    statusMessage : str, default is Undefined, optional
        A message about the status of the CIDR block, if applicable.
    """


    state?: str

    statusMessage?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusAtProviderIPV6CidrrBlockState:
    """
    Information about the state of the CIDR block.

    Attributes
    ----------
    state : str, default is Undefined, optional
        The state of the CIDR block.
    statusMessage : str, default is Undefined, optional
        A message about the status of the CIDR block, if applicable.
    """


    state?: str

    statusMessage?: str


schema Ec2AwsCrossplaneIoV1alpha1VPCCIDRBlockStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


