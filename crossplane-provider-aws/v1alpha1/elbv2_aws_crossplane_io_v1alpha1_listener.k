"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Listener:
    """
    Listener is the Schema for the Listeners API

    Attributes
    ----------
    apiVersion : str, default is "elbv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Listener", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Elbv2AwsCrossplaneIoV1alpha1ListenerSpec, default is Undefined, required
        spec
    status : Elbv2AwsCrossplaneIoV1alpha1ListenerStatus, default is Undefined, optional
        status
    """


    apiVersion: "elbv2.aws.crossplane.io/v1alpha1" = "elbv2.aws.crossplane.io/v1alpha1"

    kind: "Listener" = "Listener"

    metadata?: v1.ObjectMeta

    spec: Elbv2AwsCrossplaneIoV1alpha1ListenerSpec

    status?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatus


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpec:
    """
    ListenerSpec defines the desired state of Listener

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProvider

    providerConfigRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderConfigRef

    providerRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderRef

    publishConnectionDetailsTo?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecWriteConnectionSecretToRef


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProvider:
    """
    ListenerParameters defines the desired state of Listener

    Attributes
    ----------
    alpnPolicy : [str], default is Undefined, optional
        [TLS listeners] The name of the Application-Layer Protocol Negotiation (ALPN) policy. You can specify one policy name. The following are the possible values: 
         * HTTP1Only 
         * HTTP2Only 
         * HTTP2Optional 
         * HTTP2Preferred 
         * None 
         For more information, see ALPN policies (https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#alpn-policies) in the Network Load Balancers Guide.
    certificates : [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0], default is Undefined, optional
        [HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set CertificateArn to the certificate ARN but do not set IsDefault.
    defaultActions : [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0], default is Undefined, required
        The actions for the default rule.
    loadBalancerArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the load balancer.
    loadBalancerArnRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnRef, default is Undefined, optional
        load balancer arn ref
    loadBalancerArnSelector : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnSelector, default is Undefined, optional
        load balancer arn selector
    port : int, default is Undefined, optional
        The port on which the load balancer is listening. You cannot specify a port for a Gateway Load Balancer.
    $protocol : str, default is Undefined, optional
        The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You canâ€™t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.
    region : str, default is Undefined, required
        Region is which region the Listener will be created.
    sslPolicy : str, default is Undefined, optional
        [HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. 
         For more information, see Security policies (https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies) in the Application Load Balancers Guide and Security policies (https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies) in the Network Load Balancers Guide.
    tags : [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderTagsItems0], default is Undefined, optional
        The tags to assign to the listener.
    """


    alpnPolicy?: [str]

    certificates?: [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0]

    defaultActions: [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0]

    loadBalancerArn?: str

    loadBalancerArnRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnRef

    loadBalancerArnSelector?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnSelector

    port?: int

    $protocol?: str

    region: str

    sslPolicy?: str

    tags?: [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderTagsItems0]


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0:
    """
    CustomCertificate includes custom fields about certificates.

    Attributes
    ----------
    certificateARN : str, default is Undefined, optional
        [HTTPS and TLS listeners] The default certificate for the listener.
    certificateARNRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNRef, default is Undefined, optional
        certificate a r n ref
    certificateARNSelector : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNSelector, default is Undefined, optional
        certificate a r n selector
    isDefault : bool, default is Undefined, optional
        is default
    """


    certificateARN?: str

    certificateARNRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNRef

    certificateARNSelector?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNSelector

    isDefault?: bool


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNRef:
    """
    Reference to Certificates for Certificate ARN

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNSelector:
    """
    Selector for references to Certificate for CertificateArn

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNSelectorPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderCertificatesItems0CertificateARNSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0:
    """
    CustomAction includes custom fields for an action. 
     Each rule must include exactly one of the following types of actions: forward, fixed-response, or redirect, and it must be the last action to be performed.

    Attributes
    ----------
    actionType : str, default is Undefined, required
        The type of action.
    authenticateCognitoConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0AuthenticateCognitoConfig, default is Undefined, optional
        authenticate cognito config
    authenticateOidcConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0AuthenticateOidcConfig, default is Undefined, optional
        authenticate oidc config
    fixedResponseConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0FixedResponseConfig, default is Undefined, optional
        fixed response config
    forwardConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfig, default is Undefined, optional
        forward config
    order : int, default is Undefined, optional
        The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first.
    redirectConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0RedirectConfig, default is Undefined, optional
        redirect config
    targetGroupArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target group. Specify only when actionType is forward and you want to route to a single target group. To route to one or more target groups, use ForwardConfig instead.
    targetGroupArnRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnRef, default is Undefined, optional
        target group arn ref
    targetGroupArnSelector : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnSelector, default is Undefined, optional
        target group arn selector
    """


    actionType: str

    authenticateCognitoConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0AuthenticateCognitoConfig

    authenticateOidcConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0AuthenticateOidcConfig

    fixedResponseConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0FixedResponseConfig

    forwardConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfig

    order?: int

    redirectConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0RedirectConfig

    targetGroupArn?: str

    targetGroupArnRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnRef

    targetGroupArnSelector?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnSelector


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0AuthenticateCognitoConfig:
    """
    Request parameters to use when integrating with Amazon Cognito to authenticate users.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        authentication request extra params
    onUnauthenticatedRequest : str, default is Undefined, optional
        on unauthenticated request
    scope : str, default is Undefined, optional
        scope
    sessionCookieName : str, default is Undefined, optional
        session cookie name
    sessionTimeout : int, default is Undefined, optional
        session timeout
    userPoolARN : str, default is Undefined, optional
        user pool a r n
    userPoolClientID : str, default is Undefined, optional
        user pool client ID
    userPoolDomain : str, default is Undefined, optional
        user pool domain
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: int

    userPoolARN?: str

    userPoolClientID?: str

    userPoolDomain?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0AuthenticateOidcConfig:
    """
    Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        authentication request extra params
    authorizationEndpoint : str, default is Undefined, optional
        authorization endpoint
    clientID : str, default is Undefined, optional
        client ID
    clientSecret : str, default is Undefined, optional
        client secret
    issuer : str, default is Undefined, optional
        issuer
    onUnauthenticatedRequest : str, default is Undefined, optional
        on unauthenticated request
    scope : str, default is Undefined, optional
        scope
    sessionCookieName : str, default is Undefined, optional
        session cookie name
    sessionTimeout : int, default is Undefined, optional
        session timeout
    tokenEndpoint : str, default is Undefined, optional
        token endpoint
    useExistingClientSecret : bool, default is Undefined, optional
        use existing client secret
    userInfoEndpoint : str, default is Undefined, optional
        user info endpoint
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientID?: str

    clientSecret?: str

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: int

    tokenEndpoint?: str

    useExistingClientSecret?: bool

    userInfoEndpoint?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0FixedResponseConfig:
    """
    Information about an action that returns a custom HTTP response.

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        content type
    messageBody : str, default is Undefined, optional
        message body
    statusCode : str, default is Undefined, optional
        status code
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfig:
    """
    Information about a forward action.

    Attributes
    ----------
    targetGroupStickinessConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupStickinessConfig, default is Undefined, optional
        target group stickiness config
    targetGroups : [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0], default is Undefined, optional
        One or more target groups. For Network Load Balancers, you can specify a single target group.
    """


    targetGroupStickinessConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupStickinessConfig

    targetGroups?: [Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0]


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupStickinessConfig:
    """
    Information about the target group stickiness for a rule.

    Attributes
    ----------
    durationSeconds : int, default is Undefined, optional
        duration seconds
    enabled : bool, default is Undefined, optional
        enabled
    """


    durationSeconds?: int

    enabled?: bool


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0:
    """
    CustomTargetGroupTuple includes custom fields about target groups. Only used with ForwardActionConfig to route to multiple target groups.

    Attributes
    ----------
    targetGroupARN : str, default is Undefined, optional
        target group a r n
    targetGroupArnRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnRef, default is Undefined, optional
        target group arn ref
    targetGroupArnSelector : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnSelector, default is Undefined, optional
        target group arn selector
    weight : int, default is Undefined, optional
        weight
    """


    targetGroupARN?: str

    targetGroupArnRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnRef

    targetGroupArnSelector?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnSelector

    weight?: int


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnRef:
    """
    Reference to TargetGroupARN used to set TargetGroupARN

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnSelector:
    """
    Selector for references to TargetGroup for TargetGroupARN

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnSelectorPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0TargetGroupArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0RedirectConfig:
    """
    Information about a redirect action. 
     A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values. 
     You can reuse URI components using the following reserved keywords: 
     * #{protocol} 
     * #{host} 
     * #{port} 
     * #{path} (the leading "/" is removed) 
     * #{query} 
     For example, you can change the path to "/new/#{path}", the hostname to "example.#{host}", or the query to "#{query}&value=xyz".

    Attributes
    ----------
    host : str, default is Undefined, optional
        host
    path : str, default is Undefined, optional
        path
    port : str, default is Undefined, optional
        port
    $protocol : str, default is Undefined, optional
        protocol
    query : str, default is Undefined, optional
        query
    statusCode : str, default is Undefined, optional
        status code
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnRef:
    """
    Reference to TargetGroupARN used to set TargetGroupARN

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnSelector:
    """
    Selector for references to TargetGroups for TargetGroupARNs

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnSelectorPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderDefaultActionsItems0TargetGroupArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnRef:
    """
    Ref to loadbalancer ARN

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnSelector:
    """
    Selector for references to LoadBalancer for LoadBalancerARN

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnSelectorPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderLoadBalancerArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecForProviderTagsItems0:
    """
    elbv2 aws crossplane io v1alpha1 listener spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderConfigRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToConfigRef

    metadata?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToMetadata

    name: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToConfigRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatus:
    """
    ListenerStatus defines the observed state of Listener.

    Attributes
    ----------
    atProvider : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProvider

    conditions?: [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusConditionsItems0]


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProvider:
    """
    ListenerObservation defines the observed state of Listener

    Attributes
    ----------
    certificates : [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderCertificatesItems0], default is Undefined, optional
        [HTTPS or TLS listener] The default certificate for the listener.
    defaultActions : [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0], default is Undefined, optional
        The default actions for the listener.
    listenerARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the listener.
    loadBalancerARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the load balancer.
    """


    certificates?: [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderCertificatesItems0]

    defaultActions?: [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0]

    listenerARN?: str

    loadBalancerARN?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderCertificatesItems0:
    """
    elbv2 aws crossplane io v1alpha1 listener status at provider certificates items0

    Attributes
    ----------
    certificateARN : str, default is Undefined, optional
        certificate a r n
    isDefault : bool, default is Undefined, optional
        is default
    """


    certificateARN?: str

    isDefault?: bool


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0:
    """
    elbv2 aws crossplane io v1alpha1 listener status at provider default actions items0

    Attributes
    ----------
    authenticateCognitoConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0AuthenticateCognitoConfig, default is Undefined, optional
        authenticate cognito config
    authenticateOIDCConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0AuthenticateOIDCConfig, default is Undefined, optional
        authenticate o ID c config
    fixedResponseConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0FixedResponseConfig, default is Undefined, optional
        fixed response config
    forwardConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfig, default is Undefined, optional
        forward config
    order : int, default is Undefined, optional
        order
    redirectConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0RedirectConfig, default is Undefined, optional
        redirect config
    targetGroupARN : str, default is Undefined, optional
        target group a r n
    type_ : str, default is Undefined, optional
        type
    """


    authenticateCognitoConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0AuthenticateCognitoConfig

    authenticateOIDCConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0AuthenticateOIDCConfig

    fixedResponseConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0FixedResponseConfig

    forwardConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfig

    order?: int

    redirectConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0RedirectConfig

    targetGroupARN?: str

    type_?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0AuthenticateCognitoConfig:
    """
    Request parameters to use when integrating with Amazon Cognito to authenticate users.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        authentication request extra params
    onUnauthenticatedRequest : str, default is Undefined, optional
        on unauthenticated request
    scope : str, default is Undefined, optional
        scope
    sessionCookieName : str, default is Undefined, optional
        session cookie name
    sessionTimeout : int, default is Undefined, optional
        session timeout
    userPoolARN : str, default is Undefined, optional
        user pool a r n
    userPoolClientID : str, default is Undefined, optional
        user pool client ID
    userPoolDomain : str, default is Undefined, optional
        user pool domain
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: int

    userPoolARN?: str

    userPoolClientID?: str

    userPoolDomain?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0AuthenticateOIDCConfig:
    """
    Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        authentication request extra params
    authorizationEndpoint : str, default is Undefined, optional
        authorization endpoint
    clientID : str, default is Undefined, optional
        client ID
    clientSecret : str, default is Undefined, optional
        client secret
    issuer : str, default is Undefined, optional
        issuer
    onUnauthenticatedRequest : str, default is Undefined, optional
        on unauthenticated request
    scope : str, default is Undefined, optional
        scope
    sessionCookieName : str, default is Undefined, optional
        session cookie name
    sessionTimeout : int, default is Undefined, optional
        session timeout
    tokenEndpoint : str, default is Undefined, optional
        token endpoint
    useExistingClientSecret : bool, default is Undefined, optional
        use existing client secret
    userInfoEndpoint : str, default is Undefined, optional
        user info endpoint
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientID?: str

    clientSecret?: str

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: int

    tokenEndpoint?: str

    useExistingClientSecret?: bool

    userInfoEndpoint?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0FixedResponseConfig:
    """
    Information about an action that returns a custom HTTP response.

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        content type
    messageBody : str, default is Undefined, optional
        message body
    statusCode : str, default is Undefined, optional
        status code
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfig:
    """
    Information about a forward action.

    Attributes
    ----------
    targetGroupStickinessConfig : Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfigTargetGroupStickinessConfig, default is Undefined, optional
        target group stickiness config
    targetGroups : [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0], default is Undefined, optional
        target groups
    """


    targetGroupStickinessConfig?: Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfigTargetGroupStickinessConfig

    targetGroups?: [Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0]


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfigTargetGroupStickinessConfig:
    """
    Information about the target group stickiness for a rule.

    Attributes
    ----------
    durationSeconds : int, default is Undefined, optional
        duration seconds
    enabled : bool, default is Undefined, optional
        enabled
    """


    durationSeconds?: int

    enabled?: bool


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0ForwardConfigTargetGroupsItems0:
    """
    elbv2 aws crossplane io v1alpha1 listener status at provider default actions items0 forward config target groups items0

    Attributes
    ----------
    targetGroupARN : str, default is Undefined, optional
        target group a r n
    weight : int, default is Undefined, optional
        weight
    """


    targetGroupARN?: str

    weight?: int


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusAtProviderDefaultActionsItems0RedirectConfig:
    """
    Information about a redirect action. 
     A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values. 
     You can reuse URI components using the following reserved keywords: 
     * #{protocol} 
     * #{host} 
     * #{port} 
     * #{path} (the leading "/" is removed) 
     * #{query} 
     For example, you can change the path to "/new/#{path}", the hostname to "example.#{host}", or the query to "#{query}&value=xyz".

    Attributes
    ----------
    host : str, default is Undefined, optional
        host
    path : str, default is Undefined, optional
        path
    port : str, default is Undefined, optional
        port
    $protocol : str, default is Undefined, optional
        protocol
    query : str, default is Undefined, optional
        query
    statusCode : str, default is Undefined, optional
        status code
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsCrossplaneIoV1alpha1ListenerStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


