"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BatchJob:
    """
    A Job is a managed resource that represents an AWS Batch Job.

    Attributes
    ----------
    apiVersion : str, default is "batch.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Job", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BatchAwsCrossplaneIoV1alpha1JobSpec, default is Undefined, required
        spec
    status : BatchAwsCrossplaneIoV1alpha1JobStatus, default is Undefined, optional
        status
    """


    apiVersion: "batch.aws.crossplane.io/v1alpha1" = "batch.aws.crossplane.io/v1alpha1"

    kind: "Job" = "Job"

    metadata?: v1.ObjectMeta

    spec: BatchAwsCrossplaneIoV1alpha1JobSpec

    status?: BatchAwsCrossplaneIoV1alpha1JobStatus


schema BatchAwsCrossplaneIoV1alpha1JobSpec:
    """
    A JobSpec defines the desired state of a Job.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : BatchAwsCrossplaneIoV1alpha1JobSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : BatchAwsCrossplaneIoV1alpha1JobSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : BatchAwsCrossplaneIoV1alpha1JobSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BatchAwsCrossplaneIoV1alpha1JobSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BatchAwsCrossplaneIoV1alpha1JobSpecForProvider

    providerConfigRef?: BatchAwsCrossplaneIoV1alpha1JobSpecProviderConfigRef

    providerRef?: BatchAwsCrossplaneIoV1alpha1JobSpecProviderRef

    publishConnectionDetailsTo?: BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BatchAwsCrossplaneIoV1alpha1JobSpecWriteConnectionSecretToRef


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProvider:
    """
    JobParameters define the desired state of a Batch Job

    Attributes
    ----------
    arrayProperties : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderArrayProperties, default is Undefined, optional
        array properties
    containerOverrides : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverrides, default is Undefined, optional
        container overrides
    dependsOn : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0], default is Undefined, optional
        A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a SEQUENTIAL type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an N_TO_N type dependency with a job ID for array jobs. In that case, each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin.
    jobDefinition : str, default is Undefined, optional
        The job definition used by this job. This value can be one of name, name:revision, or the Amazon Resource Name (ARN) for the job definition. If name is specified without a revision then the latest active revision is used. 
         JobDefinition is a required field
    jobDefinitionRef : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionRef, default is Undefined, optional
        job definition ref
    jobDefinitionSelector : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionSelector, default is Undefined, optional
        job definition selector
    jobQueue : str, default is Undefined, optional
        The job queue where the job is submitted. You can specify either the name or the Amazon Resource Name (ARN) of the queue. 
         JobQueue is a required field
    jobQueueRef : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueRef, default is Undefined, optional
        job queue ref
    jobQueueSelector : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueSelector, default is Undefined, optional
        job queue selector
    nodeOverrides : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverrides, default is Undefined, optional
        node overrides
    parameters : {str:str}, default is Undefined, optional
        Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters in a SubmitJob request override any corresponding parameter defaults from the job definition.
    propagateTags : bool, default is Undefined, optional
        Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the FAILED state. When specified, this overrides the tag propagation setting in the job definition.
    region : str, default is Undefined, required
        Region is which region the Function will be created.
    retryStrategy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderRetryStrategy, default is Undefined, optional
        retry strategy
    tags : {str:str}, default is Undefined, optional
        The tags that you apply to the job request to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see Tagging Amazon Web Services Resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in Amazon Web Services General Reference.
    timeout : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderTimeout, default is Undefined, optional
        timeout
    """


    arrayProperties?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderArrayProperties

    containerOverrides?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverrides

    dependsOn?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0]

    jobDefinition?: str

    jobDefinitionRef?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionRef

    jobDefinitionSelector?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionSelector

    jobQueue?: str

    jobQueueRef?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueRef

    jobQueueSelector?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueSelector

    nodeOverrides?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverrides

    parameters?: {str:str}

    propagateTags?: bool

    region: str

    retryStrategy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderRetryStrategy

    tags?: {str:str}

    timeout?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderTimeout


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderArrayProperties:
    """
    The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. For more information, see Array Jobs (https://docs.aws.amazon.com/batch/latest/userguide/array_jobs.html) in the Batch User Guide.

    Attributes
    ----------
    size : int, default is Undefined, optional
        The size of the array job.
    """


    size?: int


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverrides:
    """
    A list of container overrides in the JSON format that specify the name of a container in the specified job definition and the overrides it should receive. You can override the default command for a container, which is specified in the job definition or the Docker image, with a command override. You can also override existing environment variables on a container or add new environment variables to it with an environment override.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        The command to send to the container that overrides the default command from the Docker image or the job definition.
    environment : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverridesEnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the job definition. 
         Environment variables must not start with AWS_BATCH; this naming convention is reserved for variables that are set by the Batch service.
    instanceType : str, default is Undefined, optional
        The instance type to use for a multi-node parallel job. 
         This parameter isn't applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn't be provided.
    resourceRequirements : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverridesResourceRequirementsItems0], default is Undefined, optional
        The type and amount of resources to assign to a container. This overrides the settings in the job definition. The supported resources include GPU, MEMORY, and VCPU.
    """


    command?: [str]

    environment?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverridesEnvironmentItems0]

    instanceType?: str

    resourceRequirements?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverridesResourceRequirementsItems0]


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverridesEnvironmentItems0:
    """
    KeyValuePair defines a key-value pair object.

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderContainerOverridesResourceRequirementsItems0:
    """
    ResourceRequirement defines the type and amount of a resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU.

    Attributes
    ----------
    resourceType : str, default is Undefined, required
        The type of resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU. 
         Type is a required field
    value : str, default is Undefined, required
        The quantity of the specified resource to reserve for the container. The values vary based on the type specified. 
         type="GPU" 
         The number of physical GPUs to reserve for the container. The number of GPUs reserved for all containers in a job shouldn't exceed the number of available GPUs on the compute resource that the job is launched on. 
         GPUs are not available for jobs that are running on Fargate resources. 
         type="MEMORY" 
         The memory hard limit (in MiB) present to the container. This parameter is supported for jobs that are running on EC2 resources. If your container attempts to exceed the memory specified, the container is terminated. This parameter maps to Memory in the Create a container (https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.23/) and the --memory option to docker run (https://docs.docker.com/engine/reference/run/). You must specify at least 4 MiB of memory for a job. This is required but can be specified in several places for multi-node parallel (MNP) jobs. It must be specified for each node at least once. This parameter maps to Memory in the Create a container (https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.23/) and the --memory option to docker run (https://docs.docker.com/engine/reference/run/). 
         If you're trying to maximize your resource utilization by providing your jobs as much memory as possible for a particular instance type, see Memory Management (https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html) in the Batch User Guide. 
         For jobs that are running on Fargate resources, then value is the hard limit (in MiB), and must match one of the supported values and the VCPU values must be one of the values supported for that memory value. 
         value = 512 
         VCPU = 0.25 
         value = 1024 
         VCPU = 0.25 or 0.5 
         value = 2048 
         VCPU = 0.25, 0.5, or 1 
         value = 3072 
         VCPU = 0.5, or 1 
         value = 4096 
         VCPU = 0.5, 1, or 2 
         value = 5120, 6144, or 7168 
         VCPU = 1 or 2 
         value = 8192 
         VCPU = 1, 2, or 4 
         value = 9216, 10240, 11264, 12288, 13312, 14336, 15360, or 16384 
         VCPU = 2 or 4 
         value = 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696, or 30720 
         VCPU = 4 
         type="VCPU" 
         The number of vCPUs reserved for the container. This parameter maps to CpuShares in the Create a container (https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.23/) and the --cpu-shares option to docker run (https://docs.docker.com/engine/reference/run/). Each vCPU is equivalent to 1,024 CPU shares. For EC2 resources, you must specify at least one vCPU. This is required but can be specified in several places; it must be specified for each node at least once. 
         For jobs that are running on Fargate resources, then value must match one of the supported values and the MEMORY values must be one of the values supported for that VCPU value. The supported values are 0.25, 0.5, 1, 2, and 4 
         value = 0.25 
         MEMORY = 512, 1024, or 2048 
         value = 0.5 
         MEMORY = 1024, 2048, 3072, or 4096 
         value = 1 
         MEMORY = 2048, 3072, 4096, 5120, 6144, 7168, or 8192 
         value = 2 
         MEMORY = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, or 16384 
         value = 4 
         MEMORY = 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696, or 30720 
         Value is a required field
    """


    resourceType: "GPU" | "MEMORY" | "VCPU"

    value: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0:
    """
    JobDependency defines an Batch job dependency.

    Attributes
    ----------
    jobId : str, default is Undefined, optional
        The job ID of the Batch job associated with this dependency.
    jobIdRef : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDRef, default is Undefined, optional
        job Id ref
    jobIdSelector : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDSelector, default is Undefined, optional
        job Id selector
    $type : str, default is Undefined, optional
        The type of the job dependency.
    """


    jobId?: str

    jobIdRef?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDRef

    jobIdSelector?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDSelector

    $type?: "N_TO_N" | "SEQUENTIAL"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDRef:
    """
    JobIDRef is a reference to an JobID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDRefPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDSelector:
    """
    JobIDSelector selects references to an JobID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDSelectorPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderDependsOnItems0JobIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionRef:
    """
    JobDefinitionRef is a reference to an JobDefinition.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionRefPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionSelector:
    """
    JobDefinitionSelector selects references to an JobDefinition.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionSelectorPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobDefinitionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueRef:
    """
    JobQueueRef is a reference to an JobQueue.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueRefPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueSelector:
    """
    JobQueueSelector selects references to an JobQueue.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueSelectorPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderJobQueueSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverrides:
    """
    A list of node overrides in JSON format that specify the node range to target and the container overrides for that node range. 
     This parameter isn't applicable to jobs that are running on Fargate resources; use containerOverrides instead.

    Attributes
    ----------
    nodePropertyOverrides : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0], default is Undefined, optional
        The node property overrides for the job.
    numNodes : int, default is Undefined, optional
        The number of nodes to use with a multi-node parallel job. This value overrides the number of nodes that are specified in the job definition. To use this override: 
         * There must be at least one node range in your job definition that has an open upper boundary (such as : or n:). 
         * The lower boundary of the node range specified in the job definition must be fewer than the number of nodes specified in the override. 
         * The main node index specified in the job definition must be fewer than the number of nodes specified in the override.
    """


    nodePropertyOverrides?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0]

    numNodes?: int


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0:
    """
    NodePropertyOverride defines any node overrides to a job definition that's used in a SubmitJob API operation.

    Attributes
    ----------
    containerOverrides : BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverrides, default is Undefined, optional
        container overrides
    targetNodes : str, default is Undefined, required
        The range of nodes, using node index values, that's used to override. A range of 0:3 indicates nodes with index values of 0 through 3. If the starting range value is omitted (:n), then 0 is used to start the range. If the ending range value is omitted (n:), then the highest possible node index is used to end the range. 
         TargetNodes is a required field
    """


    containerOverrides?: BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverrides

    targetNodes: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverrides:
    """
    The overrides that should be sent to a node range.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        The command to send to the container that overrides the default command from the Docker image or the job definition.
    environment : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverridesEnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the job definition. 
         Environment variables must not start with AWS_BATCH; this naming convention is reserved for variables that are set by the Batch service.
    instanceType : str, default is Undefined, optional
        The instance type to use for a multi-node parallel job. 
         This parameter isn't applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn't be provided.
    resourceRequirements : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverridesResourceRequirementsItems0], default is Undefined, optional
        The type and amount of resources to assign to a container. This overrides the settings in the job definition. The supported resources include GPU, MEMORY, and VCPU.
    """


    command?: [str]

    environment?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverridesEnvironmentItems0]

    instanceType?: str

    resourceRequirements?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverridesResourceRequirementsItems0]


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverridesEnvironmentItems0:
    """
    KeyValuePair defines a key-value pair object.

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderNodeOverridesNodePropertyOverridesItems0ContainerOverridesResourceRequirementsItems0:
    """
    ResourceRequirement defines the type and amount of a resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU.

    Attributes
    ----------
    resourceType : str, default is Undefined, required
        The type of resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU. 
         Type is a required field
    value : str, default is Undefined, required
        The quantity of the specified resource to reserve for the container. The values vary based on the type specified. 
         type="GPU" 
         The number of physical GPUs to reserve for the container. The number of GPUs reserved for all containers in a job shouldn't exceed the number of available GPUs on the compute resource that the job is launched on. 
         GPUs are not available for jobs that are running on Fargate resources. 
         type="MEMORY" 
         The memory hard limit (in MiB) present to the container. This parameter is supported for jobs that are running on EC2 resources. If your container attempts to exceed the memory specified, the container is terminated. This parameter maps to Memory in the Create a container (https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.23/) and the --memory option to docker run (https://docs.docker.com/engine/reference/run/). You must specify at least 4 MiB of memory for a job. This is required but can be specified in several places for multi-node parallel (MNP) jobs. It must be specified for each node at least once. This parameter maps to Memory in the Create a container (https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.23/) and the --memory option to docker run (https://docs.docker.com/engine/reference/run/). 
         If you're trying to maximize your resource utilization by providing your jobs as much memory as possible for a particular instance type, see Memory Management (https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html) in the Batch User Guide. 
         For jobs that are running on Fargate resources, then value is the hard limit (in MiB), and must match one of the supported values and the VCPU values must be one of the values supported for that memory value. 
         value = 512 
         VCPU = 0.25 
         value = 1024 
         VCPU = 0.25 or 0.5 
         value = 2048 
         VCPU = 0.25, 0.5, or 1 
         value = 3072 
         VCPU = 0.5, or 1 
         value = 4096 
         VCPU = 0.5, 1, or 2 
         value = 5120, 6144, or 7168 
         VCPU = 1 or 2 
         value = 8192 
         VCPU = 1, 2, or 4 
         value = 9216, 10240, 11264, 12288, 13312, 14336, 15360, or 16384 
         VCPU = 2 or 4 
         value = 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696, or 30720 
         VCPU = 4 
         type="VCPU" 
         The number of vCPUs reserved for the container. This parameter maps to CpuShares in the Create a container (https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.23/) and the --cpu-shares option to docker run (https://docs.docker.com/engine/reference/run/). Each vCPU is equivalent to 1,024 CPU shares. For EC2 resources, you must specify at least one vCPU. This is required but can be specified in several places; it must be specified for each node at least once. 
         For jobs that are running on Fargate resources, then value must match one of the supported values and the MEMORY values must be one of the values supported for that VCPU value. The supported values are 0.25, 0.5, 1, 2, and 4 
         value = 0.25 
         MEMORY = 512, 1024, or 2048 
         value = 0.5 
         MEMORY = 1024, 2048, 3072, or 4096 
         value = 1 
         MEMORY = 2048, 3072, 4096, 5120, 6144, 7168, or 8192 
         value = 2 
         MEMORY = 4096, 5120, 6144, 7168, 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, or 16384 
         value = 4 
         MEMORY = 8192, 9216, 10240, 11264, 12288, 13312, 14336, 15360, 16384, 17408, 18432, 19456, 20480, 21504, 22528, 23552, 24576, 25600, 26624, 27648, 28672, 29696, or 30720 
         Value is a required field
    """


    resourceType: "GPU" | "MEMORY" | "VCPU"

    value: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderRetryStrategy:
    """
    The retry strategy to use for failed jobs from this SubmitJob operation. When a retry strategy is specified here, it overrides the retry strategy defined in the job definition.

    Attributes
    ----------
    attempts : int, default is Undefined, optional
        The number of times to move a job to the RUNNABLE status. You can specify between 1 and 10 attempts. If the value of attempts is greater than one, the job is retried on failure the same number of attempts as the value.
    evaluateOnExit : [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderRetryStrategyEvaluateOnExitItems0], default is Undefined, optional
        Array of up to 5 objects that specify conditions under which the job should be retried or failed. If this parameter is specified, then the attempts parameter must also be specified.
    """


    attempts?: int

    evaluateOnExit?: [BatchAwsCrossplaneIoV1alpha1JobSpecForProviderRetryStrategyEvaluateOnExitItems0]


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderRetryStrategyEvaluateOnExitItems0:
    """
    EvaluateOnExit specifies a set of conditions to be met, and an action to take (RETRY or EXIT) if all conditions are met.

    Attributes
    ----------
    action : str, default is Undefined, required
        Specifies the action to take if all of the specified conditions (onStatusReason, onReason, and onExitCode) are met. The values aren't case sensitive. (AWS gives lowercase back!) Action is a required field
    onExitCode : str, default is Undefined, optional
        Contains a glob pattern to match against the decimal representation of the ExitCode returned for a job. The pattern can be up to 512 characters in length. It can contain only numbers, and can optionally end with an asterisk (*) so that only the start of the string needs to be an exact match.
    onReason : str, default is Undefined, optional
        Contains a glob pattern to match against the Reason returned for a job. The pattern can be up to 512 characters in length. It can contain letters, numbers, periods (.), colons (:), and white space (including spaces and tabs). It can optionally end with an asterisk (*) so that only the start of the string needs to be an exact match.
    onStatusReason : str, default is Undefined, optional
        Contains a glob pattern to match against the StatusReason returned for a job. The pattern can be up to 512 characters in length. It can contain letters, numbers, periods (.), colons (:), and white space (including spaces or tabs). It can optionally end with an asterisk (*) so that only the start of the string needs to be an exact match.
    """


    action: "retry" | "exit"

    onExitCode?: str

    onReason?: str

    onStatusReason?: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecForProviderTimeout:
    """
    The timeout configuration for this SubmitJob operation. You can specify a timeout duration after which Batch terminates your jobs if they haven't finished. If a job is terminated due to a timeout, it isn't retried. The minimum value for the timeout is 60 seconds. This configuration overrides any timeout configuration specified in the job definition. For array jobs, child jobs have the same timeout configuration as the parent job. For more information, see Job Timeouts (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    attemptDurationSeconds : int, default is Undefined, optional
        The time duration in seconds (measured from the job attempt's startedAt timestamp) after which Batch terminates your jobs if they have not finished. The minimum value for the timeout is 60 seconds.
    """


    attemptDurationSeconds?: int


schema BatchAwsCrossplaneIoV1alpha1JobSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecProviderConfigRefPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecProviderRefPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToConfigRef

    metadata?: BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToMetadata

    name: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToConfigRefPolicy


schema BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsCrossplaneIoV1alpha1JobSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BatchAwsCrossplaneIoV1alpha1JobSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BatchAwsCrossplaneIoV1alpha1JobStatus:
    """
    A JobStatus represents the observed state of a Job.

    Attributes
    ----------
    atProvider : BatchAwsCrossplaneIoV1alpha1JobStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BatchAwsCrossplaneIoV1alpha1JobStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: BatchAwsCrossplaneIoV1alpha1JobStatusAtProvider

    conditions?: [BatchAwsCrossplaneIoV1alpha1JobStatusConditionsItems0]


schema BatchAwsCrossplaneIoV1alpha1JobStatusAtProvider:
    """
    JobObservation keeps the state for the external resource

    Attributes
    ----------
    arrayProperties : BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderArrayProperties, default is Undefined, optional
        array properties
    attempts : [BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0], default is Undefined, optional
        A list of job attempts associated with this job.
    createdAt : int, default is Undefined, optional
        The Unix timestamp (in milliseconds) for when the job was created. For non-array jobs and parent array jobs, this is when the job entered the SUBMITTED state (at the time SubmitJob was called). For array child jobs, this is when the child job was spawned by its parent and entered the PENDING state.
    jobArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the job.
    jobId : str, default is Undefined, optional
        The ID for the job.
    startedAt : int, default is Undefined, optional
        The Unix timestamp (in milliseconds) for when the job was started (when the job transitioned from the STARTING state to the RUNNING state). This parameter isn't provided for child jobs of array jobs or multi-node parallel jobs.
    status : str, default is Undefined, optional
        The current status for the job. 
         If your jobs don't progress to STARTING, see Jobs Stuck in RUNNABLE Status (https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#job_stuck_in_runnable) in the troubleshooting section of the Batch User Guide.
    statusReason : str, default is Undefined, optional
        A short, human-readable string to provide additional details about the current status of the job.
    stoppedAt : int, default is Undefined, optional
        The Unix timestamp (in milliseconds) for when the job was stopped (when the job transitioned from the RUNNING state to a terminal state, such as SUCCEEDED or FAILED).
    """


    arrayProperties?: BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderArrayProperties

    attempts?: [BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0]

    createdAt?: int

    jobArn?: str

    jobId?: str

    startedAt?: int

    status?: str

    statusReason?: str

    stoppedAt?: int


schema BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderArrayProperties:
    """
    The array properties of the job, if it is an array job.

    Attributes
    ----------
    index : int, default is Undefined, optional
        The job index within the array that's associated with this job. This parameter is returned for array job children.
    size : int, default is Undefined, optional
        The size of the array job. This parameter is returned for parent array jobs.
    statusSummary : {str:int}, default is Undefined, optional
        A summary of the number of array job children in each available job status. This parameter is returned for parent array jobs.
    """


    index?: int

    size?: int

    statusSummary?: {str:int}


schema BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0:
    """
    AttemptDetail defines a job attempt for observation

    Attributes
    ----------
    container : BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0Container, default is Undefined, optional
        container
    startedAt : int, default is Undefined, optional
        The Unix timestamp (in milliseconds) for when the attempt was started (when the attempt transitioned from the STARTING state to the RUNNING state).
    statusReason : str, default is Undefined, optional
        A short, human-readable string to provide additional details about the current status of the job attempt.
    stoppedAt : int, default is Undefined, optional
        The Unix timestamp (in milliseconds) for when the attempt was stopped (when the attempt transitioned from the RUNNING state to a terminal state, such as SUCCEEDED or FAILED).
    """


    container?: BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0Container

    startedAt?: int

    statusReason?: str

    stoppedAt?: int


schema BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0Container:
    """
    Details about the container in this job attempt.

    Attributes
    ----------
    containerInstanceArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon ECS container instance that hosts the job attempt.
    exitCode : int, default is Undefined, optional
        The exit code for the job attempt. A non-zero exit code is considered a failure.
    logStreamName : str, default is Undefined, optional
        The name of the CloudWatch Logs log stream associated with the container. The log group for Batch jobs is /aws/batch/job. Each container attempt receives a log stream name when they reach the RUNNING status.
    networkInterfaces : [BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0ContainerNetworkInterfacesItems0], default is Undefined, optional
        The network interfaces associated with the job attempt.
    reason : str, default is Undefined, optional
        A short (255 max characters) human-readable string to provide additional details about a running or stopped container.
    taskArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon ECS task that's associated with the job attempt. Each container attempt receives a task ARN when they reach the STARTING status.
    """


    containerInstanceArn?: str

    exitCode?: int

    logStreamName?: str

    networkInterfaces?: [BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0ContainerNetworkInterfacesItems0]

    reason?: str

    taskArn?: str


schema BatchAwsCrossplaneIoV1alpha1JobStatusAtProviderAttemptsItems0ContainerNetworkInterfacesItems0:
    """
    NetworkInterface defines the elastic network interface for a multi-node parallel job node for observation.

    Attributes
    ----------
    attachmentId : str, default is Undefined, optional
        The attachment ID for the network interface.
    ipv6Address : str, default is Undefined, optional
        The private IPv6 address for the network interface.
    privateIpv4Address : str, default is Undefined, optional
        The private IPv4 address for the network interface.
    """


    attachmentId?: str

    ipv6Address?: str

    privateIpv4Address?: str


schema BatchAwsCrossplaneIoV1alpha1JobStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


