"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stream:
    """
    Stream is the Schema for the Streams API

    Attributes
    ----------
    apiVersion : str, default is "kinesis.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stream", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KinesisAwsCrossplaneIoV1alpha1StreamSpec, default is Undefined, required
        spec
    status : KinesisAwsCrossplaneIoV1alpha1StreamStatus, default is Undefined, optional
        status
    """


    apiVersion: "kinesis.aws.crossplane.io/v1alpha1" = "kinesis.aws.crossplane.io/v1alpha1"

    kind: "Stream" = "Stream"

    metadata?: v1.ObjectMeta

    spec: KinesisAwsCrossplaneIoV1alpha1StreamSpec

    status?: KinesisAwsCrossplaneIoV1alpha1StreamStatus


schema KinesisAwsCrossplaneIoV1alpha1StreamSpec:
    """
    StreamSpec defines the desired state of Stream

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : KinesisAwsCrossplaneIoV1alpha1StreamSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KinesisAwsCrossplaneIoV1alpha1StreamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KinesisAwsCrossplaneIoV1alpha1StreamSpecForProvider

    providerConfigRef?: KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderConfigRef

    providerRef?: KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderRef

    publishConnectionDetailsTo?: KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KinesisAwsCrossplaneIoV1alpha1StreamSpecWriteConnectionSecretToRef


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProvider:
    """
    StreamParameters defines the desired state of Stream

    Attributes
    ----------
    enforceConsumerDeletion : bool, default is Undefined, optional
        If this parameter is unset (null) or if you set it to false, and the stream has registered consumers, the call to DeleteStream fails with a ResourceInUseException.
    enhancedMetrics : [KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderEnhancedMetricsItems0], default is Undefined, optional
        List of shard-level metrics. 
         The following are the valid shard-level metrics. The value "ALL" enhances every metric. 
         * IncomingBytes 
         * IncomingRecords 
         * OutgoingBytes 
         * OutgoingRecords 
         * WriteProvisionedThroughputExceeded 
         * ReadProvisionedThroughputExceeded 
         * IteratorAgeMilliseconds 
         * ALL 
         For more information, see Monitoring the Amazon Kinesis Data Streams Service with Amazon CloudWatch (https://docs.aws.amazon.com/kinesis/latest/dev/monitoring-with-cloudwatch.html) in the Amazon Kinesis Data Streams Developer Guide.
    kmsKeyARN : str, default is Undefined, optional
        kms key a r n
    kmsKeyARNRef : KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNRef, default is Undefined, optional
        kms key a r n ref
    kmsKeyARNSelector : KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNSelector, default is Undefined, optional
        kms key a r n selector
    region : str, default is Undefined, required
        Region is which region the Stream will be created.
    retentionPeriodHours : int, default is Undefined, optional
        The retention period of the stream, in hours. Default: 24 hours
    shardCount : int, default is Undefined, optional
        The number of shards that the stream will use. The throughput of the stream is a function of the number of shards; more shards are required for greater provisioned throughput.
    streamModeDetails : KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderStreamModeDetails, default is Undefined, optional
        stream mode details
    tags : [KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderTagsItems0], default is Undefined, optional
        tags
    """


    enforceConsumerDeletion?: bool

    enhancedMetrics?: [KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderEnhancedMetricsItems0]

    kmsKeyARN?: str

    kmsKeyARNRef?: KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNRef

    kmsKeyARNSelector?: KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNSelector

    region: str

    retentionPeriodHours?: int

    shardCount?: int

    streamModeDetails?: KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderStreamModeDetails

    tags?: [KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderTagsItems0]


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderEnhancedMetricsItems0:
    """
    kinesis aws crossplane io v1alpha1 stream spec for provider enhanced metrics items0

    Attributes
    ----------
    shardLevelMetrics : [str], default is Undefined, optional
        shard level metrics
    """


    shardLevelMetrics?: [str]


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNRefPolicy


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNSelectorPolicy


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderKmsKeyARNSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderStreamModeDetails:
    """
    Indicates the capacity mode of the data stream. Currently, in Kinesis Data Streams, you can choose between an on-demand capacity mode and a provisioned capacity mode for your data streams.

    Attributes
    ----------
    streamMode : str, default is Undefined, optional
        stream mode
    """


    streamMode?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecForProviderTagsItems0:
    """
    CustomTag contains the additional fields for Tag.

    Attributes
    ----------
    key : str, default is Undefined, required
        A unique identifier for the tag.
    value : str, default is Undefined, optional
        An optional string, typically used to describe or define the tag.
    """


    key: str

    value?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderConfigRefPolicy


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderRefPolicy


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToConfigRef

    metadata?: KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToMetadata

    name: str


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToConfigRefPolicy


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KinesisAwsCrossplaneIoV1alpha1StreamStatus:
    """
    StreamStatus defines the observed state of Stream.

    Attributes
    ----------
    atProvider : KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KinesisAwsCrossplaneIoV1alpha1StreamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProvider

    conditions?: [KinesisAwsCrossplaneIoV1alpha1StreamStatusConditionsItems0]


schema KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProvider:
    """
    StreamObservation defines the observed state of Stream

    Attributes
    ----------
    encryptionType : str, default is Undefined, optional
        The server-side encryption type used on the stream. This parameter can be one of the following values: 
         * NONE: Do not encrypt the records in the stream. 
         * KMS: Use server-side encryption on the records in the stream using a customer-managed Amazon Web Services KMS key.
    enhancedMonitoring : [KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderEnhancedMonitoringItems0], default is Undefined, optional
        Represents the current enhanced monitoring settings of the stream.
    hasMoreShards : bool, default is Undefined, optional
        If set to true, more shards in the stream are available to describe.
    keyID : str, default is Undefined, optional
        The GUID for the customer-managed Amazon Web Services KMS key to use for encryption. This value can be a globally unique identifier, a fully specified ARN to either an alias or a key, or an alias name prefixed by "alias/".You can also use a master key owned by Kinesis Data Streams by specifying the alias aws/kinesis. 
         * Key ARN example: arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012 
         * Alias ARN example: arn:aws:kms:us-east-1:123456789012:alias/MyAliasName 
         * Globally unique key ID example: 12345678-1234-1234-1234-123456789012 
         * Alias name example: alias/MyAliasName 
         * Master key owned by Kinesis Data Streams: alias/aws/kinesis
    retentionPeriodHours : int, default is Undefined, optional
        The current retention period, in hours. Minimum value of 24. Maximum value of 168.
    shards : [KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0], default is Undefined, optional
        The shards that comprise the stream.
    streamARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the stream being described.
    streamStatus : str, default is Undefined, optional
        The current status of the stream being described. The stream status is one of the following states: 
         * CREATING - The stream is being created. Kinesis Data Streams immediately returns and sets StreamStatus to CREATING. 
         * DELETING - The stream is being deleted. The specified stream is in the DELETING state until Kinesis Data Streams completes the deletion. 
         * ACTIVE - The stream exists and is ready for read and write operations or deletion. You should perform read and write operations only on an ACTIVE stream. 
         * UPDATING - Shards in the stream are being merged or split. Read and write operations continue to work while the stream is in the UPDATING state.
    """


    encryptionType?: str

    enhancedMonitoring?: [KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderEnhancedMonitoringItems0]

    hasMoreShards?: bool

    keyID?: str

    retentionPeriodHours?: int

    shards?: [KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0]

    streamARN?: str

    streamStatus?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderEnhancedMonitoringItems0:
    """
    kinesis aws crossplane io v1alpha1 stream status at provider enhanced monitoring items0

    Attributes
    ----------
    shardLevelMetrics : [str], default is Undefined, optional
        shard level metrics
    """


    shardLevelMetrics?: [str]


schema KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0:
    """
    kinesis aws crossplane io v1alpha1 stream status at provider shards items0

    Attributes
    ----------
    adjacentParentShardID : str, default is Undefined, optional
        adjacent parent shard ID
    hashKeyRange : KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0HashKeyRange, default is Undefined, optional
        hash key range
    parentShardID : str, default is Undefined, optional
        parent shard ID
    sequenceNumberRange : KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0SequenceNumberRange, default is Undefined, optional
        sequence number range
    shardID : str, default is Undefined, optional
        shard ID
    """


    adjacentParentShardID?: str

    hashKeyRange?: KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0HashKeyRange

    parentShardID?: str

    sequenceNumberRange?: KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0SequenceNumberRange

    shardID?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0HashKeyRange:
    """
    The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.

    Attributes
    ----------
    endingHashKey : str, default is Undefined, optional
        ending hash key
    startingHashKey : str, default is Undefined, optional
        starting hash key
    """


    endingHashKey?: str

    startingHashKey?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamStatusAtProviderShardsItems0SequenceNumberRange:
    """
    The range of possible sequence numbers for the shard.

    Attributes
    ----------
    endingSequenceNumber : str, default is Undefined, optional
        ending sequence number
    startingSequenceNumber : str, default is Undefined, optional
        starting sequence number
    """


    endingSequenceNumber?: str

    startingSequenceNumber?: str


schema KinesisAwsCrossplaneIoV1alpha1StreamStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


