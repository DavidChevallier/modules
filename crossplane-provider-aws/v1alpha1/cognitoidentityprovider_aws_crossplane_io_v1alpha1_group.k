"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Group:
    """
    Group is the Schema for the Groups API

    Attributes
    ----------
    apiVersion : str, default is "cognitoidentityprovider.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Group", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpec, default is Undefined, required
        spec
    status : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "cognitoidentityprovider.aws.crossplane.io/v1alpha1" = "cognitoidentityprovider.aws.crossplane.io/v1alpha1"

    kind: "Group" = "Group"

    metadata?: v1.ObjectMeta

    spec: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpec

    status?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatus


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpec:
    """
    GroupSpec defines the desired state of Group

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProvider

    providerConfigRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderConfigRef

    providerRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderRef

    publishConnectionDetailsTo?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecWriteConnectionSecretToRef


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProvider:
    """
    GroupParameters defines the desired state of Group

    Attributes
    ----------
    description : str, default is Undefined, optional
        A string containing the description of the group.
    precedence : int, default is Undefined, optional
        A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower Precedence values take precedence over groups with higher ornull Precedence values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the cognito:roles and cognito:preferred_role claims. 
         Two groups can have the same Precedence value. If this happens, neither group takes precedence over the other. If two groups with the same Precedence have the same role ARN, that role is used in the cognito:preferred_role claim in tokens for users in each group. If the two groups have different role ARNs, the cognito:preferred_role claim isn't set in users' tokens. 
         The default Precedence value is null.
    region : str, default is Undefined, required
        Region is which region the Group will be created.
    roleArn : str, default is Undefined, optional
        The role ARN for the group.
    roleArnRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    userPoolId : str, default is Undefined, optional
        The user pool ID.
    userPoolIdRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    """


    description?: str

    precedence?: int

    region: str

    roleArn?: str

    roleArnRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnRef

    roleArnSelector?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnSelector

    userPoolId?: str

    userPoolIdRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDRef

    userPoolIdSelector?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDSelector


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnRef:
    """
    UserPoolIDRef is a reference to an server instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnSelector:
    """
    UserPoolIDSelector selects references to an server instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnSelectorPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderRoleArnSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDRef:
    """
    UserPoolIDRef is a reference to an server instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDSelector:
    """
    UserPoolIDSelector selects references to an server instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDSelectorPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecForProviderUserPoolIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToConfigRef

    metadata?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToMetadata

    name: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatus:
    """
    GroupStatus defines the observed state of Group.

    Attributes
    ----------
    atProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatusAtProvider

    conditions?: [CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatusConditionsItems0]


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatusAtProvider:
    """
    GroupObservation defines the observed state of Group

    Attributes
    ----------
    creationDate : str, default is Undefined, optional
        The date the group was created.
    groupName : str, default is Undefined, optional
        The name of the group.
    lastModifiedDate : str, default is Undefined, optional
        The date the group was last modified.
    roleARN : str, default is Undefined, optional
        The role Amazon Resource Name (ARN) for the group.
    userPoolID : str, default is Undefined, optional
        The user pool ID for the user pool.
    """


    creationDate?: str

    groupName?: str

    lastModifiedDate?: str

    roleARN?: str

    userPoolID?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1GroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


