"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecurityGroupRule:
    """
    A SecurityGroupRule is a managed resource that represents an SecurityGroupRule

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecurityGroupRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "SecurityGroupRule" = "SecurityGroupRule"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpec

    status?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatus


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpec:
    """
    A SecurityGroupRuleSpec defines the desired state of a SecurityGroupRule.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProvider:
    """
    SecurityGroupRuleParameters define the desired state of the SecurityGroupRule

    Attributes
    ----------
    cidrBlock : str, default is Undefined, optional
        cidr block
    description : str, default is Undefined, optional
        description
    fromPort : int, default is Undefined, required
        from port
    ipv6cidrBlock : str, default is Undefined, optional
        ipv6cidr block
    prefixListId : str, default is Undefined, optional
        prefix list Id
    $protocol : str, default is Undefined, required
        protocol
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupId : str, default is Undefined, optional
        If using a SecurityGroup managed by crossplane as reference, enable ignoreIngress or ignoreEgress on the sg to prevent the rules to be constantly created and deleted
    securityGroupIdRef : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDRef, default is Undefined, optional
        security group Id ref
    securityGroupIdSelector : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    sourceSecurityGroupId : str, default is Undefined, optional
        source security group Id
    sourceSecurityGroupIdRef : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDRef, default is Undefined, optional
        source security group Id ref
    sourceSecurityGroupIdSelector : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDSelector, default is Undefined, optional
        source security group Id selector
    toPort : int, default is Undefined, required
        to port
    $type : str, default is Undefined, required
        Type of rule, ingress (inbound) or egress (outbound).
    """


    cidrBlock?: str

    description?: str

    fromPort: int

    ipv6cidrBlock?: str

    prefixListId?: str

    $protocol: str

    region: str

    securityGroupId?: str

    securityGroupIdRef?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDRef

    securityGroupIdSelector?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDSelector

    sourceSecurityGroupId?: str

    sourceSecurityGroupIdRef?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDRef

    sourceSecurityGroupIdSelector?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDSelector

    toPort: int

    $type: str


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDRef:
    """
    If using a SecurityGroup managed by crossplane as reference, enable ignoreIngress or ignoreEgress on the sg to prevent the rules to be constantly created and deleted

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSecurityGroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecForProviderSourceSecurityGroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatus:
    """
    A SecurityGroupRuleStatus represents the observed state of a SecurityGroupRule.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatusAtProvider:
    """
    SecurityGroupRuleObservation keeps the state for the external resource

    Attributes
    ----------
    SecurityGroupRuleId : str, default is Undefined, optional
        The association ID for the SecurityGroupRule block.
    """


    SecurityGroupRuleId?: str


schema Ec2AwsCrossplaneIoV1alpha1SecurityGroupRuleStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


