"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ResolverEndpoint:
    """
    ResolverEndpoint is the Schema for the ResolverEndpoints API

    Attributes
    ----------
    apiVersion : str, default is "route53resolver.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ResolverEndpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpec, default is Undefined, required
        spec
    status : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53resolver.aws.crossplane.io/v1alpha1" = "route53resolver.aws.crossplane.io/v1alpha1"

    kind: "ResolverEndpoint" = "ResolverEndpoint"

    metadata?: v1.ObjectMeta

    spec: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpec

    status?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatus


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpec:
    """
    ResolverEndpointSpec defines the desired state of ResolverEndpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProvider

    providerConfigRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderConfigRef

    providerRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderRef

    publishConnectionDetailsTo?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecWriteConnectionSecretToRef


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProvider:
    """
    ResolverEndpointParameters defines the desired state of ResolverEndpoint

    Attributes
    ----------
    direction : str, default is Undefined, required
        Specify the applicable value: 
         * INBOUND: Resolver forwards DNS queries to the DNS service for a VPC from your network 
         * OUTBOUND: Resolver forwards DNS queries from the DNS service for a VPC to your network
    ipAddresses : [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0], default is Undefined, required
        IPAddresses are the subnets and IP addresses in your VPC that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). The subnet ID uniquely identifies a VPC.
    name : str, default is Undefined, optional
        A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.
    region : str, default is Undefined, required
        Region is which region the ResolverEndpoint will be created.
    securityGroupIdRefs : [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        SecurityGroupIDRefs is a list of references to SecurityGroups used to set the SecurityGroupIDs.
    securityGroupIdSelector : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify must include one or more inbound rules (for inbound Resolver endpoints) or outbound rules (for outbound Resolver endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.
    tags : [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderTagsItems0], default is Undefined, optional
        A list of the tag keys and values that you want to associate with the endpoint.
    """


    direction: str

    ipAddresses: [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0]

    name?: str

    region: str

    securityGroupIdRefs?: [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    tags?: [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderTagsItems0]


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0:
    """
    IPAddressRequest is used by ResolverEndpoint

    Attributes
    ----------
    ip : str, default is Undefined, optional
        IP address that you want to use for DNS queries.
    subnetId : str, default is Undefined, optional
        SubnetId is the ID of the subnet that contains the IP address.
    subnetIdRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    ip?: str

    subnetId?: str

    subnetIdRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDRef

    subnetIdSelector?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDSelector


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDRef:
    """
    SubnetIDRefs is a list of references to Subnets used to set the SubnetIDs.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDSelector:
    """
    SubnetIDSelector selects references to Subnets used to set the SubnetIDs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDSelectorPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderIPAddressesItems0SubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDRefsItems0Policy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDSelector:
    """
    SecurityGroupIDsSelector selects references to SecurityGroupID used to set the SecurityGroupIDs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDSelectorPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderSecurityGroupIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecForProviderTagsItems0:
    """
    route53resolver aws crossplane io v1alpha1 resolver endpoint spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderConfigRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatus:
    """
    ResolverEndpointStatus defines the observed state of ResolverEndpoint.

    Attributes
    ----------
    atProvider : Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatusAtProvider

    conditions?: [Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatusConditionsItems0]


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatusAtProvider:
    """
    ResolverEndpointObservation defines the observed state of ResolverEndpoint

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN (Amazon Resource Name) for the Resolver endpoint.
    creationTime : str, default is Undefined, optional
        The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).
    creatorRequestID : str, default is Undefined, optional
        A unique string that identifies the request that created the Resolver endpoint. The CreatorRequestId allows failed requests to be retried without the risk of running the operation twice.
    hostVPCID : str, default is Undefined, optional
        The ID of the VPC that you want to create the Resolver endpoint in.
    id : str, default is Undefined, optional
        The ID of the Resolver endpoint.
    ipAddressCount : int, default is Undefined, optional
        The number of IP addresses that the Resolver endpoint can use for DNS queries.
    modificationTime : str, default is Undefined, optional
        The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).
    securityGroupIDs : [str], default is Undefined, optional
        The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound rules (for inbound endpoints) or outbound rules (for outbound endpoints). Inbound and outbound rules must allow TCP and UDP access. For inbound access, open port 53. For outbound access, open the port that you're using for DNS queries on your network.
    status : str, default is Undefined, optional
        A code that specifies the current status of the Resolver endpoint. Valid values include the following: 
         * CREATING: Resolver is creating and configuring one or more Amazon VPC network interfaces for this endpoint. 
         * OPERATIONAL: The Amazon VPC network interfaces for this endpoint are correctly configured and able to pass inbound or outbound DNS queries between your network and Resolver. 
         * UPDATING: Resolver is associating or disassociating one or more network interfaces with this endpoint. 
         * AUTO_RECOVERING: Resolver is trying to recover one or more of the network interfaces that are associated with this endpoint. During the recovery process, the endpoint functions with limited capacity because of the limit on the number of DNS queries per IP address (per network interface). For the current limit, see Limits on Route 53 Resolver (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-entities-resolver). 
         * ACTION_NEEDED: This endpoint is unhealthy, and Resolver can't automatically recover it. To resolve the problem, we recommend that you check each IP address that you associated with the endpoint. For each IP address that isn't available, add another IP address and then delete the IP address that isn't available. (An endpoint must always include at least two IP addresses.) A status of ACTION_NEEDED can have a variety of causes. Here are two common causes: One or more of the network interfaces that are associated with the endpoint were deleted using Amazon VPC. The network interface couldn't be created for some reason that's outside the control of Resolver. 
         * DELETING: Resolver is deleting this endpoint and the associated network interfaces.
    statusMessage : str, default is Undefined, optional
        A detailed description of the status of the Resolver endpoint.
    """


    arn?: str

    creationTime?: str

    creatorRequestID?: str

    hostVPCID?: str

    id?: str

    ipAddressCount?: int

    modificationTime?: str

    securityGroupIDs?: [str]

    status?: str

    statusMessage?: str


schema Route53resolverAwsCrossplaneIoV1alpha1ResolverEndpointStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


