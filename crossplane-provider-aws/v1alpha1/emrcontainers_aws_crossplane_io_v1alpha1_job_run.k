"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema JobRun:
    """
    JobRun is the Schema for the JobRuns API

    Attributes
    ----------
    apiVersion : str, default is "emrcontainers.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "JobRun", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpec, default is Undefined, required
        spec
    status : EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatus, default is Undefined, optional
        status
    """


    apiVersion: "emrcontainers.aws.crossplane.io/v1alpha1" = "emrcontainers.aws.crossplane.io/v1alpha1"

    kind: "JobRun" = "JobRun"

    metadata?: v1.ObjectMeta

    spec: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpec

    status?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatus


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpec:
    """
    JobRunSpec defines the desired state of JobRun

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProvider

    providerConfigRef?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderConfigRef

    providerRef?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderRef

    publishConnectionDetailsTo?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecWriteConnectionSecretToRef


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProvider:
    """
    JobRunParameters defines the desired state of JobRun

    Attributes
    ----------
    configurationOverrides : str, default is Undefined, optional
        configuration overrides
    executionRoleARN : str, default is Undefined, required
        The execution role ARN for the job run.
    jobDriver : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderJobDriver, default is Undefined, required
        job driver
    region : str, default is Undefined, required
        Region is which region the JobRun will be created.
    releaseLabel : str, default is Undefined, required
        The Amazon EMR release version to use for the job run.
    tags : {str:str}, default is Undefined, optional
        The tags assigned to job runs.
    virtualClusterId : str, default is Undefined, optional
        The virtual cluster ID for which the job run request is submitted.
    virtualClusterIdRef : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDRef, default is Undefined, optional
        virtual cluster Id ref
    virtualClusterIdSelector : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDSelector, default is Undefined, optional
        virtual cluster Id selector
    """


    configurationOverrides?: str

    executionRoleARN: str

    jobDriver: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderJobDriver

    region: str

    releaseLabel: str

    tags?: {str:str}

    virtualClusterId?: str

    virtualClusterIdRef?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDRef

    virtualClusterIdSelector?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDSelector


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderJobDriver:
    """
    The job driver for the job run.

    Attributes
    ----------
    sparkSubmitJobDriver : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderJobDriverSparkSubmitJobDriver, default is Undefined, optional
        spark submit job driver
    """


    sparkSubmitJobDriver?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderJobDriverSparkSubmitJobDriver


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderJobDriverSparkSubmitJobDriver:
    """
    The information about job driver for Spark submit.

    Attributes
    ----------
    entryPoint : str, default is Undefined, optional
        entry point
    entryPointArguments : [str], default is Undefined, optional
        entry point arguments
    sparkSubmitParameters : str, default is Undefined, optional
        spark submit parameters
    """


    entryPoint?: str

    entryPointArguments?: [str]

    sparkSubmitParameters?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDRef:
    """
    VirtualClusterIdRef is a reference to an API used to set the VirtualClusterId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDSelector:
    """
    VirtualClusterIdSelector is a reference to an API used to set the VirtualClusterIdSelector.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDSelectorPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecForProviderVirtualClusterIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderConfigRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToConfigRef

    metadata?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToMetadata

    name: str


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToConfigRefPolicy


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatus:
    """
    JobRunStatus defines the observed state of JobRun.

    Attributes
    ----------
    atProvider : EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatusAtProvider

    conditions?: [EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatusConditionsItems0]


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatusAtProvider:
    """
    JobRunObservation defines the observed state of JobRun

    Attributes
    ----------
    arn : str, default is Undefined, optional
        This output lists the ARN of job run.
    failureReason : str, default is Undefined, optional
        The reasons why the job run has failed.
    id : str, default is Undefined, optional
        This output displays the started job run ID.
    name : str, default is Undefined, optional
        This output displays the name of the started job run.
    state : str, default is Undefined, optional
        The state of the job run.
    stateDetails : str, default is Undefined, optional
        Additional details of the job run state.
    virtualClusterID : str, default is Undefined, optional
        This output displays the virtual cluster ID for which the job run was submitted.
    """


    arn?: str

    failureReason?: str

    id?: str

    name?: str

    state?: str

    stateDetails?: str

    virtualClusterID?: str


schema EmrcontainersAwsCrossplaneIoV1alpha1JobRunStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


