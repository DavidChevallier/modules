"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TransferUser:
    """
    User is the Schema for the Users API

    Attributes
    ----------
    apiVersion : str, default is "transfer.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "User", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TransferAwsCrossplaneIoV1alpha1UserSpec, default is Undefined, required
        spec
    status : TransferAwsCrossplaneIoV1alpha1UserStatus, default is Undefined, optional
        status
    """


    apiVersion: "transfer.aws.crossplane.io/v1alpha1" = "transfer.aws.crossplane.io/v1alpha1"

    kind: "User" = "User"

    metadata?: v1.ObjectMeta

    spec: TransferAwsCrossplaneIoV1alpha1UserSpec

    status?: TransferAwsCrossplaneIoV1alpha1UserStatus


schema TransferAwsCrossplaneIoV1alpha1UserSpec:
    """
    UserSpec defines the desired state of User

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : TransferAwsCrossplaneIoV1alpha1UserSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : TransferAwsCrossplaneIoV1alpha1UserSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : TransferAwsCrossplaneIoV1alpha1UserSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : TransferAwsCrossplaneIoV1alpha1UserSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: TransferAwsCrossplaneIoV1alpha1UserSpecForProvider

    providerConfigRef?: TransferAwsCrossplaneIoV1alpha1UserSpecProviderConfigRef

    providerRef?: TransferAwsCrossplaneIoV1alpha1UserSpecProviderRef

    publishConnectionDetailsTo?: TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: TransferAwsCrossplaneIoV1alpha1UserSpecWriteConnectionSecretToRef


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProvider:
    r"""
    UserParameters defines the desired state of User

    Attributes
    ----------
    homeDirectory : str, default is Undefined, optional
        The landing directory (folder) for a user when they log in to the server using the client. 
         A HomeDirectory example is /bucket_name/home/mydirectory.
    homeDirectoryMappings : [TransferAwsCrossplaneIoV1alpha1UserSpecForProviderHomeDirectoryMappingsItems0], default is Undefined, optional
        Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the Entry and Target pair, where Entry shows how the path is made visible and Target is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in Target. This value can only be set when HomeDirectoryType is set to LOGICAL. 
         The following is an Entry and Target pair example. 
         [ { "Entry": "/directory1", "Target": "/bucket_name/home/mydirectory" } ] 
         In most cases, you can use this value instead of the session policy to lock your user down to the designated home directory ("chroot"). To do this, you can set Entry to / and set Target to the HomeDirectory parameter value. 
         The following is an Entry and Target pair example for chroot. 
         [ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]
    homeDirectoryType : str, default is Undefined, optional
        The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to PATH, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it LOGICAL, you need to provide mappings in the HomeDirectoryMappings for how you want to make Amazon S3 or EFS paths visible to your users.
    policy : str, default is Undefined, optional
        A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include ${Transfer:UserName}, ${Transfer:HomeDirectory}, and ${Transfer:HomeBucket}. 
         This only applies when the domain of ServerId is S3. EFS does not use session policies. 
         For session policies, Amazon Web Services Transfer Family stores the policy as a JSON blob, instead of the Amazon Resource Name (ARN) of the policy. You save the policy as a JSON blob and pass it in the Policy argument. 
         For an example of a session policy, see Example session policy (https://docs.aws.amazon.com/transfer/latest/userguide/session-policy.html). 
         For more information, see AssumeRole (https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html) in the Amazon Web Services Security Token Service API Reference.
    posixProfile : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderPosixProfile, default is Undefined, optional
        posix profile
    region : str, default is Undefined, required
        Region is which region the User will be created.
    role : str, default is Undefined, optional
        The IAM role that controls your users' access to your Amazon S3 bucket. The policies attached to this role will determine the level of access you want to provide your users when transferring files into and out of your Amazon S3 bucket or buckets. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.
    roleRef : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleRef, default is Undefined, optional
        role ref
    roleSelector : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleSelector, default is Undefined, optional
        role selector
    serverID : str, default is Undefined, optional
        A system-assigned unique identifier for a server instance. This is the specific server that you added your user to.
    serverIDRef : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDRef, default is Undefined, optional
        server ID ref
    serverIDSelector : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDSelector, default is Undefined, optional
        server ID selector
    sshPublicKeyBody : str, default is Undefined, optional
        The public portion of the Secure Shell (SSH) key used to authenticate the user to the server. 
         Currently, Transfer Family does not accept elliptical curve keys (keys beginning with ecdsa).
    tags : [TransferAwsCrossplaneIoV1alpha1UserSpecForProviderTagsItems0], default is Undefined, optional
        Key-value pairs that can be used to group and search for users. Tags are metadata attached to users for any purpose.
    """


    homeDirectory?: str

    homeDirectoryMappings?: [TransferAwsCrossplaneIoV1alpha1UserSpecForProviderHomeDirectoryMappingsItems0]

    homeDirectoryType?: str

    policy?: str

    posixProfile?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderPosixProfile

    region: str

    role?: str

    roleRef?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleRef

    roleSelector?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleSelector

    serverID?: str

    serverIDRef?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDRef

    serverIDSelector?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDSelector

    sshPublicKeyBody?: str

    tags?: [TransferAwsCrossplaneIoV1alpha1UserSpecForProviderTagsItems0]


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderHomeDirectoryMappingsItems0:
    """
    transfer aws crossplane io v1alpha1 user spec for provider home directory mappings items0

    Attributes
    ----------
    entry : str, default is Undefined, optional
        entry
    target : str, default is Undefined, optional
        target
    """


    entry?: str

    target?: str


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderPosixProfile:
    """
    Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in Amazon EFS determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.

    Attributes
    ----------
    gid : int, default is Undefined, optional
        gid
    secondaryGids : [int], default is Undefined, optional
        secondary gids
    uid : int, default is Undefined, optional
        uid
    """


    gid?: int

    secondaryGids?: [int]

    uid?: int


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleRef:
    """
    RoleRef is a reference to a IAM role.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleRefPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleSelector:
    """
    RoleSelector selects references to a IAM role.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleSelectorPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderRoleSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDRef:
    """
    ServerIDRef is a reference to an server instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDRefPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDSelector:
    """
    ServerIDSelector selects references to an server instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDSelectorPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderServerIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecForProviderTagsItems0:
    """
    transfer aws crossplane io v1alpha1 user spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema TransferAwsCrossplaneIoV1alpha1UserSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecProviderConfigRefPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecProviderRefPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRef

    metadata?: TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToMetadata

    name: str


schema TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRefPolicy


schema TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema TransferAwsCrossplaneIoV1alpha1UserSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema TransferAwsCrossplaneIoV1alpha1UserStatus:
    """
    UserStatus defines the observed state of User.

    Attributes
    ----------
    atProvider : TransferAwsCrossplaneIoV1alpha1UserStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [TransferAwsCrossplaneIoV1alpha1UserStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: TransferAwsCrossplaneIoV1alpha1UserStatusAtProvider

    conditions?: [TransferAwsCrossplaneIoV1alpha1UserStatusConditionsItems0]


schema TransferAwsCrossplaneIoV1alpha1UserStatusAtProvider:
    """
    UserObservation defines the observed state of User

    Attributes
    ----------
    serverID : str, default is Undefined, optional
        The ID of the server that the user is attached to.
    userName : str, default is Undefined, optional
        A unique string that identifies a user account associated with a server.
    """


    serverID?: str

    userName?: str


schema TransferAwsCrossplaneIoV1alpha1UserStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


