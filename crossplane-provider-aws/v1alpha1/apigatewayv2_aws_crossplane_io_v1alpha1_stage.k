"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stage:
    """
    Stage is the Schema for the Stages API

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stage", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsCrossplaneIoV1alpha1StageStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.crossplane.io/v1alpha1" = "apigatewayv2.aws.crossplane.io/v1alpha1"

    kind: "Stage" = "Stage"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpec

    status?: Apigatewayv2AwsCrossplaneIoV1alpha1StageStatus


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpec:
    """
    StageSpec defines the desired state of Stage

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProvider

    providerConfigRef?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderConfigRef

    providerRef?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderRef

    publishConnectionDetailsTo?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProvider:
    """
    StageParameters defines the desired state of Stage

    Attributes
    ----------
    accessLogSettings : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAccessLogSettings, default is Undefined, optional
        access log settings
    apiId : str, default is Undefined, optional
        APIID is the ID for the API.
    apiIdRef : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    autoDeploy : bool, default is Undefined, optional
        auto deploy
    clientCertificateID : str, default is Undefined, optional
        client certificate ID
    defaultRouteSettings : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderDefaultRouteSettings, default is Undefined, optional
        default route settings
    deploymentID : str, default is Undefined, optional
        deployment ID
    description : str, default is Undefined, optional
        description
    region : str, default is Undefined, required
        Region is which region the Stage will be created.
    routeSettings : {str:Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderRouteSettingsAnon}, default is Undefined, optional
        route settings
    stageVariables : {str:str}, default is Undefined, optional
        stage variables
    tags : {str:str}, default is Undefined, optional
        tags
    """


    accessLogSettings?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAccessLogSettings

    apiId?: str

    apiIdRef?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDSelector

    autoDeploy?: bool

    clientCertificateID?: str

    defaultRouteSettings?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderDefaultRouteSettings

    deploymentID?: str

    description?: str

    region: str

    routeSettings?: {str:Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderRouteSettingsAnon}

    stageVariables?: {str:str}

    tags?: {str:str}


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDRef:
    """
    APIIDRef is a reference to an API used to set the APIID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDSelector:
    """
    APIIDSelector selects references to API used to set the APIID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAPIIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderAccessLogSettings:
    """
    apigatewayv2 aws crossplane io v1alpha1 stage spec for provider access log settings

    Attributes
    ----------
    destinationARN : str, default is Undefined, optional
        Represents an Amazon Resource Name (ARN).
    format : str, default is Undefined, optional
        A string with a length between [1-1024].
    """


    destinationARN?: str

    format?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderDefaultRouteSettings:
    """
    apigatewayv2 aws crossplane io v1alpha1 stage spec for provider default route settings

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        data trace enabled
    detailedMetricsEnabled : bool, default is Undefined, optional
        detailed metrics enabled
    loggingLevel : str, default is Undefined, optional
        The logging level.
    throttlingBurstLimit : int, default is Undefined, optional
        throttling burst limit
    throttlingRateLimit : float, default is Undefined, optional
        throttling rate limit
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    throttlingBurstLimit?: int

    throttlingRateLimit?: float


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecForProviderRouteSettingsAnon:
    """
    apigatewayv2 aws crossplane io v1alpha1 stage spec for provider route settings anon

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        data trace enabled
    detailedMetricsEnabled : bool, default is Undefined, optional
        detailed metrics enabled
    loggingLevel : str, default is Undefined, optional
        The logging level.
    throttlingBurstLimit : int, default is Undefined, optional
        throttling burst limit
    throttlingRateLimit : float, default is Undefined, optional
        throttling rate limit
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    throttlingBurstLimit?: int

    throttlingRateLimit?: float


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageStatus:
    """
    StageStatus defines the observed state of Stage.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsCrossplaneIoV1alpha1StageStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsCrossplaneIoV1alpha1StageStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Apigatewayv2AwsCrossplaneIoV1alpha1StageStatusAtProvider

    conditions?: [Apigatewayv2AwsCrossplaneIoV1alpha1StageStatusConditionsItems0]


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageStatusAtProvider:
    """
    StageObservation defines the observed state of Stage

    Attributes
    ----------
    apiGatewayManaged : bool, default is Undefined, optional
        api gateway managed
    createdDate : str, default is Undefined, optional
        created date
    lastDeploymentStatusMessage : str, default is Undefined, optional
        last deployment status message
    lastUpdatedDate : str, default is Undefined, optional
        last updated date
    stageName : str, default is Undefined, optional
        stage name
    """


    apiGatewayManaged?: bool

    createdDate?: str

    lastDeploymentStatusMessage?: str

    lastUpdatedDate?: str

    stageName?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1StageStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


