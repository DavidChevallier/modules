"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Ec2Route:
    """
    Route is the Schema for the Routes API

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Route", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1RouteSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1RouteStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "Route" = "Route"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1RouteSpec

    status?: Ec2AwsCrossplaneIoV1alpha1RouteStatus


schema Ec2AwsCrossplaneIoV1alpha1RouteSpec:
    """
    RouteSpec defines the desired state of Route

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProvider:
    """
    RouteParameters defines the desired state of Route

    Attributes
    ----------
    carrierGatewayID : str, default is Undefined, optional
        The ID of the carrier gateway. 
         You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.
    coreNetworkARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the core network.
    destinationCIDRBlock : str, default is Undefined, optional
        The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify 100.68.0.18/18, we modify it to 100.68.0.0/18.
    destinationIPv6CIDRBlock : str, default is Undefined, optional
        The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.
    destinationPrefixListID : str, default is Undefined, optional
        The ID of a prefix list used for the destination match.
    egressOnlyInternetGatewayID : str, default is Undefined, optional
        [IPv6 traffic only] The ID of an egress-only internet gateway.
    gatewayId : str, default is Undefined, optional
        The ID of an internet gateway attached to your VPC.
    gatewayIdRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDRef, default is Undefined, optional
        gateway Id ref
    gatewayIdSelector : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDSelector, default is Undefined, optional
        gateway Id selector
    instanceId : str, default is Undefined, optional
        The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
    instanceIdRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    localGatewayID : str, default is Undefined, optional
        The ID of the local gateway.
    natGatewayId : str, default is Undefined, optional
        [IPv4 traffic only] The ID of a NAT gateway.
    natGatewayIdRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDRef, default is Undefined, optional
        nat gateway Id ref
    natGatewayIdSelector : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDSelector, default is Undefined, optional
        nat gateway Id selector
    networkInterfaceID : str, default is Undefined, optional
        The ID of a network interface.
    region : str, default is Undefined, required
        Region is which region the Route will be created.
    routeTableId : str, default is Undefined, optional
        The ID of the route table for the route. provider-aws currently provides both a standalone Route resource and a RouteTable resource with routes defined in-line. At this time you cannot use a RouteTable with in-line routes in conjunction with any Route resources. Set the flag ignoreRoutes=true in RouteTable to use Route resource
    routeTableIdRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDRef, default is Undefined, optional
        route table Id ref
    routeTableIdSelector : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDSelector, default is Undefined, optional
        route table Id selector
    transitGatewayId : str, default is Undefined, optional
        The ID of a transit gateway.
    transitGatewayIdRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDRef, default is Undefined, optional
        transit gateway Id ref
    transitGatewayIdSelector : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDSelector, default is Undefined, optional
        transit gateway Id selector
    vpcEndpointID : str, default is Undefined, optional
        The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
    vpcPeeringConnectionId : str, default is Undefined, optional
        The ID of a VPC peering connection.
    vpcPeeringConnectionIdRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDRef, default is Undefined, optional
        vpc peering connection Id ref
    vpcPeeringConnectionIdSelector : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDSelector, default is Undefined, optional
        vpc peering connection Id selector
    """


    carrierGatewayID?: str

    coreNetworkARN?: str

    destinationCIDRBlock?: str

    destinationIPv6CIDRBlock?: str

    destinationPrefixListID?: str

    egressOnlyInternetGatewayID?: str

    gatewayId?: str

    gatewayIdRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDRef

    gatewayIdSelector?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDSelector

    instanceId?: str

    instanceIdRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDRef

    instanceIdSelector?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDSelector

    localGatewayID?: str

    natGatewayId?: str

    natGatewayIdRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDRef

    natGatewayIdSelector?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDSelector

    networkInterfaceID?: str

    region: str

    routeTableId?: str

    routeTableIdRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDRef

    routeTableIdSelector?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDSelector

    transitGatewayId?: str

    transitGatewayIdRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDRef

    transitGatewayIdSelector?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDSelector

    vpcEndpointID?: str

    vpcPeeringConnectionId?: str

    vpcPeeringConnectionIdRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDRef

    vpcPeeringConnectionIdSelector?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDSelector


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDRef:
    """
    GatewayIDRef is a reference to an API used to set the GatewayID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDSelector:
    """
    GatewayIDSelector selects references to API used to set the GatewayID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderGatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDRef:
    """
    InstanceIDRef is a reference to an API used to set the InstanceID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDSelector:
    """
    InstanceIDSelector selects references to API used to set the InstanceID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderInstanceIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDRef:
    """
    NATGatewayIDRef is a reference to an API used to set the NATGatewayID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDSelector:
    """
    NATGatewayIDSelector selects references to API used to set the NATGatewayID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderNatGatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDRef:
    """
    RouteTableIDRef is a reference to an API used to set the RouteTableID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDSelector:
    """
    RouteTableIDSelector selects references to API used to set the RouteTableID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderRouteTableIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDRef:
    """
    TransitGatewayIDRef is a reference to an API used to set the TransitGatewayID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDSelector:
    """
    TransitGatewayIDSelector selects references to API used to set the TransitGatewayID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderTransitGatewayIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDRef:
    """
    VPCPeeringConnectionIDRef is a reference to an API used to set the VPCPeeringConnectionID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDSelector:
    """
    VPCPeeringConnectionIDSelector selects references to API used to set the VPCPeeringConnectionID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecForProviderVpcPeeringConnectionIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1RouteSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1RouteStatus:
    """
    RouteStatus defines the observed state of Route.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1RouteStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1RouteStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1RouteStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1RouteStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1RouteStatusAtProvider:
    """
    RouteObservation defines the observed state of Route

    Attributes
    ----------
    return_ : bool, default is Undefined, optional
        Returns true if the request succeeds; otherwise, it returns an error.
    """


    return_?: bool


schema Ec2AwsCrossplaneIoV1alpha1RouteStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


