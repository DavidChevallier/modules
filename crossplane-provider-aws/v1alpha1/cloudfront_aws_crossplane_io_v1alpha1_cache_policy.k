"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CachePolicy:
    """
    CachePolicy is the Schema for the CachePolicies API

    Attributes
    ----------
    apiVersion : str, default is "cloudfront.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CachePolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpec, default is Undefined, required
        spec
    status : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudfront.aws.crossplane.io/v1alpha1" = "cloudfront.aws.crossplane.io/v1alpha1"

    kind: "CachePolicy" = "CachePolicy"

    metadata?: v1.ObjectMeta

    spec: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpec

    status?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatus


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpec:
    """
    CachePolicySpec defines the desired state of CachePolicy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProvider

    providerConfigRef?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderConfigRef

    providerRef?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderRef

    publishConnectionDetailsTo?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecWriteConnectionSecretToRef


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProvider:
    """
    CachePolicyParameters defines the desired state of CachePolicy

    Attributes
    ----------
    cachePolicyConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfig, default is Undefined, required
        cache policy config
    region : str, default is Undefined, required
        Region is which region the CachePolicy will be created.
    """


    cachePolicyConfig: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfig

    region: str


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfig:
    """
    A cache policy configuration.

    Attributes
    ----------
    comment : str, default is Undefined, optional
        comment
    defaultTTL : int, default is Undefined, optional
        default TTL
    maxTTL : int, default is Undefined, optional
        max TTL
    minTTL : int, default is Undefined, optional
        min TTL
    name : str, default is Undefined, optional
        name
    parametersInCacheKeyAndForwardedToOrigin : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin, default is Undefined, optional
        parameters in cache key and forwarded to origin
    """


    comment?: str

    defaultTTL?: int

    maxTTL?: int

    minTTL?: int

    name?: str

    parametersInCacheKeyAndForwardedToOrigin?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin:
    """
    This object determines the values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer. 
     The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find an object in its cache that matches the request’s cache key. If you want to send values to the origin but not include them in the cache key, use OriginRequestPolicy.

    Attributes
    ----------
    cookiesConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig, default is Undefined, optional
        cookies config
    enableAcceptEncodingBrotli : bool, default is Undefined, optional
        enable accept encoding brotli
    enableAcceptEncodingGzip : bool, default is Undefined, optional
        enable accept encoding gzip
    headersConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig, default is Undefined, optional
        headers config
    queryStringsConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig, default is Undefined, optional
        query strings config
    """


    cookiesConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig

    enableAcceptEncodingBrotli?: bool

    enableAcceptEncodingGzip?: bool

    headersConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig

    queryStringsConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig:
    """
    An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.

    Attributes
    ----------
    cookieBehavior : str, default is Undefined, optional
        cookie behavior
    cookies : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies, default is Undefined, optional
        cookies
    """


    cookieBehavior?: str

    cookies?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies:
    """
    Contains a list of cookie names.

    Attributes
    ----------
    items : [str], default is Undefined, optional
        items
    quantity : int, default is Undefined, optional
        quantity
    """


    items?: [str]

    quantity?: int


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig:
    """
    An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.

    Attributes
    ----------
    headerBehavior : str, default is Undefined, optional
        header behavior
    headers : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders, default is Undefined, optional
        headers
    """


    headerBehavior?: str

    headers?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders:
    """
    Contains a list of HTTP header names.

    Attributes
    ----------
    items : [str], default is Undefined, optional
        items
    """


    items?: [str]


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig:
    """
    An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.

    Attributes
    ----------
    queryStringBehavior : str, default is Undefined, optional
        query string behavior
    queryStrings : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings, default is Undefined, optional
        query strings
    """


    queryStringBehavior?: str

    queryStrings?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecForProviderCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings:
    """
    Contains a list of query string names.

    Attributes
    ----------
    items : [str], default is Undefined, optional
        items
    quantity : int, default is Undefined, optional
        quantity
    """


    items?: [str]

    quantity?: int


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderConfigRefPolicy


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderRefPolicy


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToConfigRef

    metadata?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToMetadata

    name: str


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToConfigRefPolicy


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatus:
    """
    CachePolicyStatus defines the observed state of CachePolicy.

    Attributes
    ----------
    atProvider : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProvider

    conditions?: [CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusConditionsItems0]


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProvider:
    """
    CachePolicyObservation defines the observed state of CachePolicy

    Attributes
    ----------
    cachePolicy : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicy, default is Undefined, optional
        cache policy
    eTag : str, default is Undefined, optional
        The current version of the cache policy.
    location : str, default is Undefined, optional
        The fully qualified URI of the cache policy just created.
    """


    cachePolicy?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicy

    eTag?: str

    location?: str


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicy:
    """
    A cache policy.

    Attributes
    ----------
    cachePolicyConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfig, default is Undefined, optional
        cache policy config
    id : str, default is Undefined, optional
        id
    lastModifiedTime : str, default is Undefined, optional
        last modified time
    """


    cachePolicyConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfig

    id?: str

    lastModifiedTime?: str


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfig:
    """
    A cache policy configuration. 
     This configuration determines the following: 
     * The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer. 
     * The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache. 
     The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find a valid object in its cache that matches the request’s cache key. If you want to send values to the origin but not include them in the cache key, use OriginRequestPolicy.

    Attributes
    ----------
    comment : str, default is Undefined, optional
        comment
    defaultTTL : int, default is Undefined, optional
        default TTL
    maxTTL : int, default is Undefined, optional
        max TTL
    minTTL : int, default is Undefined, optional
        min TTL
    name : str, default is Undefined, optional
        name
    parametersInCacheKeyAndForwardedToOrigin : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin, default is Undefined, optional
        parameters in cache key and forwarded to origin
    """


    comment?: str

    defaultTTL?: int

    maxTTL?: int

    minTTL?: int

    name?: str

    parametersInCacheKeyAndForwardedToOrigin?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin:
    """
    This object determines the values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer. 
     The headers, cookies, and query strings that are included in the cache key are automatically included in requests that CloudFront sends to the origin. CloudFront sends a request when it can’t find an object in its cache that matches the request’s cache key. If you want to send values to the origin but not include them in the cache key, use OriginRequestPolicy.

    Attributes
    ----------
    cookiesConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig, default is Undefined, optional
        cookies config
    enableAcceptEncodingBrotli : bool, default is Undefined, optional
        enable accept encoding brotli
    enableAcceptEncodingGzip : bool, default is Undefined, optional
        enable accept encoding gzip
    headersConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig, default is Undefined, optional
        headers config
    queryStringsConfig : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig, default is Undefined, optional
        query strings config
    """


    cookiesConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig

    enableAcceptEncodingBrotli?: bool

    enableAcceptEncodingGzip?: bool

    headersConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig

    queryStringsConfig?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig:
    """
    An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin.

    Attributes
    ----------
    cookieBehavior : str, default is Undefined, optional
        cookie behavior
    cookies : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies, default is Undefined, optional
        cookies
    """


    cookieBehavior?: str

    cookies?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies:
    """
    Contains a list of cookie names.

    Attributes
    ----------
    items : [str], default is Undefined, optional
        items
    quantity : int, default is Undefined, optional
        quantity
    """


    items?: [str]

    quantity?: int


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig:
    """
    An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin.

    Attributes
    ----------
    headerBehavior : str, default is Undefined, optional
        header behavior
    headers : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders, default is Undefined, optional
        headers
    """


    headerBehavior?: str

    headers?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders:
    """
    Contains a list of HTTP header names.

    Attributes
    ----------
    items : [str], default is Undefined, optional
        items
    """


    items?: [str]


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig:
    """
    An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin.

    Attributes
    ----------
    queryStringBehavior : str, default is Undefined, optional
        query string behavior
    queryStrings : CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings, default is Undefined, optional
        query strings
    """


    queryStringBehavior?: str

    queryStrings?: CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusAtProviderCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings:
    """
    Contains a list of query string names.

    Attributes
    ----------
    items : [str], default is Undefined, optional
        items
    quantity : int, default is Undefined, optional
        quantity
    """


    items?: [str]

    quantity?: int


schema CloudfrontAwsCrossplaneIoV1alpha1CachePolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


