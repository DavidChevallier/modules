"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Volume:
    """
    Volume is the Schema for the Volumes API

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Volume", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1VolumeSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1VolumeStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "Volume" = "Volume"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1VolumeSpec

    status?: Ec2AwsCrossplaneIoV1alpha1VolumeStatus


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpec:
    """
    VolumeSpec defines the desired state of Volume

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1VolumeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProvider:
    """
    VolumeParameters defines the desired state of Volume

    Attributes
    ----------
    availabilityZone : str, default is Undefined, required
        The Availability Zone in which to create the volume.
    encrypted : bool, default is Undefined, optional
        Indicates whether the volume should be encrypted. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Encryption by default (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) in the Amazon Elastic Compute Cloud User Guide. 
         Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see Supported instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances).
    iops : int, default is Undefined, optional
        The number of I/O operations per second (IOPS). For gp3, io1, and io2 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. 
         The following are the supported values for each volume type: 
         * gp3: 3,000-16,000 IOPS 
         * io1: 100-64,000 IOPS 
         * io2: 100-64,000 IOPS 
         io1 and io2 volumes support up to 64,000 IOPS only on Instances built on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances). Other instance families support performance up to 32,000 IOPS. 
         This parameter is required for io1 and io2 volumes. The default for gp3 volumes is 3,000 IOPS. This parameter is not supported for gp2, st1, sc1, or standard volumes.
    kmsKeyId : str, default is Undefined, optional
        The identifier of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use for Amazon EBS encryption. If this parameter is not specified, your AWS managed CMK for EBS is used. If KmsKeyId is specified, the encrypted state must be true. 
         You can specify the CMK using any of the following: 
         * Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab. 
         * Key alias. For example, alias/ExampleAlias. 
         * Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab. 
         * Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias. 
         AWS authenticates the CMK asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.
    kmsKeyIdRef : Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    multiAttachEnabled : bool, default is Undefined, optional
        Indicates whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 Instances built on the Nitro System (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances) in the same Availability Zone. This parameter is supported with io1 and io2 volumes only. For more information, see Amazon EBS Multi-Attach (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html) in the Amazon Elastic Compute Cloud User Guide.
    outpostARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Outpost.
    region : str, default is Undefined, required
        Region is which region the Volume will be created.
    size : int, default is Undefined, optional
        The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size. 
         The following are the supported volumes sizes for each volume type: 
         * gp2 and gp3: 1-16,384 
         * io1 and io2: 4-16,384 
         * st1 and sc1: 125-16,384 
         * standard: 1-1,024
    snapshotID : str, default is Undefined, optional
        The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.
    tagSpecifications : [Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderTagSpecificationsItems0], default is Undefined, optional
        The tags to apply to the volume during creation.
    throughput : int, default is Undefined, optional
        The throughput to provision for a volume, with a maximum of 1,000 MiB/s. 
         This parameter is valid only for gp3 volumes. 
         Valid Range: Minimum value of 125. Maximum value of 1000.
    volumeType : str, default is Undefined, optional
        The volume type. This parameter can be one of the following values: 
         * General Purpose SSD: gp2 | gp3 
         * Provisioned IOPS SSD: io1 | io2 
         * Throughput Optimized HDD: st1 
         * Cold HDD: sc1 
         * Magnetic: standard 
         For more information, see Amazon EBS volume types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the Amazon Elastic Compute Cloud User Guide. 
         Default: gp2
    """


    availabilityZone: str

    encrypted?: bool

    iops?: int

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDSelector

    multiAttachEnabled?: bool

    outpostARN?: str

    region: str

    size?: int

    snapshotID?: str

    tagSpecifications?: [Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderTagSpecificationsItems0]

    throughput?: int

    volumeType?: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDRef:
    """
    KMSKeyIDRef is a reference to a KMS Key used to set KMSKeyID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDSelector:
    """
    KMSKeyIDSelector selects a reference to a KMS Key used to set KMSKeyID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderKmsKeyIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderTagSpecificationsItems0:
    """
    ec2 aws crossplane io v1alpha1 volume spec for provider tag specifications items0

    Attributes
    ----------
    resourceType : str, default is Undefined, optional
        resource type
    tags : [Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderTagSpecificationsItems0TagsItems0], default is Undefined, optional
        tags
    """


    resourceType?: str

    tags?: [Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderTagSpecificationsItems0TagsItems0]


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecForProviderTagSpecificationsItems0TagsItems0:
    """
    ec2 aws crossplane io v1alpha1 volume spec for provider tag specifications items0 tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeStatus:
    """
    VolumeStatus defines the observed state of Volume.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1VolumeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1VolumeStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProvider:
    """
    VolumeObservation defines the observed state of Volume

    Attributes
    ----------
    attachments : [Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProviderAttachmentsItems0], default is Undefined, optional
        Information about the volume attachments.
    createTime : str, default is Undefined, optional
        The time stamp when volume creation was initiated.
    fastRestored : bool, default is Undefined, optional
        Indicates whether the volume was created using fast snapshot restore.
    kmsKeyID : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption key for the volume.
    state : str, default is Undefined, optional
        The volume state.
    tags : [Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProviderTagsItems0], default is Undefined, optional
        Any tags assigned to the volume.
    volumeID : str, default is Undefined, optional
        The ID of the volume.
    """


    attachments?: [Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProviderAttachmentsItems0]

    createTime?: str

    fastRestored?: bool

    kmsKeyID?: str

    state?: str

    tags?: [Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProviderTagsItems0]

    volumeID?: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProviderAttachmentsItems0:
    """
    ec2 aws crossplane io v1alpha1 volume status at provider attachments items0

    Attributes
    ----------
    attachTime : str, default is Undefined, optional
        attach time
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    device : str, default is Undefined, optional
        device
    instanceID : str, default is Undefined, optional
        instance ID
    state : str, default is Undefined, optional
        state
    volumeID : str, default is Undefined, optional
        volume ID
    """


    attachTime?: str

    deleteOnTermination?: bool

    device?: str

    instanceID?: str

    state?: str

    volumeID?: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeStatusAtProviderTagsItems0:
    """
    ec2 aws crossplane io v1alpha1 volume status at provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Ec2AwsCrossplaneIoV1alpha1VolumeStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


