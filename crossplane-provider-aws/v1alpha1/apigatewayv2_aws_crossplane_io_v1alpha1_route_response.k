"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RouteResponse:
    """
    RouteResponse is the Schema for the RouteResponses API

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RouteResponse", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.crossplane.io/v1alpha1" = "apigatewayv2.aws.crossplane.io/v1alpha1"

    kind: "RouteResponse" = "RouteResponse"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpec

    status?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatus


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpec:
    """
    RouteResponseSpec defines the desired state of RouteResponse

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProvider

    providerConfigRef?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderConfigRef

    providerRef?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderRef

    publishConnectionDetailsTo?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProvider:
    """
    RouteResponseParameters defines the desired state of RouteResponse

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        APIID is the ID for the API.
    apiIdRef : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    modelSelectionExpression : str, default is Undefined, optional
        model selection expression
    region : str, default is Undefined, required
        Region is which region the RouteResponse will be created.
    responseModels : {str:str}, default is Undefined, optional
        response models
    responseParameters : {str:Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderResponseParametersAnon}, default is Undefined, optional
        response parameters
    routeId : str, default is Undefined, optional
        RouteID is the ID for the Route.
    routeIdRef : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDRef, default is Undefined, optional
        route Id ref
    routeIdSelector : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDSelector, default is Undefined, optional
        route Id selector
    routeResponseKey : str, default is Undefined, required
        route response key
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDSelector

    modelSelectionExpression?: str

    region: str

    responseModels?: {str:str}

    responseParameters?: {str:Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderResponseParametersAnon}

    routeId?: str

    routeIdRef?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDRef

    routeIdSelector?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDSelector

    routeResponseKey: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDRef:
    """
    APIIDRef is a reference to an API used to set the APIID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDSelector:
    """
    APIIDSelector selects references to API used to set the APIID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderAPIIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderResponseParametersAnon:
    """
    apigatewayv2 aws crossplane io v1alpha1 route response spec for provider response parameters anon

    Attributes
    ----------
    required : bool, default is Undefined, optional
        required
    """


    required?: bool


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDRef:
    """
    RouteIDRef is a reference to an Route used to set the RouteID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDSelector:
    """
    RouteIDSelector selects references to Route used to set the RouteID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDSelectorPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecForProviderRouteIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatus:
    """
    RouteResponseStatus defines the observed state of RouteResponse.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatusAtProvider

    conditions?: [Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatusConditionsItems0]


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatusAtProvider:
    """
    RouteResponseObservation defines the observed state of RouteResponse

    Attributes
    ----------
    routeResponseID : str, default is Undefined, optional
        route response ID
    """


    routeResponseID?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1RouteResponseStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


