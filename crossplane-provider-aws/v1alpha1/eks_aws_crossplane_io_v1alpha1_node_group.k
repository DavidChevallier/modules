"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NodeGroup:
    """
    A NodeGroup is a managed resource that represents an AWS Elastic Kubernetes Service NodeGroup.

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodeGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsCrossplaneIoV1alpha1NodeGroupSpec, default is Undefined, required
        spec
    status : EksAwsCrossplaneIoV1alpha1NodeGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.crossplane.io/v1alpha1" = "eks.aws.crossplane.io/v1alpha1"

    kind: "NodeGroup" = "NodeGroup"

    metadata?: v1.ObjectMeta

    spec: EksAwsCrossplaneIoV1alpha1NodeGroupSpec

    status?: EksAwsCrossplaneIoV1alpha1NodeGroupStatus


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpec:
    """
    A NodeGroupSpec defines the desired state of an EKS NodeGroup.

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProvider

    providerConfigRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderConfigRef

    providerRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderRef

    publishConnectionDetailsTo?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecWriteConnectionSecretToRef


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProvider:
    """
    NodeGroupParameters define the desired state of an AWS Elastic Kubernetes Service NodeGroup.

    Attributes
    ----------
    amiType : str, default is Undefined, optional
        The AMI type for your node group. GPU instance can use AL2_x86_64_GPU AMI type, which uses the Amazon EKS-optimized Linux AMI with GPU support. Non-GPU instances can use AL2_x86_64 (default) AMI type, which uses the Amazon EKS-optimized Linux AMI or, BOTTLEROCKET_ARM_64 AMI type, which uses the Amazon Bottlerocket AMI for ARM instances, or BOTTLEROCKET_x86_64 AMI type, which uses the Amazon Bottlerocket AMI fir x86_64 instances.
    capacityType : str, default is Undefined, optional
        CapacityType for your node group.
    clusterName : str, default is Undefined, optional
        The name of the cluster to create the node group in. 
         ClusterName is a required field
    clusterNameRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    diskSize : int, default is Undefined, optional
        The root device disk size (in GiB) for your node group instances. The default disk size is 20 GiB.
    instanceTypes : [str], default is Undefined, optional
        The instance type to use for your node group. Currently, you can specify a single instance type for a node group. The default value for this parameter is t3.medium. If you choose a GPU instance type, be sure to specify the AL2_x86_64_GPU with the amiType parameter.
    labels : {str:str}, default is Undefined, optional
        The Kubernetes labels to be applied to the nodes in the node group when they are created.
    launchTemplate : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplate, default is Undefined, optional
        launch template
    nodeRole : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker node kubelet daemon makes calls to AWS APIs on your behalf. Worker nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch worker nodes and register them into a cluster, you must create an IAM role for those worker nodes to use when they are launched. For more information, see Amazon EKS Worker Node IAM Role (https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html) in the Amazon EKS User Guide . 
         NodeRole is a required field
    nodeRoleRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleRef, default is Undefined, optional
        node role ref
    nodeRoleSelector : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleSelector, default is Undefined, optional
        node role selector
    region : str, default is Undefined, required
        Region is the region you'd like  the NodeGroup to be created in.
    releaseVersion : str, default is Undefined, optional
        The AMI version of the Amazon EKS-optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see Amazon EKS-Optimized Linux AMI Versions (https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the Amazon EKS User Guide.
    remoteAccess : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccess, default is Undefined, optional
        remote access
    scalingConfig : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderScalingConfig, default is Undefined, optional
        scaling config
    subnetRefs : [EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetRefsItems0], default is Undefined, optional
        SubnetRefs are references to Subnets used to set the Subnets.
    subnetSelector : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        The subnets to use for the Auto Scaling group that is created for your node group. These subnets must have the tag key kubernetes.io/cluster/CLUSTER_NAME with a value of shared, where CLUSTER_NAME is replaced with the name of your cluster. 
         Subnets is a required field
    tags : {str:str}, default is Undefined, optional
        The metadata to apply to the node group to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.
    taints : [EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderTaintsItems0], default is Undefined, optional
        The Kubernetes taints to be applied to the nodes in the node group.
    updateConfig : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderUpdateConfig, default is Undefined, optional
        update config
    version : str, default is Undefined, optional
        The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value.
    """


    amiType?: str

    capacityType?: "ON_DEMAND" | "SPOT"

    clusterName?: str

    clusterNameRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameRef

    clusterNameSelector?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameSelector

    diskSize?: int

    instanceTypes?: [str]

    labels?: {str:str}

    launchTemplate?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplate

    nodeRole?: str

    nodeRoleRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleRef

    nodeRoleSelector?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleSelector

    region: str

    releaseVersion?: str

    remoteAccess?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccess

    scalingConfig?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderScalingConfig

    subnetRefs?: [EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetRefsItems0]

    subnetSelector?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetSelector

    subnets?: [str]

    tags?: {str:str}

    taints?: [EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderTaintsItems0]

    updateConfig?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderUpdateConfig

    version?: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameRef:
    """
    ClusterNameRef is a reference to a Cluster used to set the ClusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameSelector:
    """
    ClusterNameSelector selects references to a Cluster used to set the ClusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderClusterNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplate:
    """
    An object representing a node group's launch template specification. If specified, then do not specify instanceTypes, diskSize, or remoteAccess and make sure that the launch template meets the requirements in launchTemplateSpecification.

    Attributes
    ----------
    id : str, default is Undefined, optional
        The ID of the launch template.
    name : str, default is Undefined, optional
        The name of the launch template.
    nameRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameRef, default is Undefined, optional
        name ref
    nameSelector : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameSelector, default is Undefined, optional
        name selector
    version : str, default is Undefined, optional
        The version of the launch template to use. If no version is specified, then the template's default version is used.
    versionRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionRef, default is Undefined, optional
        version ref
    versionSelector : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionSelector, default is Undefined, optional
        version selector
    """


    id?: str

    name?: str

    nameRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameRef

    nameSelector?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameSelector

    version?: str

    versionRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionRef

    versionSelector?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionSelector


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameRef:
    """
    NameRef is a reference to a LaunchTemplate used to set the Name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameSelector:
    """
    NameSelector selects references to a LaunchTemplate used to set the Name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionRef:
    """
    VersionRef is a reference to a LaunchTemplateVersion used to set the Version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionSelector:
    """
    VersionSelector selects references to a LaunchTemplateVersion used to set the Version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderLaunchTemplateVersionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleRef:
    """
    NodeRoleRef is a reference to a Cluster used to set the NodeRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleSelector:
    """
    NodeRoleSelector selects references to a Cluster used to set the NodeRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderNodeRoleSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccess:
    """
    The remote access (SSH) configuration to use with your node group.

    Attributes
    ----------
    ec2SSHKey : str, default is Undefined, optional
        The Amazon EC2 SSH key that provides access for SSH communication with the worker nodes in the managed node group. For more information, see Amazon EC2 Key Pairs (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) in the Amazon Elastic Compute Cloud User Guide for Linux Instances.
    sourceSecurityGroupRefs : [EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupRefsItems0], default is Undefined, optional
        SourceSecurityGroupRefs are references to SecurityGroups used to set the SourceSecurityGroups.
    sourceSecurityGroupSelector : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupSelector, default is Undefined, optional
        source security group selector
    sourceSecurityGroups : [str], default is Undefined, optional
        The security groups that are allowed SSH access (port 22) to the worker nodes. If you specify an Amazon EC2 SSH key but do not specify a source security group when you create a managed node group, then port 22 on the worker nodes is opened to the internet (0.0.0.0/0). For more information, see Security Groups for Your VPC (https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html) in the Amazon Virtual Private Cloud User Guide.
    """


    ec2SSHKey?: str

    sourceSecurityGroupRefs?: [EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupRefsItems0]

    sourceSecurityGroupSelector?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupSelector

    sourceSecurityGroups?: [str]


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupRefsItems0Policy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupSelector:
    """
    SourceSecurityGroupSelector selects references to SecurityGroups used to set the SourceSecurityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderRemoteAccessSourceSecurityGroupSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderScalingConfig:
    """
    The scaling configuration details for the Auto Scaling group that is created for your node group.

    Attributes
    ----------
    desiredSize : int, default is Undefined, optional
        The current number of worker nodes that the managed node group should maintain. This value should be left unset if another controller, such as cluster-autoscaler, is expected to manage the desired size of the node group. If not set, the initial desired size will be the configured minimum size of the node group.
    maxSize : int, default is Undefined, optional
        The maximum number of worker nodes that the managed node group can scale out to. Managed node groups can support up to 100 nodes by default.
    minSize : int, default is Undefined, optional
        The minimum number of worker nodes that the managed node group can scale in to. This number must be greater than zero.
    """


    desiredSize?: int

    maxSize?: int

    minSize?: int


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetRefsItems0Policy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetSelector:
    """
    SubnetSelector selects references to Subnets used to set the Subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetSelectorPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderSubnetSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderTaintsItems0:
    """
    Taint is a property that allows a node to repel a set of pods.

    Attributes
    ----------
    effect : str, default is Undefined, required
        The effect of the taint.
    key : str, default is Undefined, optional
        The key of the taint.
    value : str, default is Undefined, optional
        The value of the taint.
    """


    effect: "NO_SCHEDULE" | "NO_EXECUTE" | "PREFER_NO_SCHEDULE"

    key?: str

    value?: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecForProviderUpdateConfig:
    """
    Specifies details on how the Nodes in this NodeGroup should be updated.

    Attributes
    ----------
    force : bool, default is Undefined, optional
        Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue. If an update fails because pods could not be drained, you can force the update after it fails to terminate the old node whether any pods are running on the node.
    maxUnavailable : int, default is Undefined, optional
        The maximum number of nodes unavailable at once during a version update. Nodes will be updated in parallel. The maximum number is 100. This value or maxUnavailablePercentage is required to have a value, but not both.
    maxUnavailablePercentage : int, default is Undefined, optional
        The maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel, up to 100 nodes at once. This value or maxUnavailable is required to have a value, but not both.
    """


    force?: bool

    maxUnavailable?: int

    maxUnavailablePercentage?: int


    check:
        maxUnavailable <= 100
        maxUnavailable >= 1
        maxUnavailablePercentage <= 100
        maxUnavailablePercentage >= 1


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderConfigRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatus:
    """
    A NodeGroupStatus represents the observed state of an EKS NodeGroup.

    Attributes
    ----------
    atProvider : EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsCrossplaneIoV1alpha1NodeGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProvider

    conditions?: [EksAwsCrossplaneIoV1alpha1NodeGroupStatusConditionsItems0]


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProvider:
    """
    NodeGroupObservation is the observed state of a NodeGroup.

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
        The Unix epoch timestamp in seconds for when the managed node group was created.
    modifiedAt : str, default is Undefined, optional
        The Unix epoch timestamp in seconds for when the managed node group was last modified.
    nodeGroupArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) associated with the managed node group.
    nodeGroupHealth : EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderNodeGroupHealth, default is Undefined, optional
        node group health
    releaseVersion : str, default is Undefined, optional
        The AMI version of the Amazon EKS-optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For more information, see Amazon EKS-Optimized Linux AMI Versions (https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the Amazon EKS User Guide.
    resources : EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderResources, default is Undefined, optional
        resources
    scalingConfig : EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderScalingConfig, default is Undefined, optional
        scaling config
    status : str, default is Undefined, optional
        The current status of the managed node group.
    updateConfig : EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderUpdateConfig, default is Undefined, optional
        update config
    version : str, default is Undefined, optional
        The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value.
    """


    createdAt?: str

    modifiedAt?: str

    nodeGroupArn?: str

    nodeGroupHealth?: EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderNodeGroupHealth

    releaseVersion?: str

    resources?: EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderResources

    scalingConfig?: EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderScalingConfig

    status?: str

    updateConfig?: EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderUpdateConfig

    version?: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderNodeGroupHealth:
    """
    The health status of the node group. If there are issues with your node group's health, they are listed here.

    Attributes
    ----------
    issues : [EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderNodeGroupHealthIssuesItems0], default is Undefined, optional
        Any issues that are associated with the node group.
    """


    issues?: [EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderNodeGroupHealthIssuesItems0]


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderNodeGroupHealthIssuesItems0:
    """
    Issue is an issue with a NodeGroup.

    Attributes
    ----------
    code : str, default is Undefined, optional
        A brief description of the error. 
         * AutoScalingGroupNotFound: We couldn't find the Auto Scaling group associated with the managed node group. You may be able to recreate an Auto Scaling group with the same settings to recover. 
         * Ec2SecurityGroupNotFound: We couldn't find the cluster security group for the cluster. You must recreate your cluster. 
         * Ec2SecurityGroupDeletionFailure: We could not delete the remote access security group for your managed node group. Remove any dependencies from the security group. 
         * Ec2LaunchTemplateNotFound: We couldn't find the Amazon EC2 launch template for your managed node group. You may be able to recreate a launch template with the same settings to recover. 
         * Ec2LaunchTemplateVersionMismatch: The Amazon EC2 launch template version for your managed node group does not match the version that Amazon EKS created. You may be able to revert to the version that Amazon EKS created to recover. 
         * IamInstanceProfileNotFound: We couldn't find the IAM instance profile for your managed node group. You may be able to recreate an instance profile with the same settings to recover. 
         * IamNodeRoleNotFound: We couldn't find the IAM role for your managed node group. You may be able to recreate an IAM role with the same settings to recover. 
         * AsgInstanceLaunchFailures: Your Auto Scaling group is experiencing failures while attempting to launch instances. 
         * NodeCreationFailure: Your launched instances are unable to register with your Amazon EKS cluster. Common causes of this failure are insufficient worker node IAM role (https://docs.aws.amazon.com/eks/latest/userguide/worker_node_IAM_role.html) permissions or lack of outbound internet access for the nodes. 
         * InstanceLimitExceeded: Your AWS account is unable to launch any more instances of the specified instance type. You may be able to request an Amazon EC2 instance limit increase to recover. 
         * InsufficientFreeAddresses: One or more of the subnets associated with your managed node group does not have enough available IP addresses for new nodes. 
         * AccessDenied: Amazon EKS or one or more of your managed nodes is unable to communicate with your cluster API server. 
         * InternalFailure: These errors are usually caused by an Amazon EKS server-side issue.
    message : str, default is Undefined, optional
        The error message associated with the issue.
    resourceIds : [str], default is Undefined, optional
        The AWS resources that are afflicted by this issue.
    """


    code?: str

    message?: str

    resourceIds?: [str]


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderResources:
    """
    The resources associated with the node group, such as Auto Scaling groups and security groups for remote access.

    Attributes
    ----------
    autoScalingGroup : [EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderResourcesAutoScalingGroupItems0], default is Undefined, optional
        The Auto Scaling groups associated with the node group.
    remoteAccessSecurityGroup : str, default is Undefined, optional
        The remote access security group associated with the node group. This security group controls SSH access to the worker nodes.
    """


    autoScalingGroup?: [EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderResourcesAutoScalingGroupItems0]

    remoteAccessSecurityGroup?: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderResourcesAutoScalingGroupItems0:
    """
    AutoScalingGroup is an autoscaling group associated with a NodeGroup.

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the Auto Scaling group associated with an Amazon EKS managed node group.
    """


    name?: str


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderScalingConfig:
    """
    The scaling configuration details for the Auto Scaling group that is created for your node group.

    Attributes
    ----------
    desiredSize : int, default is Undefined, optional
        The current number of worker nodes for the managed node group.
    """


    desiredSize?: int


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusAtProviderUpdateConfig:
    """
    The current update configuration of the node group

    Attributes
    ----------
    maxUnavailable : int, default is Undefined, optional
        The current maximum number of nodes unavailable at once during a version update.
    maxUnavailablePercentage : int, default is Undefined, optional
        The current maximum percentage of nodes unavailable during a version update. This percentage of nodes will be updated in parallel.
    """


    maxUnavailable?: int

    maxUnavailablePercentage?: int


schema EksAwsCrossplaneIoV1alpha1NodeGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


