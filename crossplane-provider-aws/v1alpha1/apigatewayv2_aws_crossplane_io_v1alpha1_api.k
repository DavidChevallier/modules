"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema API:
    """
    API is the Schema for the APIS API

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "API", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsCrossplaneIoV1alpha1APISpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsCrossplaneIoV1alpha1APIStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.crossplane.io/v1alpha1" = "apigatewayv2.aws.crossplane.io/v1alpha1"

    kind: "API" = "API"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsCrossplaneIoV1alpha1APISpec

    status?: Apigatewayv2AwsCrossplaneIoV1alpha1APIStatus


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpec:
    """
    APISpec defines the desired state of API

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecForProvider

    providerConfigRef?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderConfigRef

    providerRef?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderRef

    publishConnectionDetailsTo?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecWriteConnectionSecretToRef


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecForProvider:
    """
    APIParameters defines the desired state of API

    Attributes
    ----------
    apiKeySelectionExpression : str, default is Undefined, optional
        api key selection expression
    corsConfiguration : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecForProviderCorsConfiguration, default is Undefined, optional
        cors configuration
    credentialsARN : str, default is Undefined, optional
        credentials a r n
    description : str, default is Undefined, optional
        description
    disableExecuteAPIEndpoint : bool, default is Undefined, optional
        disable execute API endpoint
    disableSchemaValidation : bool, default is Undefined, optional
        disable schema validation
    name : str, default is Undefined, required
        name
    protocolType : str, default is Undefined, required
        protocol type
    region : str, default is Undefined, required
        Region is which region the API will be created.
    routeKey : str, default is Undefined, optional
        route key
    routeSelectionExpression : str, default is Undefined, optional
        route selection expression
    tags : {str:str}, default is Undefined, optional
        tags
    target : str, default is Undefined, optional
        target
    version : str, default is Undefined, optional
        version
    """


    apiKeySelectionExpression?: str

    corsConfiguration?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecForProviderCorsConfiguration

    credentialsARN?: str

    description?: str

    disableExecuteAPIEndpoint?: bool

    disableSchemaValidation?: bool

    name: str

    protocolType: str

    region: str

    routeKey?: str

    routeSelectionExpression?: str

    tags?: {str:str}

    target?: str

    version?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecForProviderCorsConfiguration:
    """
    apigatewayv2 aws crossplane io v1alpha1 API spec for provider cors configuration

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        allow credentials
    allowHeaders : [str], default is Undefined, optional
        Represents a collection of allowed headers. Supported only for HTTP APIs.
    allowMethods : [str], default is Undefined, optional
        Represents a collection of methods. Supported only for HTTP APIs.
    allowOrigins : [str], default is Undefined, optional
        Represents a collection of origins. Supported only for HTTP APIs.
    exposeHeaders : [str], default is Undefined, optional
        Represents a collection of allowed headers. Supported only for HTTP APIs.
    maxAge : int, default is Undefined, optional
        An integer with a value between -1 and 86400. Supported only for HTTP APIs.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: int


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1APISpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1APIStatus:
    """
    APIStatus defines the observed state of API.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsCrossplaneIoV1alpha1APIStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsCrossplaneIoV1alpha1APIStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Apigatewayv2AwsCrossplaneIoV1alpha1APIStatusAtProvider

    conditions?: [Apigatewayv2AwsCrossplaneIoV1alpha1APIStatusConditionsItems0]


schema Apigatewayv2AwsCrossplaneIoV1alpha1APIStatusAtProvider:
    """
    APIObservation defines the observed state of API

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        api endpoint
    apiGatewayManaged : bool, default is Undefined, optional
        api gateway managed
    apiID : str, default is Undefined, optional
        api ID
    createdDate : str, default is Undefined, optional
        created date
    importInfo : [str], default is Undefined, optional
        import info
    warnings : [str], default is Undefined, optional
        warnings
    """


    apiEndpoint?: str

    apiGatewayManaged?: bool

    apiID?: str

    createdDate?: str

    importInfo?: [str]

    warnings?: [str]


schema Apigatewayv2AwsCrossplaneIoV1alpha1APIStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


