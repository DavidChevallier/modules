"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DomainName:
    """
    DomainName is the Schema for the DomainNames API

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DomainName", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.crossplane.io/v1alpha1" = "apigatewayv2.aws.crossplane.io/v1alpha1"

    kind: "DomainName" = "DomainName"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpec

    status?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatus


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpec:
    """
    DomainNameSpec defines the desired state of DomainName

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProvider

    providerConfigRef?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderConfigRef

    providerRef?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderRef

    publishConnectionDetailsTo?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProvider:
    """
    DomainNameParameters defines the desired state of DomainName

    Attributes
    ----------
    domainNameConfigurations : [Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProviderDomainNameConfigurationsItems0], default is Undefined, optional
        domain name configurations
    mutualTLSAuthentication : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProviderMutualTLSAuthentication, default is Undefined, optional
        mutual TLS authentication
    region : str, default is Undefined, required
        Region is which region the DomainName will be created.
    tags : {str:str}, default is Undefined, optional
        tags
    """


    domainNameConfigurations?: [Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProviderDomainNameConfigurationsItems0]

    mutualTLSAuthentication?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProviderMutualTLSAuthentication

    region: str

    tags?: {str:str}


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProviderDomainNameConfigurationsItems0:
    """
    apigatewayv2 aws crossplane io v1alpha1 domain name spec for provider domain name configurations items0

    Attributes
    ----------
    apiGatewayDomainName : str, default is Undefined, optional
        api gateway domain name
    certificateARN : str, default is Undefined, optional
        Represents an Amazon Resource Name (ARN).
    certificateName : str, default is Undefined, optional
        A string with a length between [1-128].
    certificateUploadDate : str, default is Undefined, optional
        certificate upload date
    domainNameStatus : str, default is Undefined, optional
        The status of the domain name migration. The valid values are AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.
    domainNameStatusMessage : str, default is Undefined, optional
        domain name status message
    endpointType : str, default is Undefined, optional
        Represents an endpoint type.
    hostedZoneID : str, default is Undefined, optional
        hosted zone ID
    ownershipVerificationCertificateARN : str, default is Undefined, optional
        Represents an Amazon Resource Name (ARN).
    securityPolicy : str, default is Undefined, optional
        The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.
    """


    apiGatewayDomainName?: str

    certificateARN?: str

    certificateName?: str

    certificateUploadDate?: str

    domainNameStatus?: str

    domainNameStatusMessage?: str

    endpointType?: str

    hostedZoneID?: str

    ownershipVerificationCertificateARN?: str

    securityPolicy?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecForProviderMutualTLSAuthentication:
    """
    apigatewayv2 aws crossplane io v1alpha1 domain name spec for provider mutual TLS authentication

    Attributes
    ----------
    truststoreURI : str, default is Undefined, optional
        A string representation of a URI with a length between [1-2048].
    truststoreVersion : str, default is Undefined, optional
        A string with a length between [1-64].
    """


    truststoreURI?: str

    truststoreVersion?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatus:
    """
    DomainNameStatus defines the observed state of DomainName.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatusAtProvider

    conditions?: [Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatusConditionsItems0]


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatusAtProvider:
    """
    DomainNameObservation defines the observed state of DomainName

    Attributes
    ----------
    apiMappingSelectionExpression : str, default is Undefined, optional
        api mapping selection expression
    domainName : str, default is Undefined, optional
        domain name
    """


    apiMappingSelectionExpression?: str

    domainName?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1DomainNameStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


