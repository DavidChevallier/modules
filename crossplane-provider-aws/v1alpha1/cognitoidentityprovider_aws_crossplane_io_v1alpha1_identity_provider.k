"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IdentityProvider:
    """
    IdentityProvider is the Schema for the IdentityProviders API

    Attributes
    ----------
    apiVersion : str, default is "cognitoidentityprovider.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IdentityProvider", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpec, default is Undefined, required
        spec
    status : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatus, default is Undefined, optional
        status
    """


    apiVersion: "cognitoidentityprovider.aws.crossplane.io/v1alpha1" = "cognitoidentityprovider.aws.crossplane.io/v1alpha1"

    kind: "IdentityProvider" = "IdentityProvider"

    metadata?: v1.ObjectMeta

    spec: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpec

    status?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatus


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpec:
    """
    IdentityProviderSpec defines the desired state of IdentityProvider

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProvider

    providerConfigRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRef

    providerRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderRef

    publishConnectionDetailsTo?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecWriteConnectionSecretToRef


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProvider:
    """
    IdentityProviderParameters defines the desired state of IdentityProvider

    Attributes
    ----------
    attributeMapping : {str:str}, default is Undefined, optional
        A mapping of identity provider attributes to standard and custom user pool attributes.
    idpIdentifiers : [str], default is Undefined, optional
        A list of identity provider identifiers.
    providerDetailsSecretRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderProviderDetailsSecretRef, default is Undefined, optional
        provider details secret ref
    providerType : str, default is Undefined, required
        The identity provider type.
    region : str, default is Undefined, required
        Region is which region the IdentityProvider will be created.
    userPoolId : str, default is Undefined, optional
        The user pool ID.
    userPoolIdRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    """


    attributeMapping?: {str:str}

    idpIdentifiers?: [str]

    providerDetailsSecretRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderProviderDetailsSecretRef

    providerType: str

    region: str

    userPoolId?: str

    userPoolIdRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDRef

    userPoolIdSelector?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDSelector


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderProviderDetailsSecretRef:
    """
    ProviderDetailsSecretRef contins a reference to a secret containing keys according to ProviderDetails. The following list describes the provider detail keys for each identity provider type. 
     * For Google and Login with Amazon: client_id client_secret authorize_scopes 
     * For Facebook: client_id client_secret authorize_scopes api_version 
     * For Sign in with Apple: client_id team_id key_id private_key authorize_scopes 
     * For OIDC providers: client_id client_secret attributes_request_method oidc_issuer authorize_scopes authorize_url if not available from discovery URL specified by oidc_issuer key token_url if not available from discovery URL specified by oidc_issuer key attributes_url if not available from discovery URL specified by oidc_issuer key jwks_uri if not available from discovery URL specified by oidc_issuer key 
     * For SAML providers: MetadataFile OR MetadataURL IDPSignout optional

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDRef:
    """
    UserPoolIDRef is a reference to an server instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDSelector:
    """
    UserPoolIDSelector selects references to an server instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDSelectorPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecForProviderUserPoolIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToConfigRef

    metadata?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToMetadata

    name: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToConfigRefPolicy


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatus:
    """
    IdentityProviderStatus defines the observed state of IdentityProvider.

    Attributes
    ----------
    atProvider : CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatusAtProvider

    conditions?: [CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatusConditionsItems0]


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatusAtProvider:
    """
    IdentityProviderObservation defines the observed state of IdentityProvider

    Attributes
    ----------
    creationDate : str, default is Undefined, optional
        The date the identity provider was created.
    lastModifiedDate : str, default is Undefined, optional
        The date the identity provider was last modified.
    providerName : str, default is Undefined, optional
        The identity provider name.
    userPoolID : str, default is Undefined, optional
        The user pool ID.
    """


    creationDate?: str

    lastModifiedDate?: str

    providerName?: str

    userPoolID?: str


schema CognitoidentityproviderAwsCrossplaneIoV1alpha1IdentityProviderStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


