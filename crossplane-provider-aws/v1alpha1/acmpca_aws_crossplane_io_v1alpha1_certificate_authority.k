"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CertificateAuthority:
    """
    CertificateAuthority is a managed resource that represents an AWS CertificateAuthority Manager. Deprecated: Please use v1beta1 version of this resource.

    Attributes
    ----------
    apiVersion : str, default is "acmpca.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CertificateAuthority", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpec, default is Undefined, required
        spec
    status : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatus, default is Undefined, optional
        status
    """


    apiVersion: "acmpca.aws.crossplane.io/v1alpha1" = "acmpca.aws.crossplane.io/v1alpha1"

    kind: "CertificateAuthority" = "CertificateAuthority"

    metadata?: v1.ObjectMeta

    spec: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpec

    status?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatus


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpec:
    """
    CertificateAuthoritySpec defines the desired state of CertificateAuthority

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProvider

    providerConfigRef?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderConfigRef

    providerRef?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderRef

    publishConnectionDetailsTo?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecWriteConnectionSecretToRef


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProvider:
    """
    CertificateAuthorityParameters defines the desired state of an AWS CertificateAuthority.

    Attributes
    ----------
    certificateAuthorityConfiguration : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderCertificateAuthorityConfiguration, default is Undefined, required
        certificate authority configuration
    permanentDeletionTimeInDays : int, default is Undefined, optional
        The number of days to make a CA restorable after it has been deleted
    region : str, default is Undefined, required
        Region is the region you'd like your CertificateAuthority to be created in.
    revocationConfiguration : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderRevocationConfiguration, default is Undefined, optional
        revocation configuration
    status : str, default is Undefined, optional
        Status of the certificate authority. This value cannot be configured at creation, but can be updated to set a CA to ACTIVE or DISABLED.
    tags : [AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderTagsItems0], default is Undefined, required
        One or more resource tags to associate with the certificateAuthority.
    $type : str, default is Undefined, required
        Type of the certificate authority
    """


    certificateAuthorityConfiguration: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderCertificateAuthorityConfiguration

    permanentDeletionTimeInDays?: int

    region: str

    revocationConfiguration?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderRevocationConfiguration

    status?: "ACTIVE" | "DISABLED"

    tags: [AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderTagsItems0]

    $type: "ROOT" | "SUBORDINATE"


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderCertificateAuthorityConfiguration:
    """
    CertificateAuthorityConfiguration to associate with the certificateAuthority.

    Attributes
    ----------
    keyAlgorithm : str, default is Undefined, required
        Type of the public key algorithm
    signingAlgorithm : str, default is Undefined, required
        Algorithm that private CA uses to sign certificate requests
    subject : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationSubject, default is Undefined, required
        subject
    """


    keyAlgorithm: "RSA_2048" | "EC_secp384r1" | "EC_prime256v1" | "RSA_4096"

    signingAlgorithm: "SHA512WITHECDSA" | "SHA256WITHECDSA" | "SHA384WITHECDSA" | "SHA512WITHRSA" | "SHA256WITHRSA" | "SHA384WITHRSA"

    subject: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationSubject


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationSubject:
    """
    Subject is information of Certificate Authority

    Attributes
    ----------
    commonName : str, default is Undefined, required
        FQDN associated with the certificate subject
    country : str, default is Undefined, required
        Two-digit code that specifies the country
    distinguishedNameQualifier : str, default is Undefined, optional
        Disambiguating information for the certificate subject.
    generationQualifier : str, default is Undefined, optional
        Typically a qualifier appended to the name of an individual
    givenName : str, default is Undefined, optional
        First name
    initials : str, default is Undefined, optional
        Concatenation of first letter of the GivenName, Middle name and SurName.
    locality : str, default is Undefined, required
        The locality such as a city or town
    organization : str, default is Undefined, required
        Organization legal name
    organizationalUnit : str, default is Undefined, required
        Organization's subdivision or unit
    pseudonym : str, default is Undefined, optional
        Shortened version of a longer GivenName
    serialNumber : str, default is Undefined, optional
        The certificate serial number.
    state : str, default is Undefined, required
        State in which the subject of the certificate is located
    surname : str, default is Undefined, optional
        Surname
    title : str, default is Undefined, optional
        Title
    """


    commonName: str

    country: str

    distinguishedNameQualifier?: str

    generationQualifier?: str

    givenName?: str

    initials?: str

    locality: str

    organization: str

    organizationalUnit: str

    pseudonym?: str

    serialNumber?: str

    state: str

    surname?: str

    title?: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderRevocationConfiguration:
    """
    RevocationConfiguration to associate with the certificateAuthority.

    Attributes
    ----------
    customCname : str, default is Undefined, optional
        Alias for the CRL distribution point
    enabled : bool, default is Undefined, required
        Boolean value that specifies certificate revocation
    expirationInDays : int, default is Undefined, optional
        Number of days until a certificate expires
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket that contains the CRL
    """


    customCname?: str

    enabled: bool

    expirationInDays?: int

    s3BucketName?: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecForProviderTagsItems0:
    """
    Tag represents user-provided metadata that can be associated

    Attributes
    ----------
    key : str, default is Undefined, required
        The key name that can be used to look up or retrieve the associated value.
    value : str, default is Undefined, required
        The value associated with this tag.
    """


    key: str

    value: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderConfigRefPolicy


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderRefPolicy


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef

    metadata?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToMetadata

    name: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthoritySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatus:
    """
    An CertificateAuthorityStatus represents the observed state of an CertificateAuthority manager.

    Attributes
    ----------
    atProvider : AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatusAtProvider

    conditions?: [AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatusConditionsItems0]


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatusAtProvider:
    """
    CertificateAuthorityExternalStatus keeps the state of external resource

    Attributes
    ----------
    certificateAuthorityARN : str, default is Undefined, optional
        String that contains the ARN of the issued certificate Authority
    serial : str, default is Undefined, optional
        Serial of the Certificate Authority
    status : str, default is Undefined, optional
        Status is the current status of the CertificateAuthority.
    """


    certificateAuthorityARN?: str

    serial?: str

    status?: str


schema AcmpcaAwsCrossplaneIoV1alpha1CertificateAuthorityStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


