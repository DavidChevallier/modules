"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CacheParameterGroup:
    """
    CacheParameterGroup is the Schema for the CacheParameterGroups API

    Attributes
    ----------
    apiVersion : str, default is "elasticache.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CacheParameterGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpec, default is Undefined, required
        spec
    status : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticache.aws.crossplane.io/v1alpha1" = "elasticache.aws.crossplane.io/v1alpha1"

    kind: "CacheParameterGroup" = "CacheParameterGroup"

    metadata?: v1.ObjectMeta

    spec: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpec

    status?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatus


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpec:
    """
    CacheParameterGroupSpec defines the desired state of CacheParameterGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProvider

    providerConfigRef?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderConfigRef

    providerRef?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderRef

    publishConnectionDetailsTo?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecWriteConnectionSecretToRef


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProvider:
    """
    CacheParameterGroupParameters defines the desired state of CacheParameterGroup

    Attributes
    ----------
    cacheParameterGroupFamily : str, default is Undefined, required
        The name of the cache parameter group family that the cache parameter group can be used with. 
         Valid values are: memcached1.4 | memcached1.5 | memcached1.6 | redis2.6 | redis2.8 | redis3.2 | redis4.0 | redis5.0 | redis6.x
    description : str, default is Undefined, required
        A user-specified description for the cache parameter group.
    parameters : [ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProviderParametersItems0], default is Undefined, optional
        A list of parameters to associate with this DB parameter group
    region : str, default is Undefined, required
        Region is which region the CacheParameterGroup will be created.
    tags : [ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProviderTagsItems0], default is Undefined, optional
        A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.
    """


    cacheParameterGroupFamily: str

    description: str

    parameters?: [ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProviderParametersItems0]

    region: str

    tags?: [ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProviderTagsItems0]


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProviderParametersItems0:
    """
    elasticache aws crossplane io v1alpha1 cache parameter group spec for provider parameters items0

    Attributes
    ----------
    parameterName : str, default is Undefined, optional
        parameter name
    parameterValue : str, default is Undefined, optional
        parameter value
    """


    parameterName?: str

    parameterValue?: str


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecForProviderTagsItems0:
    """
    elasticache aws crossplane io v1alpha1 cache parameter group spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderConfigRefPolicy


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderRefPolicy


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatus:
    """
    CacheParameterGroupStatus defines the observed state of CacheParameterGroup.

    Attributes
    ----------
    atProvider : ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatusAtProvider

    conditions?: [ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatusConditionsItems0]


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatusAtProvider:
    """
    CacheParameterGroupObservation defines the observed state of CacheParameterGroup

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN (Amazon Resource Name) of the cache parameter group.
    cacheParameterGroupName : str, default is Undefined, optional
        The name of the cache parameter group.
    isGlobal : bool, default is Undefined, optional
        Indicates whether the parameter group is associated with a Global datastore
    """


    arn?: str

    cacheParameterGroupName?: str

    isGlobal?: bool


schema ElasticacheAwsCrossplaneIoV1alpha1CacheParameterGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


