"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RuleGroupsNamespace:
    """
    RuleGroupsNamespace is the Schema for the RuleGroupsNamespaces API

    Attributes
    ----------
    apiVersion : str, default is "prometheusservice.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RuleGroupsNamespace", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpec, default is Undefined, required
        spec
    status : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatus, default is Undefined, optional
        status
    """


    apiVersion: "prometheusservice.aws.crossplane.io/v1alpha1" = "prometheusservice.aws.crossplane.io/v1alpha1"

    kind: "RuleGroupsNamespace" = "RuleGroupsNamespace"

    metadata?: v1.ObjectMeta

    spec: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpec

    status?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatus


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpec:
    """
    RuleGroupsNamespaceSpec defines the desired state of RuleGroupsNamespace

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProvider

    providerConfigRef?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderConfigRef

    providerRef?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderRef

    publishConnectionDetailsTo?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecWriteConnectionSecretToRef


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProvider:
    """
    RuleGroupsNamespaceParameters defines the desired state of RuleGroupsNamespace

    Attributes
    ----------
    data : str, default is Undefined, required
        The namespace data that define the rule groups.
    name : str, default is Undefined, required
        The rule groups namespace name.
    region : str, default is Undefined, required
        Region is which region the RuleGroupsNamespace will be created.
    tags : {str:str}, default is Undefined, optional
        Optional, user-provided tags for this rule groups namespace.
    workspaceId : str, default is Undefined, optional
        workspaceID is the ID for the Workspace.
    workspaceIdRef : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDRef, default is Undefined, optional
        workspace Id ref
    workspaceIdSelector : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDSelector, default is Undefined, optional
        workspace Id selector
    """


    data: str

    name: str

    region: str

    tags?: {str:str}

    workspaceId?: str

    workspaceIdRef?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDRef

    workspaceIdSelector?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDSelector


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDRef:
    """
    WorkspaceIDRef is a reference to a Workspace used to set the workspaceID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDSelector:
    """
    WorkspaceIDSelector selects references to Workspace used to set the workspaceID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDSelectorPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecForProviderWorkspaceIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderConfigRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToConfigRef

    metadata?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToMetadata

    name: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToConfigRefPolicy


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatus:
    """
    RuleGroupsNamespaceStatus defines the observed state of RuleGroupsNamespace.

    Attributes
    ----------
    atProvider : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusAtProvider

    conditions?: [PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusConditionsItems0]


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusAtProvider:
    """
    RuleGroupsNamespaceObservation defines the observed state of RuleGroupsNamespace

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of this rule groups namespace.
    status : PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusAtProviderStatus, default is Undefined, optional
        status
    """


    arn?: str

    status?: PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusAtProviderStatus


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusAtProviderStatus:
    """
    The status of rule groups namespace.

    Attributes
    ----------
    statusCode : str, default is Undefined, optional
        State of a namespace.
    statusReason : str, default is Undefined, optional
        status reason
    """


    statusCode?: str

    statusReason?: str


schema PrometheusserviceAwsCrossplaneIoV1alpha1RuleGroupsNamespaceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


