"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TransitGatewayRoute:
    """
    TransitGatewayRoute is the Schema for the TransitGatewayRoutes API

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TransitGatewayRoute", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpec, default is Undefined, required
        spec
    status : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.crossplane.io/v1alpha1" = "ec2.aws.crossplane.io/v1alpha1"

    kind: "TransitGatewayRoute" = "TransitGatewayRoute"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpec

    status?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatus


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpec:
    """
    TransitGatewayRouteSpec defines the desired state of TransitGatewayRoute

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProvider

    providerConfigRef?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderConfigRef

    providerRef?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderRef

    publishConnectionDetailsTo?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecWriteConnectionSecretToRef


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProvider:
    """
    TransitGatewayRouteParameters defines the desired state of TransitGatewayRoute

    Attributes
    ----------
    blackhole : bool, default is Undefined, optional
        Indicates whether to drop traffic that matches this route.
    destinationCIDRBlock : str, default is Undefined, required
        The CIDR range used for destination matches. Routing decisions are based on the most specific match.
    region : str, default is Undefined, required
        Region is which region the TransitGatewayRoute will be created.
    transitGatewayAttachmentId : str, default is Undefined, optional
        The ID of the attachment.
    transitGatewayAttachmentIdRef : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDRef, default is Undefined, optional
        transit gateway attachment Id ref
    transitGatewayAttachmentIdSelector : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDSelector, default is Undefined, optional
        transit gateway attachment Id selector
    transitGatewayRouteTableId : str, default is Undefined, optional
        The ID of the transit gateway route table.
    transitGatewayRouteTableIdRef : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDRef, default is Undefined, optional
        transit gateway route table Id ref
    transitGatewayRouteTableIdSelector : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDSelector, default is Undefined, optional
        transit gateway route table Id selector
    """


    blackhole?: bool

    destinationCIDRBlock: str

    region: str

    transitGatewayAttachmentId?: str

    transitGatewayAttachmentIdRef?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDRef

    transitGatewayAttachmentIdSelector?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDSelector

    transitGatewayRouteTableId?: str

    transitGatewayRouteTableIdRef?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDRef

    transitGatewayRouteTableIdSelector?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDSelector


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDRef:
    """
    TransitGatewayAttachmentIDRef is a reference to an API used to set the TransitGatewayAttachmentID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDSelector:
    """
    TransitGatewayAttachmentIDSelector selects references to API used to set the TransitGatewayAttachmentID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayAttachmentIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDRef:
    """
    TransitGatewayRouteTableIDRef is a reference to an API used to set the TransitGatewayRouteTableID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDSelector:
    """
    TransitGatewayRouteTableIDSelector selects references to API used to set the TransitGatewayRouteTableID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDSelectorPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecForProviderTransitGatewayRouteTableIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatus:
    """
    TransitGatewayRouteStatus defines the observed state of TransitGatewayRoute.

    Attributes
    ----------
    atProvider : Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusAtProvider

    conditions?: [Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusConditionsItems0]


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusAtProvider:
    """
    TransitGatewayRouteObservation defines the observed state of TransitGatewayRoute

    Attributes
    ----------
    prefixListID : str, default is Undefined, optional
        The ID of the prefix list used for destination matches.
    state : str, default is Undefined, optional
        The state of the route.
    transitGatewayAttachments : [Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusAtProviderTransitGatewayAttachmentsItems0], default is Undefined, optional
        The attachments.
    type_ : str, default is Undefined, optional
        The route type.
    """


    prefixListID?: str

    state?: str

    transitGatewayAttachments?: [Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusAtProviderTransitGatewayAttachmentsItems0]

    type_?: str


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusAtProviderTransitGatewayAttachmentsItems0:
    """
    ec2 aws crossplane io v1alpha1 transit gateway route status at provider transit gateway attachments items0

    Attributes
    ----------
    resourceID : str, default is Undefined, optional
        resource ID
    resourceType : str, default is Undefined, optional
        resource type
    transitGatewayAttachmentID : str, default is Undefined, optional
        transit gateway attachment ID
    """


    resourceID?: str

    resourceType?: str

    transitGatewayAttachmentID?: str


schema Ec2AwsCrossplaneIoV1alpha1TransitGatewayRouteStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


