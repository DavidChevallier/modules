"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Integration:
    """
    Integration is the Schema for the Integrations API

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Integration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.crossplane.io/v1alpha1" = "apigatewayv2.aws.crossplane.io/v1alpha1"

    kind: "Integration" = "Integration"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpec

    status?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatus


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpec:
    """
    IntegrationSpec defines the desired state of Integration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProvider

    providerConfigRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderConfigRef

    providerRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderRef

    publishConnectionDetailsTo?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProvider:
    """
    IntegrationParameters defines the desired state of Integration

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        APIID is the ID for the API.
    apiIdRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    connectionID : str, default is Undefined, optional
        connection ID
    connectionType : str, default is Undefined, optional
        connection type
    contentHandlingStrategy : str, default is Undefined, optional
        content handling strategy
    credentialsARN : str, default is Undefined, optional
        credentials a r n
    description : str, default is Undefined, optional
        description
    integrationMethod : str, default is Undefined, optional
        integration method
    integrationSubtype : str, default is Undefined, optional
        integration subtype
    integrationType : str, default is Undefined, required
        integration type
    integrationURI : str, default is Undefined, optional
        integration URI
    passthroughBehavior : str, default is Undefined, optional
        passthrough behavior
    payloadFormatVersion : str, default is Undefined, optional
        payload format version
    region : str, default is Undefined, required
        Region is which region the Integration will be created.
    requestParameters : {str:str}, default is Undefined, optional
        request parameters
    requestTemplates : {str:str}, default is Undefined, optional
        request templates
    responseParameters : {str:Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderResponseParametersAnon}, default is Undefined, optional
        Supported only for HTTP APIs. You use response parameters to transform the HTTP response from a backend integration before returning the response to clients. Specify a key-value map from a selection key to response parameters. The selection key must be a valid HTTP status code within the range of 200-599.
    templateSelectionExpression : str, default is Undefined, optional
        template selection expression
    timeoutInMillis : int, default is Undefined, optional
        timeout in millis
    tlsConfig : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderTLSConfig, default is Undefined, optional
        tls config
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDSelector

    connectionID?: str

    connectionType?: str

    contentHandlingStrategy?: str

    credentialsARN?: str

    description?: str

    integrationMethod?: str

    integrationSubtype?: str

    integrationType: str

    integrationURI?: str

    passthroughBehavior?: str

    payloadFormatVersion?: str

    region: str

    requestParameters?: {str:str}

    requestTemplates?: {str:str}

    responseParameters?: {str:Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderResponseParametersAnon}

    templateSelectionExpression?: str

    timeoutInMillis?: int

    tlsConfig?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderTLSConfig


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDRef:
    """
    APIIDRef is a reference to an API used to set the APIID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDSelector:
    """
    APIIDSelector selects references to API used to set the APIID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderAPIIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderResponseParametersAnon:
    """
    ResponseParameter represents a single response parameter transform operation.

    Attributes
    ----------
    headerEntry : [Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderResponseParametersAnonHeaderEntryItems0], default is Undefined, optional
        HeaderEntries is the array of header changes you'd like to make. For details, see Transforming API responses in https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html
    overwriteStatusCodeEntry : str, default is Undefined, optional
        OverwriteStatusCode is the status code you'd like the response to have, overwriting the one in the original response. For details, see Transforming API responses in https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html
    """


    headerEntry?: [Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderResponseParametersAnonHeaderEntryItems0]

    overwriteStatusCodeEntry?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderResponseParametersAnonHeaderEntryItems0:
    """
    HeaderEntry can be used to represent a single header transform.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of the header.
    operation : str, default is Undefined, required
        Operation is what you'd like to do with given header. Only append, overwrite and remove values are supported.
    value : str, default is Undefined, required
        Value is the new value.
    """


    name: str

    operation: "append" | "overwrite" | "remove"

    value: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecForProviderTLSConfig:
    """
    apigatewayv2 aws crossplane io v1alpha1 integration spec for provider TLS config

    Attributes
    ----------
    serverNameToVerify : str, default is Undefined, optional
        A string with a length between [1-512].
    """


    serverNameToVerify?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatus:
    """
    IntegrationStatus defines the observed state of Integration.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatusAtProvider

    conditions?: [Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatusConditionsItems0]


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatusAtProvider:
    """
    IntegrationObservation defines the observed state of Integration

    Attributes
    ----------
    apiGatewayManaged : bool, default is Undefined, optional
        api gateway managed
    integrationID : str, default is Undefined, optional
        integration ID
    integrationResponseSelectionExpression : str, default is Undefined, optional
        integration response selection expression
    """


    apiGatewayManaged?: bool

    integrationID?: str

    integrationResponseSelectionExpression?: str


schema Apigatewayv2AwsCrossplaneIoV1alpha1IntegrationStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


