"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Service:
    """
    Service is the Schema for the Services API

    Attributes
    ----------
    apiVersion : str, default is "ecs.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Service", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcsAwsCrossplaneIoV1alpha1ServiceSpec, default is Undefined, required
        spec
    status : EcsAwsCrossplaneIoV1alpha1ServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecs.aws.crossplane.io/v1alpha1" = "ecs.aws.crossplane.io/v1alpha1"

    kind: "Service" = "Service"

    metadata?: v1.ObjectMeta

    spec: EcsAwsCrossplaneIoV1alpha1ServiceSpec

    status?: EcsAwsCrossplaneIoV1alpha1ServiceStatus


schema EcsAwsCrossplaneIoV1alpha1ServiceSpec:
    """
    ServiceSpec defines the desired state of Service

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProvider

    providerConfigRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderConfigRef

    providerRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderRef

    publishConnectionDetailsTo?: EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecWriteConnectionSecretToRef


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProvider:
    """
    ServiceParameters defines the desired state of Service

    Attributes
    ----------
    capacityProviderStrategy : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderCapacityProviderStrategyItems0], default is Undefined, optional
        The capacity provider strategy to use for the service. 
         If a capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified, the defaultCapacityProviderStrategy for the cluster is used. 
         A capacity provider strategy may contain a maximum of 6 capacity providers.
    cluster : str, default is Undefined, optional
        The short name or full Amazon Resource Name (ARN) of the cluster on which to run your service. If you do not specify a cluster, the default cluster is assumed.
    clusterRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterRef, default is Undefined, optional
        cluster ref
    clusterSelector : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterSelector, default is Undefined, optional
        cluster selector
    deploymentConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentConfiguration, default is Undefined, optional
        deployment configuration
    deploymentController : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentController, default is Undefined, optional
        deployment controller
    desiredCount : int, default is Undefined, optional
        The number of instantiations of the specified task definition to place and keep running on your cluster. 
         This is required if schedulingStrategy is REPLICA or isn't specified. If schedulingStrategy is DAEMON then this isn't required.
    enableECSManagedTags : bool, default is Undefined, optional
        Specifies whether to turn on Amazon ECS managed tags for the tasks within the service. For more information, see Tagging Your Amazon ECS Resources (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html) in the Amazon Elastic Container Service Developer Guide.
    enableExecuteCommand : bool, default is Undefined, optional
        Determines whether the execute command functionality is enabled for the service. If true, this enables execute command functionality on all containers in the service tasks.
    healthCheckGracePeriodSeconds : int, default is Undefined, optional
        The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started. This is only used when your service is configured to use a load balancer. If your service has a load balancer defined and you don't specify a health check grace period value, the default value of 0 is used. 
         If you do not use an Elastic Load Balancing, we recomend that you use the startPeriod in the task definition healtch check parameters. For more information, see Health check (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_HealthCheck.html). 
         If your service's tasks take a while to start and respond to Elastic Load Balancing health checks, you can specify a health check grace period of up to 2,147,483,647 seconds (about 69 years). During that time, the Amazon ECS service scheduler ignores health check status. This grace period can prevent the service scheduler from marking tasks as unhealthy and stopping them before they have time to come up.
    launchType : str, default is Undefined, optional
        The infrastructure that you run your service on. For more information, see Amazon ECS launch types (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) in the Amazon Elastic Container Service Developer Guide. 
         The FARGATE launch type runs your tasks on Fargate On-Demand infrastructure. 
         Fargate Spot infrastructure is available for use but a capacity provider strategy must be used. For more information, see Fargate capacity providers (https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-capacity-providers.html) in the Amazon ECS User Guide for Fargate. 
         The EC2 launch type runs your tasks on Amazon EC2 instances registered to your cluster. 
         The EXTERNAL launch type runs your tasks on your on-premises server or virtual machine (VM) capacity registered to your cluster. 
         A service can use either a launch type or a capacity provider strategy. If a launchType is specified, the capacityProviderStrategy parameter must be omitted.
    loadBalancers : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0], default is Undefined, optional
        A load balancer object representing the load balancers to use with your service. For more information, see Service Load Balancing (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-load-balancing.html) in the Amazon Elastic Container Service Developer Guide. 
         If the service is using the rolling update (ECS) deployment controller and using either an Application Load Balancer or Network Load Balancer, you must specify one or more target group ARNs to attach to the service. The service-linked role is required for services that make use of multiple target groups. For more information, see Using service-linked roles for Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html) in the Amazon Elastic Container Service Developer Guide. 
         If the service is using the CODE_DEPLOY deployment controller, the service is required to use either an Application Load Balancer or Network Load Balancer. When creating an CodeDeploy deployment group, you specify two target groups (referred to as a targetGroupPair). During a deployment, CodeDeploy determines which task set in your service has the status PRIMARY and associates one target group with it, and then associates the other target group with the replacement task set. The load balancer can also have up to two listeners: a required listener for production traffic and an optional listener that allows you perform validation tests with Lambda functions before routing production traffic to it. 
         After you create a service using the ECS deployment controller, the load balancer name or target group ARN, container name, and container port specified in the service definition are immutable. If you are using the CODE_DEPLOY deployment controller, these values can be changed when updating the service. 
         For Application Load Balancers and Network Load Balancers, this object must contain the load balancer target group ARN, the container name (as it appears in a container definition), and the container port to access from the load balancer. The load balancer name parameter must be omitted. When a task from this service is placed on a container instance, the container instance and port combination is registered as a target in the target group specified here. 
         For Classic Load Balancers, this object must contain the load balancer name, the container name (as it appears in a container definition), and the container port to access from the load balancer. The target group ARN parameter must be omitted. When a task from this service is placed on a container instance, the container instance is registered with the load balancer specified here. 
         Services with tasks that use the awsvpc network mode (for example, those with the Fargate launch type) only support Application Load Balancers and Network Load Balancers. Classic Load Balancers are not supported. Also, when you create any target groups for these services, you must choose ip as the target type, not instance, because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance.
    networkConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    placementConstraints : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderPlacementConstraintsItems0], default is Undefined, optional
        An array of placement constraint objects to use for tasks in your service. You can specify a maximum of 10 constraints for each task. This limit includes constraints in the task definition and those specified at runtime.
    placementStrategy : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderPlacementStrategyItems0], default is Undefined, optional
        The placement strategy objects to use for tasks in your service. You can specify a maximum of 5 strategy rules for each service.
    platformVersion : str, default is Undefined, optional
        The platform version that your tasks in the service are running on. A platform version is specified only for tasks using the Fargate launch type. If one isn't specified, the LATEST platform version is used. For more information, see Fargate platform versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html) in the Amazon Elastic Container Service Developer Guide.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags aren't propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action.
    region : str, default is Undefined, required
        Region is which region the Service will be created.
    role : str, default is Undefined, optional
        The name or full Amazon Resource Name (ARN) of the IAM role that allows Amazon ECS to make calls to your load balancer on your behalf. This parameter is only permitted if you are using a load balancer with your service and your task definition doesn't use the awsvpc network mode. If you specify the role parameter, you must also specify a load balancer object with the loadBalancers parameter. 
         If your account has already created the Amazon ECS service-linked role, that role is used for your service unless you specify a role here. The service-linked role is required if your task definition uses the awsvpc network mode or if the service is configured to use service discovery, an external deployment controller, multiple target groups, or Elastic Inference accelerators in which case you don't specify a role here. For more information, see Using service-linked roles for Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using-service-linked-roles.html) in the Amazon Elastic Container Service Developer Guide. 
         If your specified role has a path other than /, then you must either specify the full role ARN (this is recommended) or prefix the role name with the path. For example, if a role with the name bar has a path of /foo/ then you would specify /foo/bar as the role name. For more information, see Friendly names and paths (https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) in the IAM User Guide.
    schedulingStrategy : str, default is Undefined, optional
        The scheduling strategy to use for the service. For more information, see Services (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_services.html). 
         There are two service scheduler strategies available: 
         * REPLICA-The replica scheduling strategy places and maintains the desired number of tasks across your cluster. By default, the service scheduler spreads tasks across Availability Zones. You can use task placement strategies and constraints to customize task placement decisions. This scheduler strategy is required if the service uses the CODE_DEPLOY or EXTERNAL deployment controller types. 
         * DAEMON-The daemon scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster. The service scheduler also evaluates the task placement constraints for running tasks and will stop tasks that don't meet the placement constraints. When you're using this strategy, you don't need to specify a desired number of tasks, a task placement strategy, or use Service Auto Scaling policies. Tasks using the Fargate launch type or the CODE_DEPLOY or EXTERNAL deployment controller types don't support the DAEMON scheduling strategy.
    serviceRegistries : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderServiceRegistriesItems0], default is Undefined, optional
        The details of the service discovery registry to associate with this service. For more information, see Service discovery (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-discovery.html). 
         Each service may be associated with one service registry. Multiple service registries for each service isn't supported.
    tags : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTagsItems0], default is Undefined, optional
        The metadata that you apply to the service to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. When a service is deleted, the tags are deleted as well. 
         The following basic restrictions apply to tags: 
         * Maximum number of tags per resource - 50 
         * For each resource, each tag key must be unique, and each tag key can have only one value. 
         * Maximum key length - 128 Unicode characters in UTF-8 
         * Maximum value length - 256 Unicode characters in UTF-8 
         * If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @. 
         * Tag keys and values are case-sensitive. 
         * Do not use aws:, AWS:, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.
    taskDefinition : str, default is Undefined, optional
        The family and revision (family:revision) or full ARN of the task definition to run in your service. If a revision is not specified, the latest ACTIVE revision is used. 
         A task definition must be specified if the service is using either the ECS or CODE_DEPLOY deployment controllers.
    taskDefinitionRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionRef, default is Undefined, optional
        task definition ref
    taskDefinitionSelector : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionSelector, default is Undefined, optional
        task definition selector
    """


    capacityProviderStrategy?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderCapacityProviderStrategyItems0]

    cluster?: str

    clusterRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterRef

    clusterSelector?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterSelector

    deploymentConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentConfiguration

    deploymentController?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentController

    desiredCount?: int

    enableECSManagedTags?: bool

    enableExecuteCommand?: bool

    healthCheckGracePeriodSeconds?: int

    launchType?: str

    loadBalancers?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0]

    networkConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfiguration

    placementConstraints?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderPlacementConstraintsItems0]

    placementStrategy?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    region: str

    role?: str

    schedulingStrategy?: str

    serviceRegistries?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderServiceRegistriesItems0]

    tags?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTagsItems0]

    taskDefinition?: str

    taskDefinitionRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionRef

    taskDefinitionSelector?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionSelector


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderCapacityProviderStrategyItems0:
    """
    ecs aws crossplane io v1alpha1 service spec for provider capacity provider strategy items0

    Attributes
    ----------
    base : int, default is Undefined, optional
        base
    capacityProvider : str, default is Undefined, optional
        capacity provider
    weight : int, default is Undefined, optional
        weight
    """


    base?: int

    capacityProvider?: str

    weight?: int


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderClusterSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentConfiguration:
    """
    Optional deployment parameters that control how many tasks run during the deployment and the ordering of stopping and starting tasks.

    Attributes
    ----------
    deploymentCircuitBreaker : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentConfigurationDeploymentCircuitBreaker, default is Undefined, optional
        deployment circuit breaker
    maximumPercent : int, default is Undefined, optional
        maximum percent
    minimumHealthyPercent : int, default is Undefined, optional
        minimum healthy percent
    """


    deploymentCircuitBreaker?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentConfigurationDeploymentCircuitBreaker

    maximumPercent?: int

    minimumHealthyPercent?: int


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentConfigurationDeploymentCircuitBreaker:
    """
    The deployment circuit breaker can only be used for services using the rolling update (ECS) deployment type that aren't behind a Classic Load Balancer. 
     The deployment circuit breaker determines whether a service deployment will fail if the service can't reach a steady state. If enabled, a service deployment will transition to a failed state and stop launching new tasks. You can also configure Amazon ECS to roll back your service to the last completed deployment after a failure. For more information, see Rolling update (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        enable
    rollback : bool, default is Undefined, optional
        rollback
    """


    enable?: bool

    rollback?: bool


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderDeploymentController:
    """
    The deployment controller to use for the service. If no deployment controller is specified, the default value of ECS is used.

    Attributes
    ----------
    type_ : str, default is Undefined, optional
        type
    """


    type_?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0:
    """
    CustomLoadBalancer provides custom parameters for the LoadBalancer type

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        The name of the container (as it appears in a container definition) to associate with the load balancer.
    containerPort : int, default is Undefined, optional
        The port on the container to associate with the load balancer. This port must correspond to a containerPort in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they're launched on must allow ingress traffic on the hostPort of the port mapping.
    loadBalancerName : str, default is Undefined, optional
        The name of the load balancer to associate with the Amazon ECS service or task set. 
         A load balancer name is only specified when using a Classic Load Balancer. If you are using an Application Load Balancer or a Network Load Balancer the load balancer name parameter should be omitted.
    loadBalancerNameRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameRef, default is Undefined, optional
        load balancer name ref
    loadBalancerNameSelector : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameSelector, default is Undefined, optional
        load balancer name selector
    targetGroupARN : str, default is Undefined, optional
        The full Amazon Resource Name (ARN) of the Elastic Load Balancing target group or groups associated with a service or task set. 
         A target group ARN is only specified when using an Application Load Balancer or Network Load Balancer. If you're using a Classic Load Balancer, omit the target group ARN. 
         For services using the ECS deployment controller, you can specify one or multiple target groups. For more information, see Registering multiple target groups with a service (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/register-multiple-targetgroups.html) in the Amazon Elastic Container Service Developer Guide. 
         For services using the CODE_DEPLOY deployment controller, you're required to define two target groups for the load balancer. For more information, see Blue/green deployment with CodeDeploy (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-bluegreen.html) in the Amazon Elastic Container Service Developer Guide. 
         If your service's task definition uses the awsvpc network mode, you must choose ip as the target type, not instance. Do this when creating your target groups because tasks that use the awsvpc network mode are associated with an elastic network interface, not an Amazon EC2 instance. This network mode is required for the Fargate launch type.
    targetGroupARNRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNRef, default is Undefined, optional
        target group a r n ref
    targetGroupARNSelector : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNSelector, default is Undefined, optional
        target group a r n selector
    """


    containerName?: str

    containerPort?: int

    loadBalancerName?: str

    loadBalancerNameRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameRef

    loadBalancerNameSelector?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameSelector

    targetGroupARN?: str

    targetGroupARNRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNRef

    targetGroupARNSelector?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNSelector


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0LoadBalancerNameSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderLoadBalancersItems0TargetGroupARNSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfiguration:
    """
    The network configuration for the service. This parameter is required for task definitions that use the awsvpc network mode to receive their own elastic network interface, and it is not supported for other network modes. For more information, see Task networking (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    awsvpcConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfiguration, default is Undefined, optional
        awsvpc configuration
    """


    awsvpcConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfiguration


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfiguration:
    """
    An object representing the networking details for a task or service.

    Attributes
    ----------
    assignPublicIP : str, default is Undefined, optional
        assign public IP
    securityGroupRefs : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupRefsItems0], default is Undefined, optional
        security group refs
    securityGroupSelector : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        security groups
    subnetRefs : [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetRefsItems0], default is Undefined, optional
        subnet refs
    subnetSelector : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        subnets
    """


    assignPublicIP?: str

    securityGroupRefs?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupRefsItems0]

    securityGroupSelector?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupSelector

    securityGroups?: [str]

    subnetRefs?: [EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetRefsItems0]

    subnetSelector?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetSelector

    subnets?: [str]


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupRefsItems0Policy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSecurityGroupSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetRefsItems0Policy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderNetworkConfigurationAwsvpcConfigurationSubnetSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderPlacementConstraintsItems0:
    """
    ecs aws crossplane io v1alpha1 service spec for provider placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        expression
    type_ : str, default is Undefined, optional
        type
    """


    expression?: str

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderPlacementStrategyItems0:
    """
    ecs aws crossplane io v1alpha1 service spec for provider placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        field
    type_ : str, default is Undefined, optional
        type
    """


    field?: str

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderServiceRegistriesItems0:
    """
    ecs aws crossplane io v1alpha1 service spec for provider service registries items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        container name
    containerPort : int, default is Undefined, optional
        container port
    port : int, default is Undefined, optional
        port
    registryARN : str, default is Undefined, optional
        registry a r n
    """


    containerName?: str

    containerPort?: int

    port?: int

    registryARN?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTagsItems0:
    """
    ecs aws crossplane io v1alpha1 service spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecForProviderTaskDefinitionSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderConfigRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToConfigRef

    metadata?: EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToMetadata

    name: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToConfigRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatus:
    """
    ServiceStatus defines the observed state of Service.

    Attributes
    ----------
    atProvider : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EcsAwsCrossplaneIoV1alpha1ServiceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProvider

    conditions?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusConditionsItems0]


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProvider:
    """
    ServiceObservation defines the observed state of Service

    Attributes
    ----------
    clusterARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the cluster that hosts the service.
    createdAt : str, default is Undefined, optional
        The Unix timestamp for the time when the service was created.
    createdBy : str, default is Undefined, optional
        The principal that created the service.
    deployments : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0], default is Undefined, optional
        The current state of deployments for the service.
    events : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderEventsItems0], default is Undefined, optional
        The event stream for your service. A maximum of 100 of the latest events are displayed.
    loadBalancers : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderLoadBalancersItems0], default is Undefined, optional
        A list of Elastic Load Balancing load balancer objects. It contains the load balancer name, the container name, and the container port to access from the load balancer. The container name is as it appears in a container definition.
    networkConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    pendingCount : int, default is Undefined, optional
        The number of tasks in the cluster that are in the PENDING state.
    platformFamily : str, default is Undefined, optional
        The operating system that your tasks in the service run on. A platform family is specified only for tasks using the Fargate launch type. 
         All tasks that run as part of this service must use the same platformFamily value as the service (for example, LINUX).
    roleARN : str, default is Undefined, optional
        The ARN of the IAM role that's associated with the service. It allows the Amazon ECS container agent to register container instances with an Elastic Load Balancing load balancer.
    runningCount : int, default is Undefined, optional
        The number of tasks in the cluster that are in the RUNNING state.
    serviceARN : str, default is Undefined, optional
        The ARN that identifies the service. The ARN contains the arn:aws:ecs namespace, followed by the Region of the service, the Amazon Web Services account ID of the service owner, the service namespace, and then the service name. For example, arn:aws:ecs:region:012345678910:service/my-service.
    serviceName : str, default is Undefined, optional
        The name of your service. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. Service names must be unique within a cluster. However, you can have similarly named services in multiple clusters within a Region or across multiple Regions.
    status : str, default is Undefined, optional
        The status of the service. The valid values are ACTIVE, DRAINING, or INACTIVE.
    taskDefinition : str, default is Undefined, optional
        The task definition to use for tasks in the service. This value is specified when the service is created with CreateService, and it can be modified with UpdateService.
    taskSets : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0], default is Undefined, optional
        Information about a set of Amazon ECS tasks in either an CodeDeploy or an EXTERNAL deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic.
    """


    clusterARN?: str

    createdAt?: str

    createdBy?: str

    deployments?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0]

    events?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderEventsItems0]

    loadBalancers?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderLoadBalancersItems0]

    networkConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderNetworkConfiguration

    pendingCount?: int

    platformFamily?: str

    roleARN?: str

    runningCount?: int

    serviceARN?: str

    serviceName?: str

    status?: str

    taskDefinition?: str

    taskSets?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0]


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider deployments items0

    Attributes
    ----------
    capacityProviderStrategy : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0CapacityProviderStrategyItems0], default is Undefined, optional
        capacity provider strategy
    createdAt : str, default is Undefined, optional
        created at
    desiredCount : int, default is Undefined, optional
        desired count
    failedTasks : int, default is Undefined, optional
        failed tasks
    id : str, default is Undefined, optional
        id
    launchType : str, default is Undefined, optional
        launch type
    networkConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0NetworkConfiguration, default is Undefined, optional
        network configuration
    pendingCount : int, default is Undefined, optional
        pending count
    platformFamily : str, default is Undefined, optional
        platform family
    platformVersion : str, default is Undefined, optional
        platform version
    rolloutState : str, default is Undefined, optional
        rollout state
    rolloutStateReason : str, default is Undefined, optional
        rollout state reason
    runningCount : int, default is Undefined, optional
        running count
    status : str, default is Undefined, optional
        status
    taskDefinition : str, default is Undefined, optional
        task definition
    updatedAt : str, default is Undefined, optional
        updated at
    """


    capacityProviderStrategy?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0CapacityProviderStrategyItems0]

    createdAt?: str

    desiredCount?: int

    failedTasks?: int

    id?: str

    launchType?: str

    networkConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0NetworkConfiguration

    pendingCount?: int

    platformFamily?: str

    platformVersion?: str

    rolloutState?: str

    rolloutStateReason?: str

    runningCount?: int

    status?: str

    taskDefinition?: str

    updatedAt?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0CapacityProviderStrategyItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider deployments items0 capacity provider strategy items0

    Attributes
    ----------
    base : int, default is Undefined, optional
        base
    capacityProvider : str, default is Undefined, optional
        capacity provider
    weight : int, default is Undefined, optional
        weight
    """


    base?: int

    capacityProvider?: str

    weight?: int


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0NetworkConfiguration:
    """
    An object representing the network configuration for a task or service.

    Attributes
    ----------
    awsvpcConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0NetworkConfigurationAwsvpcConfiguration, default is Undefined, optional
        awsvpc configuration
    """


    awsvpcConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0NetworkConfigurationAwsvpcConfiguration


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderDeploymentsItems0NetworkConfigurationAwsvpcConfiguration:
    """
    An object representing the networking details for a task or service.

    Attributes
    ----------
    assignPublicIP : str, default is Undefined, optional
        assign public IP
    securityGroups : [str], default is Undefined, optional
        security groups
    subnets : [str], default is Undefined, optional
        subnets
    """


    assignPublicIP?: str

    securityGroups?: [str]

    subnets?: [str]


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderEventsItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider events items0

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
        created at
    id : str, default is Undefined, optional
        id
    message : str, default is Undefined, optional
        message
    """


    createdAt?: str

    id?: str

    message?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderLoadBalancersItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider load balancers items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        container name
    containerPort : int, default is Undefined, optional
        container port
    loadBalancerName : str, default is Undefined, optional
        load balancer name
    targetGroupARN : str, default is Undefined, optional
        target group a r n
    """


    containerName?: str

    containerPort?: int

    loadBalancerName?: str

    targetGroupARN?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderNetworkConfiguration:
    """
    The VPC subnet and security group configuration for tasks that receive their own elastic network interface by using the awsvpc networking mode.

    Attributes
    ----------
    awsvpcConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderNetworkConfigurationAwsvpcConfiguration, default is Undefined, optional
        awsvpc configuration
    """


    awsvpcConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderNetworkConfigurationAwsvpcConfiguration


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderNetworkConfigurationAwsvpcConfiguration:
    """
    An object representing the networking details for a task or service.

    Attributes
    ----------
    assignPublicIP : str, default is Undefined, optional
        assign public IP
    securityGroups : [str], default is Undefined, optional
        security groups
    subnets : [str], default is Undefined, optional
        subnets
    """


    assignPublicIP?: str

    securityGroups?: [str]

    subnets?: [str]


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider task sets items0

    Attributes
    ----------
    capacityProviderStrategy : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0CapacityProviderStrategyItems0], default is Undefined, optional
        capacity provider strategy
    clusterARN : str, default is Undefined, optional
        cluster a r n
    computedDesiredCount : int, default is Undefined, optional
        computed desired count
    createdAt : str, default is Undefined, optional
        created at
    externalID : str, default is Undefined, optional
        external ID
    id : str, default is Undefined, optional
        id
    launchType : str, default is Undefined, optional
        launch type
    loadBalancers : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0LoadBalancersItems0], default is Undefined, optional
        load balancers
    networkConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0NetworkConfiguration, default is Undefined, optional
        network configuration
    pendingCount : int, default is Undefined, optional
        pending count
    platformFamily : str, default is Undefined, optional
        platform family
    platformVersion : str, default is Undefined, optional
        platform version
    runningCount : int, default is Undefined, optional
        running count
    scale : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0Scale, default is Undefined, optional
        scale
    serviceARN : str, default is Undefined, optional
        service a r n
    serviceRegistries : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0ServiceRegistriesItems0], default is Undefined, optional
        service registries
    stabilityStatus : str, default is Undefined, optional
        stability status
    stabilityStatusAt : str, default is Undefined, optional
        stability status at
    startedBy : str, default is Undefined, optional
        started by
    status : str, default is Undefined, optional
        status
    tags : [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0TagsItems0], default is Undefined, optional
        tags
    taskDefinition : str, default is Undefined, optional
        task definition
    taskSetARN : str, default is Undefined, optional
        task set a r n
    updatedAt : str, default is Undefined, optional
        updated at
    """


    capacityProviderStrategy?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0CapacityProviderStrategyItems0]

    clusterARN?: str

    computedDesiredCount?: int

    createdAt?: str

    externalID?: str

    id?: str

    launchType?: str

    loadBalancers?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0LoadBalancersItems0]

    networkConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0NetworkConfiguration

    pendingCount?: int

    platformFamily?: str

    platformVersion?: str

    runningCount?: int

    scale?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0Scale

    serviceARN?: str

    serviceRegistries?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0ServiceRegistriesItems0]

    stabilityStatus?: str

    stabilityStatusAt?: str

    startedBy?: str

    status?: str

    tags?: [EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0TagsItems0]

    taskDefinition?: str

    taskSetARN?: str

    updatedAt?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0CapacityProviderStrategyItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider task sets items0 capacity provider strategy items0

    Attributes
    ----------
    base : int, default is Undefined, optional
        base
    capacityProvider : str, default is Undefined, optional
        capacity provider
    weight : int, default is Undefined, optional
        weight
    """


    base?: int

    capacityProvider?: str

    weight?: int


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0LoadBalancersItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider task sets items0 load balancers items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        container name
    containerPort : int, default is Undefined, optional
        container port
    loadBalancerName : str, default is Undefined, optional
        load balancer name
    targetGroupARN : str, default is Undefined, optional
        target group a r n
    """


    containerName?: str

    containerPort?: int

    loadBalancerName?: str

    targetGroupARN?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0NetworkConfiguration:
    """
    An object representing the network configuration for a task or service.

    Attributes
    ----------
    awsvpcConfiguration : EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0NetworkConfigurationAwsvpcConfiguration, default is Undefined, optional
        awsvpc configuration
    """


    awsvpcConfiguration?: EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0NetworkConfigurationAwsvpcConfiguration


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0NetworkConfigurationAwsvpcConfiguration:
    """
    An object representing the networking details for a task or service.

    Attributes
    ----------
    assignPublicIP : str, default is Undefined, optional
        assign public IP
    securityGroups : [str], default is Undefined, optional
        security groups
    subnets : [str], default is Undefined, optional
        subnets
    """


    assignPublicIP?: str

    securityGroups?: [str]

    subnets?: [str]


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0Scale:
    """
    A floating-point percentage of the desired number of tasks to place and keep running in the task set.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        unit
    value : float, default is Undefined, optional
        value
    """


    unit?: str

    value?: float


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0ServiceRegistriesItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider task sets items0 service registries items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        container name
    containerPort : int, default is Undefined, optional
        container port
    port : int, default is Undefined, optional
        port
    registryARN : str, default is Undefined, optional
        registry a r n
    """


    containerName?: str

    containerPort?: int

    port?: int

    registryARN?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusAtProviderTaskSetsItems0TagsItems0:
    """
    ecs aws crossplane io v1alpha1 service status at provider task sets items0 tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1ServiceStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


