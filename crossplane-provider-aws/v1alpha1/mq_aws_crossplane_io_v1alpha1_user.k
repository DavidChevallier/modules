"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema User:
    """
    User is the Schema for the Users API

    Attributes
    ----------
    apiVersion : str, default is "mq.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "User", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MqAwsCrossplaneIoV1alpha1UserSpec, default is Undefined, required
        spec
    status : MqAwsCrossplaneIoV1alpha1UserStatus, default is Undefined, optional
        status
    """


    apiVersion: "mq.aws.crossplane.io/v1alpha1" = "mq.aws.crossplane.io/v1alpha1"

    kind: "User" = "User"

    metadata?: v1.ObjectMeta

    spec: MqAwsCrossplaneIoV1alpha1UserSpec

    status?: MqAwsCrossplaneIoV1alpha1UserStatus


schema MqAwsCrossplaneIoV1alpha1UserSpec:
    """
    UserSpec defines the desired state of User

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : MqAwsCrossplaneIoV1alpha1UserSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : MqAwsCrossplaneIoV1alpha1UserSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : MqAwsCrossplaneIoV1alpha1UserSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MqAwsCrossplaneIoV1alpha1UserSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MqAwsCrossplaneIoV1alpha1UserSpecForProvider

    providerConfigRef?: MqAwsCrossplaneIoV1alpha1UserSpecProviderConfigRef

    providerRef?: MqAwsCrossplaneIoV1alpha1UserSpecProviderRef

    publishConnectionDetailsTo?: MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MqAwsCrossplaneIoV1alpha1UserSpecWriteConnectionSecretToRef


schema MqAwsCrossplaneIoV1alpha1UserSpecForProvider:
    """
    UserParameters defines the desired state of User

    Attributes
    ----------
    brokerID : str, default is Undefined, optional
        broker ID
    brokerIDRef : MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDRef, default is Undefined, optional
        broker ID ref
    brokerIDSelector : MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDSelector, default is Undefined, optional
        broker ID selector
    consoleAccess : bool, default is Undefined, optional
        console access
    groups : [str], default is Undefined, optional
        groups
    passwordSecretRef : MqAwsCrossplaneIoV1alpha1UserSpecForProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    region : str, default is Undefined, required
        Region is which region the User will be created.
    """


    brokerID?: str

    brokerIDRef?: MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDRef

    brokerIDSelector?: MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDSelector

    consoleAccess?: bool

    groups?: [str]

    passwordSecretRef?: MqAwsCrossplaneIoV1alpha1UserSpecForProviderPasswordSecretRef

    region: str


schema MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDRef:
    """
    BrokerIDRef is a reference to a Broker used to set BrokerID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDRefPolicy


schema MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDSelector:
    """
    BrokerIDSelector selects a reference to a Broker used to set BrokerID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDSelectorPolicy


schema MqAwsCrossplaneIoV1alpha1UserSpecForProviderBrokerIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MqAwsCrossplaneIoV1alpha1UserSpecForProviderPasswordSecretRef:
    """
    A SecretKeySelector is a reference to a secret key in an arbitrary namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema MqAwsCrossplaneIoV1alpha1UserSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MqAwsCrossplaneIoV1alpha1UserSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MqAwsCrossplaneIoV1alpha1UserSpecProviderConfigRefPolicy


schema MqAwsCrossplaneIoV1alpha1UserSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MqAwsCrossplaneIoV1alpha1UserSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MqAwsCrossplaneIoV1alpha1UserSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MqAwsCrossplaneIoV1alpha1UserSpecProviderRefPolicy


schema MqAwsCrossplaneIoV1alpha1UserSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRef

    metadata?: MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToMetadata

    name: str


schema MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRefPolicy


schema MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MqAwsCrossplaneIoV1alpha1UserSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MqAwsCrossplaneIoV1alpha1UserSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MqAwsCrossplaneIoV1alpha1UserStatus:
    """
    UserStatus defines the observed state of User.

    Attributes
    ----------
    atProvider : any, default is Undefined, optional
        UserObservation defines the observed state of User
    conditions : [MqAwsCrossplaneIoV1alpha1UserStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: any

    conditions?: [MqAwsCrossplaneIoV1alpha1UserStatusConditionsItems0]


schema MqAwsCrossplaneIoV1alpha1UserStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


