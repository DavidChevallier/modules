"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Policy:
    """
    Policy is the Schema for the Policies API

    Attributes
    ----------
    apiVersion : str, default is "iot.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Policy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IotAwsCrossplaneIoV1alpha1PolicySpec, default is Undefined, required
        spec
    status : IotAwsCrossplaneIoV1alpha1PolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "iot.aws.crossplane.io/v1alpha1" = "iot.aws.crossplane.io/v1alpha1"

    kind: "Policy" = "Policy"

    metadata?: v1.ObjectMeta

    spec: IotAwsCrossplaneIoV1alpha1PolicySpec

    status?: IotAwsCrossplaneIoV1alpha1PolicyStatus


schema IotAwsCrossplaneIoV1alpha1PolicySpec:
    """
    PolicySpec defines the desired state of Policy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : IotAwsCrossplaneIoV1alpha1PolicySpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : IotAwsCrossplaneIoV1alpha1PolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : IotAwsCrossplaneIoV1alpha1PolicySpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IotAwsCrossplaneIoV1alpha1PolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IotAwsCrossplaneIoV1alpha1PolicySpecForProvider

    providerConfigRef?: IotAwsCrossplaneIoV1alpha1PolicySpecProviderConfigRef

    providerRef?: IotAwsCrossplaneIoV1alpha1PolicySpecProviderRef

    publishConnectionDetailsTo?: IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IotAwsCrossplaneIoV1alpha1PolicySpecWriteConnectionSecretToRef


schema IotAwsCrossplaneIoV1alpha1PolicySpecForProvider:
    """
    PolicyParameters defines the desired state of Policy

    Attributes
    ----------
    policyDocument : str, default is Undefined, required
        The JSON document that describes the policy. policyDocument must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.
    region : str, default is Undefined, required
        Region is which region the Policy will be created.
    tags : [IotAwsCrossplaneIoV1alpha1PolicySpecForProviderTagsItems0], default is Undefined, optional
        Metadata which can be used to manage the policy. 
         For URI Request parameters use format: ...key1=value1&key2=value2... 
         For the CLI command-line parameter use format: &&tags "key1=value1&key2=value2..." 
         For the cli-input-json file use format: "tags": "key1=value1&key2=value2..."
    """


    policyDocument: str

    region: str

    tags?: [IotAwsCrossplaneIoV1alpha1PolicySpecForProviderTagsItems0]


schema IotAwsCrossplaneIoV1alpha1PolicySpecForProviderTagsItems0:
    """
    iot aws crossplane io v1alpha1 policy spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema IotAwsCrossplaneIoV1alpha1PolicySpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsCrossplaneIoV1alpha1PolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsCrossplaneIoV1alpha1PolicySpecProviderConfigRefPolicy


schema IotAwsCrossplaneIoV1alpha1PolicySpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsCrossplaneIoV1alpha1PolicySpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsCrossplaneIoV1alpha1PolicySpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsCrossplaneIoV1alpha1PolicySpecProviderRefPolicy


schema IotAwsCrossplaneIoV1alpha1PolicySpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToConfigRef

    metadata?: IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToMetadata

    name: str


schema IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToConfigRefPolicy


schema IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsCrossplaneIoV1alpha1PolicySpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IotAwsCrossplaneIoV1alpha1PolicySpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IotAwsCrossplaneIoV1alpha1PolicyStatus:
    """
    PolicyStatus defines the observed state of Policy.

    Attributes
    ----------
    atProvider : IotAwsCrossplaneIoV1alpha1PolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IotAwsCrossplaneIoV1alpha1PolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: IotAwsCrossplaneIoV1alpha1PolicyStatusAtProvider

    conditions?: [IotAwsCrossplaneIoV1alpha1PolicyStatusConditionsItems0]


schema IotAwsCrossplaneIoV1alpha1PolicyStatusAtProvider:
    """
    PolicyObservation defines the observed state of Policy

    Attributes
    ----------
    policyARN : str, default is Undefined, optional
        The policy ARN.
    policyVersionID : str, default is Undefined, optional
        The policy version ID.
    """


    policyARN?: str

    policyVersionID?: str


schema IotAwsCrossplaneIoV1alpha1PolicyStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


