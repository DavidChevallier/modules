"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ECSCluster:
    """
    Cluster is the Schema for the Clusters API

    Attributes
    ----------
    apiVersion : str, default is "ecs.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcsAwsCrossplaneIoV1alpha1ClusterSpec, default is Undefined, required
        spec
    status : EcsAwsCrossplaneIoV1alpha1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecs.aws.crossplane.io/v1alpha1" = "ecs.aws.crossplane.io/v1alpha1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: EcsAwsCrossplaneIoV1alpha1ClusterSpec

    status?: EcsAwsCrossplaneIoV1alpha1ClusterStatus


schema EcsAwsCrossplaneIoV1alpha1ClusterSpec:
    """
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EcsAwsCrossplaneIoV1alpha1ClusterSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcsAwsCrossplaneIoV1alpha1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcsAwsCrossplaneIoV1alpha1ClusterSpecForProvider

    providerConfigRef?: EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderConfigRef

    providerRef?: EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderRef

    publishConnectionDetailsTo?: EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcsAwsCrossplaneIoV1alpha1ClusterSpecWriteConnectionSecretToRef


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProvider:
    """
    ClusterParameters defines the desired state of Cluster

    Attributes
    ----------
    capacityProviders : [str], default is Undefined, optional
        The short name of one or more capacity providers to associate with the cluster. A capacity provider must be associated with a cluster before it can be included as part of the default capacity provider strategy of the cluster or used in a capacity provider strategy when calling the CreateService or RunTask actions. 
         If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must be created but not associated with another cluster. New Auto Scaling group capacity providers can be created with the CreateCapacityProvider API operation. 
         To use a Fargate capacity provider, specify either the FARGATE or FARGATE_SPOT capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used. 
         The PutClusterCapacityProviders API operation is used to update the list of available capacity providers for a cluster after the cluster is created.
    clusterName : str, default is Undefined, optional
        The name of your cluster. If you don't specify a name for your cluster, you create a cluster that's named default. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed.
    configuration : EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfiguration, default is Undefined, optional
        configuration
    defaultCapacityProviderStrategy : [EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderDefaultCapacityProviderStrategyItems0], default is Undefined, optional
        The capacity provider strategy to set as the default for the cluster. After a default capacity provider strategy is set for a cluster, when you call the RunTask or CreateService APIs with no capacity provider strategy or launch type specified, the default capacity provider strategy for the cluster is used. 
         If a default capacity provider strategy isn't defined for a cluster when it was created, it can be defined later with the PutClusterCapacityProviders API operation.
    region : str, default is Undefined, required
        Region is which region the Cluster will be created.
    settings : [EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderSettingsItems0], default is Undefined, optional
        The setting to use when creating a cluster. This parameter is used to turn on CloudWatch Container Insights for a cluster. If this value is specified, it overrides the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.
    tags : [EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderTagsItems0], default is Undefined, optional
        The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value. You define both. 
         The following basic restrictions apply to tags: 
         * Maximum number of tags per resource - 50 
         * For each resource, each tag key must be unique, and each tag key can have only one value. 
         * Maximum key length - 128 Unicode characters in UTF-8 
         * Maximum value length - 256 Unicode characters in UTF-8 
         * If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @. 
         * Tag keys and values are case-sensitive. 
         * Do not use aws:, AWS:, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.
    """


    capacityProviders?: [str]

    clusterName?: str

    configuration?: EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfiguration

    defaultCapacityProviderStrategy?: [EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderDefaultCapacityProviderStrategyItems0]

    region: str

    settings?: [EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderSettingsItems0]

    tags?: [EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderTagsItems0]


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfiguration:
    """
    The execute command configuration for the cluster.

    Attributes
    ----------
    executeCommandConfiguration : EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfigurationExecuteCommandConfiguration, default is Undefined, optional
        execute command configuration
    """


    executeCommandConfiguration?: EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfigurationExecuteCommandConfiguration


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfigurationExecuteCommandConfiguration:
    """
    The details of the execute command configuration.

    Attributes
    ----------
    kmsKeyID : str, default is Undefined, optional
        kms key ID
    logConfiguration : EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfigurationExecuteCommandConfigurationLogConfiguration, default is Undefined, optional
        log configuration
    logging : str, default is Undefined, optional
        logging
    """


    kmsKeyID?: str

    logConfiguration?: EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfigurationExecuteCommandConfigurationLogConfiguration

    logging?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderConfigurationExecuteCommandConfigurationLogConfiguration:
    """
    The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket.

    Attributes
    ----------
    cloudWatchEncryptionEnabled : bool, default is Undefined, optional
        cloud watch encryption enabled
    cloudWatchLogGroupName : str, default is Undefined, optional
        cloud watch log group name
    s3BucketName : str, default is Undefined, optional
        s3 bucket name
    s3EncryptionEnabled : bool, default is Undefined, optional
        s3 encryption enabled
    s3KeyPrefix : str, default is Undefined, optional
        s3 key prefix
    """


    cloudWatchEncryptionEnabled?: bool

    cloudWatchLogGroupName?: str

    s3BucketName?: str

    s3EncryptionEnabled?: bool

    s3KeyPrefix?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderDefaultCapacityProviderStrategyItems0:
    """
    ecs aws crossplane io v1alpha1 cluster spec for provider default capacity provider strategy items0

    Attributes
    ----------
    base : int, default is Undefined, optional
        base
    capacityProvider : str, default is Undefined, optional
        capacity provider
    weight : int, default is Undefined, optional
        weight
    """


    base?: int

    capacityProvider?: str

    weight?: int


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderSettingsItems0:
    """
    ecs aws crossplane io v1alpha1 cluster spec for provider settings items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecForProviderTagsItems0:
    """
    ecs aws crossplane io v1alpha1 cluster spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderConfigRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcsAwsCrossplaneIoV1alpha1ClusterStatus:
    """
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EcsAwsCrossplaneIoV1alpha1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProvider

    conditions?: [EcsAwsCrossplaneIoV1alpha1ClusterStatusConditionsItems0]


schema EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProvider:
    """
    ClusterObservation defines the observed state of Cluster

    Attributes
    ----------
    activeServicesCount : int, default is Undefined, optional
        The number of services that are running on the cluster in an ACTIVE state. You can view these services with ListServices.
    attachments : [EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderAttachmentsItems0], default is Undefined, optional
        The resources attached to a cluster. When using a capacity provider with a cluster, the Auto Scaling plan that's created is returned as a cluster attachment.
    attachmentsStatus : str, default is Undefined, optional
        The status of the capacity providers associated with the cluster. The following are the states that are returned. 
         UPDATE_IN_PROGRESS 
         The available capacity providers for the cluster are updating. This occurs when the Auto Scaling plan is provisioning or deprovisioning. 
         UPDATE_COMPLETE 
         The capacity providers have successfully updated. 
         UPDATE_FAILED 
         The capacity provider updates failed.
    clusterARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the arn:aws:ecs namespace, followed by the Region of the cluster, the Amazon Web Services account ID of the cluster owner, the cluster namespace, and then the cluster name. For example, arn:aws:ecs:region:012345678910:cluster/test.
    pendingTasksCount : int, default is Undefined, optional
        The number of tasks in the cluster that are in the PENDING state.
    registeredContainerInstancesCount : int, default is Undefined, optional
        The number of container instances registered into the cluster. This includes container instances in both ACTIVE and DRAINING status.
    runningTasksCount : int, default is Undefined, optional
        The number of tasks in the cluster that are in the RUNNING state.
    statistics : [EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderStatisticsItems0], default is Undefined, optional
        Additional information about your clusters that are separated by launch type. They include the following: 
         * runningEC2TasksCount 
         * RunningFargateTasksCount 
         * pendingEC2TasksCount 
         * pendingFargateTasksCount 
         * activeEC2ServiceCount 
         * activeFargateServiceCount 
         * drainingEC2ServiceCount 
         * drainingFargateServiceCount
    status : str, default is Undefined, optional
        The status of the cluster. The following are the possible states that are returned. 
         ACTIVE 
         The cluster is ready to accept tasks and if applicable you can register container instances with the cluster. 
         PROVISIONING 
         The cluster has capacity providers that are associated with it and the resources needed for the capacity provider are being created. 
         DEPROVISIONING 
         The cluster has capacity providers that are associated with it and the resources needed for the capacity provider are being deleted. 
         FAILED 
         The cluster has capacity providers that are associated with it and the resources needed for the capacity provider have failed to create. 
         INACTIVE 
         The cluster has been deleted. Clusters with an INACTIVE status may remain discoverable in your account for a period of time. However, this behavior is subject to change in the future. We don't recommend that you rely on INACTIVE clusters persisting.
    """


    activeServicesCount?: int

    attachments?: [EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderAttachmentsItems0]

    attachmentsStatus?: str

    clusterARN?: str

    pendingTasksCount?: int

    registeredContainerInstancesCount?: int

    runningTasksCount?: int

    statistics?: [EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderStatisticsItems0]

    status?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderAttachmentsItems0:
    """
    ecs aws crossplane io v1alpha1 cluster status at provider attachments items0

    Attributes
    ----------
    details : [EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderAttachmentsItems0DetailsItems0], default is Undefined, optional
        details
    id : str, default is Undefined, optional
        id
    status : str, default is Undefined, optional
        status
    type_ : str, default is Undefined, optional
        type
    """


    details?: [EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderAttachmentsItems0DetailsItems0]

    id?: str

    status?: str

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderAttachmentsItems0DetailsItems0:
    """
    ecs aws crossplane io v1alpha1 cluster status at provider attachments items0 details items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterStatusAtProviderStatisticsItems0:
    """
    ecs aws crossplane io v1alpha1 cluster status at provider statistics items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1ClusterStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


