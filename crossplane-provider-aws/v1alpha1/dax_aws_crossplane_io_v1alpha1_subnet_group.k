"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SubnetGroup:
    """
    SubnetGroup is the Schema for the SubnetGroups API

    Attributes
    ----------
    apiVersion : str, default is "dax.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SubnetGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpec, default is Undefined, required
        spec
    status : DaxAwsCrossplaneIoV1alpha1SubnetGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "dax.aws.crossplane.io/v1alpha1" = "dax.aws.crossplane.io/v1alpha1"

    kind: "SubnetGroup" = "SubnetGroup"

    metadata?: v1.ObjectMeta

    spec: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpec

    status?: DaxAwsCrossplaneIoV1alpha1SubnetGroupStatus


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpec:
    """
    SubnetGroupSpec defines the desired state of SubnetGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProvider

    providerConfigRef?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderConfigRef

    providerRef?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderRef

    publishConnectionDetailsTo?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecWriteConnectionSecretToRef


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProvider:
    """
    SubnetGroupParameters defines the desired state of SubnetGroup

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description for the subnet group
    region : str, default is Undefined, required
        Region is which region the SubnetGroup will be created.
    subnetIDRefs : [DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDRefsItems0], default is Undefined, optional
        SubnetIDRefs is a list of references to Subnets used to set the SubnetIDs.
    subnetIDSelector : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet ID selector
    subnetIds : [str], default is Undefined, optional
        SubnetIds is the list of Ids for the Subnets.
    """


    description?: str

    region: str

    subnetIDRefs?: [DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDRefsItems0]

    subnetIDSelector?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDSelector

    subnetIds?: [str]


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDRefsItems0Policy


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDSelector:
    """
    SubnetIDSelector selects references to Subnets used to set the SubnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDSelectorPolicy


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecForProviderSubnetIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderConfigRefPolicy


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderRefPolicy


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupStatus:
    """
    SubnetGroupStatus defines the observed state of SubnetGroup.

    Attributes
    ----------
    atProvider : DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusAtProvider

    conditions?: [DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusConditionsItems0]


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusAtProvider:
    """
    SubnetGroupObservation defines the observed state of SubnetGroup

    Attributes
    ----------
    subnetGroupName : str, default is Undefined, optional
        The name of the subnet group.
    subnets : [DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusAtProviderSubnetsItems0], default is Undefined, optional
        A list of subnets associated with the subnet group.
    vpcID : str, default is Undefined, optional
        The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.
    """


    subnetGroupName?: str

    subnets?: [DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusAtProviderSubnetsItems0]

    vpcID?: str


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusAtProviderSubnetsItems0:
    """
    dax aws crossplane io v1alpha1 subnet group status at provider subnets items0

    Attributes
    ----------
    subnetAvailabilityZone : str, default is Undefined, optional
        subnet availability zone
    subnetIdentifier : str, default is Undefined, optional
        subnet identifier
    """


    subnetAvailabilityZone?: str

    subnetIdentifier?: str


schema DaxAwsCrossplaneIoV1alpha1SubnetGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


