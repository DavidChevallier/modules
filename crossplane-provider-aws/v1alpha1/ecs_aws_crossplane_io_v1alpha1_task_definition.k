"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TaskDefinition:
    """
    TaskDefinition is the Schema for the TaskDefinitions API

    Attributes
    ----------
    apiVersion : str, default is "ecs.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TaskDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpec, default is Undefined, required
        spec
    status : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecs.aws.crossplane.io/v1alpha1" = "ecs.aws.crossplane.io/v1alpha1"

    kind: "TaskDefinition" = "TaskDefinition"

    metadata?: v1.ObjectMeta

    spec: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpec

    status?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatus


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpec:
    """
    TaskDefinitionSpec defines the desired state of TaskDefinition

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProvider

    providerConfigRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderConfigRef

    providerRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderRef

    publishConnectionDetailsTo?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecWriteConnectionSecretToRef


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProvider:
    """
    TaskDefinitionParameters defines the desired state of TaskDefinition

    Attributes
    ----------
    containerDefinitions : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0], default is Undefined, required
        A list of container definitions in JSON format that describe the different containers that make up your task.
    cpu : str, default is Undefined, optional
        The number of CPU units used by the task. It can be expressed as an integer using CPU units (for example, 1024) or as a string using vCPUs (for example, 1 vCPU or 1 vcpu) in a task definition. String values are converted to an integer indicating the CPU units when the task definition is registered. 
         Task-level CPU and memory parameters are ignored for Windows containers. We recommend specifying container-level resources for Windows containers. 
         If you're using the EC2 launch type, this field is optional. Supported values are between 128 CPU units (0.125 vCPUs) and 10240 CPU units (10 vCPUs). 
         If you're using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the memory parameter: 
         The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate. 
         * 256 (.25 vCPU) - Available memory values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) 
         * 512 (.5 vCPU) - Available memory values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) 
         * 1024 (1 vCPU) - Available memory values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) 
         * 2048 (2 vCPU) - Available memory values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) 
         * 4096 (4 vCPU) - Available memory values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)
    ephemeralStorage : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderEphemeralStorage, default is Undefined, optional
        ephemeral storage
    executionRoleARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make Amazon Web Services API calls on your behalf. The task execution IAM role is required depending on the requirements of your task. For more information, see Amazon ECS task execution IAM role (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html) in the Amazon Elastic Container Service Developer Guide.
    executionRoleARNRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNRef, default is Undefined, optional
        execution role a r n ref
    executionRoleARNSelector : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNSelector, default is Undefined, optional
        execution role a r n selector
    family : str, default is Undefined, required
        You must specify a family for a task definition. You can use it track multiple versions of the same task definition. The family is used as a name for your task definition. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed.
    inferenceAccelerators : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderInferenceAcceleratorsItems0], default is Undefined, optional
        The Elastic Inference accelerators to use for the containers in the task.
    ipcMode : str, default is Undefined, optional
        The IPC resource namespace to use for the containers in the task. The valid values are host, task, or none. If host is specified, then all containers within the tasks that specified the host IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance. If task is specified, all containers within the specified task share the same IPC resources. If none is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance. If no value is specified, then the IPC resource namespace sharing depends on the Docker daemon setting on the container instance. For more information, see IPC settings (https://docs.docker.com/engine/reference/run/#ipc-settings---ipc) in the Docker run reference. 
         If the host IPC mode is used, be aware that there is a heightened risk of undesired IPC namespace expose. For more information, see Docker security (https://docs.docker.com/engine/security/security/). 
         If you are setting namespaced kernel parameters using systemControls for the containers in the task, the following will apply to your IPC resource namespace. For more information, see System Controls (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html) in the Amazon Elastic Container Service Developer Guide. 
         * For tasks that use the host IPC mode, IPC namespace related systemControls are not supported. 
         * For tasks that use the task IPC mode, IPC namespace related systemControls will apply to all containers within a task. 
         This parameter is not supported for Windows containers or tasks run on Fargate.
    memory : str, default is Undefined, optional
        The amount of memory (in MiB) used by the task. It can be expressed as an integer using MiB (for example ,1024) or as a string using GB (for example, 1GB or 1 GB) in a task definition. String values are converted to an integer indicating the MiB when the task definition is registered. 
         Task-level CPU and memory parameters are ignored for Windows containers. We recommend specifying container-level resources for Windows containers. 
         If using the EC2 launch type, this field is optional. 
         If using the Fargate launch type, this field is required and you must use one of the following values. This determines your range of supported values for the cpu parameter. 
         The CPU units cannot be less than 1 vCPU when you use Windows containers on Fargate. 
         * 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu values: 256 (.25 vCPU) 
         * 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available cpu values: 512 (.5 vCPU) 
         * 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024 (1 vCPU) 
         * Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available cpu values: 2048 (2 vCPU) 
         * Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available cpu values: 4096 (4 vCPU)
    networkMode : str, default is Undefined, optional
        The Docker networking mode to use for the containers in the task. The valid values are none, bridge, awsvpc, and host. If no network mode is specified, the default is bridge. 
         For Amazon ECS tasks on Fargate, the awsvpc network mode is required. For Amazon ECS tasks on Amazon EC2 Linux instances, any network mode can be used. For Amazon ECS tasks on Amazon EC2 Windows instances, <default> or awsvpc can be used. If the network mode is set to none, you cannot specify port mappings in your container definitions, and the tasks containers do not have external connectivity. The host and awsvpc network modes offer the highest networking performance for containers because they use the EC2 network stack instead of the virtualized network stack provided by the bridge mode. 
         With the host and awsvpc network modes, exposed container ports are mapped directly to the corresponding host port (for the host network mode) or the attached elastic network interface port (for the awsvpc network mode), so you cannot take advantage of dynamic host port mappings. 
         When using the host network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non-root user. 
         If the network mode is awsvpc, the task is allocated an elastic network interface, and you must specify a NetworkConfiguration value when you create a service or run a task with the task definition. For more information, see Task Networking (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html) in the Amazon Elastic Container Service Developer Guide. 
         If the network mode is host, you cannot run multiple instantiations of the same task on a single container instance when port mappings are used. 
         For more information, see Network settings (https://docs.docker.com/engine/reference/run/#network-settings) in the Docker run reference.
    pidMode : str, default is Undefined, optional
        The process namespace to use for the containers in the task. The valid values are host or task. If host is specified, then all containers within the tasks that specified the host PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance. If task is specified, all containers within the specified task share the same process namespace. If no value is specified, the default is a private namespace. For more information, see PID settings (https://docs.docker.com/engine/reference/run/#pid-settings---pid) in the Docker run reference. 
         If the host PID mode is used, be aware that there is a heightened risk of undesired process namespace expose. For more information, see Docker security (https://docs.docker.com/engine/security/security/). 
         This parameter is not supported for Windows containers or tasks run on Fargate.
    placementConstraints : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderPlacementConstraintsItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify a maximum of 10 constraints for each task. This limit includes constraints in the task definition and those specified at runtime.
    proxyConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderProxyConfiguration, default is Undefined, optional
        proxy configuration
    region : str, default is Undefined, required
        Region is which region the TaskDefinition will be created.
    requiresCompatibilities : [str], default is Undefined, optional
        The task launch type that Amazon ECS validates the task definition against. A client exception is returned if the task definition doesn't validate against the compatibilities specified. If no value is specified, the parameter is omitted from the response.
    runtimePlatform : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderRuntimePlatform, default is Undefined, optional
        runtime platform
    tags : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTagsItems0], default is Undefined, optional
        The metadata that you apply to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value. You define both of them. 
         The following basic restrictions apply to tags: 
         * Maximum number of tags per resource - 50 
         * For each resource, each tag key must be unique, and each tag key can have only one value. 
         * Maximum key length - 128 Unicode characters in UTF-8 
         * Maximum value length - 256 Unicode characters in UTF-8 
         * If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @. 
         * Tag keys and values are case-sensitive. 
         * Do not use aws:, AWS:, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.
    taskRoleARN : str, default is Undefined, optional
        The short name or full Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role. For more information, see IAM Roles for Tasks (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html) in the Amazon Elastic Container Service Developer Guide. A list of volume definitions in JSON format that containers in your task may use.
    taskRoleARNRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNRef, default is Undefined, optional
        task role a r n ref
    taskRoleARNSelector : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNSelector, default is Undefined, optional
        task role a r n selector
    volumes : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0], default is Undefined, optional
        volumes
    """


    containerDefinitions: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0]

    cpu?: str

    ephemeralStorage?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderEphemeralStorage

    executionRoleARN?: str

    executionRoleARNRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNRef

    executionRoleARNSelector?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNSelector

    family: str

    inferenceAccelerators?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderInferenceAcceleratorsItems0]

    ipcMode?: str

    memory?: str

    networkMode?: str

    pidMode?: str

    placementConstraints?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderPlacementConstraintsItems0]

    proxyConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderProxyConfiguration

    region: str

    requiresCompatibilities?: [str]

    runtimePlatform?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderRuntimePlatform

    tags?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTagsItems0]

    taskRoleARN?: str

    taskRoleARNRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNRef

    taskRoleARNSelector?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNSelector

    volumes?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    cpu : int, default is Undefined, optional
        cpu
    dependsOn : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0DependsOnItems0], default is Undefined, optional
        depends on
    disableNetworking : bool, default is Undefined, optional
        disable networking
    dnsSearchDomains : [str], default is Undefined, optional
        dns search domains
    dnsServers : [str], default is Undefined, optional
        dns servers
    dockerLabels : {str:str}, default is Undefined, optional
        docker labels
    dockerSecurityOptions : [str], default is Undefined, optional
        docker security options
    entryPoint : [str], default is Undefined, optional
        entry point
    environment : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0EnvironmentItems0], default is Undefined, optional
        environment
    environmentFiles : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0EnvironmentFilesItems0], default is Undefined, optional
        environment files
    essential : bool, default is Undefined, optional
        essential
    extraHosts : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0ExtraHostsItems0], default is Undefined, optional
        extra hosts
    firelensConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0FirelensConfiguration, default is Undefined, optional
        firelens configuration
    healthCheck : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0HealthCheck, default is Undefined, optional
        health check
    hostname : str, default is Undefined, optional
        hostname
    image : str, default is Undefined, optional
        image
    interactive : bool, default is Undefined, optional
        interactive
    links : [str], default is Undefined, optional
        links
    linuxParameters : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParameters, default is Undefined, optional
        linux parameters
    logConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LogConfiguration, default is Undefined, optional
        log configuration
    memory : int, default is Undefined, optional
        memory
    memoryReservation : int, default is Undefined, optional
        memory reservation
    mountPoints : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0MountPointsItems0], default is Undefined, optional
        mount points
    name : str, default is Undefined, optional
        name
    portMappings : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0PortMappingsItems0], default is Undefined, optional
        port mappings
    privileged : bool, default is Undefined, optional
        privileged
    pseudoTerminal : bool, default is Undefined, optional
        pseudo terminal
    readonlyRootFilesystem : bool, default is Undefined, optional
        readonly root filesystem
    repositoryCredentials : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0RepositoryCredentials, default is Undefined, optional
        repository credentials
    resourceRequirements : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0ResourceRequirementsItems0], default is Undefined, optional
        resource requirements
    secrets : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0SecretsItems0], default is Undefined, optional
        secrets
    startTimeout : int, default is Undefined, optional
        start timeout
    stopTimeout : int, default is Undefined, optional
        stop timeout
    systemControls : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0SystemControlsItems0], default is Undefined, optional
        system controls
    ulimits : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0UlimitsItems0], default is Undefined, optional
        ulimits
    user : str, default is Undefined, optional
        user
    volumesFrom : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0VolumesFromItems0], default is Undefined, optional
        volumes from
    workingDirectory : str, default is Undefined, optional
        working directory
    """


    command?: [str]

    cpu?: int

    dependsOn?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0DependsOnItems0]

    disableNetworking?: bool

    dnsSearchDomains?: [str]

    dnsServers?: [str]

    dockerLabels?: {str:str}

    dockerSecurityOptions?: [str]

    entryPoint?: [str]

    environment?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0EnvironmentItems0]

    environmentFiles?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0EnvironmentFilesItems0]

    essential?: bool

    extraHosts?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0ExtraHostsItems0]

    firelensConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0FirelensConfiguration

    healthCheck?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0HealthCheck

    hostname?: str

    image?: str

    interactive?: bool

    links?: [str]

    linuxParameters?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParameters

    logConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LogConfiguration

    memory?: int

    memoryReservation?: int

    mountPoints?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0MountPointsItems0]

    name?: str

    portMappings?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0PortMappingsItems0]

    privileged?: bool

    pseudoTerminal?: bool

    readonlyRootFilesystem?: bool

    repositoryCredentials?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0RepositoryCredentials

    resourceRequirements?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0ResourceRequirementsItems0]

    secrets?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0SecretsItems0]

    startTimeout?: int

    stopTimeout?: int

    systemControls?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0SystemControlsItems0]

    ulimits?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0UlimitsItems0]

    user?: str

    volumesFrom?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0VolumesFromItems0]

    workingDirectory?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0DependsOnItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 depends on items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        condition
    containerName : str, default is Undefined, optional
        container name
    """


    condition?: str

    containerName?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0EnvironmentFilesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 environment files items0

    Attributes
    ----------
    type_ : str, default is Undefined, optional
        type
    value : str, default is Undefined, optional
        value
    """


    type_?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0EnvironmentItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0ExtraHostsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 extra hosts items0

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        hostname
    ipAddress : str, default is Undefined, optional
        ip address
    """


    hostname?: str

    ipAddress?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0FirelensConfiguration:
    """
    The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For more information, see Custom Log Routing (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    options : {str:str}, default is Undefined, optional
        options
    type_ : str, default is Undefined, optional
        type
    """


    options?: {str:str}

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0HealthCheck:
    """
    An object representing a container health check. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image (such as those specified in a parent image or from the image's Dockerfile). 
     The Amazon ECS container agent only monitors and reports on the health checks specified in the task definition. Amazon ECS does not monitor Docker health checks that are embedded in a container image and not specified in the container definition. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image. 
     You can view the health status of both individual containers and a task with the DescribeTasks API operation or when viewing the task details in the console. 
     The following describes the possible healthStatus values for a container: 
     * HEALTHY-The container health check has passed successfully. 
     * UNHEALTHY-The container health check has failed. 
     * UNKNOWN-The container health check is being evaluated or there's no container health check defined. 
     The following describes the possible healthStatus values for a task. The container health check status of nonessential containers do not have an effect on the health status of a task. 
     * HEALTHY-All essential containers within the task have passed their health checks. 
     * UNHEALTHY-One or more essential containers have failed their health check. 
     * UNKNOWN-The essential containers within the task are still having their health checks evaluated or there are no container health checks defined. 
     If a task is run manually, and not as part of a service, the task will continue its lifecycle regardless of its health status. For tasks that are part of a service, if the task reports as unhealthy then the task will be stopped and the service scheduler will replace it. 
     The following are notes about container health check support: 
     * Container health checks require version 1.17.0 or greater of the Amazon ECS container agent. For more information, see Updating the Amazon ECS Container Agent (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html). 
     * Container health checks are supported for Fargate tasks if you're using platform version 1.1.0 or greater. For more information, see Fargate Platform Versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html). 
     * Container health checks aren't supported for tasks that are part of a service that's configured to use a Classic Load Balancer.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    interval : int, default is Undefined, optional
        interval
    retries : int, default is Undefined, optional
        retries
    startPeriod : int, default is Undefined, optional
        start period
    timeout : int, default is Undefined, optional
        timeout
    """


    command?: [str]

    interval?: int

    retries?: int

    startPeriod?: int

    timeout?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParameters:
    """
    Linux-specific options that are applied to the container, such as Linux KernelCapabilities.

    Attributes
    ----------
    capabilities : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersCapabilities, default is Undefined, optional
        capabilities
    devices : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersDevicesItems0], default is Undefined, optional
        devices
    initProcessEnabled : bool, default is Undefined, optional
        init process enabled
    maxSwap : int, default is Undefined, optional
        max swap
    sharedMemorySize : int, default is Undefined, optional
        shared memory size
    swappiness : int, default is Undefined, optional
        swappiness
    tmpfs : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersTmpfsItems0], default is Undefined, optional
        tmpfs
    """


    capabilities?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersCapabilities

    devices?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersDevicesItems0]

    initProcessEnabled?: bool

    maxSwap?: int

    sharedMemorySize?: int

    swappiness?: int

    tmpfs?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersTmpfsItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersCapabilities:
    """
    The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker. For more information about the default capabilities and the non-default available capabilities, see Runtime privilege and Linux capabilities (https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) in the Docker run reference. For more detailed information about these Linux capabilities, see the capabilities(7) (http://man7.org/linux/man-pages/man7/capabilities.7.html) Linux manual page.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        add
    drop : [str], default is Undefined, optional
        drop
    """


    add?: [str]

    drop?: [str]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersDevicesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 linux parameters devices items0

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        container path
    hostPath : str, default is Undefined, optional
        host path
    permissions : [str], default is Undefined, optional
        permissions
    """


    containerPath?: str

    hostPath?: str

    permissions?: [str]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LinuxParametersTmpfsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 linux parameters tmpfs items0

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        container path
    mountOptions : [str], default is Undefined, optional
        mount options
    size : int, default is Undefined, optional
        size
    """


    containerPath?: str

    mountOptions?: [str]

    size?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LogConfiguration:
    """
    The log configuration for the container. This parameter maps to LogConfig in the Create a container (https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.35/) and the --log-driver option to docker run (https://docs.docker.com/engine/reference/commandline/run/). 
     By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see Configure logging drivers (https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. 
     Understand the following when specifying a log configuration for your containers. 
     * Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the valid values below). Additional log drivers may be available in future releases of the Amazon ECS container agent. 
     * This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. 
     * For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ECS_AVAILABLE_LOGGING_DRIVERS environment variable before containers placed on that instance can use these log configuration options. For more information, see Amazon ECS container agent configuration (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the Amazon Elastic Container Service Developer Guide. 
     * For tasks that are on Fargate, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.

    Attributes
    ----------
    logDriver : str, default is Undefined, optional
        log driver
    options : {str:str}, default is Undefined, optional
        options
    secretOptions : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LogConfigurationSecretOptionsItems0], default is Undefined, optional
        secret options
    """


    logDriver?: str

    options?: {str:str}

    secretOptions?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LogConfigurationSecretOptionsItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0LogConfigurationSecretOptionsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 log configuration secret options items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    valueFrom : str, default is Undefined, optional
        value from
    """


    name?: str

    valueFrom?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0MountPointsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 mount points items0

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        container path
    readOnly : bool, default is Undefined, optional
        read only
    sourceVolume : str, default is Undefined, optional
        source volume
    """


    containerPath?: str

    readOnly?: bool

    sourceVolume?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0PortMappingsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 port mappings items0

    Attributes
    ----------
    containerPort : int, default is Undefined, optional
        container port
    hostPort : int, default is Undefined, optional
        host port
    $protocol : str, default is Undefined, optional
        protocol
    """


    containerPort?: int

    hostPort?: int

    $protocol?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0RepositoryCredentials:
    """
    The repository credentials for private registry authentication.

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        credentials parameter
    """


    credentialsParameter?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0ResourceRequirementsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 resource requirements items0

    Attributes
    ----------
    type_ : str, default is Undefined, optional
        type
    value : str, default is Undefined, optional
        value
    """


    type_?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0SecretsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 secrets items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    valueFrom : str, default is Undefined, optional
        value from
    """


    name?: str

    valueFrom?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0SystemControlsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 system controls items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        namespace
    value : str, default is Undefined, optional
        value
    """


    namespace?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0UlimitsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 ulimits items0

    Attributes
    ----------
    hardLimit : int, default is Undefined, optional
        hard limit
    name : str, default is Undefined, optional
        name
    softLimit : int, default is Undefined, optional
        soft limit
    """


    hardLimit?: int

    name?: str

    softLimit?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderContainerDefinitionsItems0VolumesFromItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider container definitions items0 volumes from items0

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        read only
    sourceContainer : str, default is Undefined, optional
        source container
    """


    readOnly?: bool

    sourceContainer?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderEphemeralStorage:
    """
    The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see Fargate task storage (https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html) in the Amazon ECS User Guide for Fargate. 
     This parameter is only supported for tasks hosted on Fargate using the following platform versions: 
     * Linux platform version 1.4.0 or later. 
     * Windows platform version 1.0.0 or later.

    Attributes
    ----------
    sizeInGiB : int, default is Undefined, optional
        size in gi b
    """


    sizeInGiB?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderExecutionRoleARNSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderInferenceAcceleratorsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider inference accelerators items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        device name
    deviceType : str, default is Undefined, optional
        device type
    """


    deviceName?: str

    deviceType?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderPlacementConstraintsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        expression
    type_ : str, default is Undefined, optional
        type
    """


    expression?: str

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderProxyConfiguration:
    """
    The configuration details for the App Mesh proxy. 
     For tasks hosted on Amazon EC2 instances, the container instances require at least version 1.26.0 of the container agent and at least version 1.26.0-1 of the ecs-init package to use a proxy configuration. If your container instances are launched from the Amazon ECS-optimized AMI version 20190301 or later, then they contain the required versions of the container agent and ecs-init. For more information, see Amazon ECS-optimized AMI versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-ami-versions.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        container name
    properties : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderProxyConfigurationPropertiesItems0], default is Undefined, optional
        properties
    type_ : str, default is Undefined, optional
        type
    """


    containerName?: str

    properties?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderProxyConfigurationPropertiesItems0]

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderProxyConfigurationPropertiesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider proxy configuration properties items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderRuntimePlatform:
    """
    The operating system that your tasks definitions run on. A platform family is specified only for tasks using the Fargate launch type. 
     When you specify a task definition in a service, this value must match the runtimePlatform value of the service.

    Attributes
    ----------
    cpuArchitecture : str, default is Undefined, optional
        cpu architecture
    operatingSystemFamily : str, default is Undefined, optional
        operating system family
    """


    cpuArchitecture?: str

    operatingSystemFamily?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTagsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderTaskRoleARNSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0:
    """
    CustomVolume provides custom parameters for the Volume type

    Attributes
    ----------
    dockerVolumeConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0DockerVolumeConfiguration, default is Undefined, optional
        docker volume configuration
    efsVolumeConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfiguration, default is Undefined, optional
        efs volume configuration
    fsxWindowsFileServerVolumeConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0FsxWindowsFileServerVolumeConfiguration, default is Undefined, optional
        fsx windows file server volume configuration
    host : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0Host, default is Undefined, optional
        host
    name : str, default is Undefined, required
        name
    """


    dockerVolumeConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0DockerVolumeConfiguration

    efsVolumeConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfiguration

    fsxWindowsFileServerVolumeConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0FsxWindowsFileServerVolumeConfiguration

    host?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0Host

    name: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0DockerVolumeConfiguration:
    """
    This parameter is specified when you are using Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the local driver. To use bind mounts, specify a host instead.

    Attributes
    ----------
    autoprovision : bool, default is Undefined, optional
        autoprovision
    driver : str, default is Undefined, optional
        driver
    driverOpts : {str:str}, default is Undefined, optional
        driver opts
    labels : {str:str}, default is Undefined, optional
        labels
    scope : str, default is Undefined, optional
        scope
    """


    autoprovision?: bool

    driver?: str

    driverOpts?: {str:str}

    labels?: {str:str}

    scope?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfiguration:
    """
    This parameter is specified when you are using an Amazon Elastic File System file system for task storage. For more information, see Amazon EFS Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    authorizationConfig : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfig, default is Undefined, optional
        authorization config
    fileSystemID : str, default is Undefined, optional
        file system ID
    fileSystemIDRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDRef, default is Undefined, optional
        file system ID ref
    fileSystemIDSelector : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDSelector, default is Undefined, optional
        file system ID selector
    rootDirectory : str, default is Undefined, optional
        root directory
    transitEncryption : str, default is Undefined, optional
        transit encryption
    transitEncryptionPort : int, default is Undefined, optional
        transit encryption port
    """


    authorizationConfig?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfig

    fileSystemID?: str

    fileSystemIDRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDRef

    fileSystemIDSelector?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDSelector

    rootDirectory?: str

    transitEncryption?: str

    transitEncryptionPort?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfig:
    """
    The authorization configuration details for the Amazon EFS file system.

    Attributes
    ----------
    accessPointID : str, default is Undefined, optional
        The Amazon EFS access point ID to use. If an access point is specified, the root directory value specified in the EFSVolumeConfiguration must either be omitted or set to / which will enforce the path set on the EFS access point. If an access point is used, transit encryption must be enabled in the EFSVolumeConfiguration. For more information, see Working with Amazon EFS Access Points (https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html) in the Amazon Elastic File System User Guide.
    accessPointIDRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDRef, default is Undefined, optional
        access point ID ref
    accessPointIDSelector : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDSelector, default is Undefined, optional
        access point ID selector
    iam : str, default is Undefined, optional
        Determines whether to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. If this parameter is omitted, the default value of DISABLED is used. For more information, see Using Amazon EFS Access Points (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html#efs-volume-accesspoints) in the Amazon Elastic Container Service Developer Guide.
    """


    accessPointID?: str

    accessPointIDRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDRef

    accessPointIDSelector?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDSelector

    iam?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationAuthorizationConfigAccessPointIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDRef:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDSelector:
    """
    A Selector selects an object.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDSelectorPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0EfsVolumeConfigurationFileSystemIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0FsxWindowsFileServerVolumeConfiguration:
    """
    This parameter is specified when you are using Amazon FSx for Windows File Server (https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. 
     For more information and the input format, see Amazon FSx for Windows File Server Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    authorizationConfig : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0FsxWindowsFileServerVolumeConfigurationAuthorizationConfig, default is Undefined, optional
        authorization config
    fileSystemID : str, default is Undefined, optional
        file system ID
    rootDirectory : str, default is Undefined, optional
        root directory
    """


    authorizationConfig?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0FsxWindowsFileServerVolumeConfigurationAuthorizationConfig

    fileSystemID?: str

    rootDirectory?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0FsxWindowsFileServerVolumeConfigurationAuthorizationConfig:
    """
    The authorization configuration details for Amazon FSx for Windows File Server file system. See FSxWindowsFileServerVolumeConfiguration (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html) in the Amazon Elastic Container Service API Reference. 
     For more information and the input format, see Amazon FSx for Windows File Server Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        credentials parameter
    domain : str, default is Undefined, optional
        domain
    """


    credentialsParameter?: str

    domain?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecForProviderVolumesItems0Host:
    """
    Details on a container instance bind mount host volume.

    Attributes
    ----------
    sourcePath : str, default is Undefined, optional
        source path
    """


    sourcePath?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderConfigRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToConfigRef

    metadata?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToMetadata

    name: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToConfigRefPolicy


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatus:
    """
    TaskDefinitionStatus defines the observed state of TaskDefinition.

    Attributes
    ----------
    atProvider : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProvider

    conditions?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusConditionsItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProvider:
    """
    TaskDefinitionObservation defines the observed state of TaskDefinition

    Attributes
    ----------
    taskDefinition : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinition, default is Undefined, optional
        task definition
    """


    taskDefinition?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinition


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinition:
    """
    The full description of the registered task definition.

    Attributes
    ----------
    compatibilities : [str], default is Undefined, optional
        compatibilities
    containerDefinitions : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0], default is Undefined, optional
        container definitions
    cpu : str, default is Undefined, optional
        cpu
    deregisteredAt : str, default is Undefined, optional
        deregistered at
    ephemeralStorage : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionEphemeralStorage, default is Undefined, optional
        ephemeral storage
    executionRoleARN : str, default is Undefined, optional
        execution role a r n
    family : str, default is Undefined, optional
        family
    inferenceAccelerators : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionInferenceAcceleratorsItems0], default is Undefined, optional
        inference accelerators
    ipcMode : str, default is Undefined, optional
        ipc mode
    memory : str, default is Undefined, optional
        memory
    networkMode : str, default is Undefined, optional
        network mode
    pidMode : str, default is Undefined, optional
        pid mode
    placementConstraints : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionPlacementConstraintsItems0], default is Undefined, optional
        placement constraints
    proxyConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionProxyConfiguration, default is Undefined, optional
        proxy configuration
    registeredAt : str, default is Undefined, optional
        registered at
    registeredBy : str, default is Undefined, optional
        registered by
    requiresAttributes : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionRequiresAttributesItems0], default is Undefined, optional
        requires attributes
    requiresCompatibilities : [str], default is Undefined, optional
        requires compatibilities
    revision : int, default is Undefined, optional
        revision
    runtimePlatform : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionRuntimePlatform, default is Undefined, optional
        runtime platform
    status : str, default is Undefined, optional
        status
    taskDefinitionARN : str, default is Undefined, optional
        task definition a r n
    taskRoleARN : str, default is Undefined, optional
        task role a r n
    volumes : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0], default is Undefined, optional
        volumes
    """


    compatibilities?: [str]

    containerDefinitions?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0]

    cpu?: str

    deregisteredAt?: str

    ephemeralStorage?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionEphemeralStorage

    executionRoleARN?: str

    family?: str

    inferenceAccelerators?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionInferenceAcceleratorsItems0]

    ipcMode?: str

    memory?: str

    networkMode?: str

    pidMode?: str

    placementConstraints?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionPlacementConstraintsItems0]

    proxyConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionProxyConfiguration

    registeredAt?: str

    registeredBy?: str

    requiresAttributes?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionRequiresAttributesItems0]

    requiresCompatibilities?: [str]

    revision?: int

    runtimePlatform?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionRuntimePlatform

    status?: str

    taskDefinitionARN?: str

    taskRoleARN?: str

    volumes?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    cpu : int, default is Undefined, optional
        cpu
    dependsOn : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0DependsOnItems0], default is Undefined, optional
        depends on
    disableNetworking : bool, default is Undefined, optional
        disable networking
    dnsSearchDomains : [str], default is Undefined, optional
        dns search domains
    dnsServers : [str], default is Undefined, optional
        dns servers
    dockerLabels : {str:str}, default is Undefined, optional
        docker labels
    dockerSecurityOptions : [str], default is Undefined, optional
        docker security options
    entryPoint : [str], default is Undefined, optional
        entry point
    environment : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0EnvironmentItems0], default is Undefined, optional
        environment
    environmentFiles : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0EnvironmentFilesItems0], default is Undefined, optional
        environment files
    essential : bool, default is Undefined, optional
        essential
    extraHosts : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0ExtraHostsItems0], default is Undefined, optional
        extra hosts
    firelensConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0FirelensConfiguration, default is Undefined, optional
        firelens configuration
    healthCheck : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0HealthCheck, default is Undefined, optional
        health check
    hostname : str, default is Undefined, optional
        hostname
    image : str, default is Undefined, optional
        image
    interactive : bool, default is Undefined, optional
        interactive
    links : [str], default is Undefined, optional
        links
    linuxParameters : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParameters, default is Undefined, optional
        linux parameters
    logConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LogConfiguration, default is Undefined, optional
        log configuration
    memory : int, default is Undefined, optional
        memory
    memoryReservation : int, default is Undefined, optional
        memory reservation
    mountPoints : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0MountPointsItems0], default is Undefined, optional
        mount points
    name : str, default is Undefined, optional
        name
    portMappings : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0PortMappingsItems0], default is Undefined, optional
        port mappings
    privileged : bool, default is Undefined, optional
        privileged
    pseudoTerminal : bool, default is Undefined, optional
        pseudo terminal
    readonlyRootFilesystem : bool, default is Undefined, optional
        readonly root filesystem
    repositoryCredentials : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0RepositoryCredentials, default is Undefined, optional
        repository credentials
    resourceRequirements : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0ResourceRequirementsItems0], default is Undefined, optional
        resource requirements
    secrets : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0SecretsItems0], default is Undefined, optional
        secrets
    startTimeout : int, default is Undefined, optional
        start timeout
    stopTimeout : int, default is Undefined, optional
        stop timeout
    systemControls : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0SystemControlsItems0], default is Undefined, optional
        system controls
    ulimits : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0UlimitsItems0], default is Undefined, optional
        ulimits
    user : str, default is Undefined, optional
        user
    volumesFrom : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0VolumesFromItems0], default is Undefined, optional
        volumes from
    workingDirectory : str, default is Undefined, optional
        working directory
    """


    command?: [str]

    cpu?: int

    dependsOn?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0DependsOnItems0]

    disableNetworking?: bool

    dnsSearchDomains?: [str]

    dnsServers?: [str]

    dockerLabels?: {str:str}

    dockerSecurityOptions?: [str]

    entryPoint?: [str]

    environment?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0EnvironmentItems0]

    environmentFiles?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0EnvironmentFilesItems0]

    essential?: bool

    extraHosts?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0ExtraHostsItems0]

    firelensConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0FirelensConfiguration

    healthCheck?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0HealthCheck

    hostname?: str

    image?: str

    interactive?: bool

    links?: [str]

    linuxParameters?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParameters

    logConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LogConfiguration

    memory?: int

    memoryReservation?: int

    mountPoints?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0MountPointsItems0]

    name?: str

    portMappings?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0PortMappingsItems0]

    privileged?: bool

    pseudoTerminal?: bool

    readonlyRootFilesystem?: bool

    repositoryCredentials?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0RepositoryCredentials

    resourceRequirements?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0ResourceRequirementsItems0]

    secrets?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0SecretsItems0]

    startTimeout?: int

    stopTimeout?: int

    systemControls?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0SystemControlsItems0]

    ulimits?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0UlimitsItems0]

    user?: str

    volumesFrom?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0VolumesFromItems0]

    workingDirectory?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0DependsOnItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 depends on items0

    Attributes
    ----------
    condition : str, default is Undefined, optional
        condition
    containerName : str, default is Undefined, optional
        container name
    """


    condition?: str

    containerName?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0EnvironmentFilesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 environment files items0

    Attributes
    ----------
    type_ : str, default is Undefined, optional
        type
    value : str, default is Undefined, optional
        value
    """


    type_?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0EnvironmentItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0ExtraHostsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 extra hosts items0

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        hostname
    ipAddress : str, default is Undefined, optional
        ip address
    """


    hostname?: str

    ipAddress?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0FirelensConfiguration:
    """
    The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For more information, see Custom Log Routing (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    options : {str:str}, default is Undefined, optional
        options
    type_ : str, default is Undefined, optional
        type
    """


    options?: {str:str}

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0HealthCheck:
    """
    An object representing a container health check. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image (such as those specified in a parent image or from the image's Dockerfile). 
     The Amazon ECS container agent only monitors and reports on the health checks specified in the task definition. Amazon ECS does not monitor Docker health checks that are embedded in a container image and not specified in the container definition. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image. 
     You can view the health status of both individual containers and a task with the DescribeTasks API operation or when viewing the task details in the console. 
     The following describes the possible healthStatus values for a container: 
     * HEALTHY-The container health check has passed successfully. 
     * UNHEALTHY-The container health check has failed. 
     * UNKNOWN-The container health check is being evaluated or there's no container health check defined. 
     The following describes the possible healthStatus values for a task. The container health check status of nonessential containers do not have an effect on the health status of a task. 
     * HEALTHY-All essential containers within the task have passed their health checks. 
     * UNHEALTHY-One or more essential containers have failed their health check. 
     * UNKNOWN-The essential containers within the task are still having their health checks evaluated or there are no container health checks defined. 
     If a task is run manually, and not as part of a service, the task will continue its lifecycle regardless of its health status. For tasks that are part of a service, if the task reports as unhealthy then the task will be stopped and the service scheduler will replace it. 
     The following are notes about container health check support: 
     * Container health checks require version 1.17.0 or greater of the Amazon ECS container agent. For more information, see Updating the Amazon ECS Container Agent (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html). 
     * Container health checks are supported for Fargate tasks if you're using platform version 1.1.0 or greater. For more information, see Fargate Platform Versions (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html). 
     * Container health checks aren't supported for tasks that are part of a service that's configured to use a Classic Load Balancer.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        command
    interval : int, default is Undefined, optional
        interval
    retries : int, default is Undefined, optional
        retries
    startPeriod : int, default is Undefined, optional
        start period
    timeout : int, default is Undefined, optional
        timeout
    """


    command?: [str]

    interval?: int

    retries?: int

    startPeriod?: int

    timeout?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParameters:
    """
    Linux-specific options that are applied to the container, such as Linux KernelCapabilities.

    Attributes
    ----------
    capabilities : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersCapabilities, default is Undefined, optional
        capabilities
    devices : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersDevicesItems0], default is Undefined, optional
        devices
    initProcessEnabled : bool, default is Undefined, optional
        init process enabled
    maxSwap : int, default is Undefined, optional
        max swap
    sharedMemorySize : int, default is Undefined, optional
        shared memory size
    swappiness : int, default is Undefined, optional
        swappiness
    tmpfs : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersTmpfsItems0], default is Undefined, optional
        tmpfs
    """


    capabilities?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersCapabilities

    devices?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersDevicesItems0]

    initProcessEnabled?: bool

    maxSwap?: int

    sharedMemorySize?: int

    swappiness?: int

    tmpfs?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersTmpfsItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersCapabilities:
    """
    The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker. For more information about the default capabilities and the non-default available capabilities, see Runtime privilege and Linux capabilities (https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities) in the Docker run reference. For more detailed information about these Linux capabilities, see the capabilities(7) (http://man7.org/linux/man-pages/man7/capabilities.7.html) Linux manual page.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        add
    drop : [str], default is Undefined, optional
        drop
    """


    add?: [str]

    drop?: [str]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersDevicesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 linux parameters devices items0

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        container path
    hostPath : str, default is Undefined, optional
        host path
    permissions : [str], default is Undefined, optional
        permissions
    """


    containerPath?: str

    hostPath?: str

    permissions?: [str]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LinuxParametersTmpfsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 linux parameters tmpfs items0

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        container path
    mountOptions : [str], default is Undefined, optional
        mount options
    size : int, default is Undefined, optional
        size
    """


    containerPath?: str

    mountOptions?: [str]

    size?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LogConfiguration:
    """
    The log configuration for the container. This parameter maps to LogConfig in the Create a container (https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate) section of the Docker Remote API (https://docs.docker.com/engine/api/v1.35/) and the --log-driver option to docker run (https://docs.docker.com/engine/reference/commandline/run/). 
     By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information about the options for different supported log drivers, see Configure logging drivers (https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation. 
     Understand the following when specifying a log configuration for your containers. 
     * Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the valid values below). Additional log drivers may be available in future releases of the Amazon ECS container agent. 
     * This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. 
     * For tasks that are hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the ECS_AVAILABLE_LOGGING_DRIVERS environment variable before containers placed on that instance can use these log configuration options. For more information, see Amazon ECS container agent configuration (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the Amazon Elastic Container Service Developer Guide. 
     * For tasks that are on Fargate, because you don't have access to the underlying infrastructure your tasks are hosted on, any additional software needed must be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.

    Attributes
    ----------
    logDriver : str, default is Undefined, optional
        log driver
    options : {str:str}, default is Undefined, optional
        options
    secretOptions : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LogConfigurationSecretOptionsItems0], default is Undefined, optional
        secret options
    """


    logDriver?: str

    options?: {str:str}

    secretOptions?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LogConfigurationSecretOptionsItems0]


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0LogConfigurationSecretOptionsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 log configuration secret options items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    valueFrom : str, default is Undefined, optional
        value from
    """


    name?: str

    valueFrom?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0MountPointsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 mount points items0

    Attributes
    ----------
    containerPath : str, default is Undefined, optional
        container path
    readOnly : bool, default is Undefined, optional
        read only
    sourceVolume : str, default is Undefined, optional
        source volume
    """


    containerPath?: str

    readOnly?: bool

    sourceVolume?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0PortMappingsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 port mappings items0

    Attributes
    ----------
    containerPort : int, default is Undefined, optional
        container port
    hostPort : int, default is Undefined, optional
        host port
    $protocol : str, default is Undefined, optional
        protocol
    """


    containerPort?: int

    hostPort?: int

    $protocol?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0RepositoryCredentials:
    """
    The repository credentials for private registry authentication.

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        credentials parameter
    """


    credentialsParameter?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0ResourceRequirementsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 resource requirements items0

    Attributes
    ----------
    type_ : str, default is Undefined, optional
        type
    value : str, default is Undefined, optional
        value
    """


    type_?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0SecretsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 secrets items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    valueFrom : str, default is Undefined, optional
        value from
    """


    name?: str

    valueFrom?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0SystemControlsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 system controls items0

    Attributes
    ----------
    namespace : str, default is Undefined, optional
        namespace
    value : str, default is Undefined, optional
        value
    """


    namespace?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0UlimitsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 ulimits items0

    Attributes
    ----------
    hardLimit : int, default is Undefined, optional
        hard limit
    name : str, default is Undefined, optional
        name
    softLimit : int, default is Undefined, optional
        soft limit
    """


    hardLimit?: int

    name?: str

    softLimit?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionContainerDefinitionsItems0VolumesFromItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition container definitions items0 volumes from items0

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        read only
    sourceContainer : str, default is Undefined, optional
        source container
    """


    readOnly?: bool

    sourceContainer?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionEphemeralStorage:
    """
    The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see Fargate task storage (https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html) in the Amazon ECS User Guide for Fargate. 
     This parameter is only supported for tasks hosted on Fargate using Linux platform version 1.4.0 or later. This parameter is not supported for Windows containers on Fargate.

    Attributes
    ----------
    sizeInGiB : int, default is Undefined, optional
        size in gi b
    """


    sizeInGiB?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionInferenceAcceleratorsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition inference accelerators items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        device name
    deviceType : str, default is Undefined, optional
        device type
    """


    deviceName?: str

    deviceType?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionPlacementConstraintsItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        expression
    type_ : str, default is Undefined, optional
        type
    """


    expression?: str

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionProxyConfiguration:
    """
    The configuration details for the App Mesh proxy. 
     For tasks that use the EC2 launch type, the container instances require at least version 1.26.0 of the container agent and at least version 1.26.0-1 of the ecs-init package to use a proxy configuration. If your container instances are launched from the Amazon ECS optimized AMI version 20190301 or later, then they contain the required versions of the container agent and ecs-init. For more information, see Amazon ECS-optimized Linux AMI (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html)

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        container name
    properties : [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionProxyConfigurationPropertiesItems0], default is Undefined, optional
        properties
    type_ : str, default is Undefined, optional
        type
    """


    containerName?: str

    properties?: [EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionProxyConfigurationPropertiesItems0]

    type_?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionProxyConfigurationPropertiesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition proxy configuration properties items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionRequiresAttributesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition requires attributes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    targetID : str, default is Undefined, optional
        target ID
    targetType : str, default is Undefined, optional
        target type
    value : str, default is Undefined, optional
        value
    """


    name?: str

    targetID?: str

    targetType?: str

    value?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionRuntimePlatform:
    """
    Information about the platform for the Amazon ECS service or task. 
     For more informataion about RuntimePlatform, see RuntimePlatform (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#runtime-platform) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    cpuArchitecture : str, default is Undefined, optional
        cpu architecture
    operatingSystemFamily : str, default is Undefined, optional
        operating system family
    """


    cpuArchitecture?: str

    operatingSystemFamily?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0:
    """
    ecs aws crossplane io v1alpha1 task definition status at provider task definition volumes items0

    Attributes
    ----------
    dockerVolumeConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0DockerVolumeConfiguration, default is Undefined, optional
        docker volume configuration
    efsVolumeConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0EfsVolumeConfiguration, default is Undefined, optional
        efs volume configuration
    fsxWindowsFileServerVolumeConfiguration : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0FsxWindowsFileServerVolumeConfiguration, default is Undefined, optional
        fsx windows file server volume configuration
    host : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0Host, default is Undefined, optional
        host
    name : str, default is Undefined, optional
        name
    """


    dockerVolumeConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0DockerVolumeConfiguration

    efsVolumeConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0EfsVolumeConfiguration

    fsxWindowsFileServerVolumeConfiguration?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0FsxWindowsFileServerVolumeConfiguration

    host?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0Host

    name?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0DockerVolumeConfiguration:
    """
    This parameter is specified when you're using Docker volumes. Docker volumes are only supported when you're using the EC2 launch type. Windows containers only support the use of the local driver. To use bind mounts, specify a host instead.

    Attributes
    ----------
    autoprovision : bool, default is Undefined, optional
        autoprovision
    driver : str, default is Undefined, optional
        driver
    driverOpts : {str:str}, default is Undefined, optional
        driver opts
    labels : {str:str}, default is Undefined, optional
        labels
    scope : str, default is Undefined, optional
        scope
    """


    autoprovision?: bool

    driver?: str

    driverOpts?: {str:str}

    labels?: {str:str}

    scope?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0EfsVolumeConfiguration:
    """
    This parameter is specified when you're using an Amazon Elastic File System file system for task storage. For more information, see Amazon EFS Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    authorizationConfig : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0EfsVolumeConfigurationAuthorizationConfig, default is Undefined, optional
        authorization config
    fileSystemID : str, default is Undefined, optional
        file system ID
    rootDirectory : str, default is Undefined, optional
        root directory
    transitEncryption : str, default is Undefined, optional
        transit encryption
    transitEncryptionPort : int, default is Undefined, optional
        transit encryption port
    """


    authorizationConfig?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0EfsVolumeConfigurationAuthorizationConfig

    fileSystemID?: str

    rootDirectory?: str

    transitEncryption?: str

    transitEncryptionPort?: int


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0EfsVolumeConfigurationAuthorizationConfig:
    """
    The authorization configuration details for the Amazon EFS file system.

    Attributes
    ----------
    accessPointID : str, default is Undefined, optional
        access point ID
    iam : str, default is Undefined, optional
        iam
    """


    accessPointID?: str

    iam?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0FsxWindowsFileServerVolumeConfiguration:
    """
    This parameter is specified when you're using Amazon FSx for Windows File Server (https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html) file system for task storage. 
     For more information and the input format, see Amazon FSx for Windows File Server Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    authorizationConfig : EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0FsxWindowsFileServerVolumeConfigurationAuthorizationConfig, default is Undefined, optional
        authorization config
    fileSystemID : str, default is Undefined, optional
        file system ID
    rootDirectory : str, default is Undefined, optional
        root directory
    """


    authorizationConfig?: EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0FsxWindowsFileServerVolumeConfigurationAuthorizationConfig

    fileSystemID?: str

    rootDirectory?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0FsxWindowsFileServerVolumeConfigurationAuthorizationConfig:
    """
    The authorization configuration details for Amazon FSx for Windows File Server file system. See FSxWindowsFileServerVolumeConfiguration (https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html) in the Amazon Elastic Container Service API Reference. 
     For more information and the input format, see Amazon FSx for Windows File Server Volumes (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html) in the Amazon Elastic Container Service Developer Guide.

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        credentials parameter
    domain : str, default is Undefined, optional
        domain
    """


    credentialsParameter?: str

    domain?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusAtProviderTaskDefinitionVolumesItems0Host:
    """
    Details on a container instance bind mount host volume.

    Attributes
    ----------
    sourcePath : str, default is Undefined, optional
        source path
    """


    sourcePath?: str


schema EcsAwsCrossplaneIoV1alpha1TaskDefinitionStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


