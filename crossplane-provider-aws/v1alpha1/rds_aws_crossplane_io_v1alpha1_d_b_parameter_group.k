"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DBParameterGroup:
    """
    DBParameterGroup is the Schema for the DBParameterGroups API

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DBParameterGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpec, default is Undefined, required
        spec
    status : RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.crossplane.io/v1alpha1" = "rds.aws.crossplane.io/v1alpha1"

    kind: "DBParameterGroup" = "DBParameterGroup"

    metadata?: v1.ObjectMeta

    spec: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpec

    status?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatus


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpec:
    """
    DBParameterGroupSpec defines the desired state of DBParameterGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProvider

    providerConfigRef?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderConfigRef

    providerRef?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderRef

    publishConnectionDetailsTo?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecWriteConnectionSecretToRef


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProvider:
    """
    DBParameterGroupParameters defines the desired state of DBParameterGroup

    Attributes
    ----------
    dbParameterGroupFamily : str, default is Undefined, optional
        The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family. 
         To list all of the available parameter group families for a DB engine, use the following command: 
         aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine <engine> 
         For example, to list all of the available parameter group families for the MySQL DB engine, use the following command: 
         aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine mysql 
         The output contains duplicates. 
         The following are the valid DB engine values: 
         * aurora (for MySQL 5.6-compatible Aurora) 
         * aurora-mysql (for MySQL 5.7-compatible Aurora) 
         * aurora-postgresql 
         * mariadb 
         * mysql 
         * oracle-ee 
         * oracle-ee-cdb 
         * oracle-se2 
         * oracle-se2-cdb 
         * postgres 
         * sqlserver-ee 
         * sqlserver-se 
         * sqlserver-ex 
         * sqlserver-web 
         One of DBParameterGroupFamily or DBParameterGroupFamilySelector is required.
    dbParameterGroupFamilySelector : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderDbParameterGroupFamilySelector, default is Undefined, optional
        db parameter group family selector
    description : str, default is Undefined, required
        The description for the DB parameter group.
    parameters : [RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderParametersItems0], default is Undefined, optional
        A list of parameters to associate with this DB parameter group
    region : str, default is Undefined, required
        Region is which region the DBParameterGroup will be created.
    tags : [RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderTagsItems0], default is Undefined, optional
        Tags to assign to the DB parameter group.
    """


    dbParameterGroupFamily?: str

    dbParameterGroupFamilySelector?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderDbParameterGroupFamilySelector

    description: str

    parameters?: [RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderParametersItems0]

    region: str

    tags?: [RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderTagsItems0]


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderDbParameterGroupFamilySelector:
    """
    DBParameterGroupFamilySelector determines DBParameterGroupFamily from the engine and engine version. 
     One of DBParameterGroupFamily or DBParameterGroupFamilySelector is required. 
     Will not be used if DBParameterGroupFamily is already set.

    Attributes
    ----------
    engine : str, default is Undefined, required
        Engine is the name of the database engine.
    engineVersion : str, default is Undefined, optional
        EngineVersion is the version of the database engine. If it is nil, the default engine version given by AWS will be used.
    """


    engine: str

    engineVersion?: str


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderParametersItems0:
    """
    rds aws crossplane io v1alpha1 d b parameter group spec for provider parameters items0

    Attributes
    ----------
    allowedValues : str, default is Undefined, optional
        allowed values
    applyMethod : str, default is Undefined, optional
        apply method
    applyType : str, default is Undefined, optional
        apply type
    dataType : str, default is Undefined, optional
        data type
    description : str, default is Undefined, optional
        description
    isModifiable : bool, default is Undefined, optional
        is modifiable
    minimumEngineVersion : str, default is Undefined, optional
        minimum engine version
    parameterName : str, default is Undefined, optional
        parameter name
    parameterValue : str, default is Undefined, optional
        parameter value
    source : str, default is Undefined, optional
        source
    supportedEngineModes : [str], default is Undefined, optional
        supported engine modes
    """


    allowedValues?: str

    applyMethod?: str

    applyType?: str

    dataType?: str

    description?: str

    isModifiable?: bool

    minimumEngineVersion?: str

    parameterName?: str

    parameterValue?: str

    source?: str

    supportedEngineModes?: [str]


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecForProviderTagsItems0:
    """
    rds aws crossplane io v1alpha1 d b parameter group spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderConfigRefPolicy


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderRefPolicy


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatus:
    """
    DBParameterGroupStatus defines the observed state of DBParameterGroup.

    Attributes
    ----------
    atProvider : RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatusAtProvider

    conditions?: [RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatusConditionsItems0]


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatusAtProvider:
    """
    DBParameterGroupObservation defines the observed state of DBParameterGroup

    Attributes
    ----------
    dbParameterGroupARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the DB parameter group.
    dbParameterGroupFamily : str, default is Undefined, optional
        The name of the DB parameter group family that this DB parameter group is compatible with.
    dbParameterGroupName : str, default is Undefined, optional
        The name of the DB parameter group.
    """


    dbParameterGroupARN?: str

    dbParameterGroupFamily?: str

    dbParameterGroupName?: str


schema RdsAwsCrossplaneIoV1alpha1DBParameterGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


