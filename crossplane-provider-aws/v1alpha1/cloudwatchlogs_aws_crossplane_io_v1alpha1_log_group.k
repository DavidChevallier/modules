"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LogGroup:
    """
    LogGroup is the Schema for the LogGroups API

    Attributes
    ----------
    apiVersion : str, default is "cloudwatchlogs.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LogGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpec, default is Undefined, required
        spec
    status : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatchlogs.aws.crossplane.io/v1alpha1" = "cloudwatchlogs.aws.crossplane.io/v1alpha1"

    kind: "LogGroup" = "LogGroup"

    metadata?: v1.ObjectMeta

    spec: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpec

    status?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatus


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpec:
    """
    LogGroupSpec defines the desired state of LogGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProvider

    providerConfigRef?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderConfigRef

    providerRef?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderRef

    publishConnectionDetailsTo?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecWriteConnectionSecretToRef


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProvider:
    """
    LogGroupParameters defines the desired state of LogGroup

    Attributes
    ----------
    kmsKeyID : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the CMK to use when encrypting log data. For more information, see Amazon Resource Names - AWS Key Management Service (AWS KMS) (https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms).
    kmsKeyIDRef : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key ID ref
    kmsKeyIDSelector : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key ID selector
    logGroupName : str, default is Undefined, required
        The name of the log group.
    region : str, default is Undefined, required
        Region is which region the LogGroup will be created.
    retentionInDays : int, default is Undefined, optional
        The number of days to retain the log events in the specified log group. If you select 0, the events in the log group are always retained and never expire.
    tags : {str:str}, default is Undefined, optional
        The key-value pairs to use for the tags. 
         CloudWatch Logs doesnâ€™t support IAM policies that prevent users from assigning specified tags to log groups using the aws:Resource/key-name or aws:TagKeys condition keys. For more information about using tags to control access, see Controlling access to Amazon Web Services resources using tags (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html).
    """


    kmsKeyID?: str

    kmsKeyIDRef?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDRef

    kmsKeyIDSelector?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDSelector

    logGroupName: str

    region: str

    retentionInDays?: 0 | 1 | 3 | 5 | 7 | 14 | 30 | 60 | 90 | 120 | 150 | 180 | 365 | 400 | 545 | 731 | 1827 | 3653

    tags?: {str:str}


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDRef:
    """
    KMSKeyIDRef is a reference to a KMS Key used to set KMSKeyID.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDRefPolicy


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDSelector:
    """
    KMSKeyIDSelector selects a reference to a KMS Key used to set KMSKeyID.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDSelectorPolicy


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecForProviderKmsKeyIDSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderConfigRefPolicy


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderRefPolicy


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatus:
    """
    LogGroupStatus defines the observed state of LogGroup.

    Attributes
    ----------
    atProvider : CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatusAtProvider

    conditions?: [CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatusConditionsItems0]


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatusAtProvider:
    """
    LogGroupObservation defines the observed state of LogGroup

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the log group.
    creationTime : int, default is Undefined, optional
        The creation time of the log group, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
    kmsKeyID : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
    logGroupName : str, default is Undefined, optional
        The name of the log group.
    metricFilterCount : int, default is Undefined, optional
        The number of metric filters.
    retentionInDays : int, default is Undefined, optional
        retention in days
    storedBytes : int, default is Undefined, optional
        The number of bytes stored.
    """


    arn?: str

    creationTime?: int

    kmsKeyID?: str

    logGroupName?: str

    metricFilterCount?: int

    retentionInDays?: int

    storedBytes?: int


schema CloudwatchlogsAwsCrossplaneIoV1alpha1LogGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


