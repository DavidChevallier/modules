"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LoadBalancer:
    """
    LoadBalancer is the Schema for the LoadBalancers API

    Attributes
    ----------
    apiVersion : str, default is "elbv2.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LoadBalancer", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpec, default is Undefined, required
        spec
    status : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatus, default is Undefined, optional
        status
    """


    apiVersion: "elbv2.aws.crossplane.io/v1alpha1" = "elbv2.aws.crossplane.io/v1alpha1"

    kind: "LoadBalancer" = "LoadBalancer"

    metadata?: v1.ObjectMeta

    spec: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpec

    status?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatus


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpec:
    """
    LoadBalancerSpec defines the desired state of LoadBalancer

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProvider

    providerConfigRef?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderConfigRef

    providerRef?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderRef

    publishConnectionDetailsTo?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecWriteConnectionSecretToRef


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProvider:
    """
    LoadBalancerParameters defines the desired state of LoadBalancer

    Attributes
    ----------
    customerOwnedIPv4Pool : str, default is Undefined, optional
        [Application Load Balancers on Outposts] The ID of the customer-owned address pool (CoIP pool).
    ipAddressType : str, default is Undefined, optional
        The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 (for IPv4 addresses) and dualstack (for IPv4 and IPv6 addresses).
    loadBalancerType : str, default is Undefined, optional
        The type of load balancer. The default is application.
    name : str, default is Undefined, required
        The name of the load balancer. 
         This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with "internal-".
    region : str, default is Undefined, required
        Region is which region the LoadBalancer will be created.
    scheme : str, default is Undefined, optional
        The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet. 
         The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can route requests only from clients with access to the VPC for the load balancer. 
         The default is an Internet-facing load balancer. 
         You cannot specify a scheme for a Gateway Load Balancer.
    securityGroupRefs : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupRefsItems0], default is Undefined, optional
        Reference to Security Groups for SecurityGroups field
    securityGroupSelector : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        [Application Load Balancers] The IDs of the security groups for the load balancer.
    subnetMappings : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetMappingsItems0], default is Undefined, optional
        The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings. 
         [Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets. 
         [Application Load Balancers on Outposts] You must specify one Outpost subnet. 
         [Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones. 
         [Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your internet-facing load balancer. For internal load balancers, you can specify one private IP address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you can specify one IPv6 address per subnet. 
         [Gateway Load Balancers] You can specify subnets from one or more Availability Zones. You cannot specify Elastic IP addresses for your subnets.
    subnetRefs : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetRefsItems0], default is Undefined, optional
        Reference to Subnets for Subnets field
    subnetSelector : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings. 
         [Application Load Balancers] You must specify subnets from at least two Availability Zones. 
         [Application Load Balancers on Outposts] You must specify one Outpost subnet. 
         [Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones. 
         [Network Load Balancers] You can specify subnets from one or more Availability Zones. 
         [Gateway Load Balancers] You can specify subnets from one or more Availability Zones.
    tags : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderTagsItems0], default is Undefined, optional
        The tags to assign to the load balancer.
    """


    customerOwnedIPv4Pool?: str

    ipAddressType?: str

    loadBalancerType?: str

    name: str

    region: str

    scheme?: str

    securityGroupRefs?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupRefsItems0]

    securityGroupSelector?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupSelector

    securityGroups?: [str]

    subnetMappings?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetMappingsItems0]

    subnetRefs?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetRefsItems0]

    subnetSelector?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetSelector

    subnets?: [str]

    tags?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderTagsItems0]


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupRefsItems0Policy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupSelector:
    """
    Selector for references to SecurityGroups

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupSelectorPolicy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSecurityGroupSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetMappingsItems0:
    """
    elbv2 aws crossplane io v1alpha1 load balancer spec for provider subnet mappings items0

    Attributes
    ----------
    allocationID : str, default is Undefined, optional
        allocation ID
    iPv6Address : str, default is Undefined, optional
        i pv6 address
    privateIPv4Address : str, default is Undefined, optional
        private IPv4 address
    subnetID : str, default is Undefined, optional
        subnet ID
    """


    allocationID?: str

    iPv6Address?: str

    privateIPv4Address?: str

    subnetID?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetRefsItems0Policy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetSelector:
    """
    Selector for references to Subnets

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetSelectorPolicy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderSubnetSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecForProviderTagsItems0:
    """
    elbv2 aws crossplane io v1alpha1 load balancer spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderConfigRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToConfigRef

    metadata?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToMetadata

    name: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToConfigRefPolicy


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatus:
    """
    LoadBalancerStatus defines the observed state of LoadBalancer.

    Attributes
    ----------
    atProvider : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProvider

    conditions?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusConditionsItems0]


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProvider:
    """
    LoadBalancerObservation defines the observed state of LoadBalancer

    Attributes
    ----------
    availabilityZones : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderAvailabilityZonesItems0], default is Undefined, optional
        The subnets for the load balancer.
    canonicalHostedZoneID : str, default is Undefined, optional
        The ID of the Amazon Route 53 hosted zone associated with the load balancer.
    createdTime : str, default is Undefined, optional
        The date and time the load balancer was created.
    dnsName : str, default is Undefined, optional
        The public DNS name of the load balancer.
    loadBalancerARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the load balancer.
    loadBalancerName : str, default is Undefined, optional
        The name of the load balancer.
    state : Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderState, default is Undefined, optional
        state
    type_ : str, default is Undefined, optional
        The type of load balancer.
    vpcID : str, default is Undefined, optional
        The ID of the VPC for the load balancer.
    """


    availabilityZones?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderAvailabilityZonesItems0]

    canonicalHostedZoneID?: str

    createdTime?: str

    dnsName?: str

    loadBalancerARN?: str

    loadBalancerName?: str

    state?: Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderState

    type_?: str

    vpcID?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderAvailabilityZonesItems0:
    """
    elbv2 aws crossplane io v1alpha1 load balancer status at provider availability zones items0

    Attributes
    ----------
    loadBalancerAddresses : [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderAvailabilityZonesItems0LoadBalancerAddressesItems0], default is Undefined, optional
        load balancer addresses
    outpostID : str, default is Undefined, optional
        outpost ID
    subnetID : str, default is Undefined, optional
        subnet ID
    zoneName : str, default is Undefined, optional
        zone name
    """


    loadBalancerAddresses?: [Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderAvailabilityZonesItems0LoadBalancerAddressesItems0]

    outpostID?: str

    subnetID?: str

    zoneName?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderAvailabilityZonesItems0LoadBalancerAddressesItems0:
    """
    elbv2 aws crossplane io v1alpha1 load balancer status at provider availability zones items0 load balancer addresses items0

    Attributes
    ----------
    allocationID : str, default is Undefined, optional
        allocation ID
    iPv6Address : str, default is Undefined, optional
        i pv6 address
    ipAddress : str, default is Undefined, optional
        ip address
    privateIPv4Address : str, default is Undefined, optional
        private IPv4 address
    """


    allocationID?: str

    iPv6Address?: str

    ipAddress?: str

    privateIPv4Address?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusAtProviderState:
    """
    The state of the load balancer.

    Attributes
    ----------
    code : str, default is Undefined, optional
        code
    reason : str, default is Undefined, optional
        reason
    """


    code?: str

    reason?: str


schema Elbv2AwsCrossplaneIoV1alpha1LoadBalancerStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


