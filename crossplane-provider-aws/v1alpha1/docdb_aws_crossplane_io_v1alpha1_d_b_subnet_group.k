"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DBSubnetGroup:
    """
    DBSubnetGroup is the Schema for the DBSubnetGroups API

    Attributes
    ----------
    apiVersion : str, default is "docdb.aws.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DBSubnetGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpec, default is Undefined, required
        spec
    status : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "docdb.aws.crossplane.io/v1alpha1" = "docdb.aws.crossplane.io/v1alpha1"

    kind: "DBSubnetGroup" = "DBSubnetGroup"

    metadata?: v1.ObjectMeta

    spec: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpec

    status?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatus


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpec:
    """
    DBSubnetGroupSpec defines the desired state of DBSubnetGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource.
    forProvider : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProvider, default is Undefined, required
        for provider
    providerConfigRef : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    providerRef : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderRef, default is Undefined, optional
        provider ref
    publishConnectionDetailsTo : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProvider

    providerConfigRef?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderConfigRef

    providerRef?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderRef

    publishConnectionDetailsTo?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecWriteConnectionSecretToRef


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProvider:
    """
    DBSubnetGroupParameters defines the desired state of DBSubnetGroup

    Attributes
    ----------
    dbSubnetGroupDescription : str, default is Undefined, required
        The description for the subnet group.
    region : str, default is Undefined, required
        Region is which region the DBSubnetGroup will be created.
    subnetIDs : [str], default is Undefined, optional
        subnet i ds
    subnetIDsRefs : [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsRefsItems0], default is Undefined, optional
        TODO(haarchri): when resource is bumped to beta we will convert this field to subnetIdRefs
    subnetIDsSelector : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsSelector, default is Undefined, optional
        subnet i ds selector
    tags : [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderTagsItems0], default is Undefined, optional
        The tags to be assigned to the subnet group.
    """


    dbSubnetGroupDescription: str

    region: str

    subnetIDs?: [str]

    subnetIDsRefs?: [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsRefsItems0]

    subnetIDsSelector?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsSelector

    tags?: [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderTagsItems0]


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsRefsItems0:
    """
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsRefsItems0Policy


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsRefsItems0Policy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsSelector:
    """
    TODO(haarchri): when resource is bumped to beta we will convert this field to subnetIdSelector

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsSelectorPolicy


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderSubnetIDsSelectorPolicy:
    """
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecForProviderTagsItems0:
    """
    docdb aws crossplane io v1alpha1 d b subnet group spec for provider tags items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    value : str, default is Undefined, optional
        value
    """


    key?: str

    value?: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderConfigRef:
    """
    ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderConfigRefPolicy


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderRef:
    """
    ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderRefPolicy


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecProviderRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsTo:
    """
    PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToConfigRef:
    """
    SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    """
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecPublishConnectionDetailsToMetadata:
    """
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.annotations". - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as "metadata.labels". - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupSpecWriteConnectionSecretToRef:
    """
    WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatus:
    """
    DBSubnetGroupStatus defines the observed state of DBSubnetGroup.

    Attributes
    ----------
    atProvider : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    """


    atProvider?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProvider

    conditions?: [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusConditionsItems0]


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProvider:
    """
    DBSubnetGroupObservation defines the observed state of DBSubnetGroup

    Attributes
    ----------
    dbSubnetGroupARN : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the DB subnet group.
    dbSubnetGroupName : str, default is Undefined, optional
        The name of the subnet group.
    subnetGroupStatus : str, default is Undefined, optional
        Provides the status of the subnet group.
    subnets : [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProviderSubnetsItems0], default is Undefined, optional
        Detailed information about one or more subnets within a subnet group.
    vpcID : str, default is Undefined, optional
        Provides the virtual private cloud (VPC) ID of the subnet group.
    """


    dbSubnetGroupARN?: str

    dbSubnetGroupName?: str

    subnetGroupStatus?: str

    subnets?: [DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProviderSubnetsItems0]

    vpcID?: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProviderSubnetsItems0:
    """
    docdb aws crossplane io v1alpha1 d b subnet group status at provider subnets items0

    Attributes
    ----------
    subnetAvailabilityZone : DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProviderSubnetsItems0SubnetAvailabilityZone, default is Undefined, optional
        subnet availability zone
    subnetIdentifier : str, default is Undefined, optional
        subnet identifier
    subnetStatus : str, default is Undefined, optional
        subnet status
    """


    subnetAvailabilityZone?: DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProviderSubnetsItems0SubnetAvailabilityZone

    subnetIdentifier?: str

    subnetStatus?: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusAtProviderSubnetsItems0SubnetAvailabilityZone:
    """
    Information about an Availability Zone.

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    """


    name?: str


schema DocdbAwsCrossplaneIoV1alpha1DBSubnetGroupStatusConditionsItems0:
    """
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from one status to another, if any.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    reason: str

    status: str

    $type: str


